// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		6CC0D08B375642B9939D08E3 /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = A1AA9FF55F5E4DBCA31D1C91 /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				B55DD2FB12334BBB8D784A93 /* CMake PostBuild Rules */,
			);
			dependencies = (
				0EC5648625B94A82A6F6BDC8 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
		C15AE522686846B3A2B07B0F /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = F328B83B51B7434E8572C047 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				C816BECFEEC2446AAA56493D /* CMake Rules */,
			);
			dependencies = (
				98788364EAB8437AABDA93F5 /* PBXTargetDependency */,
				17A36BFFB9AE452DAFEEA50C /* PBXTargetDependency */,
				03B02E7D383744CFADB9E719 /* PBXTargetDependency */,
				D4ECF5F084F449318386D5E2 /* PBXTargetDependency */,
				C614CCF7A47B48388666EE42 /* PBXTargetDependency */,
				F30C0395D26E467CBC07FA42 /* PBXTargetDependency */,
				92B8196093F847378C93DC24 /* PBXTargetDependency */,
				31C46658E2114FCD8CBF19EA /* PBXTargetDependency */,
				10C4F2E53768434681F6835D /* PBXTargetDependency */,
				8753A1EF37034498874AB0D2 /* PBXTargetDependency */,
				9610AC9C90664C5B808122AB /* PBXTargetDependency */,
				DF0F63926BBA4FB8A3A87D05 /* PBXTargetDependency */,
				474381324C1147029281A5C3 /* PBXTargetDependency */,
				739FA8AF8FA04810ACCAA1A9 /* PBXTargetDependency */,
				8865281BD37D4ACBBEF8AAB6 /* PBXTargetDependency */,
				4BFD9D4D4A554BF2AFCF99FC /* PBXTargetDependency */,
				14D85799A90C48F5AEA352C0 /* PBXTargetDependency */,
				FA2919F9E5FA4CC09158DEA2 /* PBXTargetDependency */,
				09421C8FDCDE431099AC875C /* PBXTargetDependency */,
				B697D5A3BAD54A528F6E71EF /* PBXTargetDependency */,
				5A9284053EC640DA8093A361 /* PBXTargetDependency */,
				2CFC9AEFADC747CEB1875BA3 /* PBXTargetDependency */,
				F490A0253AE4490295CFD2BA /* PBXTargetDependency */,
				5711C7468772440F8CC48A65 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		D28A7761A25745E1917416EC /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = E1ACBDD069A84F44BC3F1FFE /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				BACFF35874E94357812125D1 /* CMake Rules */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		000369AA358D481C8144D2B8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp */ = {isa = PBXBuildFile; fileRef = 14BEFCD8E78745BCA8825985 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp */; };
		000E0DC863B14E2993A80737 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/all.hpp */ = {isa = PBXBuildFile; fileRef = DC11E6D8F86845CBA34ECFC9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/all.hpp */; };
		001B887ED1574E42BB7702D7 /* /Users/heiner/git/QuantLib/test-suite/hybridhestonhullwhiteprocess.cpp */ = {isa = PBXBuildFile; fileRef = 2A2E665656864386B2291DE8 /* /Users/heiner/git/QuantLib/test-suite/hybridhestonhullwhiteprocess.cpp */; };
		0024954DD33B48D7A568EE9C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp */ = {isa = PBXBuildFile; fileRef = 849A8B907B8C4A8EB7D66A3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp */; };
		002A79F3C2574E888EEDD2D1 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.hpp */ = {isa = PBXBuildFile; fileRef = 88ABE76D7A164A57A7DBA072 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.hpp */; };
		0037DB0EEB3A40539908C54D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp */ = {isa = PBXBuildFile; fileRef = 98A343BD26A2466EB9179230 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp */; };
		003BA63CFAD2487DA1DD39E2 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.hpp */ = {isa = PBXBuildFile; fileRef = D121FF8B464F4FE7988D8142 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.hpp */; };
		003D8D49B3E94A308C2ECFF2 /* /Users/heiner/git/QuantLib/test-suite/cliquetoption.cpp */ = {isa = PBXBuildFile; fileRef = 2CE567919C5648D7B5B4000D /* /Users/heiner/git/QuantLib/test-suite/cliquetoption.cpp */; };
		00434447CD2D4EA08218EE10 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */ = {isa = PBXBuildFile; fileRef = C922CA8999F74674BB85FBB8 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */; };
		00439D3CDD9E4E2799C146B4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */ = {isa = PBXBuildFile; fileRef = C31113BF89E24F8493B1EAE6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */; };
		00445AD93D2447D6A92ABC6D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = E9733B5F074C4ED6BA8DDDBB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.hpp */; };
		004A87897A414872A93D9DCE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.hpp */ = {isa = PBXBuildFile; fileRef = 619A866067E240AE905047E8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.hpp */; };
		004EA667549B4C7F94E94EE9 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.hpp */ = {isa = PBXBuildFile; fileRef = F28DB4978D76465CAA028BD6 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.hpp */; };
		0054A1ADBEA64F3BA22BAE8F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */ = {isa = PBXBuildFile; fileRef = 4DA9CC9966C34089876A453A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */; };
		005539B2444648F788C5B539 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = A7299EBB205A4FB7882B94C9 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */; };
		006B827020084468AFA79534 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */ = {isa = PBXBuildFile; fileRef = 2CEBB858E5DD414EB77CFE06 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */; };
		0072EB15729647FCBCBBC5A1 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */ = {isa = PBXBuildFile; fileRef = A91681CFC2244864BCFCDB4C /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */; };
		007D37D91F734A1EBAD92EDD /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.hpp */ = {isa = PBXBuildFile; fileRef = 2038E15E727748FCA8A0283B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.hpp */; };
		00943979AE244C5A9485005A /* /Users/heiner/git/QuantLib/ql/math/optimization/all.hpp */ = {isa = PBXBuildFile; fileRef = EF4D56CF89EA417C9F3C1AD9 /* /Users/heiner/git/QuantLib/ql/math/optimization/all.hpp */; };
		00A400BB60D143C28E6E065C /* /Users/heiner/git/QuantLib/ql/index.cpp */ = {isa = PBXBuildFile; fileRef = DBE63BD4607243FAACC45A1D /* /Users/heiner/git/QuantLib/ql/index.cpp */; };
		00A90DA2F3044830B114EBFE /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 7399E73B2AC64227955AF15B /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.hpp */; };
		00BA827DF93A42B1AD01DBE3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 6D052E07553E4D4BAA844EF7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp */; };
		00CA4FECACB44554B3635361 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */ = {isa = PBXBuildFile; fileRef = E77BF42C71AD41BFB1ACC845 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */; };
		00CB710B77494B9BB9B16ADF /* /Users/heiner/git/QuantLib/ql/math/distributions/poissondistribution.hpp */ = {isa = PBXBuildFile; fileRef = 471506017255430A894BE728 /* /Users/heiner/git/QuantLib/ql/math/distributions/poissondistribution.hpp */; };
		00CC0C7CC3D14D748EAA3F6A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/all.hpp */ = {isa = PBXBuildFile; fileRef = 4F8C4A7A28C64AF1B9F4BCDC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/all.hpp */; };
		00DA6743D62A427085A642E0 /* /Users/heiner/git/QuantLib/test-suite/binaryoption.cpp */ = {isa = PBXBuildFile; fileRef = 744272BC49414D058F47945E /* /Users/heiner/git/QuantLib/test-suite/binaryoption.cpp */; };
		00F13EDD51F24D7E8ACFB0A0 /* /Users/heiner/git/QuantLib/test-suite/normalclvmodel.hpp */ = {isa = PBXBuildFile; fileRef = 0C11052526E34B78B3516537 /* /Users/heiner/git/QuantLib/test-suite/normalclvmodel.hpp */; };
		00F19A67DB784F1F99D28C1F /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */ = {isa = PBXBuildFile; fileRef = A1834E4F54074AD2AF4BD33C /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */; };
		00F442917C4A45A2873F96E9 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */ = {isa = PBXBuildFile; fileRef = 4C0F4CF9973442F887122F3F /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */; };
		00F56E164D014EF4B2426E07 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.hpp */ = {isa = PBXBuildFile; fileRef = 6D20F020E68048DB9CD42CAE /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.hpp */; };
		01004DCA1CA54933A9DAF9C7 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 13F396BEC80744C482B96E9F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */; };
		01146FA4DBEB40B4A07B51A4 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */ = {isa = PBXBuildFile; fileRef = E4591463297743B8AA38BFD8 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */; };
		011AA997B2B74AF5A8F9E049 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 1BF88BE5FC6D4D6588C432F7 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.hpp */; };
		01398A694E914F7B8B29ED9E /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */ = {isa = PBXBuildFile; fileRef = C7CE240645C248878239ACFC /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */; };
		0142436D7F5D40BE9889AA96 /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */ = {isa = PBXBuildFile; fileRef = 501B36F5A7E4463388974C89 /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */; };
		0152FBAF10954CF5A48C1411 /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */ = {isa = PBXBuildFile; fileRef = 37A003641A0545D5B33F7EF6 /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */; };
		015E77E7E506483DB1ABDC29 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */ = {isa = PBXBuildFile; fileRef = 54E5874FE68D4CC181B663DC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */; };
		015F48681B674566A583899C /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.hpp */ = {isa = PBXBuildFile; fileRef = 0CCA23C629CE489F846F523B /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.hpp */; };
		0194AA1355A34DBA8E14CCC2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */ = {isa = PBXBuildFile; fileRef = 802E2E82E0A34902B0F1F362 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */; };
		01AEA22989E5421B92A8742A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdm1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = C49F5A8A6AD54DE79394B07A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdm1dmesher.hpp */; };
		01C340CEF23346BCAE27DFCE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 6679B19A13FA48238E91E4A1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp */; };
		01CDFA1F424049EB894A9140 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp */ = {isa = PBXBuildFile; fileRef = CB3076AD1335437686D2724C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp */; };
		01D27791C6E543209A560487 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 30B7C88776F84AAEB4DC98F0 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */; };
		01D447C6EB1C4741B5AC672A /* /Users/heiner/git/QuantLib/ql/math/interpolations/abcdinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = B606EBEFB894490AB7C91CAF /* /Users/heiner/git/QuantLib/ql/math/interpolations/abcdinterpolation.hpp */; };
		01DC02A782714B28A8C352F5 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.hpp */ = {isa = PBXBuildFile; fileRef = 97206F6B97634466908AD713 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.hpp */; };
		01E695A2D2C74990A2B7EED3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */ = {isa = PBXBuildFile; fileRef = 11CFCF3CD34C428F989215AD /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */; };
		01FC93EBBB2D458EBDF5ECC6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 98A0F6FFE8DF41178A503417 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp */; };
		02057E1227F24A1E92146FB1 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */ = {isa = PBXBuildFile; fileRef = DD451C01F4CB4E7EA09302EE /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */; };
		0209349B325E4EEFB9CAB487 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 335D279F8B874E43A7E2A723 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */; };
		022432D848844BCF9B8BD388 /* /Users/heiner/git/QuantLib/ql/time/timeunit.hpp */ = {isa = PBXBuildFile; fileRef = 2DDF18693D1249C7B9094312 /* /Users/heiner/git/QuantLib/ql/time/timeunit.hpp */; };
		023B17E0116F42A2B88C82B5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.hpp */ = {isa = PBXBuildFile; fileRef = 7295087C779B40B28D5F2469 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.hpp */; };
		024366ED80E0483F939037B0 /* /Users/heiner/git/QuantLib/test-suite/quotes.hpp */ = {isa = PBXBuildFile; fileRef = BB6B5EF143C344FE861557EA /* /Users/heiner/git/QuantLib/test-suite/quotes.hpp */; };
		02453F879C5D4A0A8EEA601E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = F1DB6C869CF74716832FA910 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */; };
		0265BFDB8F664958B24048A7 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */ = {isa = PBXBuildFile; fileRef = BDC4CE8BC556468BA3B1C27C /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */; };
		0268EC02F6184E0797310648 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp */ = {isa = PBXBuildFile; fileRef = FA915512970641A19E691964 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp */; };
		0275382BA69F4DD7A7908F47 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 58F43EBADF274BEFB8A87AAC /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp */; };
		0278917781114D77A30681D2 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */ = {isa = PBXBuildFile; fileRef = DD96D845AF6E4A07A31DA1EE /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */; };
		02877A6C8D1F4BF08FB56DBB /* /Users/heiner/git/QuantLib/ql/position.hpp */ = {isa = PBXBuildFile; fileRef = 5A63D2B97549496D8C4B9164 /* /Users/heiner/git/QuantLib/ql/position.hpp */; };
		02AA0B724F994276945CCD72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 381B917CD24C4BEA956799F2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */; };
		02B679E77E6E42C6A188B270 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jpylibor.hpp */ = {isa = PBXBuildFile; fileRef = D06DDECC6EAB43FA9424FDB7 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jpylibor.hpp */; };
		02BC279532E14C099C9BD9F1 /* /Users/heiner/git/QuantLib/ql/models/volatility/all.hpp */ = {isa = PBXBuildFile; fileRef = 45E06764CC6147159591BB5E /* /Users/heiner/git/QuantLib/ql/models/volatility/all.hpp */; };
		02D269DFD5F54BF3B2538431 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */ = {isa = PBXBuildFile; fileRef = F804AF156FDF448482416244 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */; };
		02D78752C5194B51A5BC1EF5 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.hpp */ = {isa = PBXBuildFile; fileRef = D05492FA17AF4D21B4FA675E /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.hpp */; };
		02DCD77DE5834E1DBC44D24F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.hpp */ = {isa = PBXBuildFile; fileRef = A2C319DEA1644FA4AE8231FF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.hpp */; };
		02DFAA0D40A947BD9EF1311B /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/binomialconvertibleengine.hpp */ = {isa = PBXBuildFile; fileRef = 2B542FB132FF47558E7D9DD7 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/binomialconvertibleengine.hpp */; };
		02E2ADA45E2442BAAB90EBBC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp */ = {isa = PBXBuildFile; fileRef = 835F1E7E30CE4A47B4015B19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp */; };
		02F22D86F1E74C02A007D4B8 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/all.hpp */ = {isa = PBXBuildFile; fileRef = 1153CF3298AD42D48B83BF52 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/all.hpp */; };
		0300F7E77F4A42AF83747AA2 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = ECFD4009D2F848E684EA1A5D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp */; };
		03062E640A5B4846B75BC11C /* /Users/heiner/git/QuantLib/ql/event.cpp */ = {isa = PBXBuildFile; fileRef = 777C8D3D91D543D79A382159 /* /Users/heiner/git/QuantLib/ql/event.cpp */; };
		031744F4646E4AE6BAB3B953 /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */ = {isa = PBXBuildFile; fileRef = 7BEAE3E5F0324BA084B78EDC /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */; };
		032760A3A028410ABE7B51E3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/fdtypedefs.hpp */ = {isa = PBXBuildFile; fileRef = 786E3EA3B67443A0A8AEA0E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/fdtypedefs.hpp */; };
		032B7EF5705F4F55A97F64C2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */ = {isa = PBXBuildFile; fileRef = 365F71D336344609A0B790CA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */; };
		032CEA147FE14EA181DFE1D4 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */ = {isa = PBXBuildFile; fileRef = 68AB522F41C84E2D94621F77 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */; };
		0333E026574746C2B989545A /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */ = {isa = PBXBuildFile; fileRef = 42EF01E452464C968AE39B49 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */; };
		033E87221C3945FF89FBE720 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */ = {isa = PBXBuildFile; fileRef = B5F805DCF7BB477F889C6216 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */; };
		035CFF819A6F4623AE984640 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.hpp */ = {isa = PBXBuildFile; fileRef = 6DD364C591584B2DA47CE4C9 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.hpp */; };
		036B001DA267416A8277C847 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 5E59274A6531484B9BD826F2 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.hpp */; };
		037B27FF51AB4026BA4D18A9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */ = {isa = PBXBuildFile; fileRef = 57D177E086BD4F62BAD252F1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */; };
		037C9C27843041A69D77C59F /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */ = {isa = PBXBuildFile; fileRef = 60C4332AA923410E9B2CB06A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */; };
		03AFF5E2C0CD46B59248A7CD /* /Users/heiner/git/QuantLib/ql/config.ansi.hpp */ = {isa = PBXBuildFile; fileRef = 70F5E1043EAF46E199CE910A /* /Users/heiner/git/QuantLib/ql/config.ansi.hpp */; };
		03CB7AE4C5F140718B6CA65A /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.hpp */ = {isa = PBXBuildFile; fileRef = 3251B5351A4641D99838E521 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.hpp */; };
		03D310AF15B74468852DB445 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */ = {isa = PBXBuildFile; fileRef = FC6E1F48DB97438296561A9A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */; };
		03E2D2EFC63C41F6872E2512 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcamericanpathengine.hpp */ = {isa = PBXBuildFile; fileRef = 563C0B6A8C4F40F4851F75A4 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcamericanpathengine.hpp */; };
		041812FA034444FABEDD12B6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 1C383D9C00D54D6F8875C591 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp */; };
		0425FC58A5AC4154BFF04804 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */ = {isa = PBXBuildFile; fileRef = 8F56FB2806B14A54920E3D5C /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */; };
		04428F3AE11C44B180711640 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */ = {isa = PBXBuildFile; fileRef = 1457043D9D424A64A89F8615 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */; };
		0446322581CA4C8DBF5A86E8 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */ = {isa = PBXBuildFile; fileRef = 25697767F46C4BFA9500A6E0 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */; };
		045C251B8DA548339AAC9965 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */ = {isa = PBXBuildFile; fileRef = 12A30C4E7F2441DA83D2E508 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */; };
		0461CC363CA14907BD971643 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomsequencegenerator.hpp */ = {isa = PBXBuildFile; fileRef = 1058A906F8C640D1A5E507CA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomsequencegenerator.hpp */; };
		047E08475C9E4922B2B9AE1E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.hpp */ = {isa = PBXBuildFile; fileRef = CB37B599A3E1487CA02F6D99 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.hpp */; };
		049D885BE515403CB3C35D28 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */ = {isa = PBXBuildFile; fileRef = C4B1B5D4C18B47DEB57A58D3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */; };
		049FF47BA0294D74BFFE5757 /* /Users/heiner/git/QuantLib/ql/config.mingw.hpp */ = {isa = PBXBuildFile; fileRef = 85D9BFE75C544C9396F32B51 /* /Users/heiner/git/QuantLib/ql/config.mingw.hpp */; };
		04C79C42BD6A44EC95A1DEC7 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */ = {isa = PBXBuildFile; fileRef = 62A5491B1C5145BB8F683266 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */; };
		04E55FFB17FF41B6BB7616EF /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 9E7019C2B64F448E89CBADBE /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */; };
		04EC0C0D736D49F880B565B7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvoltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = BCAFA7654B9E4FB0A297C873 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvoltermstructure.hpp */; };
		04F5AD84D9B9497F940DB171 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = DA74C5F5D4A645258CF598E3 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */; };
		04FDCBF173CD499F87FDD935 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/rngtraits.hpp */ = {isa = PBXBuildFile; fileRef = 12B95B5E099A46B28ABA5B43 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/rngtraits.hpp */; };
		0503B672600149CAB8AB6158 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.hpp */ = {isa = PBXBuildFile; fileRef = 6F5B49B7B3044362A63B51E7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.hpp */; };
		050FB7F9A5184DE8AB65102B /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/all.hpp */ = {isa = PBXBuildFile; fileRef = 977E5825706841BF984F0AF2 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/all.hpp */; };
		05136F1D3A624BC682EB8D24 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */ = {isa = PBXBuildFile; fileRef = BC3478A7E3A94527A8DB26C7 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */; };
		0516882C917449B7B6FCF828 /* /Users/heiner/git/QuantLib/test-suite/hestonslvmodel.cpp */ = {isa = PBXBuildFile; fileRef = 33985D914E8B455DB6074FD5 /* /Users/heiner/git/QuantLib/test-suite/hestonslvmodel.cpp */; };
		052DCDDBD5A348E99B531555 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bbsw.hpp */ = {isa = PBXBuildFile; fileRef = BD3C69F575624B41802395B4 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bbsw.hpp */; };
		0543216E708A4161915BC0BE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */ = {isa = PBXBuildFile; fileRef = FF7C906CB2444472A0D6CB83 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */; };
		05487288409F4304A185783F /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */ = {isa = PBXBuildFile; fileRef = CEF0C963AFFA4189A9105E39 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */; };
		0578D65D413F4057B55C2B3B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp */ = {isa = PBXBuildFile; fileRef = F53517174B364F8FBF384D99 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp */; };
		05864B0073DD4E5FA4D4F85B /* /Users/heiner/git/QuantLib/test-suite/gsr.cpp */ = {isa = PBXBuildFile; fileRef = 6416C22A727C4E46875F66AE /* /Users/heiner/git/QuantLib/test-suite/gsr.cpp */; };
		05974893E53C4A0881502583 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.hpp */ = {isa = PBXBuildFile; fileRef = 055CDFCCF6F044FAB50EC8E7 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.hpp */; };
		05A36F7D31D04496ACA022CF /* /Users/heiner/git/QuantLib/ql/math/comparison.hpp */ = {isa = PBXBuildFile; fileRef = 9CFF1EF7089941DC9D67BFAB /* /Users/heiner/git/QuantLib/ql/math/comparison.hpp */; };
		05A76164695E435986E17AA2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.hpp */ = {isa = PBXBuildFile; fileRef = 4411C45E4D124A2784A58A3A /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.hpp */; };
		05C4BA4A87B947B18C4BB52D /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathgenerator.hpp */ = {isa = PBXBuildFile; fileRef = 3F8302E774894BD890C50543 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathgenerator.hpp */; };
		05E56A9D051D4ED8A1F8F757 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */ = {isa = PBXBuildFile; fileRef = E42B5D4CA3D448109EC8EE1E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */; };
		05E5B57943884E228FF266B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */ = {isa = PBXBuildFile; fileRef = 945C8B01543443899167F696 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */; };
		0601A5AF8AAD4CBF88770952 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/all.hpp */ = {isa = PBXBuildFile; fileRef = CA9972246E4D46778D1C3AE0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/all.hpp */; };
		061A58CE900740F8B84340DD /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.hpp */ = {isa = PBXBuildFile; fileRef = 8C5A52C69E484511BAEFB26C /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.hpp */; };
		062EBE4104C548AE9E31D312 /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.hpp */ = {isa = PBXBuildFile; fileRef = 625A1F1B768F49AA87003096 /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.hpp */; };
		065B92F132F74D3292781AFF /* /Users/heiner/git/QuantLib/ql/cashflow.hpp */ = {isa = PBXBuildFile; fileRef = 42FA9B8361054977B380E808 /* /Users/heiner/git/QuantLib/ql/cashflow.hpp */; };
		065FFD01156D4C7C9EF7DC52 /* /Users/heiner/git/QuantLib/ql/experimental/processes/all.hpp */ = {isa = PBXBuildFile; fileRef = A9486C10BB9946FEBA70D796 /* /Users/heiner/git/QuantLib/ql/experimental/processes/all.hpp */; };
		0681699DDAEE4BCCB731AAAB /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */ = {isa = PBXBuildFile; fileRef = 40090BAF4E654027A253BC26 /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */; };
		068D09C37189484FBA7ADE19 /* /Users/heiner/git/QuantLib/Examples/Replication/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 471CFF82FB534A0F99FAE25B /* /Users/heiner/git/QuantLib/Examples/Replication/CMakeLists.txt */; };
		06987759D9E349FEAD3B9DB0 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */ = {isa = PBXBuildFile; fileRef = 0D4B578939444EA4A653A148 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */; };
		06B56F6FDC3D4D378EF08CB1 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 4D08FE947AEB4D66968A2349 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp */; };
		06C12C9339044E1E9DA50A75 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */ = {isa = PBXBuildFile; fileRef = 51EE2BAF525A46F184F772B4 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */; };
		06C2BB0B895441E19322C9EA /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.hpp */ = {isa = PBXBuildFile; fileRef = 01FA571CD9DF4A69BC507EBF /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.hpp */; };
		06C3BB5DAF444DD9B56DD3C1 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = 79E18AC7F3AF4F93A4C6AEB9 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.hpp */; };
		07061DD19F0B45ED92FBF592 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.hpp */ = {isa = PBXBuildFile; fileRef = CC2486FB46F447E5A6BB8CF7 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.hpp */; };
		0707925F8A3F40A288DAFA33 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.hpp */ = {isa = PBXBuildFile; fileRef = A4876119F0D04B1ABC7BFDEC /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.hpp */; };
		07110DE470364354A73E37C3 /* /Users/heiner/git/QuantLib/ql/position.cpp */ = {isa = PBXBuildFile; fileRef = 0E0117E822FD4586B2801816 /* /Users/heiner/git/QuantLib/ql/position.cpp */; };
		07252FAE797D4466BC7BB4EA /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.hpp */ = {isa = PBXBuildFile; fileRef = 66F7DA50156A4173905DE054 /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.hpp */; };
		072B47402642420EAEAC32FD /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */ = {isa = PBXBuildFile; fileRef = 22883CA546E647978A4A1713 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */; };
		07353634A3C342D7B522694F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp */ = {isa = PBXBuildFile; fileRef = 95699D9CDD924B1295F288B3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp */; };
		073701F365DD4F26B7226C92 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbermudanengine.hpp */ = {isa = PBXBuildFile; fileRef = F5099B0087854DF0880E9C31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbermudanengine.hpp */; };
		07571DB90E2D4247A67E10B9 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = EEAFF26C659C4CB297EBB5E5 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.hpp */; };
		07578BD6F8D74C038A2E10EF /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 47EECD010EB04B3193F778C1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */; };
		0781094B6D5D47CBBD3D8DA8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/volatilitytype.hpp */ = {isa = PBXBuildFile; fileRef = 654F914828384694A3BB4500 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/volatilitytype.hpp */; };
		078ABC226174499284F8BF23 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */ = {isa = PBXBuildFile; fileRef = 52844FC5ECC9421A8B7A9955 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */; };
		079FCC71A2974A57A4C4FB81 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 27A875F176C14A3CB142FB3F /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */; };
		07B4B5120D7A4BFAB29093C2 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.hpp */ = {isa = PBXBuildFile; fileRef = 09B82104E6C7408587F09B29 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.hpp */; };
		07BC8D29F17F4E18AEF48273 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/binomialbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 417C7599EDD04214B07CBBDB /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/binomialbarrierengine.hpp */; };
		07E59CEED2AD452FADEA1E23 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */ = {isa = PBXBuildFile; fileRef = 55EE9C3CCEA749D486795442 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */; };
		07E6BB442B004DF3980E382B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 6A1AA52BAF5B46D28223705A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.hpp */; };
		07ED2C106AF54435990C939D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplus.hpp */ = {isa = PBXBuildFile; fileRef = 4CFFDD70E3774269903C7F44 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplus.hpp */; };
		07EE81E4B2BF4C58B642E08F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 4052A5DBA1DD478F8296B46E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */; };
		08101F5DDBFB45B385978BA5 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 2E5DD76D4C334BE4B715CB3B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp */; };
		0810B87046AF4C5E8C0EC3D9 /* /Users/heiner/git/QuantLib/ql/indexes/swap/all.hpp */ = {isa = PBXBuildFile; fileRef = 3C9DCE7F63AB432290CADBA0 /* /Users/heiner/git/QuantLib/ql/indexes/swap/all.hpp */; };
		0820ECBDA1E7411CA1A73F22 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.hpp */ = {isa = PBXBuildFile; fileRef = 4F72EAA1F8AB4996B8E6F741 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.hpp */; };
		0833441EFCDD400AA76842F0 /* /Users/heiner/git/QuantLib/ql/math/interpolations/sabrinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 3E0011E52D084BD88168675A /* /Users/heiner/git/QuantLib/ql/math/interpolations/sabrinterpolation.hpp */; };
		083E6A8183004A269EB7EFFB /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.hpp */ = {isa = PBXBuildFile; fileRef = 328C46B6F7A943179CFA6CE7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.hpp */; };
		08468F06E037471EB046C246 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */ = {isa = PBXBuildFile; fileRef = 66A0D7D450BE4DC597248F11 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */; };
		0847288C2106426DAE699E4C /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.hpp */ = {isa = PBXBuildFile; fileRef = 622AC0B1E4B14FD5BB49A1EE /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.hpp */; };
		0850FAD9FC0F4953A878A02D /* /Users/heiner/git/QuantLib/test-suite/blackformula.cpp */ = {isa = PBXBuildFile; fileRef = B9A58F12A8764638845C9D80 /* /Users/heiner/git/QuantLib/test-suite/blackformula.cpp */; };
		086011CDB0BD41839F9237A2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.hpp */ = {isa = PBXBuildFile; fileRef = 1CB044D59F944794AE923AAE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.hpp */; };
		08671F6B705F43B2BA5D1A4A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */ = {isa = PBXBuildFile; fileRef = E250638626E64E63B6BA3935 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */; };
		086796EF78D149708F0D9B77 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = BF44455AEBFE4CD08B90FDBA /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp */; };
		086C716DA96040BDB75B7708 /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.hpp */ = {isa = PBXBuildFile; fileRef = 85A07F8878C749BEB31EAEEC /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.hpp */; };
		08740EA786804731B9D4F68A /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.hpp */ = {isa = PBXBuildFile; fileRef = 838793063F9F44FE906283CA /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.hpp */; };
		087DFEE27AEF4B869B3A4228 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */ = {isa = PBXBuildFile; fileRef = 0945595E4EC4462491A9DA9D /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */; };
		087F8F7A40EE4A409BF93138 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.hpp */ = {isa = PBXBuildFile; fileRef = D28BE3C76BFB444988D92C40 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.hpp */; };
		08891A231C2B43AF8D3CF65D /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.hpp */ = {isa = PBXBuildFile; fileRef = 51946D842F4E4500B7239848 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.hpp */; };
		0890516442544E838DAB7160 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.hpp */ = {isa = PBXBuildFile; fileRef = A9E1B3B25E184CF8A7DCB632 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.hpp */; };
		089F587C323C4141A5CB2657 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.hpp */ = {isa = PBXBuildFile; fileRef = 5C5DCD415BD94D40AEC950E8 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.hpp */; };
		08BEA7C9DC7A4475845CF6A3 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */ = {isa = PBXBuildFile; fileRef = 05BD3C652CE8416A89E60018 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */; };
		08CD66D860554D7195BC8AF0 /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.hpp */ = {isa = PBXBuildFile; fileRef = 4D39AE22B31146B88A2C05FC /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.hpp */; };
		08F600EA4D39476D83A1B2C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */ = {isa = PBXBuildFile; fileRef = 1A8AA1E5FDF743299D668A5E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */; };
		08FE704E8FDB4B5AADA2A696 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.hpp */ = {isa = PBXBuildFile; fileRef = D08343D661A942099DA0198E /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.hpp */; };
		0905C5FF440244DC8C6C7496 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.hpp */ = {isa = PBXBuildFile; fileRef = 840E703C4399401BA7D05F03 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.hpp */; };
		090C108BF5484C708C411420 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 923518369B954669AA96AB55 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp */; };
		09320788C89C4664BDBDA990 /* /Users/heiner/git/QuantLib/ql/exercise.hpp */ = {isa = PBXBuildFile; fileRef = 734B9B5F73C0479995D417DC /* /Users/heiner/git/QuantLib/ql/exercise.hpp */; };
		093BB231FEF7463C920559E6 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */ = {isa = PBXBuildFile; fileRef = DEB147DB617048B6B5ADDBCB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */; };
		094A9CC588FE423BA0421B15 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */ = {isa = PBXBuildFile; fileRef = A131B947560D4B1DBC6C042A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */; };
		094E797DA8F7498AA260553D /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.hpp */ = {isa = PBXBuildFile; fileRef = 2A3C660D95484ABB94F2FD5C /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.hpp */; };
		09640E286EF04A12A8FB35A1 /* /Users/heiner/git/QuantLib/ql/time/ecb.hpp */ = {isa = PBXBuildFile; fileRef = 9105F87F7B5540C09A0C795F /* /Users/heiner/git/QuantLib/ql/time/ecb.hpp */; };
		0965A59E19FF43AD90CFF7C4 /* /Users/heiner/git/QuantLib/ql/math/optimization/costfunction.hpp */ = {isa = PBXBuildFile; fileRef = D5E678C1BC3449B6AD878E74 /* /Users/heiner/git/QuantLib/ql/math/optimization/costfunction.hpp */; };
		096784ADCD6F4DF1A69D2CC4 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.hpp */ = {isa = PBXBuildFile; fileRef = 9F2C940F050E4B3589847771 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.hpp */; };
		098A2E313C044039848D08A8 /* /Users/heiner/git/QuantLib/ql/math/kernelfunctions.hpp */ = {isa = PBXBuildFile; fileRef = 50C2D54B4AEA449481B1FE2C /* /Users/heiner/git/QuantLib/ql/math/kernelfunctions.hpp */; };
		098FDACB63F94A42AA23A562 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp */ = {isa = PBXBuildFile; fileRef = D41D6A1FD98C45688FC45491 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp */; };
		099830BCA5F042EBB09EA109 /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */ = {isa = PBXBuildFile; fileRef = 19AC0DD4FE5642E48976431E /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */; };
		09984066FA9E430C8C0B1CE9 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */ = {isa = PBXBuildFile; fileRef = 221EEDB4E4B34ADC9CD66E40 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */; };
		09A1D14FB21F431BAEB57E6A /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */ = {isa = PBXBuildFile; fileRef = 73DE6FD6EAEF47E88583F307 /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */; };
		09A822F1E3AB44D5BA223178 /* /Users/heiner/git/QuantLib/ql/event.hpp */ = {isa = PBXBuildFile; fileRef = 30837CF15FEC46B386E3B0DD /* /Users/heiner/git/QuantLib/ql/event.hpp */; };
		09CA09D36FEC41D19D35429F /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.hpp */ = {isa = PBXBuildFile; fileRef = 743F746F2849456BBF1D286C /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.hpp */; };
		09EC8E8010D84E9E997FFCE0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */ = {isa = PBXBuildFile; fileRef = F8023026C1C546528B315399 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */; };
		09F108166DCE42E493CA0D71 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = BA2C9E253CF4464FA69D79E7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.hpp */; };
		0A012672ECCF485CAFD9EBC2 /* /Users/heiner/git/QuantLib/test-suite/blackdeltacalculator.cpp */ = {isa = PBXBuildFile; fileRef = BA75B617574C4B2A994F520C /* /Users/heiner/git/QuantLib/test-suite/blackdeltacalculator.cpp */; };
		0A07150A2C654B22B20633E9 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */ = {isa = PBXBuildFile; fileRef = 4C61897219E54A5D88A80577 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */; };
		0A0E6C57BB0D4A5682BD6759 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.hpp */ = {isa = PBXBuildFile; fileRef = 96304212CB594D9CAC1E178D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.hpp */; };
		0A3E067F853B44C5843FA41F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */ = {isa = PBXBuildFile; fileRef = 1DCD7400E2A34549AFAA934B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */; };
		0A959BA8B4EA48BA8F581F6C /* /Users/heiner/git/QuantLib/ql/time/ecb.hpp */ = {isa = PBXBuildFile; fileRef = 57C047771E464FF88BCDC7B0 /* /Users/heiner/git/QuantLib/ql/time/ecb.hpp */; };
		0A9D377D01064CFD96B0A416 /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.hpp */ = {isa = PBXBuildFile; fileRef = E9275B41CF2E46FBACF8D00B /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.hpp */; };
		0AB2F3EA6DEA4C58BCDCBDF2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp */ = {isa = PBXBuildFile; fileRef = FA1E27CEB67D4B2A97ED5904 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp */; };
		0AB82131FD5A4BCCA4E2A5AD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp */ = {isa = PBXBuildFile; fileRef = 864B278AC148412D8D7997ED /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp */; };
		0ABA3355E5EC40F28448D5B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */ = {isa = PBXBuildFile; fileRef = EE8938A4D0F24DE6915EB95E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */; };
		0AD9A85FE4084AED89209453 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */ = {isa = PBXBuildFile; fileRef = 593A0DAC38E94690B0EB5895 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */; };
		0AE1B36D379E4B7FAA712A25 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */ = {isa = PBXBuildFile; fileRef = D0944B30976E4964BD646064 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */; };
		0AE60FCA035A44428FD8475B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.hpp */ = {isa = PBXBuildFile; fileRef = 3A30A44E07B147FFACD2EC29 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.hpp */; };
		0AE6EE10E69646B7BC3F9BF9 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.hpp */ = {isa = PBXBuildFile; fileRef = 5C3143EC201B44949F21B821 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.hpp */; };
		0B0EE985008F480DBB322BC7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */ = {isa = PBXBuildFile; fileRef = E647B74B54464C989B16D450 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */; };
		0B34806B35FC4E08BDE4D7D5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.hpp */ = {isa = PBXBuildFile; fileRef = BE4AC2DE17A64227A9CC408C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.hpp */; };
		0B38F46FE36D4824A2E65823 /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.hpp */ = {isa = PBXBuildFile; fileRef = 365B281EE9564ACB9E98D887 /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.hpp */; };
		0B3AC86426654B94BD444E1C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */ = {isa = PBXBuildFile; fileRef = 55046CB71E3C439E9F2158FE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */; };
		0B40DA61B9C74B0F874021D7 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */ = {isa = PBXBuildFile; fileRef = E579AF70990647848B1A7C5D /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */; };
		0B426F19FE1B46948ECF87A5 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.hpp */ = {isa = PBXBuildFile; fileRef = AAD9C8A43C9D4BA3A47C9310 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.hpp */; };
		0B43F6488BBD40A4BF8D5948 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdstepconditionengine.hpp */ = {isa = PBXBuildFile; fileRef = A35A9DD41F1B48DDA5831665 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdstepconditionengine.hpp */; };
		0B5766FC122F4DEC8E78A16A /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */ = {isa = PBXBuildFile; fileRef = 51BCE6A5F854436381F23E9A /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */; };
		0B589191ADFB4C94BC2457DF /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */ = {isa = PBXBuildFile; fileRef = B53D4C05A5D14C3486D705DD /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */; };
		0B617AA82F214933945948DF /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.hpp */ = {isa = PBXBuildFile; fileRef = E484FBBDE50948B18080BE48 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.hpp */; };
		0B658814D757400786E2C358 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */ = {isa = PBXBuildFile; fileRef = E18369325B304C5AA120E584 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */; };
		0B6D4FB624FF448EBC3145EC /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */ = {isa = PBXBuildFile; fileRef = C34EF21E72BD454381DD6202 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */; };
		0B734A6B1ABD484BB94913CE /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */ = {isa = PBXBuildFile; fileRef = B7BD1370F3664C2993346D3D /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */; };
		0B74BB328EC84899AF76167F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */ = {isa = PBXBuildFile; fileRef = 7B23081F1C534C60AC757333 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */; };
		0BA84BC646184D02AC4C81F3 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */ = {isa = PBXBuildFile; fileRef = F9C59F2F7FE441C5B431DA3D /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */; };
		0BB0A01F2D3147449F432FB1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */ = {isa = PBXBuildFile; fileRef = 5E1066F1BCC84B6EAC3BB723 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */; };
		0BB0BB5185404BEFA4E4911D /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardperformanceengine.hpp */ = {isa = PBXBuildFile; fileRef = F6F1263CE1094E639D7020D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardperformanceengine.hpp */; };
		0BB638D1C45D487D8AC1B9C2 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.hpp */ = {isa = PBXBuildFile; fileRef = D4FD705F05874B83A97EDD6E /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.hpp */; };
		0BC1740455CD4A7095F308FC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.hpp */ = {isa = PBXBuildFile; fileRef = AC605C3728104B1B924F7C0D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.hpp */; };
		0BC529EE6945468BBEC4CB18 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp */ = {isa = PBXBuildFile; fileRef = 05743A103E9942F7BA398F23 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp */; };
		0BD0682935B346DDBF2A6123 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 4A647814326E4DAC8B8EB98D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.hpp */; };
		0BD72B7681054CD59632E792 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */ = {isa = PBXBuildFile; fileRef = 397084DD59DC4AE8A4ABA6AF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */; };
		0BD9F05F63B1498BB3875924 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.hpp */ = {isa = PBXBuildFile; fileRef = 54D0C9A94BD846DA89140C4A /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.hpp */; };
		0BE187D91BF04F9588D5C4B8 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.hpp */ = {isa = PBXBuildFile; fileRef = BC7FC53D093E4FD189D32366 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.hpp */; };
		0C18FAE7EDF9482AB0A617D7 /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */ = {isa = PBXBuildFile; fileRef = 761D88B59847413B9CD385A3 /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */; };
		0C3C4F83DCEB4570AA22F881 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/all.hpp */ = {isa = PBXBuildFile; fileRef = 230F348CB25E46B8A62050D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/all.hpp */; };
		0C43D5C4FE7141D4BD0A8428 /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/quantoengine.hpp */ = {isa = PBXBuildFile; fileRef = 258F9622D6AD4983AF1BBD66 /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/quantoengine.hpp */; };
		0C58F7853B9744C7A9F149AA /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = CA9DF1A59F994FEC85F7BBD4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */; };
		0C60F83702334984BC6F784D /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/all.hpp */ = {isa = PBXBuildFile; fileRef = E908627AA7B64DB1A622AC88 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/all.hpp */; };
		0C7B81CCBE9541B59DBF95DC /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */ = {isa = PBXBuildFile; fileRef = FF362D6F88F74CD29F206120 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */; };
		0C83508389E34D45AA5B0FCA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */ = {isa = PBXBuildFile; fileRef = 15DE8E0A718D432FAD035F9A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */; };
		0CA7F1D6AEEB4F809D8BC2B2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/all.hpp */ = {isa = PBXBuildFile; fileRef = 97FF2C91FFED47F68F408E33 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/all.hpp */; };
		0CB99D9E781D43D89B873F73 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/binomialconvertibleengine.hpp */ = {isa = PBXBuildFile; fileRef = 62321324DF974C0D8EDE9CEE /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/binomialconvertibleengine.hpp */; };
		0CCB28307A9048B089A293B8 /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */ = {isa = PBXBuildFile; fileRef = 3689513D96CF405C91B39C6B /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */; };
		0CCCEF891DD14FFEA44566BC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.hpp */ = {isa = PBXBuildFile; fileRef = 94D672934BDD4F4084D2B738 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.hpp */; };
		0CD2651E62FF43CA88CF150B /* /Users/heiner/git/QuantLib/test-suite/basketoption.hpp */ = {isa = PBXBuildFile; fileRef = A12D9F51E7BF475BA24F0CB7 /* /Users/heiner/git/QuantLib/test-suite/basketoption.hpp */; };
		0CDC3154D636439EBDDC84E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */ = {isa = PBXBuildFile; fileRef = 0A415A55DFC74A39BE9D8922 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */; };
		0CEB6C54A8FC4B70BD3371E7 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.hpp */ = {isa = PBXBuildFile; fileRef = 224B1A1C229742B5839CB0E0 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.hpp */; };
		0CFAE7407C8D46B88AFEAEDB /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.hpp */ = {isa = PBXBuildFile; fileRef = A84E21395FDB4C35944C6ED5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.hpp */; };
		0CFE42DD6C8D45B995C8DE1C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp */ = {isa = PBXBuildFile; fileRef = 4626BD3F84734992B908F069 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp */; };
		0D0448ECD57F4A1F9C34475E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 5A37E31D60AA4D278398A30C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */; };
		0D0A428EB9A240BB81100ECA /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */ = {isa = PBXBuildFile; fileRef = 76A90F52D3334B68AF93FBC3 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */; };
		0D0C29F94BF24C3390B672ED /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */ = {isa = PBXBuildFile; fileRef = B3465A9864C64B35A5EA09D8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */; };
		0D25D117EF964FB88244A11C /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitymatrix.hpp */ = {isa = PBXBuildFile; fileRef = 5DEF4A549D324EFB856A1431 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitymatrix.hpp */; };
		0D3EF4C5FCFD4F5B9EA06A11 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */ = {isa = PBXBuildFile; fileRef = CA7B9AEC2380480084F84A97 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */; };
		0D41C07FE9F143F5B84B920E /* /Users/heiner/git/QuantLib/test-suite/array.hpp */ = {isa = PBXBuildFile; fileRef = 16D14B892577481D9B6DFCD0 /* /Users/heiner/git/QuantLib/test-suite/array.hpp */; };
		0D42D97C60D041D589C1FF11 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 1651CF6FACA04E7CA940BEAD /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.hpp */; };
		0D447937B8904C20985CCB44 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.hpp */ = {isa = PBXBuildFile; fileRef = 4A751921B3D44A20AD334CC5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.hpp */; };
		0D4BDE3F2A6D47309D019B53 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = A91F9D2A950743AE8FD61E77 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.hpp */; };
		0D5267B11043428C9235A470 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.hpp */ = {isa = PBXBuildFile; fileRef = 86DC9ED4833B48D9B09084AA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.hpp */; };
		0D54AA245EE0430994263C5D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.hpp */ = {isa = PBXBuildFile; fileRef = B24E5C5F838641D088D67C95 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.hpp */; };
		0D74CA7E73A54BA0B4152A78 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.hpp */ = {isa = PBXBuildFile; fileRef = 988174CBEC714B989A905F80 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.hpp */; };
		0D7D0B40E18347D6B930DD8A /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */ = {isa = PBXBuildFile; fileRef = 20E6E5FE51C7439EB8C1AA27 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */; };
		0D867B14E977466F844560AE /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.hpp */ = {isa = PBXBuildFile; fileRef = E76D81957C214476AC7333D9 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.hpp */; };
		0D9B37A6AE5D4E089206EA9E /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */ = {isa = PBXBuildFile; fileRef = C301B93155D44BF8B23211C9 /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */; };
		0D9E0EB4E14B454DAC8BB22F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.hpp */ = {isa = PBXBuildFile; fileRef = E1AF042C79AF466E84ECE0AB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.hpp */; };
		0D9E10CE0CF44AE3916A76AD /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.hpp */ = {isa = PBXBuildFile; fileRef = DB6B6EA812864F68AFB7DEB2 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.hpp */; };
		0E019EB01AB144A997D1DCB2 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletalphacalibration.hpp */ = {isa = PBXBuildFile; fileRef = AF8A0F5865A346409BFB8B97 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletalphacalibration.hpp */; };
		0E0BBD22D8C14FE6ADCE4A6E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepcondition.hpp */ = {isa = PBXBuildFile; fileRef = 2BC724D9E16847629A1D4F56 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepcondition.hpp */; };
		0E18591DACBC4FB68FF16905 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */ = {isa = PBXBuildFile; fileRef = 158F3A69FAB641BFA7DFF26A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */; };
		0E2EEDD2812C4411B322AF42 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.hpp */ = {isa = PBXBuildFile; fileRef = E4B96CE8CB3C4FA797ACF49D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.hpp */; };
		0E31BDD5F3EA44C0B0AC8C92 /* /Users/heiner/git/QuantLib/ql/experimental/math/isotropicrandomwalk.hpp */ = {isa = PBXBuildFile; fileRef = 03CE1B3B3E5C48ED8C9F2185 /* /Users/heiner/git/QuantLib/ql/experimental/math/isotropicrandomwalk.hpp */; };
		0E366ECA16E3469594510CBC /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerospreadedtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 2F749E89BBE74D8D860922E4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerospreadedtermstructure.hpp */; };
		0E488515A10945D2B4F5F276 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.hpp */ = {isa = PBXBuildFile; fileRef = DE9F4F448CAC48929A40921A /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.hpp */; };
		0E4B013FE6DF4567A4F4738B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */ = {isa = PBXBuildFile; fileRef = 3FED2145632C4C559FFEE437 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */; };
		0E4B9AEF745C4DF5AB992FD6 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */ = {isa = PBXBuildFile; fileRef = C23441D9E03A4B20801DC763 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */; };
		0E58D82514C349DF9BE31C01 /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraphelper.hpp */ = {isa = PBXBuildFile; fileRef = 79ECE982EC224AE0A720B483 /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraphelper.hpp */; };
		0E710F9157DA45EEB05351DE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp */ = {isa = PBXBuildFile; fileRef = A2B660C212F1430DB5410E9F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp */; };
		0E7ECD324FE54EA9A98E6598 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */ = {isa = PBXBuildFile; fileRef = EDBA6CB3C5BD46BF8D0DFA50 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */; };
		0EA8A23F43BB45BBB1DD68EC /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 4C64FC5BB0084E7E91D28ADC /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.hpp */; };
		0EA934B9AADB427D9C84926E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */ = {isa = PBXBuildFile; fileRef = 064305AA105D49D5A252FE01 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */; };
		0EB4836B919F4ADA8949A159 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = ED1C3C79F8FA4D4490563388 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */; };
		0EBED28C5ADD47679B4BDD0B /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.hpp */ = {isa = PBXBuildFile; fileRef = D9682067AF634F1FBE22A8CB /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.hpp */; };
		0EC356137B184CC9A98AC05C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp */ = {isa = PBXBuildFile; fileRef = 0834105CF56A4B5995089625 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp */; };
		0ED7EEB6EA494299AEDD9BF1 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */ = {isa = PBXBuildFile; fileRef = DA8FF97316694F348E8DC50B /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */; };
		0EFE25311B2F45739A0EB312 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.hpp */ = {isa = PBXBuildFile; fileRef = AB0DDEEF39714A40A539D143 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.hpp */; };
		0F04C926914743E7AA771517 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdm1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = E3D23A9983444EECA86256B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdm1dmesher.hpp */; };
		0F158DB49CAD4244A827C2D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/all.hpp */ = {isa = PBXBuildFile; fileRef = 109E365924504EDE9A2BD960 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/all.hpp */; };
		0F43D1FCE66F4219AE073E60 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp */ = {isa = PBXBuildFile; fileRef = C7778C1AC5AB4416A9E7AB4A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp */; };
		0F4813F6B8A64C2A8780C779 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */ = {isa = PBXBuildFile; fileRef = BDE45FB7BEA14F4385100A27 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */; };
		0F6156E4D13A433C8CE8450F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = DD0B4C1A81914A948C0EE4EC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */; };
		0F80AC0887604A21919F4216 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */ = {isa = PBXBuildFile; fileRef = C8CC435E2FDF43059CC58989 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */; };
		0F8B1D8032E24D748FF8775E /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.hpp */ = {isa = PBXBuildFile; fileRef = 0F7768C46B0740B4AAADBD14 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.hpp */; };
		0FA29C87B8B545A6A81FC5ED /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 7A3F48DF92894CEB83319FB9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp */; };
		0FB3D2285E4144E0A0773BC8 /* /Users/heiner/git/QuantLib/Examples/CallableBonds/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = DE564380F75B4C3FB1E03FED /* /Users/heiner/git/QuantLib/Examples/CallableBonds/CMakeLists.txt */; };
		0FDBF0A2EC554F10A7111FD2 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 0E703DA19A354A11ADB74C14 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.hpp */; };
		0FEFC6D894554F8F92E87BEF /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.hpp */ = {isa = PBXBuildFile; fileRef = A3113CE82013413488013242 /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.hpp */; };
		0FF41B9895874A718728BFAE /* /Users/heiner/git/QuantLib/ql/math/generallinearleastsquares.hpp */ = {isa = PBXBuildFile; fileRef = 39ABBE06D2C8404BAB50AFDD /* /Users/heiner/git/QuantLib/ql/math/generallinearleastsquares.hpp */; };
		1004254857424D8DACDF5BAE /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */ = {isa = PBXBuildFile; fileRef = 6F3CADCF0D6C4FECA76DCB77 /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */; };
		100974D837E74FA2AB68A44F /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */ = {isa = PBXBuildFile; fileRef = A4E1A6A8350840E0ACF5C736 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */; };
		100CAC6212DD4CFA8B6BEA4B /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */ = {isa = PBXBuildFile; fileRef = 31F6DCE43C73415096DC517E /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */; };
		10162C9F5C98499885724273 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */ = {isa = PBXBuildFile; fileRef = 0B241459270B49C494310B0B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */; };
		102EE4A3A1FB405AA42F5834 /* /Users/heiner/git/QuantLib/ql/math/optimization/method.hpp */ = {isa = PBXBuildFile; fileRef = 8839E728851E41C5BF5B01C2 /* /Users/heiner/git/QuantLib/ql/math/optimization/method.hpp */; };
		1036A791852342D48DDA61CF /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/all.hpp */ = {isa = PBXBuildFile; fileRef = 56EC2F776DE447E28A9FAE43 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/all.hpp */; };
		103AD8F5FA754B118D2D003F /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */ = {isa = PBXBuildFile; fileRef = 1DCB4F45348647D687AC1849 /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */; };
		103F4F6E930842299DC12621 /* /Users/heiner/git/QuantLib/test-suite/varianceswaps.cpp */ = {isa = PBXBuildFile; fileRef = 53F627CEC1F14AAA88BF77C5 /* /Users/heiner/git/QuantLib/test-suite/varianceswaps.cpp */; };
		104C927CE9494D718E1DFE30 /* /Users/heiner/git/QuantLib/test-suite/pagodaoption.hpp */ = {isa = PBXBuildFile; fileRef = 6E9CCB83BF994323B61676AD /* /Users/heiner/git/QuantLib/test-suite/pagodaoption.hpp */; };
		10B781296F414533AAC860FF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 8B11DC2B6CA84E37B2293CA8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */; };
		10C3CB17EDA141A0911623CE /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */ = {isa = PBXBuildFile; fileRef = 31FFBB9472BA4E4F806C644B /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */; };
		10D39E546E07479BB69D6956 /* /Users/heiner/git/QuantLib/ql/quotes/simplequote.hpp */ = {isa = PBXBuildFile; fileRef = 0DF3D3B6875A4BC09C950C86 /* /Users/heiner/git/QuantLib/ql/quotes/simplequote.hpp */; };
		10E75500596F4B7AA78263A7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/finitedifferencemodel.hpp */ = {isa = PBXBuildFile; fileRef = 9B6886294FA847799076A857 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/finitedifferencemodel.hpp */; };
		1108E1321B9541CFBE43E7A8 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */ = {isa = PBXBuildFile; fileRef = D4B08D3C7DCF475CB3BD0029 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */; };
		110E419E3CE64C7497660DDF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */ = {isa = PBXBuildFile; fileRef = AA8C78B13B07428BA170A4C0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */; };
		112081F295564E299308EEE7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.hpp */ = {isa = PBXBuildFile; fileRef = F504B6A85A7446728CA653CE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.hpp */; };
		1122F30DE6B64AFF90E7E73C /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.hpp */ = {isa = PBXBuildFile; fileRef = 35A9DCB4F1F24E3A87D03D61 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.hpp */; };
		1123FE240A28488BA7218F77 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp */ = {isa = PBXBuildFile; fileRef = 5627E9FA57454935A2B48357 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp */; };
		1129BFE8FE2E4422B6ED522D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */ = {isa = PBXBuildFile; fileRef = 536F3094476E43239CAD5728 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */; };
		114DFFCDC2A041A995BC5BBF /* /Users/heiner/git/QuantLib/ql/patterns/all.hpp */ = {isa = PBXBuildFile; fileRef = 6D1B499FE48C4B02AC90182F /* /Users/heiner/git/QuantLib/ql/patterns/all.hpp */; };
		115EC6B3F3204114BF998401 /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */ = {isa = PBXBuildFile; fileRef = 0BC55D4778804A9DBDE49FFC /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */; };
		116AE93786434A8097B3D3C5 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bootstraptraits.hpp */ = {isa = PBXBuildFile; fileRef = CB2270382F424FB2842A1B8E /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bootstraptraits.hpp */; };
		117A925065204DC7B9026DFF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmtermoperator.hpp */ = {isa = PBXBuildFile; fileRef = CFD76507F92842CE921D7F2B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmtermoperator.hpp */; };
		1186455337414942AAFB0A53 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.hpp */ = {isa = PBXBuildFile; fileRef = 630C067FA3BF4E05AC942C7E /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.hpp */; };
		1191EA29CC9745CE8D96AD40 /* /Users/heiner/git/QuantLib/ql/math/interpolations/sabrinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = B6A8968718834784A031568F /* /Users/heiner/git/QuantLib/ql/math/interpolations/sabrinterpolation.hpp */; };
		1194763375224D62B61F6FC5 /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.hpp */ = {isa = PBXBuildFile; fileRef = 4CEB025F74924777A6ECDF6A /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.hpp */; };
		11ACF89ED2484F499408985F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 36F175815CD845ABB3727D3D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.hpp */; };
		11B5F392104E4B638EAA0FF6 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 89DCB589D6C6415896865327 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.hpp */; };
		11B990EB369444A29AB52F0D /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = 23D3CABFC64B4A279ABB6736 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */; };
		11BEEE62C63645B084A9F836 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.hpp */ = {isa = PBXBuildFile; fileRef = 514B1BA529BF4B9D86DB343A /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.hpp */; };
		11DA1B9B35294F41B30E084C /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.hpp */ = {isa = PBXBuildFile; fileRef = 504E81B25FCF4EAA8D70A2A6 /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.hpp */; };
		122503C05FA94BE6A3EA63F1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.hpp */ = {isa = PBXBuildFile; fileRef = F553200DC7D04ACE896EAC7D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.hpp */; };
		1229FB7A2B0A43B48B738577 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */ = {isa = PBXBuildFile; fileRef = EE76ADB6B11B4E1F8F85C694 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */; };
		1242632591D14BFABFE88440 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */ = {isa = PBXBuildFile; fileRef = 5E8A0512FDB24E08B17CFE94 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */; };
		124CBD65AEF04C7697C355A5 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */ = {isa = PBXBuildFile; fileRef = 7E27E79D2F3E475B8CD1F52D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */; };
		12534F3C277B4DE1949832FC /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */ = {isa = PBXBuildFile; fileRef = C3FD528C1A6A4C629DF74980 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */; };
		12651648278F439D9E4F7DAF /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */ = {isa = PBXBuildFile; fileRef = 55B481F58DB3419CA299E054 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */; };
		1274A04BB9704B1DA278AA23 /* /Users/heiner/git/QuantLib/test-suite/chooseroption.cpp */ = {isa = PBXBuildFile; fileRef = BB727EB384C349E1A1C62426 /* /Users/heiner/git/QuantLib/test-suite/chooseroption.cpp */; };
		128F5F27C9F247EAAC55008E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = 09C9025E5E9F4A3FB4F61DE1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanengine.hpp */; };
		12945FB3B6D848D18AA326FC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */ = {isa = PBXBuildFile; fileRef = 9B7C8AA69A27440D9F046DAB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */; };
		12B082FE0D4D4259A798AC06 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.hpp */ = {isa = PBXBuildFile; fileRef = 61BA8FAF56C54867A8FA3C31 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.hpp */; };
		12B8ADA4F971437A835D03A9 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.hpp */ = {isa = PBXBuildFile; fileRef = A12882EAFD7D4A3D8FB7EABB /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.hpp */; };
		12C0AEEDBFA54B1A9049BAEB /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.hpp */ = {isa = PBXBuildFile; fileRef = C1B9E4B4EF20454AA01804A8 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.hpp */; };
		12C70FB1931F498DB3E702AD /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */ = {isa = PBXBuildFile; fileRef = 78A37238A5F045D8B72F2AED /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */; };
		12CFDA14F3124F2B9F463B42 /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */ = {isa = PBXBuildFile; fileRef = 46FD4D855A7948388E4F3479 /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */; };
		12D1B35D40314BE2A4AD62F6 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/all.hpp */ = {isa = PBXBuildFile; fileRef = 46A1718015C14830B533BE99 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/all.hpp */; };
		12E3B876BD5344C1A8ABE39F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */ = {isa = PBXBuildFile; fileRef = 1BD92979AB5147C08B8FCCE4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */; };
		12EE54EE67A645DA99F07E86 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = 6DA26ACC88E54905B8ECB0A4 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.hpp */; };
		12F42331236A4B8E9063B5EC /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */ = {isa = PBXBuildFile; fileRef = C445FBC75F96436D8B4A5227 /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */; };
		12FF13BFAC0F4E389E32EA8E /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */ = {isa = PBXBuildFile; fileRef = 7CA5559C431D447685931BAE /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */; };
		130A2C24604A44C789EC3F64 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.hpp */ = {isa = PBXBuildFile; fileRef = 00B14E38E6CD4277A5915B36 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.hpp */; };
		130D37ABA2EE493B8873600E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */ = {isa = PBXBuildFile; fileRef = 4FC8919BC7D440C38F813F8A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */; };
		130D7D963F0F416B9F059271 /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.hpp */ = {isa = PBXBuildFile; fileRef = 654BE8F09CA64236B8B851A3 /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.hpp */; };
		130EB45D87624F0399B89A05 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp */ = {isa = PBXBuildFile; fileRef = 501351F95F88420CBBF47040 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp */; };
		131AAECBAD0B4C7D9CABC32B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp */ = {isa = PBXBuildFile; fileRef = D7D5A38950E94B47995A6265 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp */; };
		131DE8631D784FE997F9B0FB /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */ = {isa = PBXBuildFile; fileRef = 39E53CCD15114F0E81D03D08 /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */; };
		131EEB673FD440D3A3431CAF /* /Users/heiner/git/QuantLib/ql/math/statistics/all.hpp */ = {isa = PBXBuildFile; fileRef = FBCA0DF2897A4CD8ABBDEA41 /* /Users/heiner/git/QuantLib/ql/math/statistics/all.hpp */; };
		13207117FB04482EA00F3A2D /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */ = {isa = PBXBuildFile; fileRef = C9B92A4EBCDA4E448B4FFAC3 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */; };
		1337A2E4538D4E1C96D6AD57 /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.hpp */ = {isa = PBXBuildFile; fileRef = 319C4FC84D344AD4976745C4 /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.hpp */; };
		134117D26A534FBAA20315D6 /* /Users/heiner/git/QuantLib/Examples/ConvertibleBonds/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = B388D14F31EB4199BC4A7093 /* /Users/heiner/git/QuantLib/Examples/ConvertibleBonds/CMakeLists.txt */; };
		1346560C704D42C3A36FDA5B /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.hpp */ = {isa = PBXBuildFile; fileRef = B371906CB81644D4B2A31CDA /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.hpp */; };
		135D94FCB6C741CDB733F2FF /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = EB4F2601E0EE4808ACAC34C1 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */; };
		13659FEE84D64C8AB8526C6F /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.hpp */ = {isa = PBXBuildFile; fileRef = C70A46E4A0854EBCA6D2C273 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.hpp */; };
		136ADCAF6B614D84B84C0F06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */ = {isa = PBXBuildFile; fileRef = A4A29AD4946943C085D75B16 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */; };
		137836AD17744F22B0836D48 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */ = {isa = PBXBuildFile; fileRef = 87804B59F6654AF79883E90F /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */; };
		137AC3CC8F744DADB4119EED /* /Users/heiner/git/QuantLib/ql/instruments/claim.hpp */ = {isa = PBXBuildFile; fileRef = 1F7982BBAA9444E0A2AF02C7 /* /Users/heiner/git/QuantLib/ql/instruments/claim.hpp */; };
		13863F0BAB10404EB730A8D0 /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.hpp */ = {isa = PBXBuildFile; fileRef = 4422D562BB7147859D96800F /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.hpp */; };
		13924CF8706D46E4A6E3E16F /* /Users/heiner/git/QuantLib/ql/models/volatility/all.hpp */ = {isa = PBXBuildFile; fileRef = 8021EC6E123E45E69D462C74 /* /Users/heiner/git/QuantLib/ql/models/volatility/all.hpp */; };
		1396C00C0BB6427080FF5880 /* /Users/heiner/git/QuantLib/ql/experimental/math/claytoncopularng.hpp */ = {isa = PBXBuildFile; fileRef = 250D5E6F95C9412CB141C0A7 /* /Users/heiner/git/QuantLib/ql/experimental/math/claytoncopularng.hpp */; };
		1396C8FDB32E4EEFA73F5775 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearop.hpp */ = {isa = PBXBuildFile; fileRef = C3D034E65461488BA34CBFDE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearop.hpp */; };
		139839D23FDA41A6B238609A /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */ = {isa = PBXBuildFile; fileRef = 7D4B84C6B9B94FF987164CFB /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */; };
		139F209AA54E40289DA64697 /* /Users/heiner/git/QuantLib/test-suite/capflooredcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 99CEB72718A6447CB0B2BE5C /* /Users/heiner/git/QuantLib/test-suite/capflooredcoupon.hpp */; };
		13AE58F4BC124A52B9094572 /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */ = {isa = PBXBuildFile; fileRef = 46931D0C71ED496F931E470F /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */; };
		13B5D72CFD434C008A40A703 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 525D2BB0B09B4FEEB9425772 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.hpp */; };
		13BCA609234C433EBFCA3C2D /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */ = {isa = PBXBuildFile; fileRef = E31D8B6E52F048A387819FAE /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */; };
		13D5D58A434641F8AD08FF43 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */ = {isa = PBXBuildFile; fileRef = 5AF952F94161495E9AB4F3BD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */; };
		13D63968D0854822A751E8A6 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */ = {isa = PBXBuildFile; fileRef = E2D7BC0DCE7243D689A5AB25 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */; };
		14026573FB82455B8BB23B15 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/all.hpp */ = {isa = PBXBuildFile; fileRef = AB2F5488967347C1B97464CF /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/all.hpp */; };
		1409FAA8969A46DA9F4B70BE /* /Users/heiner/git/QuantLib/ql/instrument.hpp */ = {isa = PBXBuildFile; fileRef = 514B748E279E467A89AF5BF8 /* /Users/heiner/git/QuantLib/ql/instrument.hpp */; };
		146C71B2A578451BB0F60E4D /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */ = {isa = PBXBuildFile; fileRef = B3F1ED9E2BC54F09A8D66C47 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */; };
		14726179C2584E928467AF9B /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.hpp */ = {isa = PBXBuildFile; fileRef = F8C7C20631954E4FAF33BFFD /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.hpp */; };
		1493C252D87144498518367E /* /Users/heiner/git/QuantLib/ql/payoff.hpp */ = {isa = PBXBuildFile; fileRef = 82279085956945F49CAF6C20 /* /Users/heiner/git/QuantLib/ql/payoff.hpp */; };
		14D6DE6FE368432190B41DB7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 4A563B8A40E74524828C25CF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.hpp */; };
		14D97D4C89BE4601A2CE3A0F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp */ = {isa = PBXBuildFile; fileRef = 784C145F16804616BF9F09BF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp */; };
		14E026C58BEB43408248392E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/dkklibor.hpp */ = {isa = PBXBuildFile; fileRef = 476CD531B2D74AC786AD20BF /* /Users/heiner/git/QuantLib/ql/indexes/ibor/dkklibor.hpp */; };
		14F5A655294C4128907E4B34 /* /Users/heiner/git/QuantLib/ql/time/frequency.hpp */ = {isa = PBXBuildFile; fileRef = 6F1BBC50CA744C4581DE026F /* /Users/heiner/git/QuantLib/ql/time/frequency.hpp */; };
		14FBD80AC313446EBBC27A88 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */ = {isa = PBXBuildFile; fileRef = 0EB4D104FE7E4A10B5D50B63 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */; };
		15108727E24241EF9F8D7418 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.hpp */ = {isa = PBXBuildFile; fileRef = 9483D46A2162452B832D78C8 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.hpp */; };
		1522B5E1760442DFAF58DE43 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.hpp */ = {isa = PBXBuildFile; fileRef = 01EF93EB813748CA928ED54D /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.hpp */; };
		15350187309D40D8AEBC7484 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp */ = {isa = PBXBuildFile; fileRef = 1B7A3C41B6F84E7185C18FB1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp */; };
		153AB06AFAD346E1B4CB0A1A /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/all.hpp */ = {isa = PBXBuildFile; fileRef = 47B0F928FC8F4A41BDA33ECC /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/all.hpp */; };
		153D4814CA15412AA200A1BB /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.hpp */ = {isa = PBXBuildFile; fileRef = 54236AA4ABDD441F9C694349 /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.hpp */; };
		153DA652DEC54131A5888DCB /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.hpp */ = {isa = PBXBuildFile; fileRef = 987F71F309F24938A47A11C4 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.hpp */; };
		1540A9AD427042828EAFE8FD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube1.hpp */ = {isa = PBXBuildFile; fileRef = 1C2893E3A57F4F939985DD3A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube1.hpp */; };
		154840BA43D5472196A57B85 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmndimsolver.hpp */ = {isa = PBXBuildFile; fileRef = 9C99EEF73B144AD8B4F92387 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmndimsolver.hpp */; };
		15504D3A90564AC0AAE71ED0 /* /Users/heiner/git/QuantLib/ql/time/date.hpp */ = {isa = PBXBuildFile; fileRef = 825E09982FF04584A806CD7D /* /Users/heiner/git/QuantLib/ql/time/date.hpp */; };
		1557DBBF042B4BBCB709A4B2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.hpp */ = {isa = PBXBuildFile; fileRef = ABC90BB21E4E499FAF4C8069 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.hpp */; };
		15662457E8894139BEC8286E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = BA3E2281F97247BB8ABC85B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */; };
		156876CE80AD487D9CA0D86D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */ = {isa = PBXBuildFile; fileRef = B0E63FC4F29A4F6D8906F578 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */; };
		156FE21AFFA84A7AAFEFE639 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = 1A87694894B049EE9393128F /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */; };
		1581071C093D4132A967432B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */ = {isa = PBXBuildFile; fileRef = 5ACF8386153C46CAAE72B7C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */; };
		15851F333E3449F9AEF32DEE /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = F49DF284E5CE4B82B0CC1733 /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.hpp */; };
		159782B9B8FE4E76A0FB873D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cdor.hpp */ = {isa = PBXBuildFile; fileRef = 38C4CCDBD8934ED7B064A8CB /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cdor.hpp */; };
		15AE402E5F5C49CEAA568B05 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/falseposition.hpp */ = {isa = PBXBuildFile; fileRef = 73D81EB811F24138AF435191 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/falseposition.hpp */; };
		15B6BDB890E842A6828217A9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = BDC337B2B3CC4E7CA54E6EB9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp */; };
		15BF580D1CB64C8FB2807A13 /* /Users/heiner/git/QuantLib/ql/patterns/lazyobject.hpp */ = {isa = PBXBuildFile; fileRef = F6F51814C1B14A95ACAD80BB /* /Users/heiner/git/QuantLib/ql/patterns/lazyobject.hpp */; };
		15D3BE2199D64151BA4D6598 /* /Users/heiner/git/QuantLib/ql/instruments/all.hpp */ = {isa = PBXBuildFile; fileRef = B74256C6D5474B47B21EEBB6 /* /Users/heiner/git/QuantLib/ql/instruments/all.hpp */; };
		15EDF5F5B6444A83BF0BDA81 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */ = {isa = PBXBuildFile; fileRef = 99E2DAC6E15C416CBA6D50CC /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */; };
		15F3D865AD954E8087226C73 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.hpp */ = {isa = PBXBuildFile; fileRef = 57FD8841CFF6400DBE87E7F7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.hpp */; };
		160E542E5F3046E3B5BF9BD3 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.hpp */ = {isa = PBXBuildFile; fileRef = 119AC39C518B464FB8485DE1 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.hpp */; };
		163E95B1FDD341C18716F6B9 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */ = {isa = PBXBuildFile; fileRef = 9B5BFC20029C4DF5B27BBC0D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */; };
		165A4303EFC3424A8AFE6C49 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */ = {isa = PBXBuildFile; fileRef = E6703FCE644B42538977DE30 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */; };
		1660982C604C4D35BE9DA20B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp */ = {isa = PBXBuildFile; fileRef = 47A0074BAC9044898F72B0FF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp */; };
		166AF2D004284D1B850A1A68 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */ = {isa = PBXBuildFile; fileRef = C7426F7BD63A4130B0ACED25 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */; };
		1684E08A253944D18250A807 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.hpp */ = {isa = PBXBuildFile; fileRef = 3A795BDA1EC84BE7802E2BD9 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.hpp */; };
		168F099FA62C489ABBDE26C5 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.hpp */ = {isa = PBXBuildFile; fileRef = 31FB1E06604F499885CA4017 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.hpp */; };
		169235988E9448F6AF32939C /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.hpp */ = {isa = PBXBuildFile; fileRef = 6ECCD98B4EA4425F82C74D9B /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.hpp */; };
		169F578E830A4ACB80F01A4E /* /Users/heiner/git/QuantLib/ql/instrument.hpp */ = {isa = PBXBuildFile; fileRef = 9F61E46887154C989D7ECE43 /* /Users/heiner/git/QuantLib/ql/instrument.hpp */; };
		16A4055E6A0C40CB9E89BB73 /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.hpp */ = {isa = PBXBuildFile; fileRef = 9F0D6A38B4A348F5AF20089A /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.hpp */; };
		16B06E14D3F849028624A5A8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp */ = {isa = PBXBuildFile; fileRef = 8E082CA0612E4620A5F41161 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp */; };
		16B355DAE8404CB687DF887C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.hpp */ = {isa = PBXBuildFile; fileRef = 0DEB4AAC33A2451B82077D57 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.hpp */; };
		16BB0399966B43A5B29EF348 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdebsm.hpp */ = {isa = PBXBuildFile; fileRef = 5408F1E055CD492881AC044F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdebsm.hpp */; };
		16BC7ADFD4654A7F9A61895C /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.hpp */ = {isa = PBXBuildFile; fileRef = B1B172A46B934B2BBED3DDC2 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.hpp */; };
		16CFD1B09AA347278642F03A /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */ = {isa = PBXBuildFile; fileRef = BB5FC21DF239448DB273E176 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */; };
		16D59948FD6E4957949A73B1 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp */ = {isa = PBXBuildFile; fileRef = D58B015E995A423F99BA15D0 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp */; };
		16D8D18A487449F0AADDC2FB /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */ = {isa = PBXBuildFile; fileRef = 8598231C38DE4FFC9AB5316E /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */; };
		16E272D5C6F040CD803E427C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = E6A946D29B4D4D85A3C71F5E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolation.hpp */; };
		17010606679E4058900DD23C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.hpp */ = {isa = PBXBuildFile; fileRef = 4EF591466E51489CBEC25C29 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.hpp */; };
		1704D0F310B249A9B9EC9BEC /* /Users/heiner/git/QuantLib/test-suite/utilities.hpp */ = {isa = PBXBuildFile; fileRef = C259BDB1BB4C46799C4CEA68 /* /Users/heiner/git/QuantLib/test-suite/utilities.hpp */; };
		1707D69259574C029E2882C4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */ = {isa = PBXBuildFile; fileRef = 5C53C97D28A54B1FB143D884 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */; };
		170944A58FD243A99F882210 /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.hpp */ = {isa = PBXBuildFile; fileRef = 361A1E2A3E3E4F54BE6E955E /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.hpp */; };
		1712230A6E7D48EBAF88127B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.hpp */ = {isa = PBXBuildFile; fileRef = B87317F2996A4C3AB4CF32DB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.hpp */; };
		171C6706CF6749E3B650834C /* /Users/heiner/git/QuantLib/test-suite/brownianbridge.hpp */ = {isa = PBXBuildFile; fileRef = A3FAA73AE708498282E49C5C /* /Users/heiner/git/QuantLib/test-suite/brownianbridge.hpp */; };
		17243EA3D12B46808D84875D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/mixedscheme.hpp */ = {isa = PBXBuildFile; fileRef = 13F13E57DEF14286B1F1EC84 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/mixedscheme.hpp */; };
		1729B4671ECD4872BF609579 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.hpp */ = {isa = PBXBuildFile; fileRef = 9DFB83D828064F8DB2AC4A3E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.hpp */; };
		1733DFBAC05348EA94D8DF9D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.hpp */ = {isa = PBXBuildFile; fileRef = EFCF0AD66FAD4400A81021E6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.hpp */; };
		1739F6876A6E4B35A42E3659 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.hpp */ = {isa = PBXBuildFile; fileRef = E7DF0FAE8DBC484CBE0C24F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.hpp */; };
		174B425963294E959BBE3ADF /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */ = {isa = PBXBuildFile; fileRef = 7EEEE8412EE7490CA8575021 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */; };
		174D5D9E41FF48B79F0EB64F /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.hpp */ = {isa = PBXBuildFile; fileRef = AFA29F60264248CC9884C314 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.hpp */; };
		1751195C0A5E4A54A499FDFB /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.hpp */ = {isa = PBXBuildFile; fileRef = 918799BAD27A4B738FABF88A /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.hpp */; };
		17640E3DC6E44D93BA012DAD /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedhazardratecurve.hpp */ = {isa = PBXBuildFile; fileRef = CE2939A8422D4DD19C450D99 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedhazardratecurve.hpp */; };
		17829D8738614472A7DE14C9 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */ = {isa = PBXBuildFile; fileRef = 888ACBC5F9FE4A32BD8FB2C1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */; };
		1792D3D492064EBEB0DDB0BC /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */ = {isa = PBXBuildFile; fileRef = 47E3086CAACE4FE7B4E9E092 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */; };
		1795DE795E5445F6AA959ECA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp */ = {isa = PBXBuildFile; fileRef = BC59BDD31FC34390AC6EAF5D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp */; };
		1798578894304D3E9CDE1156 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 44D091046CB146E880B99457 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolatedsmilesection.hpp */; };
		179D46B1273243409BE8B7D5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */ = {isa = PBXBuildFile; fileRef = 836FBB9348FC4FDB8CCE90F6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */; };
		179FDDC4E7BF4DB8B3977D8B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.hpp */ = {isa = PBXBuildFile; fileRef = 967579A13FCD43B1B061F0F6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.hpp */; };
		17A4EE1527E84619B8C9C19C /* /Users/heiner/git/QuantLib/ql/utilities/disposable.hpp */ = {isa = PBXBuildFile; fileRef = 0818AFBE71E04218B747C960 /* /Users/heiner/git/QuantLib/ql/utilities/disposable.hpp */; };
		17A96549B785419DADA85A01 /* /Users/heiner/git/QuantLib/test-suite/sampledcurve.hpp */ = {isa = PBXBuildFile; fileRef = 6C2AFBB3DE24479C974DA26C /* /Users/heiner/git/QuantLib/test-suite/sampledcurve.hpp */; };
		17BEB1B97F154E13B2B1515E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp */ = {isa = PBXBuildFile; fileRef = 50AD09DD5BB1429CA70A907C /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp */; };
		17C7D2B6F2DE4600B2FD3966 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.hpp */ = {isa = PBXBuildFile; fileRef = 1724DC4450A649B49577032C /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.hpp */; };
		17CAF3751DCC400AA43CB87B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */ = {isa = PBXBuildFile; fileRef = E6EF9B0222A24D48A9B4A54F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */; };
		17E3E6AE9B24490CA550FA76 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 6E2980C5022B4357886C8A1F /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */; };
		17FBC5D3C62A4F9C81217BB7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp */ = {isa = PBXBuildFile; fileRef = 8749E08292904401BB9EAA84 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp */; };
		1840494AD494446CBC8F89DF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanhestonengine.hpp */ = {isa = PBXBuildFile; fileRef = A1210AD664C64FE7852D1EF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanhestonengine.hpp */; };
		185E6259388E4DDC96BE6393 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.hpp */ = {isa = PBXBuildFile; fileRef = 8EA6C09DEB594E4BAAD99B61 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.hpp */; };
		18703FE9168841DF9425D08E /* /Users/heiner/git/QuantLib/ql/cashflows/replication.hpp */ = {isa = PBXBuildFile; fileRef = 1FF5A3C4514846B09C38EEC1 /* /Users/heiner/git/QuantLib/ql/cashflows/replication.hpp */; };
		1874CC463E2142A58B684453 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */ = {isa = PBXBuildFile; fileRef = 0932EBCA936042468BBD7335 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */; };
		18770A065C1848D6A05D189B /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp */ = {isa = PBXBuildFile; fileRef = BA10932859B94C22BCA38CE3 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp */; };
		187F11C17A0C4A4E9F800D34 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 1DB45B81F9C942F98FC1EDB9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */; };
		1885A267647F4F6DAAF8D356 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/swaptionvolcube1a.hpp */ = {isa = PBXBuildFile; fileRef = 5D01B3F38317489CAA497CCE /* /Users/heiner/git/QuantLib/ql/experimental/volatility/swaptionvolcube1a.hpp */; };
		1890A4CFFD2649669CBA7873 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */ = {isa = PBXBuildFile; fileRef = 692A95D767704300869A20F7 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */; };
		18A2686B6F504584A4A5FE01 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp */ = {isa = PBXBuildFile; fileRef = 2E017730D8FC434C8BDD62BB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp */; };
		18A45DFBA1154AA29CBFD007 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.hpp */ = {isa = PBXBuildFile; fileRef = DEC801AE5DFA473A8A9C9081 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.hpp */; };
		18AF498E7BB641ECADAAC1C5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */ = {isa = PBXBuildFile; fileRef = 609E09C544E64E7FBE9AB090 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */; };
		18B544B2B0944492BC476026 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */ = {isa = PBXBuildFile; fileRef = 5B03E290EE294EF4872D4E84 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */; };
		18B5DE6B549E4F77B19B08BA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */ = {isa = PBXBuildFile; fileRef = 9805B95A573C439EB9E00289 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */; };
		18E18D20778947E5A45DF76B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.hpp */ = {isa = PBXBuildFile; fileRef = 7F9AB7AD2D994EE0A07D53CB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.hpp */; };
		18F016FBC40A454E8883ED25 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */ = {isa = PBXBuildFile; fileRef = 965E57075C2B4EEB8B5A3F5A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */; };
		18F54DCF56584BA7B0923575 /* /Users/heiner/git/QuantLib/ql/grid.hpp */ = {isa = PBXBuildFile; fileRef = FA1625337EBE4D2A882C3E38 /* /Users/heiner/git/QuantLib/ql/grid.hpp */; };
		1900C616A10D490796BBD244 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp */ = {isa = PBXBuildFile; fileRef = 5A9D16C4466140DCBD751E20 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp */; };
		19034CC5FDC0451E887D8C4A /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */ = {isa = PBXBuildFile; fileRef = FD53A05CF0CC42F1AE754D73 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */; };
		19044F5F7269481F98F6DD1A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp */ = {isa = PBXBuildFile; fileRef = 0B36E78B96DC4FD8A3C4D1D0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp */; };
		192393A56CC34EA7ADDDDBDF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.hpp */ = {isa = PBXBuildFile; fileRef = CC9E687DF9A24D26B2661C69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.hpp */; };
		19242A77DF204815A12B043B /* /Users/heiner/git/QuantLib/ql/option.hpp */ = {isa = PBXBuildFile; fileRef = 318A5175B91C47779AD83751 /* /Users/heiner/git/QuantLib/ql/option.hpp */; };
		19363C7997F448A281D20525 /* /Users/heiner/git/QuantLib/test-suite/matrices.hpp */ = {isa = PBXBuildFile; fileRef = CF582A0C5B684C969735B5D3 /* /Users/heiner/git/QuantLib/test-suite/matrices.hpp */; };
		19386A98082649DBAC14A872 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/exchangecontract.hpp */ = {isa = PBXBuildFile; fileRef = 8B5678EF928B4B10A3BA5D81 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/exchangecontract.hpp */; };
		1967A6DD65D540C1B1E8E43F /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */ = {isa = PBXBuildFile; fileRef = F4E0D2A8BC8B438889108AE6 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */; };
		196DA56E1CA9490287FC8102 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.hpp */ = {isa = PBXBuildFile; fileRef = 64F803C347824C81BC3AE66D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.hpp */; };
		1993E90B623543988FFFBC72 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.hpp */ = {isa = PBXBuildFile; fileRef = 8CBC783FCFAC44EA859AD395 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.hpp */; };
		19B6AAF7D0984D429003FAE7 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.hpp */ = {isa = PBXBuildFile; fileRef = 7B756A0D181D4A458FA04A81 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.hpp */; };
		19C57B98B59540DD8CC51A61 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jibar.hpp */ = {isa = PBXBuildFile; fileRef = 83B23BA335494617A309CCA2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jibar.hpp */; };
		19CDF2EFEB6E4A0D8EE7B6F7 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */ = {isa = PBXBuildFile; fileRef = 8452F11A3AC14746B1F58BAC /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */; };
		19F50A5AD6E942CFA70844D8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp */ = {isa = PBXBuildFile; fileRef = 8606F0FAA18B4D0B971FA341 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp */; };
		19F8BE2AFE014D37882BF778 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.hpp */ = {isa = PBXBuildFile; fileRef = 1668962CA0C842FA894A0C7B /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.hpp */; };
		1A094EF9F3C446F9B410AA9A /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */ = {isa = PBXBuildFile; fileRef = 257D8CB8A1ED48619BAAF816 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */; };
		1A11ECC6289240BABE719BBE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */ = {isa = PBXBuildFile; fileRef = 0A4E35FF75C74F888AA200B9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */; };
		1A11F92C07F2450C8CA2D8EF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */ = {isa = PBXBuildFile; fileRef = E1F92A6AB7284B498C4379E7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */; };
		1A1B3E536ED94CAA8E431144 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */ = {isa = PBXBuildFile; fileRef = F5B44CD589EA400FA63F4046 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */; };
		1A2B336BBC86431B8FC23475 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.hpp */ = {isa = PBXBuildFile; fileRef = 1E07CD15FCBC46BA8FD1D07C /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.hpp */; };
		1A323A310FC1463486E8316A /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */ = {isa = PBXBuildFile; fileRef = 54B8FD8DFDB94DE2963EDA06 /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */; };
		1A40388D3CEE450082616841 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */ = {isa = PBXBuildFile; fileRef = 6E4FA852C0FF4A38BD4A898B /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */; };
		1A50EA37A6F7443FB718B908 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */ = {isa = PBXBuildFile; fileRef = 76A63685ABFE4B2989B5DAD5 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */; };
		1A575EA127DB4114A2092F1E /* /Users/heiner/git/QuantLib/ql/handle.hpp */ = {isa = PBXBuildFile; fileRef = D474DD8879F34F6DB0260497 /* /Users/heiner/git/QuantLib/ql/handle.hpp */; };
		1A5976681B574B2BA6635E22 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */ = {isa = PBXBuildFile; fileRef = B6852774A4FF43D5B657389B /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */; };
		1A647D0E4B6D46F082949B83 /* /Users/heiner/git/QuantLib/test-suite/capflooredcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 5A69D90EB79F4AD69D675A42 /* /Users/heiner/git/QuantLib/test-suite/capflooredcoupon.cpp */; };
		1A6F715EC9074C43AE8D7DC2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.hpp */ = {isa = PBXBuildFile; fileRef = DE75DBB778DF422D93CD7587 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.hpp */; };
		1A8BF910193A4021AD4E9DB9 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */ = {isa = PBXBuildFile; fileRef = 75B2813D2B644799992F2330 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */; };
		1A9F476FA2094D64928C4C9E /* /Users/heiner/git/QuantLib/ql/math/solver1d.hpp */ = {isa = PBXBuildFile; fileRef = 5B85FA87A6534DC88B8B28A0 /* /Users/heiner/git/QuantLib/ql/math/solver1d.hpp */; };
		1AA5035F1F034254B28F47D3 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */ = {isa = PBXBuildFile; fileRef = 77BA82B4140848F3AE10FA7F /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */; };
		1AAC6BFC732E4774971F330D /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */ = {isa = PBXBuildFile; fileRef = B0D964939CB846C19050F176 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */; };
		1AAC74A839F34114A5E8D11B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.hpp */ = {isa = PBXBuildFile; fileRef = BBBA4F5A893F47AE8391718C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.hpp */; };
		1AB31565F43C4CC69FDB43E9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp */ = {isa = PBXBuildFile; fileRef = D542E96BAABB4AB6BAF445A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp */; };
		1AC78F122B9C4C7F89690C9B /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.hpp */ = {isa = PBXBuildFile; fileRef = B13FDA62D0CA478E8106FA39 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.hpp */; };
		1ADA323FC2BA4602A84C2025 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/euhicp.hpp */ = {isa = PBXBuildFile; fileRef = D4433127F3A5436A9678392E /* /Users/heiner/git/QuantLib/ql/indexes/inflation/euhicp.hpp */; };
		1AE75529EC1C4B92AADBC6AF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = C77F374414EB451FB5EF4512 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.hpp */; };
		1AEA269C10884F46A2B579E8 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendengine.hpp */ = {isa = PBXBuildFile; fileRef = 194748692F7241F39417B7AD /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendengine.hpp */; };
		1AF4AC43C6C64982B296947B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */ = {isa = PBXBuildFile; fileRef = 54AFEFB7FFCC41A1AEB974BE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */; };
		1B0E1171CA2649128F83AEC0 /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */ = {isa = PBXBuildFile; fileRef = 950623AB91304D41944C566D /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */; };
		1B1C152A6D97428DBE63A9EC /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */ = {isa = PBXBuildFile; fileRef = 8EC70F584B144E97AC5BF312 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */; };
		1B2EA04A84FF41B099E7AAEC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */ = {isa = PBXBuildFile; fileRef = CAA86505255F45F7B4C13C5B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */; };
		1B368BB36B5841A1AD70C534 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.hpp */ = {isa = PBXBuildFile; fileRef = 6F9004F80CCE407B8FE92B7C /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.hpp */; };
		1B5E0FD435554A4C998BDD12 /* /Users/heiner/git/QuantLib/Examples/BermudanSwaption/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 786B923E7B47469BB77A0176 /* /Users/heiner/git/QuantLib/Examples/BermudanSwaption/CMakeLists.txt */; };
		1B6DA5B164CD4D46A07D8A87 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.hpp */ = {isa = PBXBuildFile; fileRef = 69A20A9F23A64817823DD8AF /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.hpp */; };
		1B74D7DBF8584F2C98CF5D9C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/all.hpp */ = {isa = PBXBuildFile; fileRef = 4FDEC5658E2140A29ECC850E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/all.hpp */; };
		1B778B5B380A41A9B0F3DE40 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp */ = {isa = PBXBuildFile; fileRef = FF5572FCCE4D4F618EAE9F84 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp */; };
		1B8BF5C5BBCA4566A69AAAB8 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.hpp */ = {isa = PBXBuildFile; fileRef = 0FFB6FE244D847E5A1DCA07E /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.hpp */; };
		1B9426427A5443C7AE870F51 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/mctraits.hpp */ = {isa = PBXBuildFile; fileRef = 80A11C120B1046D585FD1765 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/mctraits.hpp */; };
		1B965829AA4741A09F83C83A /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcaplethomocalibration.cpp */ = {isa = PBXBuildFile; fileRef = B9BD0009BD29436484889FB4 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcaplethomocalibration.cpp */; };
		1BB2707DD66D4A7194A90899 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = B125775433FC4E95B839E276 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */; };
		1BB61A5E9CC64484AF2630CF /* /Users/heiner/git/QuantLib/test-suite/brownianbridge.cpp */ = {isa = PBXBuildFile; fileRef = F3FA57023A3E459895DAB52A /* /Users/heiner/git/QuantLib/test-suite/brownianbridge.cpp */; };
		1BC7B4174E67480BA15F757B /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */ = {isa = PBXBuildFile; fileRef = E8E8190FE7824CA0B2251024 /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */; };
		1BD3A88987AE4A0E842A1E39 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.hpp */ = {isa = PBXBuildFile; fileRef = 7F2B3425A3A9479DBCE944F8 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.hpp */; };
		1BD50304E0574E6D89AADC78 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */ = {isa = PBXBuildFile; fileRef = 090A4288756F46168CED9EEA /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */; };
		1BED89987AFD4CF1BED0DD10 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.hpp */ = {isa = PBXBuildFile; fileRef = 05142878BB81459399FCDC00 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.hpp */; };
		1BF2C1EA8C044A52874640AB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.hpp */ = {isa = PBXBuildFile; fileRef = 2A0D2287D94F424BAEF459C1 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.hpp */; };
		1BF37CE5275D46DBB425F755 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.hpp */ = {isa = PBXBuildFile; fileRef = 8203F31205AC4D66B9FE27F3 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.hpp */; };
		1C089DA22F8146DC9837302A /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.hpp */ = {isa = PBXBuildFile; fileRef = 0DE4581CBCC648D9884BD33E /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.hpp */; };
		1C11F64B3D624C95AF1B2817 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.hpp */ = {isa = PBXBuildFile; fileRef = 88D8A16B96364356879FCDA7 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.hpp */; };
		1C241ABA5E2D4B2FA338F5D3 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */ = {isa = PBXBuildFile; fileRef = 6848764D19224198BF454AA4 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */; };
		1C2A2BDC76E446B58D1C3C56 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */ = {isa = PBXBuildFile; fileRef = 8C85134C25D943518BF1D63A /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */; };
		1C2FE7AE823046BB829A58B2 /* /Users/heiner/git/QuantLib/ql/math/interpolations/bilinearinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 8206F6461B2148E2BB5172EE /* /Users/heiner/git/QuantLib/ql/math/interpolations/bilinearinterpolation.hpp */; };
		1C43CF6D318A46708146DD2B /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.hpp */ = {isa = PBXBuildFile; fileRef = D9A35A9C586F44839A51DF3D /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.hpp */; };
		1C444834AA6946B4BF6DF44E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp */ = {isa = PBXBuildFile; fileRef = 35B1E12CFC104B3AA499934E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp */; };
		1C52CCD45B7E4B34911AF299 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */ = {isa = PBXBuildFile; fileRef = 3E9B9BF84C2B4C72AAE27F3F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */; };
		1C57F2547C954D8CB9675235 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.hpp */ = {isa = PBXBuildFile; fileRef = 590F201A707E4E809F1928D6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.hpp */; };
		1C7586F6ED6443B3AE4E28A7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/fdtypedefs.hpp */ = {isa = PBXBuildFile; fileRef = 482956E72AA841C1B0B2406C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/fdtypedefs.hpp */; };
		1C80D0C920C94C76A8B6327B /* /Users/heiner/git/QuantLib/ql/math/distributions/poissondistribution.hpp */ = {isa = PBXBuildFile; fileRef = 380FD96ACB8C4A4998BB598E /* /Users/heiner/git/QuantLib/ql/math/distributions/poissondistribution.hpp */; };
		1C8AC535374D4631AD31B6C6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp */ = {isa = PBXBuildFile; fileRef = 607C0538CEE24F8A96192E2D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp */; };
		1C949951AD8946DF9BDA31DE /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */ = {isa = PBXBuildFile; fileRef = C9CF7D2430B24395A876923E /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */; };
		1C949ED4FBCB4417AAA858D2 /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */ = {isa = PBXBuildFile; fileRef = 4C935831A26D454F8DB3D950 /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */; };
		1CC459CCF243434D8303361C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.hpp */ = {isa = PBXBuildFile; fileRef = BBE6320C88084B0E8082F7E2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.hpp */; };
		1CC727D20B704629A79C9EB7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */ = {isa = PBXBuildFile; fileRef = B174565433DE4FAC80ACB9C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */; };
		1CE7A99847F647EA80F72063 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.hpp */ = {isa = PBXBuildFile; fileRef = 0A8186B7507F479DBE125A43 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.hpp */; };
		1CECDE1E5673423EA5B2DF10 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.hpp */ = {isa = PBXBuildFile; fileRef = 1DEE2B4127294CA693A310C4 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.hpp */; };
		1D0E0183A5A24BE89F47A8DA /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */ = {isa = PBXBuildFile; fileRef = 23F3BA69D6F445BFADF4B995 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */; };
		1D1C3C31C86C4DC2A403AA88 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */ = {isa = PBXBuildFile; fileRef = A732E9C45C2342679D8154E1 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */; };
		1D2A4A971E63424D88CED2ED /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nodedataprovider.hpp */ = {isa = PBXBuildFile; fileRef = 6036D10558124201A7D046BE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nodedataprovider.hpp */; };
		1D2B4529DC8D43C3BCED9D72 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp */ = {isa = PBXBuildFile; fileRef = 15724A3E51B940D380FB42DF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp */; };
		1D2FCE1EADED4C19855A3CED /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */ = {isa = PBXBuildFile; fileRef = 06DD25C0F160441784D20DC7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */; };
		1D3843A92BE847B88673A96D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.hpp */ = {isa = PBXBuildFile; fileRef = AC8E27135FED4EED8217C609 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.hpp */; };
		1D4804A1A9834AD5905D46A4 /* /Users/heiner/git/QuantLib/test-suite/commodityunitofmeasure.hpp */ = {isa = PBXBuildFile; fileRef = 76BAF7B5983F400EA5F677EE /* /Users/heiner/git/QuantLib/test-suite/commodityunitofmeasure.hpp */; };
		1D4AFDF78383474C8E5F83EF /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */ = {isa = PBXBuildFile; fileRef = 8B815740650D4A0FA3F08262 /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */; };
		1D68E82084A2475193EF1F8B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.hpp */ = {isa = PBXBuildFile; fileRef = 8E00FA84472B467F9CF58425 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.hpp */; };
		1D8AC34E2BBD447891C41AA3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */ = {isa = PBXBuildFile; fileRef = A85C215576FF4ACEB1736411 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */; };
		1D8FB7AF3C984DEDA22CFC3C /* /Users/heiner/git/QuantLib/ql/settings.cpp */ = {isa = PBXBuildFile; fileRef = 842E227326B640E1978C9FD5 /* /Users/heiner/git/QuantLib/ql/settings.cpp */; };
		1D9C212167AD4EB9BC5D2533 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */ = {isa = PBXBuildFile; fileRef = AAB32ACA95A54CAB8FFAB2AC /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */; };
		1D9EF944DAB74B3BA9FA001B /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.hpp */ = {isa = PBXBuildFile; fileRef = 8493C1938B0A413299D6A2EB /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.hpp */; };
		1DA0F203821E43E4854E64AB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepcondition.hpp */ = {isa = PBXBuildFile; fileRef = 7CE6D35892D042E9A5BC9449 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepcondition.hpp */; };
		1DA30FC650C44EA7B40D88AC /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.hpp */ = {isa = PBXBuildFile; fileRef = B8BD1D10613D4E30A4F61BF7 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.hpp */; };
		1DB0B0BCAA054B50A60A8766 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.hpp */ = {isa = PBXBuildFile; fileRef = 34D2EA9E6F264CE2BD0BBF8F /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.hpp */; };
		1DBC745075EF4043B1B10BF0 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */ = {isa = PBXBuildFile; fileRef = EBE612A953964891B1B287D6 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */; };
		1DD6758153D54A44B47590B2 /* /Users/heiner/git/QuantLib/Examples/Replication/Replication.cpp */ = {isa = PBXBuildFile; fileRef = 7A3B45A447B04D658BD8941E /* /Users/heiner/git/QuantLib/Examples/Replication/Replication.cpp */; };
		1DF17B4F44A94B7ABB2B21E1 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */ = {isa = PBXBuildFile; fileRef = 290B3C4BEF3347339C12C639 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */; };
		1DF24D61940C4E69A3EE1FB4 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */ = {isa = PBXBuildFile; fileRef = 209E2BC7E451428A9A65351B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */; };
		1E0B5B14C1FF457BA58749FC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 28A3D97E46D547B0816AF80A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp */; };
		1E194484C19B4309817314D9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.hpp */ = {isa = PBXBuildFile; fileRef = A5713BDABD27416A8394DF7D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.hpp */; };
		1E202ACDA9DF44BBA1E83CFE /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */ = {isa = PBXBuildFile; fileRef = 72437EAE7BDB426A87764B42 /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */; };
		1E269A1822AB491F84ACB419 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */ = {isa = PBXBuildFile; fileRef = 6D7093FA3B5E455BA5F7B1F2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */; };
		1E446482F4CF4731A939B8A2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.hpp */ = {isa = PBXBuildFile; fileRef = 400423A5BA5A4729A0ADE283 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.hpp */; };
		1E49F58A83414274BB8BDC9B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp */ = {isa = PBXBuildFile; fileRef = 6D74E7CC5FA34BAF9363EAAA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp */; };
		1E5D5807217E43D4B3BAEF0D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 6577CCDCBBBD41689C1B9B24 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */; };
		1E5F3F3B83B746398FE8CBCF /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */ = {isa = PBXBuildFile; fileRef = 21D92A1B167B44FEA012DF91 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */; };
		1E6136A3B56043718F36924C /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.hpp */ = {isa = PBXBuildFile; fileRef = AF03AFA8CF534B92ACB03C08 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.hpp */; };
		1E6964F652B642859E60703D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */ = {isa = PBXBuildFile; fileRef = 2C6D8E2E69D945F4983511A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */; };
		1E7B60E733B542E89BD5010E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */ = {isa = PBXBuildFile; fileRef = FAB048E068B0415BA601844C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */; };
		1E7E9B142B5845208EE590CE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.hpp */ = {isa = PBXBuildFile; fileRef = 4710C5E504A94BAE9A6DE668 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.hpp */; };
		1E9ED8292CC341A79C319284 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */ = {isa = PBXBuildFile; fileRef = F8202628BBBB4E43A8325472 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */; };
		1EA879540E40486AA040F199 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = DAA65F9F09A94F5E9BA81090 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */; };
		1EB68D2EFD7D4CDF8D31791D /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */ = {isa = PBXBuildFile; fileRef = 127FA85D2B91494287E32ACD /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */; };
		1EB8F80E87674E8C917B82A6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/all.hpp */ = {isa = PBXBuildFile; fileRef = 99A245E1AEB74624AE5FC0A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/all.hpp */; };
		1EE24D5561954345B371BA31 /* /Users/heiner/git/QuantLib/test-suite/forwardoption.cpp */ = {isa = PBXBuildFile; fileRef = 814243C9E34D482BBCA12C03 /* /Users/heiner/git/QuantLib/test-suite/forwardoption.cpp */; };
		1EFEBDD5A61545578FC54D9D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.hpp */ = {isa = PBXBuildFile; fileRef = F2D977DE16A84AFEB0BBACA2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.hpp */; };
		1EFF8C23E1A24719A4498BEB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */ = {isa = PBXBuildFile; fileRef = DFB1CC809D594217B89D8968 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */; };
		1F219F9D8F304CCABE3551A4 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.hpp */ = {isa = PBXBuildFile; fileRef = 3051349920D54EF39B49DC09 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.hpp */; };
		1F23F083CCE349B6AD830BFE /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.hpp */ = {isa = PBXBuildFile; fileRef = 46463C49C3CB4838AF594FFE /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.hpp */; };
		1F2EFC8E51034D1589F35471 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 69FF094081724640997EC231 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.hpp */; };
		1F37FB378F0142A887F171C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.hpp */ = {isa = PBXBuildFile; fileRef = 1351B8912C9047ED83BFBEB3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.hpp */; };
		1F3BF5C5937F4FE98729DEFA /* /Users/heiner/git/QuantLib/ql/indexes/ibor/chflibor.hpp */ = {isa = PBXBuildFile; fileRef = B46C8E72E2454370A63E4A57 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/chflibor.hpp */; };
		1F4A2843A5C244ABA9A3449B /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = FDED2DAA866D40E486C6F31C /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */; };
		1F99D6F44697470F80FB1DDE /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraphelper.hpp */ = {isa = PBXBuildFile; fileRef = B8CA9CA7AB7E488A81E77707 /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraphelper.hpp */; };
		1F9C391D96B74FB4836F5ABF /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */ = {isa = PBXBuildFile; fileRef = D6AF6F74898E43FEBA9F6B1C /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */; };
		1FC400F6B0FB4466899D4261 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */ = {isa = PBXBuildFile; fileRef = 0201CFFC789F4048A0E44B75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */; };
		1FCBFDB3C739434C9274676B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/piecewiseconstantcorrelation.hpp */ = {isa = PBXBuildFile; fileRef = 1214530940EB4D3DA1F59689 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/piecewiseconstantcorrelation.hpp */; };
		1FD7719047E44A82969F1575 /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.hpp */ = {isa = PBXBuildFile; fileRef = 855A8358CD7245209DD225CA /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.hpp */; };
		1FF83D221E094DB495C6089F /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */ = {isa = PBXBuildFile; fileRef = 8933BA19CB8E44DAA1A2652B /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */; };
		2006ED160A5746168C306A29 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp */ = {isa = PBXBuildFile; fileRef = 2FEF6F1835C6406BB065EBE8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp */; };
		200E61480A16428CB47173A7 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/all.hpp */ = {isa = PBXBuildFile; fileRef = 42D7ABCFC40B41B2BA7DBC78 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/all.hpp */; };
		201E13503FEF40529B8E7FC5 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 5D78B53714FC42FDB82D5837 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */; };
		202E78420CEA4816966CF131 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.hpp */ = {isa = PBXBuildFile; fileRef = 75E240437BA940C4A73E4149 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.hpp */; };
		203C5B8CC19B42D1BBA07088 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp */ = {isa = PBXBuildFile; fileRef = FCDF86EDEA234595B02E68CE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp */; };
		204FE75EBADA4DF483214934 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 2FFED6DF933940E0982996E7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.hpp */; };
		205B727BAFC54F10BE56B179 /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.hpp */ = {isa = PBXBuildFile; fileRef = CA0216EB608647B48F2FAC69 /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.hpp */; };
		20883A87005341169C264E11 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */ = {isa = PBXBuildFile; fileRef = A759D125034949EA9C532FFA /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */; };
		2099ABEDE33845538C6B52BB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp */ = {isa = PBXBuildFile; fileRef = 98BBC92C419E43F6B859BC99 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp */; };
		20A9AD8E336D461D9F687847 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */ = {isa = PBXBuildFile; fileRef = 93E4CE3DD74347AB8E9DC724 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */; };
		20B73DAE181443148C493DBA /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.hpp */ = {isa = PBXBuildFile; fileRef = 0F611F1F7A0D43F4869E1A46 /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.hpp */; };
		20D16025F5174D36A66A7F58 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.hpp */ = {isa = PBXBuildFile; fileRef = F2C0F92A6AA94D479A1ECB07 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.hpp */; };
		20F56D0D97F145FFA54C1102 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */ = {isa = PBXBuildFile; fileRef = 9DAC37AD89B848AEBA72A265 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */; };
		20FF13640C7D47709B58DD56 /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.hpp */ = {isa = PBXBuildFile; fileRef = 31A5F82FDA0F4A7391BA38AB /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.hpp */; };
		212C66F6AB97441798EF18B1 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 017CAADFB24D409893412585 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */; };
		213103186DCF42A8A95EC490 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.hpp */ = {isa = PBXBuildFile; fileRef = 278CAE2936954AA49FA7DC58 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.hpp */; };
		2134F684BFB8487DA2D500BC /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.hpp */ = {isa = PBXBuildFile; fileRef = C43F3D06A527485BA2C08D70 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.hpp */; };
		2139C81952D84BD0B4D18BA7 /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */ = {isa = PBXBuildFile; fileRef = F72A81DEA592441BAC582C3A /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */; };
		2143FFA4C9CF4EBA90816332 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */ = {isa = PBXBuildFile; fileRef = 5308CF127FC846ACAF1634AB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */; };
		214E55E5DB094EB5A5B60DE0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */ = {isa = PBXBuildFile; fileRef = 515EC2E3F1074DF9A08DBBA3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */; };
		21519808D2C84F6B94CB05E2 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */ = {isa = PBXBuildFile; fileRef = B79DDF87D5EC4A28977007E0 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */; };
		215B319AFDA84CD7B9E495A0 /* /Users/heiner/git/QuantLib/ql/utilities/steppingiterator.hpp */ = {isa = PBXBuildFile; fileRef = 88D4D795E65E4BC89A934B76 /* /Users/heiner/git/QuantLib/ql/utilities/steppingiterator.hpp */; };
		216B2001F42346D681A500C0 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */ = {isa = PBXBuildFile; fileRef = C2ED065A783E4669A26F34A6 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */; };
		2183B548811C4CBEBFD1C3D6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */ = {isa = PBXBuildFile; fileRef = CA202303B3D8469899788EE3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */; };
		21869ADB19F84EE580419D97 /* /Users/heiner/git/QuantLib/ql/utilities/disposable.hpp */ = {isa = PBXBuildFile; fileRef = 64145F5889C74A1DA2ED5770 /* /Users/heiner/git/QuantLib/ql/utilities/disposable.hpp */; };
		2188771A38544E1F806BAC95 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */ = {isa = PBXBuildFile; fileRef = C05EEF6645CB463DBA384D99 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */; };
		2190BA4763094A7EA8125EC7 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.hpp */ = {isa = PBXBuildFile; fileRef = BC1ED00FE55144AA9E574E4D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.hpp */; };
		2193AE79F1954C4BBE7230C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.hpp */ = {isa = PBXBuildFile; fileRef = ADD146E58F0640769A677B0F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.hpp */; };
		2198B68C36D4439B8B7C76DA /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.hpp */ = {isa = PBXBuildFile; fileRef = 08FFE35FF76D4743AD557FF6 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.hpp */; };
		21A0DFE65B8B4E928A825D9B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.hpp */ = {isa = PBXBuildFile; fileRef = 1C6FF658A1ED4D6F999651D5 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.hpp */; };
		21A5936992774B20ADACD70F /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */ = {isa = PBXBuildFile; fileRef = 770A452110034111AF2FAA27 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */; };
		21AA63B1F8C2412ABD23553B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.hpp */ = {isa = PBXBuildFile; fileRef = 6F36DBE4D88E41FE9B28E3AE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.hpp */; };
		21B968CA5DA643588D16C6B1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */ = {isa = PBXBuildFile; fileRef = C2D70448790445B38E8FB0FB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */; };
		21C647BF4A7143F59125D9E4 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = 078A5871E0A8463C859B9717 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */; };
		21D32A98A77244E9A8565C24 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.hpp */ = {isa = PBXBuildFile; fileRef = 2301850E82B148AFA60CF415 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.hpp */; };
		21D3FF79691042358C6F3E66 /* /Users/heiner/git/QuantLib/ql/option.hpp */ = {isa = PBXBuildFile; fileRef = 1121774CC51D48F0AF557FA0 /* /Users/heiner/git/QuantLib/ql/option.hpp */; };
		21DB0D9403C4428A970F83F6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/all.hpp */ = {isa = PBXBuildFile; fileRef = 6333E2E9B7EE4913805CC94E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/all.hpp */; };
		21E20DC55BFD4786BE6538EE /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.hpp */ = {isa = PBXBuildFile; fileRef = 442DEF61ED9C4C7D9DC3B6D4 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.hpp */; };
		21E4A89E5A304AB0B037FDAE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = C2A807E0DE2746FDAF3A0E99 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */; };
		21F31A0FA53447129392F414 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.hpp */ = {isa = PBXBuildFile; fileRef = 4182F609B72F49428093D907 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.hpp */; };
		221F462AA48E47B59292D00D /* /Users/heiner/git/QuantLib/ql/math/comparison.hpp */ = {isa = PBXBuildFile; fileRef = 10885A55AC88450D8CE95C7E /* /Users/heiner/git/QuantLib/ql/math/comparison.hpp */; };
		2223F41503714621977ED04F /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 10E0A8A58DCB44D2B35624AA /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp */; };
		2224A9B1F60D4A6281EECB0C /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */ = {isa = PBXBuildFile; fileRef = A2FBEA62E3224DDBBCD94D0C /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */; };
		222881A4C30C40C0AC2120F5 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.hpp */ = {isa = PBXBuildFile; fileRef = D9B1DD1143AB4D4493834841 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.hpp */; };
		224BAD2BE1A04CF287D513EE /* /Users/heiner/git/QuantLib/ql/models/parameter.hpp */ = {isa = PBXBuildFile; fileRef = F2E54603B98B4D419761A72A /* /Users/heiner/git/QuantLib/ql/models/parameter.hpp */; };
		224C77667CEF45F48F7850EF /* /Users/heiner/git/QuantLib/test-suite/chooseroption.hpp */ = {isa = PBXBuildFile; fileRef = BE728F6EED744C91AC5F1517 /* /Users/heiner/git/QuantLib/test-suite/chooseroption.hpp */; };
		225D145C5F084F098221FA8D /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.hpp */ = {isa = PBXBuildFile; fileRef = 1F474EFC456F4223AD0FD03B /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.hpp */; };
		22755E3C9A5B4518BA630F02 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = F4FBE19BEEDE47A0B64E5529 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */; };
		2285EA6ED844461FA3FD17B9 /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */ = {isa = PBXBuildFile; fileRef = 1AEF620F8CA44A08BB3AD202 /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */; };
		22913F22F1F64D8895B93794 /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.hpp */ = {isa = PBXBuildFile; fileRef = 84C6B94639794BB9A6ED446E /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.hpp */; };
		22936489E83B429187D1D6AF /* /Users/heiner/git/QuantLib/ql/termstructures/localbootstrap.hpp */ = {isa = PBXBuildFile; fileRef = 97B96E1E206D4025A4FC5E10 /* /Users/heiner/git/QuantLib/ql/termstructures/localbootstrap.hpp */; };
		22A1D0C09FDB423B9BB71D21 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.hpp */ = {isa = PBXBuildFile; fileRef = 555089153F934B66B8162847 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.hpp */; };
		22B44CCA9DE140859D9F52B5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp */ = {isa = PBXBuildFile; fileRef = 575655761D064F519DE0AB36 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp */; };
		22BE980704F541008BC66592 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */ = {isa = PBXBuildFile; fileRef = CA2F7798AB214F09941E750C /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */; };
		22C95EBDA2C7412B87B947AA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/spreadoption.hpp */ = {isa = PBXBuildFile; fileRef = E9B479BCEDDE45B88D5A5E5F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/spreadoption.hpp */; };
		22F266BE1C3E4897A1F304B0 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzocr.hpp */ = {isa = PBXBuildFile; fileRef = E28DDDC98BC84CF58CBA3048 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzocr.hpp */; };
		22FDFC12B5CC4BAD84D9127E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/exercisestrategy.hpp */ = {isa = PBXBuildFile; fileRef = 1649C7A2FDED408AA90658BC /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/exercisestrategy.hpp */; };
		231007C4CAC3484AA4389D45 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */ = {isa = PBXBuildFile; fileRef = 0394ED4891F04551B5805BD1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */; };
		232108E020C243C0B09DF1B0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.hpp */ = {isa = PBXBuildFile; fileRef = D22C5118244F44BFB5001FD8 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.hpp */; };
		23243B65FD4B4D528116DC85 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */ = {isa = PBXBuildFile; fileRef = 57F1F2049B86434A89E59BF0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */; };
		232C6D2D93F14DCE8C93EE2D /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.hpp */ = {isa = PBXBuildFile; fileRef = 25576BC27A694C1E8068848B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.hpp */; };
		23331C55C87E49EFA3A2807B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */ = {isa = PBXBuildFile; fileRef = 0DE9B2C329594356B78EA506 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */; };
		2338E1ADA9B44243ACD95348 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.hpp */ = {isa = PBXBuildFile; fileRef = EDD4BC41B3EC499D9ACCD73E /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.hpp */; };
		23500FE301BC4CF8A8B93B30 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */ = {isa = PBXBuildFile; fileRef = 138BC69F6A3548E1A5954B38 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */; };
		2358C2F14ECA44B09DE65E29 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp */ = {isa = PBXBuildFile; fileRef = E0588BEDDF4546719F6B6335 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp */; };
		237B0351FCA041E896488B41 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = 978A798C0A7D4CC9A21F661E /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */; };
		238826E623AF4480B5AE89EB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/all.hpp */ = {isa = PBXBuildFile; fileRef = 18FF6560275A4BCC8FD006F3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/all.hpp */; };
		2394BAB681964140ADE2425D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */ = {isa = PBXBuildFile; fileRef = 40E9344DF0B846FFB189A425 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */; };
		23AE1A2ED600418CA38C1409 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp */ = {isa = PBXBuildFile; fileRef = A95094536EBC41B1A15B3251 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp */; };
		23B24D54635543159DC2B90E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */ = {isa = PBXBuildFile; fileRef = 21C9C51C8F984A44B6BB055B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */; };
		23CDDA09B60A4F6E83CF2843 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = 1C3503A24C434D5EB23BB785 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */; };
		23E0FBAF04FB46CC81F5E899 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp */ = {isa = PBXBuildFile; fileRef = 01B5EBDE5C124A8C8C47387E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp */; };
		23E3BA0006C347D6AE5BFABF /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.hpp */ = {isa = PBXBuildFile; fileRef = 2497324216C84867BAC286EB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.hpp */; };
		23E5D7CCA51D4849AEFD54D6 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.hpp */ = {isa = PBXBuildFile; fileRef = B92148B6CC9C48C997001CD4 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.hpp */; };
		24070C278864470E84E1557A /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/ranluxuniformrng.hpp */ = {isa = PBXBuildFile; fileRef = AD362F8FF2724F89987D1E16 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/ranluxuniformrng.hpp */; };
		2411D9E5450749A88CE69D5C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */ = {isa = PBXBuildFile; fileRef = 277A91DCD4A1443598FB7110 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */; };
		2412BBC2822B40CBA1717F3B /* /Users/heiner/git/QuantLib/ql/numericalmethod.hpp */ = {isa = PBXBuildFile; fileRef = 70C2C44214184735A9B2AEBE /* /Users/heiner/git/QuantLib/ql/numericalmethod.hpp */; };
		24164E4AAC0540C1B1800F94 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.hpp */ = {isa = PBXBuildFile; fileRef = 8718127DB25846758EFF64D2 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.hpp */; };
		2436C1FD46E24EB4AF02A72C /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.hpp */ = {isa = PBXBuildFile; fileRef = 8380236999BE4088832ABE5E /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.hpp */; };
		243958BBB6684368B7EE31FF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */ = {isa = PBXBuildFile; fileRef = CDE0326A96794CAE9E0FCB34 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */; };
		2450C8ABB1DB467F89FA311E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvoltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 41630351974649C8A6242F07 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvoltermstructure.hpp */; };
		24534247AC1A45F283BC6FC7 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */ = {isa = PBXBuildFile; fileRef = 7838295D53CC4B878747469C /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */; };
		24656077A8CC4D6599F31193 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = 3328037AB0B444B68D635EAB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.hpp */; };
		246F4CF987474CD6BBCDF01B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.hpp */ = {isa = PBXBuildFile; fileRef = 4807AE3235404AB0A3D5C9C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.hpp */; };
		247828FCA1AB44E9A288F19D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp */ = {isa = PBXBuildFile; fileRef = 693634D53D304F84841548ED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp */; };
		248F65F266B944869C13D09E /* /Users/heiner/git/QuantLib/ql/models/model.cpp */ = {isa = PBXBuildFile; fileRef = 4DCC7BF424E04B7F9F91EF99 /* /Users/heiner/git/QuantLib/ql/models/model.cpp */; };
		24976FAADA21469FAAB5DE18 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */ = {isa = PBXBuildFile; fileRef = BD7A29C5DE754D36AE71B940 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */; };
		24B52725D89941B4919D649B /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */ = {isa = PBXBuildFile; fileRef = 4FF38153D3EF41B98EBFB829 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */; };
		24BA539C92984CD495BDB5D2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */ = {isa = PBXBuildFile; fileRef = B22EC89F8DB74B23848FB1AB /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */; };
		24DB15A224874D688EE18809 /* /Users/heiner/git/QuantLib/ql/instruments/dividendschedule.hpp */ = {isa = PBXBuildFile; fileRef = 3DC0859E85784018841164B1 /* /Users/heiner/git/QuantLib/ql/instruments/dividendschedule.hpp */; };
		24E33F448EAE4B8B8CCBA2F6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */ = {isa = PBXBuildFile; fileRef = 1F4822BED9944A068176C4FF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */; };
		24E727DFCB33462AB67530FC /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 788A84BFD86D4562935FBDF7 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp */; };
		24E8E74926B14FA8B9883E63 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.hpp */ = {isa = PBXBuildFile; fileRef = 595D94BE61F341DD9D3D18E8 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.hpp */; };
		24F845752E37404D8292B64E /* /Users/heiner/git/QuantLib/ql/experimental/credit/recursivelossmodel.hpp */ = {isa = PBXBuildFile; fileRef = 6DF8182D5F564924AD6946E9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recursivelossmodel.hpp */; };
		2509E11B8177447696AE79C1 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletalphacalibration.cpp */ = {isa = PBXBuildFile; fileRef = 1DC7706AD6E54A669463789E /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletalphacalibration.cpp */; };
		250D605D3B7943F7A4858303 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.hpp */ = {isa = PBXBuildFile; fileRef = 849FAA9031944095AFD557AC /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.hpp */; };
		251789B07FB04FDBA67CC66A /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = 381A0BF4155B43D8B1300644 /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */; };
		2524F04C90AE4AA4964A008E /* /Users/heiner/git/QuantLib/ql/termstructures/localbootstrap.hpp */ = {isa = PBXBuildFile; fileRef = 141305CEC70349C3801E082E /* /Users/heiner/git/QuantLib/ql/termstructures/localbootstrap.hpp */; };
		25283D8976F44A88825876BA /* /Users/heiner/git/QuantLib/test-suite/batesmodel.hpp */ = {isa = PBXBuildFile; fileRef = 85349A332AD542BDBB1C52FA /* /Users/heiner/git/QuantLib/test-suite/batesmodel.hpp */; };
		25293D81F2C844148BCCBC23 /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealing.hpp */ = {isa = PBXBuildFile; fileRef = 9A2664E159DB4B25AF5A7140 /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealing.hpp */; };
		252D87B1535343D9996CACEA /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */ = {isa = PBXBuildFile; fileRef = 9E0BA7827ECC4E4CA9EEA162 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */; };
		253B3975E1E748DCB6CA8677 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/all.hpp */ = {isa = PBXBuildFile; fileRef = 9261E759CC524C79A39641A1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/all.hpp */; };
		25533E50664D4DEA92369217 /* /Users/heiner/git/QuantLib/Examples/FRA/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = F982E245BB614BB0BEA5E226 /* /Users/heiner/git/QuantLib/Examples/FRA/CMakeLists.txt */; };
		25687E76093742A38483FA55 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */ = {isa = PBXBuildFile; fileRef = 346ACAC642EE44EAA75576A8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */; };
		25796C8AD7B54F3FB1F781F4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = DAE65BFA239344AEA3D177C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */; };
		2583A14489914BCCA4D9D38C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 04783D774A0E42048A110437 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp */; };
		25B8103969284C1BA88B8CBA /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */ = {isa = PBXBuildFile; fileRef = C1D3989DD603411B9F532F0E /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */; };
		25D57E3EC59B4BD48008FE52 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */ = {isa = PBXBuildFile; fileRef = 43CE3079437A45AB884FA48A /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */; };
		25EF60F4D7B04101863DAEC3 /* /Users/heiner/git/QuantLib/test-suite/sampledcurve.cpp */ = {isa = PBXBuildFile; fileRef = C08CB5334D424344A021C737 /* /Users/heiner/git/QuantLib/test-suite/sampledcurve.cpp */; };
		26117F7136074C3EBFD959B6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */ = {isa = PBXBuildFile; fileRef = 28B5B48DF57F4B468BD5CD8D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */; };
		2638E72FFAAC46F2A5EBB675 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */ = {isa = PBXBuildFile; fileRef = 4FAC8C6F9702408F91684014 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */; };
		2659DD1F2F964361970DE61D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */ = {isa = PBXBuildFile; fileRef = B048AB4C6C3D4CD297DE4725 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */; };
		266A5749D9AF4D318DD01058 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.hpp */ = {isa = PBXBuildFile; fileRef = 1724491C804C413B863A8616 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.hpp */; };
		266D617FA0614DB5BEE92B19 /* /Users/heiner/git/QuantLib/test-suite/zabr.hpp */ = {isa = PBXBuildFile; fileRef = 54280447FE7C4A0D87222A8A /* /Users/heiner/git/QuantLib/test-suite/zabr.hpp */; };
		26814F6474374AF5A357A2FD /* /Users/heiner/git/QuantLib/ql/experimental/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = 95777BDC6ACA4051BEA857A8 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/all.hpp */; };
		268A416432E34BCB99177417 /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */ = {isa = PBXBuildFile; fileRef = EE086E568B294715919593AC /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */; };
		26A727FAF5814106BF2EA48B /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp */ = {isa = PBXBuildFile; fileRef = 340A9337212F40FF9087AB03 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp */; };
		26BABDEF3AF746238C1C1EC8 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.hpp */ = {isa = PBXBuildFile; fileRef = 993157148F3C47599B3E9E89 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.hpp */; };
		26BD3DC5F12A4C7CBC5430BC /* /Users/heiner/git/QuantLib/ql/legacy/all.hpp */ = {isa = PBXBuildFile; fileRef = C3192E9EBD9F42BEB28062F3 /* /Users/heiner/git/QuantLib/ql/legacy/all.hpp */; };
		26CA1713DBD54F83BDC91AA9 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.hpp */ = {isa = PBXBuildFile; fileRef = C99CC793A8AA47C580A11A51 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.hpp */; };
		26DEDE4631224598815D21BE /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/boxmullergaussianrng.hpp */ = {isa = PBXBuildFile; fileRef = 5AD07711DBB246E3A006E747 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/boxmullergaussianrng.hpp */; };
		26E639B0714543D8B649122D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcamericanpathengine.hpp */ = {isa = PBXBuildFile; fileRef = 00A7A34D38FE4F578229B0DB /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcamericanpathengine.hpp */; };
		26F0DD1EC3F24B2D8C48D5E7 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */ = {isa = PBXBuildFile; fileRef = A1206248916648FC95E07E53 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */; };
		270FFD9109264C48BE7EBA2B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */ = {isa = PBXBuildFile; fileRef = EEB52976AB7A413189716ED9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */; };
		27166F09E10046BB8B7D2D9C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */ = {isa = PBXBuildFile; fileRef = 4EBC106D6E7D489C8DA06DB7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */; };
		2716F93948E74B32A5394AA3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */ = {isa = PBXBuildFile; fileRef = D9AEF1BA52764E079EE43EAB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */; };
		273FB47A959B4053B51E5FB9 /* /Users/heiner/git/QuantLib/ql/exchangerate.hpp */ = {isa = PBXBuildFile; fileRef = 3506C07DA03241EEA99D6F70 /* /Users/heiner/git/QuantLib/ql/exchangerate.hpp */; };
		2746778E6F2349179D232523 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.hpp */ = {isa = PBXBuildFile; fileRef = F0959D8DB77948A493CB08E9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.hpp */; };
		274D3CB642E34C2E996C51D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp */ = {isa = PBXBuildFile; fileRef = 615A98DAA6CD46A283D36BBB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp */; };
		27623583A4FD435CB1D1663A /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */ = {isa = PBXBuildFile; fileRef = 929220D5A1274D448F741066 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */; };
		27697654C5D1454590E29133 /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.hpp */ = {isa = PBXBuildFile; fileRef = 1E13A09CD03A49F6891E0274 /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.hpp */; };
		277CD2C792C44822BAE99534 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */ = {isa = PBXBuildFile; fileRef = 58B2666B016344B28CE8A708 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */; };
		2781696F9DC94625AC42568E /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */ = {isa = PBXBuildFile; fileRef = 29F69FCEF6A44545B636BDE3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */; };
		2787AEB4EDAA4AE1AB6372F5 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */ = {isa = PBXBuildFile; fileRef = 4C0653E8176F4FBFA4D7ADE9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */; };
		278A073FEF1946D6BFEA26BB /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.hpp */ = {isa = PBXBuildFile; fileRef = 3013F0F710A04E90B3A2F052 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.hpp */; };
		278CEC97037C4A24BA98C7CD /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */ = {isa = PBXBuildFile; fileRef = 7FB5DDC5B7D3469F84047B98 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */; };
		2797A6FD833F459FA04A0740 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */ = {isa = PBXBuildFile; fileRef = ED96FEDBBCB649718DD73CA1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */; };
		2799128F4E31405BB7334C15 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.hpp */ = {isa = PBXBuildFile; fileRef = 6CA49E69C9A04557BC9A2244 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.hpp */; };
		279A139BEDB34D3F9D6FB130 /* /Users/heiner/git/QuantLib/test-suite/inflationcapfloor.hpp */ = {isa = PBXBuildFile; fileRef = B54A4B6A5E0648608126E53D /* /Users/heiner/git/QuantLib/test-suite/inflationcapfloor.hpp */; };
		279F971A65FF4E2294D8430D /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */ = {isa = PBXBuildFile; fileRef = BCA6DC1AC5F044F7BFC60041 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */; };
		27A1186D1C594A57BAA5E9DD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.hpp */ = {isa = PBXBuildFile; fileRef = E142A8A7D1CF4BCD83336A33 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.hpp */; };
		27A25452CD2641368CB6228F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = 0566777D376C4E4ABC6AF94D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */; };
		27A398888F194E6AB4B88485 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */ = {isa = PBXBuildFile; fileRef = 3877D59B393645CB9AAE3DFD /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */; };
		27B86EFAD7D6425D8561B18B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */ = {isa = PBXBuildFile; fileRef = 56BE7297616840F597FDE00D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */; };
		27BD7C24E80F4898BFF6F26D /* /Users/heiner/git/QuantLib/test-suite/observable.cpp */ = {isa = PBXBuildFile; fileRef = 493A2C37CBFD4193A48EAB44 /* /Users/heiner/git/QuantLib/test-suite/observable.cpp */; };
		27CCE1D8D85644899021A647 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.hpp */ = {isa = PBXBuildFile; fileRef = 23B301A4F4D84EBE877834D2 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.hpp */; };
		27D5DE5933934BE8A5AD4F24 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = B1C8ADD53F054494918514A0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp */; };
		27E6CFF7986043D890EB5C19 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */ = {isa = PBXBuildFile; fileRef = 87319B707B7844F9AEAD6BF5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */; };
		280178EF614045E2B50BF40C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.hpp */ = {isa = PBXBuildFile; fileRef = 4ED50241ADE5442A83E29633 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.hpp */; };
		280F2743AB2346DCB64C6BDC /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */ = {isa = PBXBuildFile; fileRef = 4FE7AED36A934C0CAD14AAE7 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */; };
		2818E8AAE94F46D48C4A95DA /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.hpp */ = {isa = PBXBuildFile; fileRef = 2EAD7CED33FE43A6841A81C9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.hpp */; };
		282B1BDC6F2F4E4195270958 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp */ = {isa = PBXBuildFile; fileRef = 0A0D5CCE44B54D52B6BFCA83 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp */; };
		282B7D7E37814EE9876B0F2B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 8EB5C983A28E41E7B79627F2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */; };
		28464DCFE5EA4EDA9127529F /* /Users/heiner/git/QuantLib/ql/time/date.cpp */ = {isa = PBXBuildFile; fileRef = 823B77108B6F4232A99298ED /* /Users/heiner/git/QuantLib/ql/time/date.cpp */; };
		2848FB94327E4BD6A265B2E4 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.hpp */ = {isa = PBXBuildFile; fileRef = 1E92A33A962840EB97EFD6AB /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.hpp */; };
		284B6A4E942C41A7872BE56F /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */ = {isa = PBXBuildFile; fileRef = 7D962B9A52624AB5935B79C6 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */; };
		284BBABE73B643D58C60750F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */ = {isa = PBXBuildFile; fileRef = 8F1F5EA28C9A4686BFDD10C6 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */; };
		2857732DD539478AB9FDACC5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.hpp */ = {isa = PBXBuildFile; fileRef = F13586AF765340AD9122229F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.hpp */; };
		2868AF8E57114CF9952D8308 /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/multicurvesensitivities.hpp */ = {isa = PBXBuildFile; fileRef = 16DADCB2CB1A400DB75AD79F /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/multicurvesensitivities.hpp */; };
		286C9436F453458E8E42206D /* /Users/heiner/git/QuantLib/ql/methods/lattices/all.hpp */ = {isa = PBXBuildFile; fileRef = 989932AB094E4F2399AD76B9 /* /Users/heiner/git/QuantLib/ql/methods/lattices/all.hpp */; };
		2872C3D6C67149DB80F455B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 23C85294BAFA486987D90A1C /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp */; };
		287B3700F963475D82C3F22B /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/all.hpp */ = {isa = PBXBuildFile; fileRef = 996C944C340B44A59D24B631 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/all.hpp */; };
		288F96C578B4490E9C9C8ABB /* /Users/heiner/git/QuantLib/ql/experimental/averageois/all.hpp */ = {isa = PBXBuildFile; fileRef = 6D1787B3C7694F53B2D50119 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/all.hpp */; };
		28C766B8114F4FF5B623A2D1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */ = {isa = PBXBuildFile; fileRef = 0CE0BD47C381447EA0F6BDA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */; };
		28E6C2683B834C09A06F5100 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */ = {isa = PBXBuildFile; fileRef = 109850102CA64FBFBD85E65E /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */; };
		28F9B3132ABB4B6696AFC784 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/constrainedevolver.hpp */ = {isa = PBXBuildFile; fileRef = C0C2ADE63BEE4752BA07147C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/constrainedevolver.hpp */; };
		2909046F67EC40E38D09A5C5 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */ = {isa = PBXBuildFile; fileRef = 1E9683EF637C484790A01CC2 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */; };
		290D2CD3E588405ABF005980 /* /Users/heiner/git/QuantLib/ql/math/interpolations/multicubicspline.hpp */ = {isa = PBXBuildFile; fileRef = 1329F958C1A449489285EAD9 /* /Users/heiner/git/QuantLib/ql/math/interpolations/multicubicspline.hpp */; };
		29201C158868448AB3A97C69 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */ = {isa = PBXBuildFile; fileRef = 36425563143F4D7289299A01 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */; };
		2920C10E467A4907A10F45EE /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.hpp */ = {isa = PBXBuildFile; fileRef = BBD5940FE7554E59BAD4D865 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.hpp */; };
		2927B85D0B5E42039B3975D9 /* /Users/heiner/git/QuantLib/test-suite/cdo.hpp */ = {isa = PBXBuildFile; fileRef = 75EB90A52578478DAD98EA44 /* /Users/heiner/git/QuantLib/test-suite/cdo.hpp */; };
		29295F7721C547EE888BF6B1 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.hpp */ = {isa = PBXBuildFile; fileRef = 503EB87E6783417A993EFBC5 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.hpp */; };
		294361F70EDF497FAF07E57A /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */ = {isa = PBXBuildFile; fileRef = 86F3578823AB4FA1A38ED15B /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */; };
		2951CEF0E75149208E25C427 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackconstantvol.hpp */ = {isa = PBXBuildFile; fileRef = 7702F42E044C4ED48CCBA7B8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackconstantvol.hpp */; };
		29717BD21E214AB4A05A43CE /* /Users/heiner/git/QuantLib/ql/experimental/math/polarstudenttrng.hpp */ = {isa = PBXBuildFile; fileRef = 2F0DC4312BE44C00B52162CB /* /Users/heiner/git/QuantLib/ql/experimental/math/polarstudenttrng.hpp */; };
		298513BED9164A86BE15E5E1 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp */ = {isa = PBXBuildFile; fileRef = A3F417B958AA468D94E8851E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp */; };
		2986F5E0E1E1415FABBDCCF2 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.hpp */ = {isa = PBXBuildFile; fileRef = 5ACE8D79C91C4AF48B9DC3A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.hpp */; };
		29B9B1F0EE694DDC9E3CABEC /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 2F8F7B972C9743E8AF1ECEF1 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */; };
		29DA5FB60BD0466498AEC42C /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */ = {isa = PBXBuildFile; fileRef = 9C4D1297319B4B49BCC17F64 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */; };
		29F06339DF3440D78CB36247 /* /Users/heiner/git/QuantLib/ql/math/kernelfunctions.hpp */ = {isa = PBXBuildFile; fileRef = 57ABD0C976554D7699B9E2C9 /* /Users/heiner/git/QuantLib/ql/math/kernelfunctions.hpp */; };
		29FFFC3E8DAB40D5AB80C0F6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendamericanengine.hpp */ = {isa = PBXBuildFile; fileRef = E2BB2A89F14B45748065C774 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendamericanengine.hpp */; };
		2A055A41FE584BE28E7CBE7C /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */ = {isa = PBXBuildFile; fileRef = 6319F4B4D68C441EB56415DF /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */; };
		2A0881C00C86483CB03DBB96 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp */ = {isa = PBXBuildFile; fileRef = DFF5D8BA0D4B4EF0A8D5D77D /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp */; };
		2A0A2BBF496D4960AA9AF199 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 2FF36C51D3EB49EB9EE8D5C7 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */; };
		2A1875563062402199456E28 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp */ = {isa = PBXBuildFile; fileRef = 299DAFD4AB154ECFB8F1604E /* /Users/heiner/git/QuantLib/ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp */; };
		2A2370ACBFBF4BEAA8D22E05 /* /Users/heiner/git/QuantLib/test-suite/defaultprobabilitycurves.cpp */ = {isa = PBXBuildFile; fileRef = 9DFE4D91398646029B9B0E0F /* /Users/heiner/git/QuantLib/test-suite/defaultprobabilitycurves.cpp */; };
		2A297A133AB24CC29D9A2C55 /* /Users/heiner/git/QuantLib/test-suite/swap.hpp */ = {isa = PBXBuildFile; fileRef = 8C20AA9DD678480FB55DD408 /* /Users/heiner/git/QuantLib/test-suite/swap.hpp */; };
		2A360780C6944C94B5A8C482 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */ = {isa = PBXBuildFile; fileRef = C43D882D73C74484B522C469 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */; };
		2A36FEE83A1A45E69A025D82 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */ = {isa = PBXBuildFile; fileRef = E2966E03EA904BC9A96484FF /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */; };
		2A405887610C415FB1E60D51 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.hpp */ = {isa = PBXBuildFile; fileRef = 66FE7F0C7F6146F89D608720 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.hpp */; };
		2A58062532234738AB977D4B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp */ = {isa = PBXBuildFile; fileRef = AB84362EB10A48179367DCB2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp */; };
		2A58FD5531F54DCF8B6A1D54 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniform1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = 41035DBDB72C45A7933B4A63 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniform1dmesher.hpp */; };
		2A6056F54B884979A3F4EDD0 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/secant.hpp */ = {isa = PBXBuildFile; fileRef = 20CDE4554835429A96A37409 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/secant.hpp */; };
		2A67B1AE47D74165B93FA4CE /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */ = {isa = PBXBuildFile; fileRef = 74F862F92980496490C94E47 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */; };
		2A7B993E8A8A4945914EFD49 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */ = {isa = PBXBuildFile; fileRef = D8CA7B6B7698407CACA9C704 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */; };
		2A807C1DC7F141D994154C80 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.hpp */ = {isa = PBXBuildFile; fileRef = EA1B0014403D47019E158440 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.hpp */; };
		2A898C39DA7A40CF95550DD6 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */ = {isa = PBXBuildFile; fileRef = 45EA54A461B44A4E89879B29 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */; };
		2A92506B315346B0883C89C7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = D1D3F97D451D4C409C524F8C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */; };
		2A94297245FC4CF4B53251F4 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */ = {isa = PBXBuildFile; fileRef = 4C71EEEF3A6F4D0D9D132B08 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */; };
		2AB33C9431FF4F34836A225A /* /Users/heiner/git/QuantLib/ql/indexes/ibor/seklibor.hpp */ = {isa = PBXBuildFile; fileRef = 9861910C455B40DF8687F37B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/seklibor.hpp */; };
		2AB96E3B2D7B419190AC7AAD /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */ = {isa = PBXBuildFile; fileRef = 5EE1CE08F7054994BF63883C /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */; };
		2AC950651AE8430DBE25E637 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */ = {isa = PBXBuildFile; fileRef = 110382DA1E5C4309B10482D6 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */; };
		2ACB07ACA26D42C68B17EDB5 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = A6B1E0104B37495BA3806EBF /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.hpp */; };
		2AEFAC15B740404F87F84579 /* /Users/heiner/git/QuantLib/ql/math/curve.hpp */ = {isa = PBXBuildFile; fileRef = 182B129400F849BB93BB6811 /* /Users/heiner/git/QuantLib/ql/math/curve.hpp */; };
		2B11D8B853A84338A4D36382 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.hpp */ = {isa = PBXBuildFile; fileRef = B4F30E36C7664F46BAAD4890 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.hpp */; };
		2B3C417836404BEBAB4645ED /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.hpp */ = {isa = PBXBuildFile; fileRef = 2A0627BAFC8D44DFA0974989 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.hpp */; };
		2B46E5FA2D8745AFB571C19F /* /Users/heiner/git/QuantLib/ql/instruments/bond.hpp */ = {isa = PBXBuildFile; fileRef = 007C22BAE76D473BB4BEDBE9 /* /Users/heiner/git/QuantLib/ql/instruments/bond.hpp */; };
		2B4C158C0E474EFBA275E414 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerocurve.hpp */ = {isa = PBXBuildFile; fileRef = 4A265F4D97FF4D1FA09BA6A3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerocurve.hpp */; };
		2B52BCB083CC43D3A2BAB4BD /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp */ = {isa = PBXBuildFile; fileRef = 5B535E297F564F0290027268 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp */; };
		2B62E753AC534B0BA13282CC /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = C3E780AD60FC400B9936A6CF /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */; };
		2B72268296234B97B3AF60F3 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.hpp */ = {isa = PBXBuildFile; fileRef = 0D9A6AE8813449FABB739DD7 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.hpp */; };
		2B7EF8E8A4B046D888FA03D0 /* /Users/heiner/git/QuantLib/test-suite/overnightindexedswap.hpp */ = {isa = PBXBuildFile; fileRef = 13808582745F4261AC4D2AAC /* /Users/heiner/git/QuantLib/test-suite/overnightindexedswap.hpp */; };
		2B8CB0491BFD4E7293B3BC84 /* /Users/heiner/git/QuantLib/test-suite/rngtraits.hpp */ = {isa = PBXBuildFile; fileRef = 87AFC343D94A4010B71A51AB /* /Users/heiner/git/QuantLib/test-suite/rngtraits.hpp */; };
		2B9D07C8048E486F98E2B0FB /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.hpp */ = {isa = PBXBuildFile; fileRef = F54BB7762D994B0EAC0152B4 /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.hpp */; };
		2BB5300457314F0A91010D29 /* /Users/heiner/git/QuantLib/ql/math/interpolations/mixedinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 3E03F1A90BA7488FA34D7D9D /* /Users/heiner/git/QuantLib/ql/math/interpolations/mixedinterpolation.hpp */; };
		2BBD96BDFEB2454D8BE29F02 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/all.hpp */ = {isa = PBXBuildFile; fileRef = B41E82D433494B5EAAC1FA29 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/all.hpp */; };
		2BCBD14E19424DEFAC3D8466 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */ = {isa = PBXBuildFile; fileRef = 57091F2CBB194C01BA0D2197 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */; };
		2BCEF92944B34A8EAA358C08 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */ = {isa = PBXBuildFile; fileRef = 61E059CB42DF48FF9F91606A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */; };
		2C04B76FA1E44FF3B301380C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp */ = {isa = PBXBuildFile; fileRef = 9D0866D1A7DB47E4AC4BFBE2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp */; };
		2C059B97DCFE412E9E07E4C6 /* /Users/heiner/git/QuantLib/test-suite/main.cpp */ = {isa = PBXBuildFile; fileRef = 31F99ECC18464B1393CFE054 /* /Users/heiner/git/QuantLib/test-suite/main.cpp */; };
		2C0C40A618AB4684AE889A9B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.hpp */ = {isa = PBXBuildFile; fileRef = 280410D92EB2445B9B1E68D1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.hpp */; };
		2C1C0215C2184E499DF28857 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 011F055FB9DB4990951A427E /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */; };
		2C20FC12B7FF40C9B8479B42 /* /Users/heiner/git/QuantLib/ql/time/daycounters/all.hpp */ = {isa = PBXBuildFile; fileRef = F9845E26D89E401194938A68 /* /Users/heiner/git/QuantLib/ql/time/daycounters/all.hpp */; };
		2C3968227CA149ABA89CCAA9 /* /Users/heiner/git/QuantLib/test-suite/gjrgarchmodel.hpp */ = {isa = PBXBuildFile; fileRef = 34B2C1310A95402193643750 /* /Users/heiner/git/QuantLib/test-suite/gjrgarchmodel.hpp */; };
		2C44DEFC4BCA4287837FD972 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp */ = {isa = PBXBuildFile; fileRef = F7FCC6785A9743F48BE93A2B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp */; };
		2C5BB26653E04A04BDC7859D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */ = {isa = PBXBuildFile; fileRef = 420F1190F11743C28E1A0390 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */; };
		2C6868C1F4904C68ABB6C92E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */ = {isa = PBXBuildFile; fileRef = F6684F1511814E6D857D156E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */; };
		2C738E745FDB49C2B0DC0387 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.hpp */ = {isa = PBXBuildFile; fileRef = 85333013E5F347D985F3BDDC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.hpp */; };
		2C7B03919C6B4507B05861C7 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.hpp */ = {isa = PBXBuildFile; fileRef = EA2427D260134FEDBA3480A3 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.hpp */; };
		2C9A9B81277F4D8F87D30A0D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.hpp */ = {isa = PBXBuildFile; fileRef = F9E3AD7DD89445499DCC6AF1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.hpp */; };
		2C9B08F68D9746468A5D6819 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */ = {isa = PBXBuildFile; fileRef = 7FCEABF31F39433DA8D3E18A /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */; };
		2CAB5228F86B4D82A2812968 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitylatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = 0A597142A99E4B0383CA3FDF /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitylatentmodel.hpp */; };
		2CB695D5FAFD48C2A73B016A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.hpp */ = {isa = PBXBuildFile; fileRef = 86C4DF5A0EF64180A76BF55F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.hpp */; };
		2CBB1D2DE575442CBEE88F0F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.hpp */ = {isa = PBXBuildFile; fileRef = C1F64F6F624E488C856B3285 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.hpp */; };
		2CC1D7034D114596868B4F9B /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */ = {isa = PBXBuildFile; fileRef = 3E5DE80691254455B6898E8C /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */; };
		2CDACC5F9B6040E599105515 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */ = {isa = PBXBuildFile; fileRef = E6EE2C877EEC44DF93148E31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */; };
		2CF797E8BBDC4D17BD290805 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/all.hpp */ = {isa = PBXBuildFile; fileRef = D727AD511FC345A4B7CFB396 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/all.hpp */; };
		2CF896851F27421C9219C74F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */ = {isa = PBXBuildFile; fileRef = 74D8E6C80A674FCABEC568AD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */; };
		2D07356BA23C4F20A78B8A9C /* /Users/heiner/git/QuantLib/ql/math/interpolations/extrapolation.hpp */ = {isa = PBXBuildFile; fileRef = 3241491B824B400B99A1D69C /* /Users/heiner/git/QuantLib/ql/math/interpolations/extrapolation.hpp */; };
		2D0CC130B7674315BF1514F8 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.hpp */ = {isa = PBXBuildFile; fileRef = 1AA6336CCCC64DF7A605C1D6 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.hpp */; };
		2D1B09B8529B48BA990C41F8 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/all.hpp */ = {isa = PBXBuildFile; fileRef = DFF80E4284174143A2FCCF11 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/all.hpp */; };
		2D2C84221190423BA431C94E /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.hpp */ = {isa = PBXBuildFile; fileRef = 40096B6800724B9AB5BAAE14 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.hpp */; };
		2D2D53B5A8E244DEB8349BCB /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */ = {isa = PBXBuildFile; fileRef = 7CA96E74872946669936015A /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */; };
		2D3896182D21472EBC633B42 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp */ = {isa = PBXBuildFile; fileRef = DC0EB1774E24470D9EDB8F9C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp */; };
		2D3E86BA2E544B74BE8DDA2E /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/all.hpp */ = {isa = PBXBuildFile; fileRef = 6D56E204287048FEA24F40B2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/all.hpp */; };
		2D479173C9534254B404548F /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.hpp */ = {isa = PBXBuildFile; fileRef = 410758D877234208888C3C5A /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.hpp */; };
		2D52698C0DCF46E782E0A770 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/probabilitytraits.hpp */ = {isa = PBXBuildFile; fileRef = 1D4F761281EC458EBA3FC188 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/probabilitytraits.hpp */; };
		2D59AE6BB3274D009D7B9859 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.hpp */ = {isa = PBXBuildFile; fileRef = 4AAABCDB70DD446589CE0E33 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.hpp */; };
		2D6D59289913445D96EDAF93 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = EAC9891831B64251917996ED /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp */; };
		2D6D95C09A6C46E59BCE0FCB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.hpp */ = {isa = PBXBuildFile; fileRef = B26DEB4D76D24FEE91BBCF2D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.hpp */; };
		2D74FDC954D9490EB065CD67 /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */ = {isa = PBXBuildFile; fileRef = 842E23F144E1411E977A8CB9 /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */; };
		2D7C04D08FF945DE923C0CC7 /* /Users/heiner/git/QuantLib/ql/models/equity/all.hpp */ = {isa = PBXBuildFile; fileRef = C18C072594FE42D381C3A8A9 /* /Users/heiner/git/QuantLib/ql/models/equity/all.hpp */; };
		2D860216D2DD48A29C18B7A0 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = E9DB70074A6049DC83381D0B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.hpp */; };
		2DCC7834D0D441159D173CCF /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatlinearinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 2C3A470DEFB247C3B9EA07B6 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatlinearinterpolation.hpp */; };
		2DCEDD3875914EA79BD1C550 /* /Users/heiner/git/QuantLib/Examples/Swap/swapvaluation.cpp */ = {isa = PBXBuildFile; fileRef = 772FFEA949CC4DE19B1592E9 /* /Users/heiner/git/QuantLib/Examples/Swap/swapvaluation.cpp */; };
		2DDA8D06883B4BE089BC4DF8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */ = {isa = PBXBuildFile; fileRef = 531F05DCC11F4AB8A9ED2E30 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */; };
		2DFDD1B36FC74F2C9A451949 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.hpp */ = {isa = PBXBuildFile; fileRef = 0E34226B688145C9A39405FB /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.hpp */; };
		2E01BED47CED4ADCB4A61DDD /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */ = {isa = PBXBuildFile; fileRef = 1641BAD74A2644C28B872679 /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */; };
		2E060FB7B5A64EEABEC86A46 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */ = {isa = PBXBuildFile; fileRef = DCAA6E8C800F47F4958FC7FF /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */; };
		2E2344319E05496581E7B047 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.hpp */ = {isa = PBXBuildFile; fileRef = 7C36CFC5E30E43E7B8491A3F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.hpp */; };
		2E31590A5BD444A6A9DDF98C /* /Users/heiner/git/QuantLib/ql/math/array.hpp */ = {isa = PBXBuildFile; fileRef = 9B5574D462BE4AADA6D666EA /* /Users/heiner/git/QuantLib/ql/math/array.hpp */; };
		2E561305A51A445F98A314C0 /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.hpp */ = {isa = PBXBuildFile; fileRef = FAE7D81084F8492FB38A2F0E /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.hpp */; };
		2E6D3C8EF7C04E45BCF2EB0C /* /Users/heiner/git/QuantLib/ql/experimental/credit/constantlosslatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = 0266E8B4F2A1402189F18E7C /* /Users/heiner/git/QuantLib/ql/experimental/credit/constantlosslatentmodel.hpp */; };
		2E75EA101B4743EF8B1A2605 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */ = {isa = PBXBuildFile; fileRef = DED01AA6EE1A4568B73DE485 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */; };
		2E7E913C76C64047AC71B3C3 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.hpp */ = {isa = PBXBuildFile; fileRef = 865ABE7B05434CC68463E5E2 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.hpp */; };
		2E810C8036BD45B88EB07775 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.hpp */ = {isa = PBXBuildFile; fileRef = 19587614D6CD4CA8BD8D6111 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.hpp */; };
		2E8267546B18413798844309 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */ = {isa = PBXBuildFile; fileRef = 427CD1E6BEAE40E9BE74E7F9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */; };
		2E82D896034041DE94F3CC7E /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */ = {isa = PBXBuildFile; fileRef = 371D4CCBAAD14C14AD3263C1 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */; };
		2ED274D11E2F455D959EB90E /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */ = {isa = PBXBuildFile; fileRef = 1DACE8C2FD224B1B8E032182 /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */; };
		2EDF55DE3C714581A8C5C833 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplus.hpp */ = {isa = PBXBuildFile; fileRef = 257227E68AB543F8AFF77237 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplus.hpp */; };
		2EE03801F63E49DE8486BF6D /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */ = {isa = PBXBuildFile; fileRef = 0DDE33648ABB41B69878C076 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */; };
		2EE5882C8BD84F8A8B2376B1 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */ = {isa = PBXBuildFile; fileRef = 458116C2878B4AEDB737AF1B /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */; };
		2EE97E9B902841FAADCEABDD /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.hpp */ = {isa = PBXBuildFile; fileRef = 516D2F7AB595483D800F3FB1 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.hpp */; };
		2EF3201C6C5049C889DF4E24 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = 2E506FB19FFD4E53A60E51CF /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */; };
		2EFB2651E5C8449D8B52D07C /* /Users/heiner/git/QuantLib/ql/math/curve.hpp */ = {isa = PBXBuildFile; fileRef = 7241DA3027D74DBB8C8A64A7 /* /Users/heiner/git/QuantLib/ql/math/curve.hpp */; };
		2EFECEC191B344448A2D5347 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.hpp */ = {isa = PBXBuildFile; fileRef = BFDC7F9BAADE4C4AB7B55B60 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.hpp */; };
		2F04A1FCC8F84D5CBF9A2E34 /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.hpp */ = {isa = PBXBuildFile; fileRef = C728527A34AA4E119F3A17F7 /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.hpp */; };
		2F2CE04B09CD4B5A8E989D79 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */ = {isa = PBXBuildFile; fileRef = C6B8AC13E3A84A948F85DA21 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */; };
		2F3B161C0BDE4C56A6FEB045 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */ = {isa = PBXBuildFile; fileRef = 5E26D9E15293479CA3DA9D4C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */; };
		2F7421412D2542CF9403CEEF /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual360.hpp */ = {isa = PBXBuildFile; fileRef = 80C27DBAAD424C8E9FB97BC6 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual360.hpp */; };
		2F7AEF545D894797BBB42879 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp */ = {isa = PBXBuildFile; fileRef = F8A9AA8DF728418FA6950974 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp */; };
		2F7DD27B6311411E9FFF767D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = A36B17CE9A1D4058A0A1065E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */; };
		2FA4971BCE924629BB47D4C3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.hpp */ = {isa = PBXBuildFile; fileRef = 4362EEA024604D0C830483F8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.hpp */; };
		2FB1B091D7064B6AA57144F7 /* /Users/heiner/git/QuantLib/ql/math/autocovariance.hpp */ = {isa = PBXBuildFile; fileRef = 7448BDC2438649EEB619D07B /* /Users/heiner/git/QuantLib/ql/math/autocovariance.hpp */; };
		2FBD5FFCD6E4435DAF89A80C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.hpp */ = {isa = PBXBuildFile; fileRef = F6E7FE8F265548108664FD22 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.hpp */; };
		2FC62E9D24D54F7BB0EBE09B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */ = {isa = PBXBuildFile; fileRef = 84949C7F351A4ABAAD49A8AE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */; };
		2FD10C76F7344A9595525BEA /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.hpp */ = {isa = PBXBuildFile; fileRef = B50992BF377D41F99589011D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.hpp */; };
		2FD3856735C8498E9D51F985 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */ = {isa = PBXBuildFile; fileRef = 52B611C3EE10438A88AB4880 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */; };
		2FDFCE6B5F8E4B48BD0E3A9C /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = 7E03026F16094281ACBA819F /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.hpp */; };
		2FF13FF323324950AA44EC89 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */ = {isa = PBXBuildFile; fileRef = 84D9F9FB43434FD4BFC40B14 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */; };
		300725902BE6472D8657A5DD /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */ = {isa = PBXBuildFile; fileRef = 7EFFFEE5A2484A978B88A68E /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */; };
		30139CFD541E4C38BA609BB9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.hpp */ = {isa = PBXBuildFile; fileRef = A4BF8AB027CD4E1899360FD7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.hpp */; };
		302129A31F654A40A784BCDB /* /Users/heiner/git/QuantLib/test-suite/nthtodefault.hpp */ = {isa = PBXBuildFile; fileRef = B55E116AD91B4390A5255A91 /* /Users/heiner/git/QuantLib/test-suite/nthtodefault.hpp */; };
		303E29B9720E42FE861FB122 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp */ = {isa = PBXBuildFile; fileRef = 40981C9FE7DD46BC95BD762B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp */; };
		3041FCE7E7E9449B9B7D9AB5 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.hpp */ = {isa = PBXBuildFile; fileRef = 4A33DF7078AA46D99B15AA8D /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.hpp */; };
		30484C152A4D44D0A7F5EAE5 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.hpp */ = {isa = PBXBuildFile; fileRef = 6440E1E3E9044F1CBBCC05B3 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.hpp */; };
		30497E0409CF48C5AA0D9E4B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/all.hpp */ = {isa = PBXBuildFile; fileRef = ECBDA2BC3FAF4690ADCD5EFD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/all.hpp */; };
		3050977B6A314832B332094D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */ = {isa = PBXBuildFile; fileRef = C4A3B6F3C48A4BAD80E7F541 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */; };
		3057EE5FAA9F4590A39D79F1 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/ukrpi.hpp */ = {isa = PBXBuildFile; fileRef = 2066ACE363E3491F8E56C1D5 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/ukrpi.hpp */; };
		3072C328B7084E51BE6598E4 /* /Users/heiner/git/QuantLib/ql/instruments/swap.hpp */ = {isa = PBXBuildFile; fileRef = 23EC16A20ADD4D5B942F129B /* /Users/heiner/git/QuantLib/ql/instruments/swap.hpp */; };
		307A561F268440868F55A2AC /* /Users/heiner/git/QuantLib/ql/experimental/math/isotropicrandomwalk.hpp */ = {isa = PBXBuildFile; fileRef = 96AB8FB7450144CE96D4AA65 /* /Users/heiner/git/QuantLib/ql/experimental/math/isotropicrandomwalk.hpp */; };
		309ED5CD42EC47A5A936949C /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */ = {isa = PBXBuildFile; fileRef = B549293533334666852A1308 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */; };
		30A3FF33573F49FA8E03D1E9 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */ = {isa = PBXBuildFile; fileRef = F21110AA94974CB2BBC422F1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */; };
		30DFC5BEED4A4036A12C5576 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 88BED79A9BDC4EC5A2C7269C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */; };
		30E074B5C9834DF59F922EBE /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */ = {isa = PBXBuildFile; fileRef = ED9055FBCE714D1EA651F017 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */; };
		30ED4FBD8B3F440C9CB97FF2 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */ = {isa = PBXBuildFile; fileRef = EEB45EBFFE6345F1A0D0D9BD /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */; };
		30F944227B584667ACF39E0C /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = 3B722D79DF164E47BA0D7BEC /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */; };
		3109EAB2635649E0AA6FC13F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp */ = {isa = PBXBuildFile; fileRef = DC963F7F12DA4185A6172610 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp */; };
		311B64C4F1BB439E997B4CB7 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */ = {isa = PBXBuildFile; fileRef = 6129E108B646425B9C1D08E2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */; };
		312F3D3B1FF64D7DADF3CB4E /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */ = {isa = PBXBuildFile; fileRef = 47567029BA1A44C983527BD2 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */; };
		31328F1EE65F4DBA9AE87473 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatortraits.hpp */ = {isa = PBXBuildFile; fileRef = E86EF64B70D844AA97DC674E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatortraits.hpp */; };
		314DE646CC434667AAFCC9C3 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/seklibor.hpp */ = {isa = PBXBuildFile; fileRef = E3BD5FFB87A342A5B5BDD543 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/seklibor.hpp */; };
		315DBED7EB984B9C8BE07115 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */ = {isa = PBXBuildFile; fileRef = E1E707C5E74D47A9A7BFF9B6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */; };
		315EDDC29469453C93FE9B05 /* /Users/heiner/git/QuantLib/test-suite/quantlibtestsuite.cpp */ = {isa = PBXBuildFile; fileRef = 1ED723E8F01B4537987B5E2A /* /Users/heiner/git/QuantLib/test-suite/quantlibtestsuite.cpp */; };
		31655BDF68174F89A7C8672C /* /Users/heiner/git/QuantLib/ql/math/interpolations/all.hpp */ = {isa = PBXBuildFile; fileRef = AFFB901C235C43A382A5DB1E /* /Users/heiner/git/QuantLib/ql/math/interpolations/all.hpp */; };
		3166CE8BF7044A2997FA2588 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = B876879D0CD3486AA06EED06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.hpp */; };
		3166D5C41ECD42F4A4621646 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */ = {isa = PBXBuildFile; fileRef = 503B0535743647AAAD2735C7 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */; };
		31770AE409DE443F8809415E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */ = {isa = PBXBuildFile; fileRef = 4B604E85EB474BF2BDDD2BA7 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */; };
		317AA4413D3447DFA9A45A49 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.hpp */ = {isa = PBXBuildFile; fileRef = A52840682F5D46949BDF5DA0 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.hpp */; };
		317B7CD3F488455C9F155B33 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 47BCBCADF29343FA910DB439 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.hpp */; };
		31935334C34C462681639A2D /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.hpp */ = {isa = PBXBuildFile; fileRef = AEA0FE89472B4831B8FE0E36 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.hpp */; };
		3195697AD5764C6EA6772FF7 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/all.hpp */ = {isa = PBXBuildFile; fileRef = 8BE651789CA641F6A1ECE32E /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/all.hpp */; };
		3197CFAB889C44E3B73B54C1 /* /Users/heiner/git/QuantLib/ql/math/copulas/all.hpp */ = {isa = PBXBuildFile; fileRef = A9F0B52A31AF4A62B678EDBA /* /Users/heiner/git/QuantLib/ql/math/copulas/all.hpp */; };
		31A2432857A04AFD93BE5FF8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp */ = {isa = PBXBuildFile; fileRef = EF4CC717A2844319B1F9BA15 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp */; };
		31BEAB5BFD8C42869A538F9D /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.hpp */ = {isa = PBXBuildFile; fileRef = 9BBC49D42E9A4E7CBE70ED28 /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.hpp */; };
		31C3D638E29348E0B1BD2626 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp */ = {isa = PBXBuildFile; fileRef = 6DF4A73C459440B4AA0EA3E5 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp */; };
		31D3C71C5BB3483C80405CAE /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.hpp */ = {isa = PBXBuildFile; fileRef = FC77A210617643AEA173E8EA /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.hpp */; };
		31DC0EF9D4CF4F6B8D4BF0F4 /* /Users/heiner/git/QuantLib/ql/math/distributions/binomialdistribution.hpp */ = {isa = PBXBuildFile; fileRef = 38E44B6E4B4145DBBD0C4B52 /* /Users/heiner/git/QuantLib/ql/math/distributions/binomialdistribution.hpp */; };
		31DDD2DF8A024503924C9C71 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.hpp */ = {isa = PBXBuildFile; fileRef = 1709618965664D998933B047 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.hpp */; };
		32037E29AB7C41D7A57C08FB /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */ = {isa = PBXBuildFile; fileRef = 472297B793224460B99EBDA2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */; };
		322DB96BBD0B4F1392D5DA36 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */ = {isa = PBXBuildFile; fileRef = A2729720C2C84D1282036E60 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */; };
		323CFDE4DE33416DAD0AFF69 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */ = {isa = PBXBuildFile; fileRef = 734956DACF4346E898D6642A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */; };
		32682193566F4440BB8ABB7A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */ = {isa = PBXBuildFile; fileRef = 3F937A7E571A4BFCB135016B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */; };
		32743D5DA2004B1BB7461F25 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */ = {isa = PBXBuildFile; fileRef = 66D3134A5DB74BE58E7A9E8D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */; };
		327CEA43A1854CA5A465872F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.hpp */ = {isa = PBXBuildFile; fileRef = 97B2D01DBF8E4A9CBA07EEA8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.hpp */; };
		327EE9C0249F418B98DFE7DE /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */ = {isa = PBXBuildFile; fileRef = 9BE23B5349C744999280BA1D /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */; };
		32854189CAD948C89BA5AFD6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.hpp */ = {isa = PBXBuildFile; fileRef = D13DA7C867D44867820FA515 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.hpp */; };
		3291B8CC1A4A43CE977A54EF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */ = {isa = PBXBuildFile; fileRef = 5B3487132C8F4B6390121FBE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */; };
		32AFEB2911CE44ABA24034EE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.hpp */ = {isa = PBXBuildFile; fileRef = A7C4463A859B4BCC8F2A2B56 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.hpp */; };
		32F01A9A7E9C4E82A6E3190C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */ = {isa = PBXBuildFile; fileRef = EA88BAF2927D41B7A3EE2611 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */; };
		3304D2D3ABC640FCB2391234 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */ = {isa = PBXBuildFile; fileRef = FC19D4F9AD464CB2B287335D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */; };
		331567028FED4666A369BB31 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 518D39CF66BC44429D021F64 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */; };
		3315D877EB85469D9EA0B54B /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 67907F281E8A40FDA414C38B /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.hpp */; };
		3316467FEA6544C797857C90 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */ = {isa = PBXBuildFile; fileRef = 13952153B03843B195D20032 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */; };
		3317D6F227BB49B68FFC6D62 /* /Users/heiner/git/QuantLib/ql/math/interpolations/convexmonotoneinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 2FA8804D7E834C57B96A0E29 /* /Users/heiner/git/QuantLib/ql/math/interpolations/convexmonotoneinterpolation.hpp */; };
		33198516B15B486C9FF06F19 /* /Users/heiner/git/QuantLib/Examples/DiscreteHedging/DiscreteHedging.cpp */ = {isa = PBXBuildFile; fileRef = 82E26503BB5A4787B07D31E4 /* /Users/heiner/git/QuantLib/Examples/DiscreteHedging/DiscreteHedging.cpp */; };
		33265CB07D1D4171B2F8296D /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */ = {isa = PBXBuildFile; fileRef = F788261FDAB84252B93F937A /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */; };
		3327F31B93704972B543712B /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.hpp */ = {isa = PBXBuildFile; fileRef = E3D17A97AFC64A6F9ECCE544 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.hpp */; };
		3328A72D7ED04F40A4CB0D83 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.hpp */ = {isa = PBXBuildFile; fileRef = 6BDAC96E8D0446488AD7AEC6 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.hpp */; };
		33292362B5E048F586E60E51 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativersg.hpp */ = {isa = PBXBuildFile; fileRef = AF386F34BA904165BD23F26D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativersg.hpp */; };
		33305A5F520D47D7A6977EDF /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.hpp */ = {isa = PBXBuildFile; fileRef = D34748420BCF4F72A96C06AF /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.hpp */; };
		333C7DD13C3F49C884C3D45F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.hpp */ = {isa = PBXBuildFile; fileRef = 070486F6D0C647C5BA75A86C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.hpp */; };
		333E089C444C41F688E4E4DC /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */ = {isa = PBXBuildFile; fileRef = BA58ADB984184FC2BE47B749 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */; };
		334051D173284FCA8C70AA28 /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */ = {isa = PBXBuildFile; fileRef = 3BEB13C90806481BA7BE076A /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */; };
		335E6EB94416403099E7BF32 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.hpp */ = {isa = PBXBuildFile; fileRef = A52371B791664F129DAB03EE /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.hpp */; };
		3366ACF59B864E78928C506D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdmultiperiodengine.hpp */ = {isa = PBXBuildFile; fileRef = 9013E5FEFAEE4DB98ABFF474 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdmultiperiodengine.hpp */; };
		336D8E1BFC114DB4853753FF /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.hpp */ = {isa = PBXBuildFile; fileRef = 423A9F59A16446708346EA01 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.hpp */; };
		337A8AFCDBD24EF280CB8627 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.hpp */ = {isa = PBXBuildFile; fileRef = EF1EDED894E94111ABC89F73 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.hpp */; };
		337C9E6809CA44D694544330 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */ = {isa = PBXBuildFile; fileRef = CA01A46FFDA943728A407914 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */; };
		33B590D64E8D42FBB645877F /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.hpp */ = {isa = PBXBuildFile; fileRef = 1CC906549B0D4C19B541ED74 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.hpp */; };
		33CE2165A2624FA8A3753A57 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = 51587E98A38F4191948C05AC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp */; };
		33D10CBE781443A498BE7CB4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/all.hpp */ = {isa = PBXBuildFile; fileRef = 6FAA64AFA0AC433394B8CB56 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/all.hpp */; };
		33F153CA0F8B4ACF8F2A4221 /* /Users/heiner/git/QuantLib/test-suite/rounding.hpp */ = {isa = PBXBuildFile; fileRef = C567ED9F13FF485BAC9118D3 /* /Users/heiner/git/QuantLib/test-suite/rounding.hpp */; };
		33FAA38DE0BA41F3BC7D857D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.hpp */ = {isa = PBXBuildFile; fileRef = EB9DEC213AC64F3AB4AA888A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.hpp */; };
		33FE3B963BB44E5FB684BAC8 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */ = {isa = PBXBuildFile; fileRef = E3B2BF1867A94DFCA16B72F6 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */; };
		34076E337DB94280A39EA75D /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.hpp */ = {isa = PBXBuildFile; fileRef = A82FBD647259497AB5C38894 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.hpp */; };
		340ACD70E2D6406CB182BE6B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = F49EDE6AF6EB46C4BB5C13BA /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */; };
		34441A61FF7941748FD1671D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/gbplibor.hpp */ = {isa = PBXBuildFile; fileRef = 1AD26686352D4ECDA52DC02B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/gbplibor.hpp */; };
		344E6C16ABFF43EAA61E5103 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.hpp */ = {isa = PBXBuildFile; fileRef = F14411E4B71C49DF83766416 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.hpp */; };
		34515DFB87164AFCACCBDD82 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendeuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = 205906CF7C754A21BA7A99CB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendeuropeanengine.hpp */; };
		3453B55D86F14C2DA844D875 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.hpp */ = {isa = PBXBuildFile; fileRef = 446A1C026B27411594DBEB0D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.hpp */; };
		345AB650BDFA46F78E41FFF5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 5D802B39A52E4DF8A166DE5C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.hpp */; };
		3481CCDD3F8F44DAAF793D28 /* /Users/heiner/git/QuantLib/ql/math/interpolations/convexmonotoneinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 4A3B0BBD35C94D6A907BF871 /* /Users/heiner/git/QuantLib/ql/math/interpolations/convexmonotoneinterpolation.hpp */; };
		348A07FC6FF84AB2AA208E21 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/modtriplebandlinearop.hpp */ = {isa = PBXBuildFile; fileRef = EEA062CEA5EB48BEADEAB989 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/modtriplebandlinearop.hpp */; };
		34A12DD1AD084B199AF78F30 /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.hpp */ = {isa = PBXBuildFile; fileRef = D45A1C3C9E9C4463BE35110B /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.hpp */; };
		34A94DE192D24F9A85F838C8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */ = {isa = PBXBuildFile; fileRef = 0668D6E1069E4E77A37AEAC3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */; };
		34AED887C90145FD9DF221FA /* /Users/heiner/git/QuantLib/test-suite/riskneutraldensitycalculator.hpp */ = {isa = PBXBuildFile; fileRef = 6DFD3BC3CECD455BB1D88271 /* /Users/heiner/git/QuantLib/test-suite/riskneutraldensitycalculator.hpp */; };
		34B14CC3870E4EC688F8C25D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = 331E5E37FBF149398BF873E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */; };
		34BCF3D4F3204C6AA0348E35 /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */ = {isa = PBXBuildFile; fileRef = FF3C9978E03645D588A1E5CC /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */; };
		34FD3CD979B0407CB76CBFF2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp */ = {isa = PBXBuildFile; fileRef = BF051AF4297448C5833026AA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp */; };
		35070BF2F81942E5A6F8032B /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */ = {isa = PBXBuildFile; fileRef = CD0DA34120EA471395FD6B8B /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */; };
		3511C440BEED4145A6A5772C /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.hpp */ = {isa = PBXBuildFile; fileRef = 473A50817A1E4823B54C3B54 /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.hpp */; };
		351B29A4B59645FCBF39BDED /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */ = {isa = PBXBuildFile; fileRef = 5AF6ED73AE054396991E44DB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */; };
		351D12C8079440AE8AB3C47F /* /Users/heiner/git/QuantLib/ql/math/interpolations/lagrangeinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 6806019B033B4F77A4719ADB /* /Users/heiner/git/QuantLib/ql/math/interpolations/lagrangeinterpolation.hpp */; };
		3529E5ADD65542959BE6A780 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */ = {isa = PBXBuildFile; fileRef = 285875147BB14525B2B2D5FF /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */; };
		353FC48537834AD990EC864E /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.hpp */ = {isa = PBXBuildFile; fileRef = F0062F403396494A8D953889 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.hpp */; };
		354D373F0A8F4CD89BFF8CB0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp */ = {isa = PBXBuildFile; fileRef = 40EBE8CDAC7240BA91E3E9F6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp */; };
		35561032F5DF42D4BC1008C1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */ = {isa = PBXBuildFile; fileRef = 835B377CB42D467B8373BD12 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */; };
		356D3ED8DF5B41E4A260D0B2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/shoutcondition.hpp */ = {isa = PBXBuildFile; fileRef = BA2E433484CA4A30BE140CF7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/shoutcondition.hpp */; };
		35706356DEA34FE3817DA048 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp */ = {isa = PBXBuildFile; fileRef = C9DBCA7DEDED46D8B52B74C5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp */; };
		357EDE36FBD74FFDA3ED93D1 /* /Users/heiner/git/QuantLib/test-suite/doublebinaryoption.hpp */ = {isa = PBXBuildFile; fileRef = D569AF9941FB4E74A50D7A71 /* /Users/heiner/git/QuantLib/test-suite/doublebinaryoption.hpp */; };
		358B75A22C8E4559B270EF94 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */ = {isa = PBXBuildFile; fileRef = 0952B3D02E44401E9165C1E1 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */; };
		35AB7CEBEA29421EAF652EDE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */ = {isa = PBXBuildFile; fileRef = E9F43C5357ED476FAF55534A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */; };
		35AC0F91CEDF49EAAEDE5CD0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */ = {isa = PBXBuildFile; fileRef = 832F770D781349D9A625DE4F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */; };
		35B5E41526C7433681A9B642 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 3A666167FC2D408785D840FA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp */; };
		35C7FFEABAF640729A87D7E0 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = 99EE3F63D2FE4989880D573B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp */; };
		35E249C9C52E4AA2AE4EF2F3 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365nl.hpp */ = {isa = PBXBuildFile; fileRef = 41F5EE859D2D4D46BBFA72CE /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365nl.hpp */; };
		35E8D59599F4439383F2D885 /* /Users/heiner/git/QuantLib/ql/pricingengine.hpp */ = {isa = PBXBuildFile; fileRef = 1B13EF42B3AA494D98EC83A4 /* /Users/heiner/git/QuantLib/ql/pricingengine.hpp */; };
		35FB86D786B84AEB842EE2F7 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.hpp */ = {isa = PBXBuildFile; fileRef = F27BE73B08494B09942AC256 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.hpp */; };
		36177894D220475BA03BFB40 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */ = {isa = PBXBuildFile; fileRef = 49CA9A72540A48E684DFB178 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */; };
		363B5F41D83A41B1910315D0 /* /Users/heiner/git/QuantLib/test-suite/dividendoption.hpp */ = {isa = PBXBuildFile; fileRef = FCF61BA65ED640ADB43FBCBA /* /Users/heiner/git/QuantLib/test-suite/dividendoption.hpp */; };
		3668CC47566C47658272BB21 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp */ = {isa = PBXBuildFile; fileRef = 6191E18A3F7B4FF9AECD84AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp */; };
		36794296B89440AB8FE7A204 /* /Users/heiner/git/QuantLib/test-suite/pagodaoption.cpp */ = {isa = PBXBuildFile; fileRef = 80110C01DE23457F9F885C4E /* /Users/heiner/git/QuantLib/test-suite/pagodaoption.cpp */; };
		3681F76299CB4702A00EFA7C /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */ = {isa = PBXBuildFile; fileRef = 7407D7A5C64C4D33B6AE6686 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */; };
		36B7E366B69646C7A384232D /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.hpp */ = {isa = PBXBuildFile; fileRef = B3F7AE2F227345D3B7C9C28A /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.hpp */; };
		36B87D8C3C7B4C15B7C366BE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/all.hpp */ = {isa = PBXBuildFile; fileRef = F45C17DB2BDA4925B0FF742E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/all.hpp */; };
		36BC07B0D7804C13A3583B68 /* /Users/heiner/git/QuantLib/ql/config.msvc.hpp */ = {isa = PBXBuildFile; fileRef = B6C45B96BF03486A917A1F32 /* /Users/heiner/git/QuantLib/ql/config.msvc.hpp */; };
		36BF32A89ABC40859024B27F /* /Users/heiner/git/QuantLib/ql/rebatedexercise.hpp */ = {isa = PBXBuildFile; fileRef = F2B2BF3AA94D483D8A5E87EE /* /Users/heiner/git/QuantLib/ql/rebatedexercise.hpp */; };
		36BF5516C76B4C88A4DF9E22 /* /Users/heiner/git/QuantLib/test-suite/nthtodefault.cpp */ = {isa = PBXBuildFile; fileRef = 011322B512404AFDAC3417F9 /* /Users/heiner/git/QuantLib/test-suite/nthtodefault.cpp */; };
		36E26E06AE394D55AAD12AC4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */ = {isa = PBXBuildFile; fileRef = 92674096E13640D2A612156A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */; };
		36E610A2242F4124BFEC5D0A /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */ = {isa = PBXBuildFile; fileRef = F219A0D75A1245D79F709766 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */; };
		36EB89F5E2B443719E1283B8 /* /Users/heiner/git/QuantLib/test-suite/cms.hpp */ = {isa = PBXBuildFile; fileRef = 1AC4302F3C5A4AC383EF6198 /* /Users/heiner/git/QuantLib/test-suite/cms.hpp */; };
		36EC9858435F4DD4ADA32AC0 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */ = {isa = PBXBuildFile; fileRef = FB4F633E5BEA4D8AB8DEB339 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */; };
		36EE73475D8644638DE3ADB2 /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */ = {isa = PBXBuildFile; fileRef = 5F776979E162491A8F5832FA /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */; };
		36F332CF2ACB4A4C8604DD9D /* /Users/heiner/git/QuantLib/ql/methods/lattices/tree.hpp */ = {isa = PBXBuildFile; fileRef = CA47E0CA010B4E3EA149EC15 /* /Users/heiner/git/QuantLib/ql/methods/lattices/tree.hpp */; };
		36F759FD9BF544BE823CB696 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */ = {isa = PBXBuildFile; fileRef = C31F0912709F47C78D051037 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */; };
		36FE4E35DDAA4461B4521B33 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.hpp */ = {isa = PBXBuildFile; fileRef = A055D9FEA8B74F24BB5B4073 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.hpp */; };
		36FFB22EFFD2451F893AAB25 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.hpp */ = {isa = PBXBuildFile; fileRef = FA81CF4115B744F28B4A53E9 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.hpp */; };
		3708341EC89644E490C4D60D /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.hpp */ = {isa = PBXBuildFile; fileRef = 5BB4E8C7266E4C939F4BBD9E /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.hpp */; };
		3711144A89294B73A4027E1A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */ = {isa = PBXBuildFile; fileRef = 6B36C3700F7E40B5A0FD3343 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */; };
		37515C5969D64D1B92C11D53 /* /Users/heiner/git/QuantLib/ql/math/statistics/convergencestatistics.hpp */ = {isa = PBXBuildFile; fileRef = 333899114FD54848922D9826 /* /Users/heiner/git/QuantLib/ql/math/statistics/convergencestatistics.hpp */; };
		3751C31DD3D34B25A6761D48 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */ = {isa = PBXBuildFile; fileRef = 8EBD32A1E1B144659C8F6063 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */; };
		3762FDDE5FF740418357BCBA /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */ = {isa = PBXBuildFile; fileRef = 3E20F86EB846461CB7D25320 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */; };
		3776D41959164EAAADEAC7BB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */ = {isa = PBXBuildFile; fileRef = 0E52370557A241AB91792912 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */; };
		377948131A30480D871F7C4C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelbasissystem.hpp */ = {isa = PBXBuildFile; fileRef = 6707DCC3324F4012B987A330 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelbasissystem.hpp */; };
		378D9866248E44A7A04C6443 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/all.hpp */ = {isa = PBXBuildFile; fileRef = 7513F748FD5948D79F35A4D2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/all.hpp */; };
		379312098AA5492881A8CACD /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = 7377DD6E545F4BDB87FDD2F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp */; };
		37955EE98EE34DC6879E5BF0 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */ = {isa = PBXBuildFile; fileRef = 69DFF5D6C18F448CB0DD51D2 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */; };
		37B3625E913E4CC6A25A14EC /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.hpp */ = {isa = PBXBuildFile; fileRef = 1E8A3B0ABCF640939EEAB97A /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.hpp */; };
		37C29F236F774CBBB1DB7263 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.hpp */ = {isa = PBXBuildFile; fileRef = F0A0BBF8FD614C24AEABDA86 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.hpp */; };
		37C886FE33FE48F09D35C951 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */ = {isa = PBXBuildFile; fileRef = 676375AB27794D88985E83CE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */; };
		37D0E34CFFDD4C68A088AD3C /* /Users/heiner/git/QuantLib/ql/time/calendars/china.hpp */ = {isa = PBXBuildFile; fileRef = 7BD86FA885EB4FB0B442755C /* /Users/heiner/git/QuantLib/ql/time/calendars/china.hpp */; };
		37D407D2806B4325BFC00F0C /* /Users/heiner/git/QuantLib/ql/math/bspline.hpp */ = {isa = PBXBuildFile; fileRef = 8A41B7D571E6416BB158F00A /* /Users/heiner/git/QuantLib/ql/math/bspline.hpp */; };
		37D64BF6646649B38FF00187 /* /Users/heiner/git/QuantLib/test-suite/catbonds.cpp */ = {isa = PBXBuildFile; fileRef = 1575D82E3F8E43ADA64DB162 /* /Users/heiner/git/QuantLib/test-suite/catbonds.cpp */; };
		37D7D794E315442BAD221352 /* /Users/heiner/git/QuantLib/ql/discretizedasset.hpp */ = {isa = PBXBuildFile; fileRef = AC79F51F3AF145D487419820 /* /Users/heiner/git/QuantLib/ql/discretizedasset.hpp */; };
		37E015572A854601916EA335 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */ = {isa = PBXBuildFile; fileRef = D891921273F044059529D75C /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */; };
		37E955998BC6437EBDBD4AC3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = AD78F23E96404A35BAD0FEE3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */; };
		37EBFB5A77B047F39CFE2FC3 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */ = {isa = PBXBuildFile; fileRef = 3CEE8B0128914320B3A7CED3 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */; };
		380D089664EA45EABA96337A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */ = {isa = PBXBuildFile; fileRef = BF17180CE92840D1BD740FFE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */; };
		3813D3F3F0424239BB8BF6F7 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */ = {isa = PBXBuildFile; fileRef = 5E9EF85F576945B283C42341 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */; };
		381D6380C721494387EABA0F /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.hpp */ = {isa = PBXBuildFile; fileRef = 8193B03C1BD748649723983A /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.hpp */; };
		381E81D2F9314CC793755181 /* /Users/heiner/git/QuantLib/ql/time/period.cpp */ = {isa = PBXBuildFile; fileRef = B45AF044834040E292560A02 /* /Users/heiner/git/QuantLib/ql/time/period.cpp */; };
		382B23BB034146A093E3D04B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.hpp */ = {isa = PBXBuildFile; fileRef = 0D56D70D60754A319A00FBC8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.hpp */; };
		382EE2C687BC4BA0A4A5C3CD /* /Users/heiner/git/QuantLib/ql/currencies/asia.hpp */ = {isa = PBXBuildFile; fileRef = B42DA3DC686141E88BB02770 /* /Users/heiner/git/QuantLib/ql/currencies/asia.hpp */; };
		383D9E77173642188B6B6791 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */ = {isa = PBXBuildFile; fileRef = 7F53899859E142AB8614080A /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */; };
		384F621881DF4EDA9C606B97 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.hpp */ = {isa = PBXBuildFile; fileRef = F5CA83EBEBC34228B6FCA862 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.hpp */; };
		3850E986C1124650B5825849 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = E037431804DE4DE0A7EE5464 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */; };
		38569FEDD50B4D4B8A319D2C /* /Users/heiner/git/QuantLib/ql/math/optimization/simulatedannealing.hpp */ = {isa = PBXBuildFile; fileRef = A83E08A8F6564F448E94D471 /* /Users/heiner/git/QuantLib/ql/math/optimization/simulatedannealing.hpp */; };
		38572CA7DBD3401CB42E2E58 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */ = {isa = PBXBuildFile; fileRef = 572ABA19F1F247B98AF71C08 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */; };
		3866A42E71DF4EF09D2358B9 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.hpp */ = {isa = PBXBuildFile; fileRef = 5C468A331C7542AC849AC059 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.hpp */; };
		38716926492B46EA84AA576D /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.hpp */ = {isa = PBXBuildFile; fileRef = 63536535CE0043A2AB099E95 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.hpp */; };
		3879FC77DE394C1F9CABFFEF /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */ = {isa = PBXBuildFile; fileRef = 698ADF91018247D3B7AD9083 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */; };
		387C14A6A2124981BA259D41 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.hpp */ = {isa = PBXBuildFile; fileRef = B366BBF1B7FC45C7A609CF21 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.hpp */; };
		3887B1337C354FD8819A1C4D /* /Users/heiner/git/QuantLib/ql/indexes/inflation/aucpi.hpp */ = {isa = PBXBuildFile; fileRef = AFD824CE80F3491CBBCC3DA9 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/aucpi.hpp */; };
		388DD4B53D154F86948D42AC /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */ = {isa = PBXBuildFile; fileRef = 6A2BA20FE5E74D378AEE89B8 /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */; };
		3899783306C24FEBA3697F4E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */ = {isa = PBXBuildFile; fileRef = F96EBCDBF917478988BCF635 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */; };
		38A731F65EA74F1CB6C85535 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.hpp */ = {isa = PBXBuildFile; fileRef = 0849D80400744B9597DFBC62 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.hpp */; };
		38B7481C65444507B4F22341 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.hpp */ = {isa = PBXBuildFile; fileRef = CB2499D605FE454B95756848 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.hpp */; };
		38C3B85F9D1641219B84AB54 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp */ = {isa = PBXBuildFile; fileRef = 06A8EB4BF2E84EBC8022D1CB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp */; };
		38CD159CF11C4B75AF51BA39 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp */ = {isa = PBXBuildFile; fileRef = CD36B2B92D404DFA925E056C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp */; };
		38CF4BD83626467C889E8439 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.hpp */ = {isa = PBXBuildFile; fileRef = 38BC7835565648D8989DD634 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.hpp */; };
		38E8392409E84798BA94663B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/all.hpp */ = {isa = PBXBuildFile; fileRef = 17D622A8777E4C12946C0D1C /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/all.hpp */; };
		38F604C93D924D16B037BB3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */ = {isa = PBXBuildFile; fileRef = 78B54E1521C142A5B307C1D6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */; };
		38F68790BDAC4BDD9363F0EC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = F218BC79F72B4A8CA1989A01 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */; };
		3918506CA375447FAFBFC63D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = D755BFF3BFE74F0B93A32515 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.hpp */; };
		391AD808C5B74CC8B172E80B /* /Users/heiner/git/QuantLib/ql/time/period.hpp */ = {isa = PBXBuildFile; fileRef = F18FF5ED56734EFA8195BF0D /* /Users/heiner/git/QuantLib/ql/time/period.hpp */; };
		392351C3E2D3483D8E10C71E /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */ = {isa = PBXBuildFile; fileRef = CC78D792F1AE41CF8C98FC17 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */; };
		3935E5A9CBC243C9A8B88DD6 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */ = {isa = PBXBuildFile; fileRef = E29C6027AE71430D9AFFED69 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */; };
		39448A9D82F947488F3A410C /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */ = {isa = PBXBuildFile; fileRef = FFA93C29144544A5ADB04605 /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */; };
		3945DA5F69E44082ADF7EFA1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.hpp */ = {isa = PBXBuildFile; fileRef = 637358957AE64B0E8C6EC351 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.hpp */; };
		394967C4E9884C72829CF9AE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.hpp */ = {isa = PBXBuildFile; fileRef = C3E6B7DCD0054D909A4AF387 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.hpp */; };
		395E13CA0A704B17ACC2D4CE /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.hpp */ = {isa = PBXBuildFile; fileRef = 3D32B8FB0B40482ABB8AF6D9 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.hpp */; };
		39767F4D13EE4D778B1EA3B7 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/nodedata.hpp */ = {isa = PBXBuildFile; fileRef = D425BEFB36E545449F28B9B0 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/nodedata.hpp */; };
		39890058330C414C993B4A9E /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/all.hpp */ = {isa = PBXBuildFile; fileRef = A50970E0440D43F8A0077B17 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/all.hpp */; };
		3991E8AB8B0D4A7AA60E9FEF /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */ = {isa = PBXBuildFile; fileRef = A3A6F4B2DB7B49A6BB0B82DD /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */; };
		399B63617E624C07860388A0 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.hpp */ = {isa = PBXBuildFile; fileRef = F3A35E78FE60479993161E69 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.hpp */; };
		39AD93F6AEB34E689C03788D /* /Users/heiner/git/QuantLib/ql/exercise.cpp */ = {isa = PBXBuildFile; fileRef = 7283676739B9456CA5ACB05A /* /Users/heiner/git/QuantLib/ql/exercise.cpp */; };
		39AE8B657B654C29AD320C68 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp */ = {isa = PBXBuildFile; fileRef = 251405BD0CCB4950A3043BDD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp */; };
		39AFFAEEACBE47BE80DDB80D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.hpp */ = {isa = PBXBuildFile; fileRef = 1A1EC931FD1E45B1AA74E5D4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.hpp */; };
		39B0D24296B543A586D51D5B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 327C595331AF4549BB9270CA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */; };
		39D4B4F9221A445696950F34 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */ = {isa = PBXBuildFile; fileRef = FD13B2695F29448FA596B5DB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */; };
		39D812FAC67B41CDB8174B82 /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */ = {isa = PBXBuildFile; fileRef = 4A169BE801A84DBCB3D70A46 /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */; };
		39E1596F0C5645958268CBBA /* /Users/heiner/git/QuantLib/Examples/ConvertibleBonds/ConvertibleBonds.cpp */ = {isa = PBXBuildFile; fileRef = A91E67067FE446A1A8CF8DCF /* /Users/heiner/git/QuantLib/Examples/ConvertibleBonds/ConvertibleBonds.cpp */; };
		39E4D9EAEC1C4F6BB9F35E95 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 4C4E0521C7914360A867CDB4 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.hpp */; };
		39F2E51071534E6A9181539A /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */ = {isa = PBXBuildFile; fileRef = D87B20EB0AB8493C9AC55C58 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */; };
		39FC69381C5D48FF834E8E59 /* /Users/heiner/git/QuantLib/test-suite/doublebinaryoption.cpp */ = {isa = PBXBuildFile; fileRef = E16A2477F38347ABA500E3D5 /* /Users/heiner/git/QuantLib/test-suite/doublebinaryoption.cpp */; };
		39FD707B8415490888FE9730 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.hpp */ = {isa = PBXBuildFile; fileRef = 3C7F215A8A304DDBBC69FDE2 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.hpp */; };
		3A0C1A36DF07482EB301B8F1 /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */ = {isa = PBXBuildFile; fileRef = 372E09D23E50462CA9A9501B /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */; };
		3A183AFAD9794465923A50F8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */ = {isa = PBXBuildFile; fileRef = D7C9F35152454D0A843A9249 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */; };
		3A234966F3064545B02CB3D8 /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */ = {isa = PBXBuildFile; fileRef = 927053E904A847649DF6CADB /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */; };
		3A2B0471A62C40A5BB785AB5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */ = {isa = PBXBuildFile; fileRef = 424A9F1FDB7B4B91BA560D90 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */; };
		3A3E01785A09437A9B7E159A /* /Users/heiner/git/QuantLib/ql/cashflows/all.hpp */ = {isa = PBXBuildFile; fileRef = 2AB5359DCEC04D65A930C71F /* /Users/heiner/git/QuantLib/ql/cashflows/all.hpp */; };
		3A53D3138B3D421387188B4A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.hpp */ = {isa = PBXBuildFile; fileRef = 0B43CD524F8442079C9CAD88 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.hpp */; };
		3A5F5068B42247B79A1E76E8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */ = {isa = PBXBuildFile; fileRef = 771D60B9D7874692BE1BB1A0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */; };
		3A6A77398ACA44DD85415EA6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */ = {isa = PBXBuildFile; fileRef = 66482DE799F04CB186A1379C /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */; };
		3A7681A06DFE49A18B5A520C /* /Users/heiner/git/QuantLib/ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp */ = {isa = PBXBuildFile; fileRef = 206F4E5D4D0F476796A5DD4F /* /Users/heiner/git/QuantLib/ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp */; };
		3A8494722B1948E4B0FFC73C /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */ = {isa = PBXBuildFile; fileRef = D62FF41162614F19B77385A8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */; };
		3A8552C19FBC453DA67FFE93 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */ = {isa = PBXBuildFile; fileRef = A5B6EB8A6F2948CEB88D9F44 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */; };
		3A8A1E027BC94659B0A4AD73 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.hpp */ = {isa = PBXBuildFile; fileRef = 3D7EFA5BE4A74ED0A38DEFC2 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.hpp */; };
		3A9ACB962BD54FBC862C8054 /* /Users/heiner/git/QuantLib/test-suite/cdsoption.cpp */ = {isa = PBXBuildFile; fileRef = AC6EB7DD846C4381BEC86CBD /* /Users/heiner/git/QuantLib/test-suite/cdsoption.cpp */; };
		3AA409360A39444F9FA485D0 /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */ = {isa = PBXBuildFile; fileRef = EDA0F1F0E1D14B269111157A /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */; };
		3AB5CFC1964140DCA7F94028 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.hpp */ = {isa = PBXBuildFile; fileRef = 9B172FA7B9D440599406EA6E /* /Users/heiner/git/QuantLib/ql/instruments/makecds.hpp */; };
		3ABE94A1B30042409BBC6143 /* /Users/heiner/git/QuantLib/test-suite/fastfouriertransform.hpp */ = {isa = PBXBuildFile; fileRef = 2D98BCF330DD4D73A6AF708C /* /Users/heiner/git/QuantLib/test-suite/fastfouriertransform.hpp */; };
		3ACEBCBC2069432AB904D53D /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.hpp */ = {isa = PBXBuildFile; fileRef = 07730F327D2148778E27BC64 /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.hpp */; };
		3ADF96D2B77944EE921F8C84 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */ = {isa = PBXBuildFile; fileRef = CBA4690E9D224B279A3D46DF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */; };
		3AE813D8A75F444EBB74307C /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp */ = {isa = PBXBuildFile; fileRef = C228DF4AD6D945878A8C969C /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp */; };
		3B05CAD8FB0F4FED8187844A /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */ = {isa = PBXBuildFile; fileRef = 7679F6BA1C46408884ADF32A /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */; };
		3B38288D406A4AC79CDF4D7D /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedconstraint.hpp */ = {isa = PBXBuildFile; fileRef = AD45894BEBFC4666B6645DEC /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedconstraint.hpp */; };
		3B3BDB3EF613465498FDE386 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.hpp */ = {isa = PBXBuildFile; fileRef = 78403B04DFEA48F1AC1FB255 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.hpp */; };
		3B3DCF7A137542A4A1FADBD1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */ = {isa = PBXBuildFile; fileRef = 7E912AB4ED6043E397CB522C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */; };
		3B54B3E079E748DF9D2805AA /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.hpp */ = {isa = PBXBuildFile; fileRef = 072A5694A1C04E8D94ACF486 /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.hpp */; };
		3B5CD5B8679A491A9EE2BDE7 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.hpp */ = {isa = PBXBuildFile; fileRef = 61DCA77A1D5C4E44864A3AFB /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.hpp */; };
		3B5EA4395EE54C7A8FAAE13A /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.hpp */ = {isa = PBXBuildFile; fileRef = D1587B58D50846A68680D6BF /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.hpp */; };
		3B6F6ECAFE88421AB9BE44E4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp */ = {isa = PBXBuildFile; fileRef = 7C042F7B902C48E384BF8179 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp */; };
		3B7278A0FAE14BC890552C8B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplusdminus.hpp */ = {isa = PBXBuildFile; fileRef = 87AC15593DDB41918EA92366 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplusdminus.hpp */; };
		3B97B0EAC9CE4B9FBEC08EA9 /* /Users/heiner/git/QuantLib/test-suite/garch.cpp */ = {isa = PBXBuildFile; fileRef = 7A3EB129542C459097DC2587 /* /Users/heiner/git/QuantLib/test-suite/garch.cpp */; };
		3B9C3A6BC8AF491A9B9F621A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 7A846008A8D545878CACAECB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp */; };
		3BA0A6EAA2BB4D7DA5338161 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */ = {isa = PBXBuildFile; fileRef = 3682C862424D4B7080FCAA99 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */; };
		3BA826F53B1A45E7B02ED4EB /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.hpp */ = {isa = PBXBuildFile; fileRef = 6ADCABF4B98F48E0B0F6C19B /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.hpp */; };
		3BAE656FAA934153961E0A1B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = 361FE08F8A004B28BF026134 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.hpp */; };
		3BBE669D3E1C45D79C3C59D5 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */ = {isa = PBXBuildFile; fileRef = 4B17B77628BA4787B4CE4790 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */; };
		3BC564B9651346FF96AF8363 /* /Users/heiner/git/QuantLib/ql/config.ansi.hpp */ = {isa = PBXBuildFile; fileRef = 21151765720D4ABBBE335ECC /* /Users/heiner/git/QuantLib/ql/config.ansi.hpp */; };
		3BCA806FDDF240D1B4AE3920 /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.hpp */ = {isa = PBXBuildFile; fileRef = 0FE812DDC0B24BAD8C9917DC /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.hpp */; };
		3BCBD5123D6A4F7199990184 /* /Users/heiner/git/QuantLib/ql/experimental/math/levyflightdistribution.hpp */ = {isa = PBXBuildFile; fileRef = 1E93FDC8DFBA435DA3F3EF23 /* /Users/heiner/git/QuantLib/ql/experimental/math/levyflightdistribution.hpp */; };
		3BD89D4AE9664FA88F2B399D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/all.hpp */ = {isa = PBXBuildFile; fileRef = E94CAC1FA4584E49B05263E8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/all.hpp */; };
		3BE71BA7ADD34DAC8F5875EB /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = E7B27B7AD79F4F5480A9AE66 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.hpp */; };
		3BF15A1142B24C9FB30454B0 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.hpp */ = {isa = PBXBuildFile; fileRef = E230681BC2E843D8997DAA71 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.hpp */; };
		3C04AFAE8D4E45169F920FA4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */ = {isa = PBXBuildFile; fileRef = EAC72A209EBF4EBD879037FB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */; };
		3C0D71C798024057B45156AC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */ = {isa = PBXBuildFile; fileRef = E7DE9917168C4E3CB81A7C0A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */; };
		3C13DC03E9E0406D9E98BE09 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */ = {isa = PBXBuildFile; fileRef = 5B672B3282D54C529ABBBDE9 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */; };
		3C1B398B9B084EE9A80BAD7C /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.hpp */ = {isa = PBXBuildFile; fileRef = FD56E4F24C50464EBFFDDC7F /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.hpp */; };
		3C27635D59C0461E95DEB45A /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */ = {isa = PBXBuildFile; fileRef = 8BDDF2DCE3B445E8A18BAB6D /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */; };
		3C2CF2FD989F4D9C89C8F5CC /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.hpp */ = {isa = PBXBuildFile; fileRef = 108A2A65E9ED47F4A65F6A48 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.hpp */; };
		3C314B0C9AEB41EB9BFAE094 /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */ = {isa = PBXBuildFile; fileRef = 6958DD31B8B44033AC41BE72 /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */; };
		3C35B07064594459B1543F7E /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.hpp */ = {isa = PBXBuildFile; fileRef = 93DB0DDA5B94431AA1D064F6 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.hpp */; };
		3C4803CB97D4493185B518B1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = CFBD4D96C2444B0A8FF2CFE0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */; };
		3C4D8977A9224F6981AEDA36 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */ = {isa = PBXBuildFile; fileRef = 8EBCD45A99C647C6B17EC9C7 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */; };
		3C50D19B6A43435DAEABA11B /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = 2AF354BB00BD488DAB66C467 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/all.hpp */; };
		3C55600CA561475B85035243 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp */ = {isa = PBXBuildFile; fileRef = E5267F76D1894ED1B0D8004C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp */; };
		3C5698E5C8D643A19DDC474B /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 7DB34DBC3AB943CE9E8CC53B /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */; };
		3C6796B2385D439FB24101A4 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp */ = {isa = PBXBuildFile; fileRef = B3926A6D01764346B80569F3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp */; };
		3C6B120FDC4B4C9E9DC0A632 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/boxmullergaussianrng.hpp */ = {isa = PBXBuildFile; fileRef = 333878B91C0B4A33BB442A17 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/boxmullergaussianrng.hpp */; };
		3C7BBE4E1C194D26AAB9B9CC /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */ = {isa = PBXBuildFile; fileRef = 1BF2CB93CC6B49D693E5A1D7 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */; };
		3CB1C2F92EA54C419C19AB0A /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = A55A7F02DB82416C8B4862B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */; };
		3CB33BDA53CB4B98A07E305B /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/montecarlomodel.hpp */ = {isa = PBXBuildFile; fileRef = 8F1302D4047E4E9192C336B2 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/montecarlomodel.hpp */; };
		3CB8B4DC17C5475BB347C117 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */ = {isa = PBXBuildFile; fileRef = 6E715C2865C342B9BE4A2E4D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */; };
		3CC7B5C39CC34C5691F46626 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.hpp */ = {isa = PBXBuildFile; fileRef = F42A4630C5DA424A9195DDAD /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.hpp */; };
		3CC91CEC8B884C46806D707F /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */ = {isa = PBXBuildFile; fileRef = 2213E0A77CC2405EA8C4F68A /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */; };
		3CE51AC416E94E41BBF5556A /* /Users/heiner/git/QuantLib/test-suite/variancegamma.cpp */ = {isa = PBXBuildFile; fileRef = 5E0770BBEFA64A7791C17C48 /* /Users/heiner/git/QuantLib/test-suite/variancegamma.cpp */; };
		3D1F64FD828E4307B25E3D4D /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitycube.cpp */ = {isa = PBXBuildFile; fileRef = 53BBB262D97E4C2F885678C9 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitycube.cpp */; };
		3D1FE607E92849868DB54A27 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */ = {isa = PBXBuildFile; fileRef = DE48C6135C6E4CD99B6F2446 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */; };
		3D323364DCCE418FBBBBD6A9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = 00B06501E25C4E5B9AC975B3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */; };
		3D3D55E1195F44DDB3BEBE51 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.hpp */ = {isa = PBXBuildFile; fileRef = 76D8FE90C6B34542ACBB13D1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.hpp */; };
		3D48D1DB254E4AEDBF255304 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.hpp */ = {isa = PBXBuildFile; fileRef = 51D09216064146E2B4985B19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.hpp */; };
		3D7C365F26BF45319355696D /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */ = {isa = PBXBuildFile; fileRef = 4A4372295DB04E3488DAE567 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */; };
		3D8FD6F097C941829B5486B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */ = {isa = PBXBuildFile; fileRef = 1B33A2D63FEF4F8A8DCDDA96 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */; };
		3D98853CD33E4BB68941C29D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 3A20C54AF5284B33990E1482 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.hpp */; };
		3DB45DF7FA7A4C419CB28287 /* /Users/heiner/git/QuantLib/test-suite/operators.cpp */ = {isa = PBXBuildFile; fileRef = 31E8F6FF4B8E43F9BD9FB233 /* /Users/heiner/git/QuantLib/test-suite/operators.cpp */; };
		3DB65DDED97C4FECAA558F64 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.hpp */ = {isa = PBXBuildFile; fileRef = 1951B2665DA04087BAA558E9 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.hpp */; };
		3DBF1FDD87684087B652CD8F /* /Users/heiner/git/QuantLib/Examples/CallableBonds/CallableBonds.cpp */ = {isa = PBXBuildFile; fileRef = E01D76F0C9214006B38FB79A /* /Users/heiner/git/QuantLib/Examples/CallableBonds/CallableBonds.cpp */; };
		3DC34637B1174F41A5FA4EA4 /* /Users/heiner/git/QuantLib/test-suite/inflationcpicapfloor.hpp */ = {isa = PBXBuildFile; fileRef = FD2E123CB7AF414CBABCB82C /* /Users/heiner/git/QuantLib/test-suite/inflationcpicapfloor.hpp */; };
		3DE858C3591D4706BE4E7C01 /* /Users/heiner/git/QuantLib/test-suite/swap.cpp */ = {isa = PBXBuildFile; fileRef = 5E42D0DB3BED4AE39C36726A /* /Users/heiner/git/QuantLib/test-suite/swap.cpp */; };
		3DFA604045974A99AAE76FDD /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */ = {isa = PBXBuildFile; fileRef = 7DAFA9E94D57421987D4D9A7 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */; };
		3DFB6A1DC5F346EEAF5D3960 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp */ = {isa = PBXBuildFile; fileRef = 4F1197A0E77E4C3BAD541D49 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp */; };
		3E0A84B43299472AA1EB7816 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */ = {isa = PBXBuildFile; fileRef = EDE5249095BC4B6D936CBC58 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */; };
		3E198B3982104E8D974F671C /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.hpp */ = {isa = PBXBuildFile; fileRef = E51A1E04FC25433EA969CD3E /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.hpp */; };
		3E6CC8D394424925AA81AD29 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */ = {isa = PBXBuildFile; fileRef = EEECE02EA8AE43DB8C3415B8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */; };
		3E757B919091451988C23EC3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp */ = {isa = PBXBuildFile; fileRef = B4B3E332F6FC456682BE49CF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp */; };
		3E7A6F2963BF4E0089730660 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 3E8A186DE54142959B179C1E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */; };
		3E7DF527874E439FA7FF0E6E /* /Users/heiner/git/QuantLib/ql/math/interpolations/interpolation2d.hpp */ = {isa = PBXBuildFile; fileRef = 83FC8104A91C45BA9041B312 /* /Users/heiner/git/QuantLib/ql/math/interpolations/interpolation2d.hpp */; };
		3E8069391F764B70898B9C0B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.hpp */ = {isa = PBXBuildFile; fileRef = 47ADC69DD0CF4B61B64270B2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.hpp */; };
		3E84EA7FC312459DA7A98792 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodelprocess.cpp */ = {isa = PBXBuildFile; fileRef = 9D3A57C33B4347D89D37E4A0 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodelprocess.cpp */; };
		3EA1F192846C4237812CE6B8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.hpp */ = {isa = PBXBuildFile; fileRef = 1359BFEB792E45E78DD569E1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.hpp */; };
		3EA60B63E60D46ABB410BED0 /* /Users/heiner/git/QuantLib/ql/models/shortrate/all.hpp */ = {isa = PBXBuildFile; fileRef = E58861BDE79D44699C0DB610 /* /Users/heiner/git/QuantLib/ql/models/shortrate/all.hpp */; };
		3EB267E6C89A477FA27BBB2E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.hpp */ = {isa = PBXBuildFile; fileRef = D8696C7972C74D85B799E540 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.hpp */; };
		3EEB84EAAC194B2C957A1E5F /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.hpp */ = {isa = PBXBuildFile; fileRef = 6831DB4CCB724D679A11772C /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.hpp */; };
		3EF575BF04CA4498881C48B4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 7DDF87A1AB2C44B1AF335DD5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.hpp */; };
		3F1F46DE4B454F2F910CEA7F /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */ = {isa = PBXBuildFile; fileRef = A6957B966E7F47859068AD8B /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */; };
		3F26C0C4812744CE9B5FE7E8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */ = {isa = PBXBuildFile; fileRef = A76CEEFC07CE497398A97DCA /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */; };
		3F27C7680BAC4195ADC5E3AB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/all.hpp */ = {isa = PBXBuildFile; fileRef = D3A3CE421AA64B4F804BC1B1 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/all.hpp */; };
		3F36E67642754E6C99C829C8 /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */ = {isa = PBXBuildFile; fileRef = 7C2910C6E8FE4869988117EF /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */; };
		3F5F5F8968F04A849927FB6A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */ = {isa = PBXBuildFile; fileRef = C6201A04ABE64E12904908DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */; };
		3F703FEECD3448DB8DC1071A /* /Users/heiner/git/QuantLib/ql/index.hpp */ = {isa = PBXBuildFile; fileRef = 0D53F7091D864E9FAB11327C /* /Users/heiner/git/QuantLib/ql/index.hpp */; };
		3F7EE45A26664086AAFDD05E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp */ = {isa = PBXBuildFile; fileRef = C13C294210B24A57B86C405F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp */; };
		3FBCAE79E64C4A3BBC988FFB /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */ = {isa = PBXBuildFile; fileRef = 03BD90E3E48143CBAE3FF9ED /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */; };
		3FBDDA75EC724F63BB16B890 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */ = {isa = PBXBuildFile; fileRef = 585557000CF04A4D982FD37F /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */; };
		3FC69921891540A398B7F044 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.hpp */ = {isa = PBXBuildFile; fileRef = 0BC2285720CE438FB14CA5F1 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.hpp */; };
		3FDDCEEC2A71438B82CE5F57 /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */ = {isa = PBXBuildFile; fileRef = FADBE2EC163744D792A81300 /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */; };
		3FE04C92546F406D8F7413CF /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.hpp */ = {isa = PBXBuildFile; fileRef = 9FC43D729DDC4EAFBFA0931D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.hpp */; };
		3FE2CD29811F4F6392123E9F /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.hpp */ = {isa = PBXBuildFile; fileRef = B59DDE1136BA4041B2F5DFFE /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.hpp */; };
		3FE863507CC141E89B278333 /* /Users/heiner/git/QuantLib/test-suite/extensibleoptions.hpp */ = {isa = PBXBuildFile; fileRef = E347569198F54A9E8A3CAD94 /* /Users/heiner/git/QuantLib/test-suite/extensibleoptions.hpp */; };
		3FE94898903D4DC1BC39EEB5 /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */ = {isa = PBXBuildFile; fileRef = 86B481A072BA457BA4B4B9EF /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */; };
		3FFB985E249F4A97B1D1FE7A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */ = {isa = PBXBuildFile; fileRef = FA22AF0AF2A249C7B0CC5D08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */; };
		4014F6A8DEA94CAA96683CB1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/centrallimitgaussianrng.hpp */ = {isa = PBXBuildFile; fileRef = D0F2B20110BF4DAB800B0D71 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/centrallimitgaussianrng.hpp */; };
		401E4D9B6A8F47A69B296F3B /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.hpp */ = {isa = PBXBuildFile; fileRef = 809B732F5A0F445BB7361F0A /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.hpp */; };
		401EEB0DCA7B453F84B911C3 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.hpp */ = {isa = PBXBuildFile; fileRef = 9BE4659E38C6444DBA30281F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.hpp */; };
		4039DB48194041CC9295D9A4 /* /Users/heiner/git/QuantLib/ql/math/interpolations/extrapolation.hpp */ = {isa = PBXBuildFile; fileRef = EC0F380776C44333B4160297 /* /Users/heiner/git/QuantLib/ql/math/interpolations/extrapolation.hpp */; };
		40405F81024447129C4B532F /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.hpp */ = {isa = PBXBuildFile; fileRef = FF115E5ED538463985FE53CA /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.hpp */; };
		405042B648334E53A5958B5B /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.hpp */ = {isa = PBXBuildFile; fileRef = C2A21C2D3A154E12B8D76AF8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.hpp */; };
		405C13F65E244CE89C253E9F /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */ = {isa = PBXBuildFile; fileRef = CBC2955EBA19438196C530E1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */; };
		4061D33B4CCA4D94B9DB6A80 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.hpp */ = {isa = PBXBuildFile; fileRef = 2A49F523811646918D43CB5F /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.hpp */; };
		40671E9FB07E4D22AAD12EF6 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp */ = {isa = PBXBuildFile; fileRef = 77C820D3F00C448881A9C02D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp */; };
		4077A51982E64C2C8C42ECF4 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.hpp */ = {isa = PBXBuildFile; fileRef = 520F78132EA4473991ECE4FD /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.hpp */; };
		407F8EEF50D84F10B7E14CE6 /* /Users/heiner/git/QuantLib/ql/math/solver1d.hpp */ = {isa = PBXBuildFile; fileRef = 3A89A171F63A41068EF9A36F /* /Users/heiner/git/QuantLib/ql/math/solver1d.hpp */; };
		409BAE3F8DE54344881281A6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp */ = {isa = PBXBuildFile; fileRef = CCCEE106382E41BBB23F98E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp */; };
		40A4AE8464AB4A0F8187F1BF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */ = {isa = PBXBuildFile; fileRef = D16ABEE23A6A43509563EF47 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */; };
		40A557E871D64461B259D115 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.hpp */ = {isa = PBXBuildFile; fileRef = E9CFA560B0BB41BBAAF4432F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.hpp */; };
		40ABA5BDC38B491482998FE5 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.hpp */ = {isa = PBXBuildFile; fileRef = 81EF894CCCF44B729AB4DEC2 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.hpp */; };
		40ADE8BDE7404D20AD1E22A9 /* /Users/heiner/git/QuantLib/test-suite/swaption.cpp */ = {isa = PBXBuildFile; fileRef = FDDEDFFA4AF34E2E981A19E3 /* /Users/heiner/git/QuantLib/test-suite/swaption.cpp */; };
		40C4F37828E44972AA13E9B8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */ = {isa = PBXBuildFile; fileRef = E0E5635A6E7D49C6A3E5EC62 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */; };
		40C99A7B0EC947928EAA3C44 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.hpp */ = {isa = PBXBuildFile; fileRef = A8D0D33F7C5646598DF218AE /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.hpp */; };
		40CC11A48A454BB99BB7E812 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = 860AFA67EE9145EAAF4541FC /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */; };
		40CD301D1D46459E923A18E3 /* /Users/heiner/git/QuantLib/test-suite/cdsoption.hpp */ = {isa = PBXBuildFile; fileRef = 2B993FF48EF04DF08687D1AA /* /Users/heiner/git/QuantLib/test-suite/cdsoption.hpp */; };
		40E3BEA3DE404E2DBDF50B05 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.hpp */ = {isa = PBXBuildFile; fileRef = A3AF4C06BC094C0B97ACBBDB /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.hpp */; };
		40E7DAFFD68C4CE293F53449 /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */ = {isa = PBXBuildFile; fileRef = C5B288C3FEDC483C977FE774 /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */; };
		40F1034F422D42649A3CB430 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 49474A684FCE4588B4489775 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp */; };
		40F25976F1844594AA8B643D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */ = {isa = PBXBuildFile; fileRef = FD6C5D1C2FB947439197C3DB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */; };
		4100E9B54D0F4120978BB7C2 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.hpp */ = {isa = PBXBuildFile; fileRef = F1B7B8C859534C1FA130417D /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.hpp */; };
		410CF7668AA943FD9BC61816 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */ = {isa = PBXBuildFile; fileRef = 4442AA8303F54801A90374D3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */; };
		410E5AC67B434D3A8C36826D /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = DD21D378B9E545E9B1651A6F /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/all.hpp */; };
		41600BD7863B49C4AA86338E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp */ = {isa = PBXBuildFile; fileRef = 146C48D7C331467487A77D84 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp */; };
		4179538C85854CE18B8E029D /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */ = {isa = PBXBuildFile; fileRef = 9952D2BE28054A1E822441DA /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */; };
		4183D7BB477647A2AA965145 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerator.hpp */ = {isa = PBXBuildFile; fileRef = 35F4DBE470914F1F9436A55A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerator.hpp */; };
		4196E78684A14E0EBCCFCF88 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.hpp */ = {isa = PBXBuildFile; fileRef = 081B5F1116444E1083BB000F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.hpp */; };
		41A05A411A494889963F1495 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultlossmodel.hpp */ = {isa = PBXBuildFile; fileRef = 7D242C8B6EAF4D3D8E02FDA2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultlossmodel.hpp */; };
		41A589D272A34D43A81EE4D3 /* /Users/heiner/git/QuantLib/ql/quotes/compositequote.hpp */ = {isa = PBXBuildFile; fileRef = 3B1091D647EB46BC84900281 /* /Users/heiner/git/QuantLib/ql/quotes/compositequote.hpp */; };
		41A96485980C4334B83CFBD9 /* /Users/heiner/git/QuantLib/ql/time/all.hpp */ = {isa = PBXBuildFile; fileRef = CC4967E508154FB8957494B1 /* /Users/heiner/git/QuantLib/ql/time/all.hpp */; };
		41AA071DF79044B1805C1BDA /* /Users/heiner/git/QuantLib/Examples/MultidimIntegral/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 57EDA17ACADD4EA3A4F31601 /* /Users/heiner/git/QuantLib/Examples/MultidimIntegral/CMakeLists.txt */; };
		41B7AF8ACED74260BC1D1AF0 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */ = {isa = PBXBuildFile; fileRef = A5A072B90DDB4E3E9C9D0871 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */; };
		41B7B2B34276454E9E7A5F20 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */ = {isa = PBXBuildFile; fileRef = C068828EFF9942E38F58DE24 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */; };
		41DDB3BC82664FCDBDA7CC44 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/all.hpp */ = {isa = PBXBuildFile; fileRef = 09161D2503254CAE8829ED4D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/all.hpp */; };
		41E0BCC9C3DC433E97A98A11 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */ = {isa = PBXBuildFile; fileRef = 465568E45B5246C380CEFD40 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */; };
		41E1D0F6798A48AD9EC07A1C /* /Users/heiner/git/QuantLib/test-suite/pathgenerator.cpp */ = {isa = PBXBuildFile; fileRef = 4CD63DA209E540DF900C4034 /* /Users/heiner/git/QuantLib/test-suite/pathgenerator.cpp */; };
		41E58C02B4774D0A979B0519 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/zacpi.hpp */ = {isa = PBXBuildFile; fileRef = 37731B643F4F455DADF13A50 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/zacpi.hpp */; };
		41EC513772CB4C32AA3B8854 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathpayoff.hpp */ = {isa = PBXBuildFile; fileRef = 375F4E73DAE24A0DB23C8BBE /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathpayoff.hpp */; };
		41ED3F5B56254BA19274E346 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.hpp */ = {isa = PBXBuildFile; fileRef = 1A12974C2FCB4EE783F348CD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.hpp */; };
		41EE2AA9850C4908B6D3EEC2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */ = {isa = PBXBuildFile; fileRef = F8040D80FE9A423E9BD33EB6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */; };
		41FABC760E9641D3AF746113 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.hpp */ = {isa = PBXBuildFile; fileRef = 572BAA5CF491423FB04A8D13 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.hpp */; };
		42027C2AD599461DBDBFAF7F /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */ = {isa = PBXBuildFile; fileRef = EAA5B23B68E547789FB2F4BD /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */; };
		42045F366A0643CEA4D3A134 /* /Users/heiner/git/QuantLib/Examples/BasketLosses/BasketLosses.cpp */ = {isa = PBXBuildFile; fileRef = 46B6AC528BC64A1A9B1CE76A /* /Users/heiner/git/QuantLib/Examples/BasketLosses/BasketLosses.cpp */; };
		421A832BB6EF4C809BB77A2E /* /Users/heiner/git/QuantLib/test-suite/autocovariances.hpp */ = {isa = PBXBuildFile; fileRef = F2874767D0374579AB2258A7 /* /Users/heiner/git/QuantLib/test-suite/autocovariances.hpp */; };
		4226B2143D4249C78896ED43 /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */ = {isa = PBXBuildFile; fileRef = FB7CDD4BF26944E29E3567CE /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */; };
		42311FA3772A4EEEA77B5368 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */ = {isa = PBXBuildFile; fileRef = 719C23BA8DAC4402A260E2B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */; };
		423CAA82A748434BAD3D6BA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.hpp */ = {isa = PBXBuildFile; fileRef = A8C5176479EC44BE96EE549D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.hpp */; };
		424DEF0556144526A22E8006 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */ = {isa = PBXBuildFile; fileRef = 3DA8205E575C42FFA3CDC9CC /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */; };
		426357C9C7CF43C8B677C4FD /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */ = {isa = PBXBuildFile; fileRef = 497E45DED7DE40B79786FDCF /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */; };
		42659CC39C194F9CAA6A7876 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */ = {isa = PBXBuildFile; fileRef = 9281C7E1A4324830ACFFF707 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */; };
		4279B663ADA64F6E9A8FE62A /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */ = {isa = PBXBuildFile; fileRef = 5939D2A93DBE46C68AF19DD5 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */; };
		42882AB96EF4466EB18147A5 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */ = {isa = PBXBuildFile; fileRef = 37F77142CAD2472C9F82F26F /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */; };
		42B839BAAEC047579911B6EF /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */ = {isa = PBXBuildFile; fileRef = BFA4EB7012C34C84A52BFA50 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */; };
		42C294ABCE914F4FB41D17F2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */ = {isa = PBXBuildFile; fileRef = 529517A83B9D4013BDDB9B18 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */; };
		42CB86D4A1C84CC5A6381C6A /* /Users/heiner/git/QuantLib/ql/mathconstants.hpp */ = {isa = PBXBuildFile; fileRef = 968AE0CCB3F747119D63C3F4 /* /Users/heiner/git/QuantLib/ql/mathconstants.hpp */; };
		42CBEE1003374A199BFFFEBB /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */ = {isa = PBXBuildFile; fileRef = 565EE622F2764DF6B36A5728 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */; };
		42DE69B7A22E415EB1F7A379 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */ = {isa = PBXBuildFile; fileRef = 5DF4A5F984CB4242BEA4652D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */; };
		42EC75745E304D34B80C0A08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.hpp */ = {isa = PBXBuildFile; fileRef = CAF901D04E9B44438E541BB7 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.hpp */; };
		42F155421F214390B5676951 /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */ = {isa = PBXBuildFile; fileRef = 0167FEE795424BEDA8BAEECD /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */; };
		42F21565C6A5472FADD0D85C /* /Users/heiner/git/QuantLib/ql/math/interpolations/lagrangeinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = CA2CB2DA94E048B0BD9EA5F1 /* /Users/heiner/git/QuantLib/ql/math/interpolations/lagrangeinterpolation.hpp */; };
		42F49581E3B74DB291905F4A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolver.hpp */ = {isa = PBXBuildFile; fileRef = 5BD0B787906641EDB8A60644 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolver.hpp */; };
		431737C7C1EF4B789F8F7312 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dzero.hpp */ = {isa = PBXBuildFile; fileRef = 7ECB224FCEB34C4C8176E889 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dzero.hpp */; };
		4319D179F0884078AB8D835A /* /Users/heiner/git/QuantLib/test-suite/squarerootclvmodel.cpp */ = {isa = PBXBuildFile; fileRef = BF268E2861134FD5B5452B13 /* /Users/heiner/git/QuantLib/test-suite/squarerootclvmodel.cpp */; };
		4338B96AABFC4E32AA247AB5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp */ = {isa = PBXBuildFile; fileRef = F9EC573C03B4414AB0598957 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp */; };
		434F542054224E0ABBB85071 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.hpp */ = {isa = PBXBuildFile; fileRef = 7983D5F7B2884DBAB337F70E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.hpp */; };
		435A57AA0BB8423AAC1D98B1 /* /Users/heiner/git/QuantLib/test-suite/volatilitymodels.cpp */ = {isa = PBXBuildFile; fileRef = 7FF7CF070D0046FEBB685444 /* /Users/heiner/git/QuantLib/test-suite/volatilitymodels.cpp */; };
		4369A790CF324E7681634B3C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparsematrix.hpp */ = {isa = PBXBuildFile; fileRef = 9DA93E5C6E034FD486530ECF /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparsematrix.hpp */; };
		4372EC1ED3AF4C2287668375 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */ = {isa = PBXBuildFile; fileRef = 8A5DCC14C3884722B5754682 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */; };
		437B921DF3574447AEC301B8 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.hpp */ = {isa = PBXBuildFile; fileRef = D55EB8E6210A4E36B567D816 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.hpp */; };
		438BC11FD7E145D0A9ED15E2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp */ = {isa = PBXBuildFile; fileRef = 8A05E7CA689947C6980E8FBD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp */; };
		43900D8C14114ECE9FB5E09B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/trbdf2.hpp */ = {isa = PBXBuildFile; fileRef = 2873B7CD32184D4D974D7C13 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/trbdf2.hpp */; };
		43968E708B1D49768E0BDE59 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.hpp */ = {isa = PBXBuildFile; fileRef = 215C7BD962724D1E8385DF38 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.hpp */; };
		439711E5A77547FF867A0974 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 842C5AF009A74FB381E95A65 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */; };
		43A8F64BEFB84B0EB0F75681 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.hpp */ = {isa = PBXBuildFile; fileRef = A201586FE2E84FEE9CE245DE /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.hpp */; };
		43A99C11F7FA45CAAE0A4F55 /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.hpp */ = {isa = PBXBuildFile; fileRef = 82205B895B63492E8881520C /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.hpp */; };
		43BE473FFD1D4A0785E42909 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */ = {isa = PBXBuildFile; fileRef = 852BABF09DED4C4CB9BE9695 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */; };
		43C43833C2DE4BD3B8618CB0 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp */ = {isa = PBXBuildFile; fileRef = 55564DEC7BFE4AA4B38C7FB5 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp */; };
		43E59EDB0796417AB64AA02E /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */ = {isa = PBXBuildFile; fileRef = 4B3DBC03067E4B83969A1A08 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */; };
		43F1F5343DC34378BB8FC201 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = F0BBD7CFF1B143999DA3CEF6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp */; };
		43FE364786BF4020AEF718C5 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.hpp */ = {isa = PBXBuildFile; fileRef = 8890E648DDB94CBAB626AAEF /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.hpp */; };
		44069D9E8F4E488C8756DE1C /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */ = {isa = PBXBuildFile; fileRef = 30B07F96A6FF411D838643E4 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */; };
		4419E6FFF4CC4E82B981248D /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */ = {isa = PBXBuildFile; fileRef = D06672A665054D34A66AE6A8 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */; };
		442865E175244A99958C71FB /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */ = {isa = PBXBuildFile; fileRef = FC5F012F03314820A43B9910 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */; };
		442DF6B8306E41BE8707A716 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */ = {isa = PBXBuildFile; fileRef = 457C2DA32EB940BCAF27B54E /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */; };
		4432D83A40CC4B86A5A4F968 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 96851528B8DC47C3B662C064 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.hpp */; };
		44332D7CECA74AFBA6A87D92 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/gbplibor.hpp */ = {isa = PBXBuildFile; fileRef = 7830BFB617C04967B5925F47 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/gbplibor.hpp */; };
		4437A244541D4B5A861C3ED0 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */ = {isa = PBXBuildFile; fileRef = 67A3D3D56CAB44A1B8527B31 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */; };
		444038744D024EA8A1477B1D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextousolver.hpp */ = {isa = PBXBuildFile; fileRef = C3D06DBCE29641219AE71B0F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextousolver.hpp */; };
		444B456ABB5249FFB9392EC1 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = 3E406993298E45B799B76BAC /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */; };
		44509B3019E5424385DEA5AD /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.hpp */ = {isa = PBXBuildFile; fileRef = 562F114C8C1745A4926FE890 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.hpp */; };
		4470D8DA30EC48CC9F28EB63 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */ = {isa = PBXBuildFile; fileRef = 1FCE8BF209694961959F9E19 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */; };
		447A693DEBBB4CC8AC2F1597 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */ = {isa = PBXBuildFile; fileRef = E1EC998672FE47BCACDAB154 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */; };
		447C879F51B34BF3B76560BC /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */ = {isa = PBXBuildFile; fileRef = C3A58563E630447BAA571AA8 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */; };
		4490D4A36D9243D2B6295DE7 /* /Users/heiner/git/QuantLib/ql/errors.hpp */ = {isa = PBXBuildFile; fileRef = 48AB6467023347D4BC7B5531 /* /Users/heiner/git/QuantLib/ql/errors.hpp */; };
		44A14D9C074D4D61801EF9F1 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.hpp */ = {isa = PBXBuildFile; fileRef = 56FDE15BF35F47F1B99F59B3 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.hpp */; };
		44A8565208D0494B99F2E551 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp */ = {isa = PBXBuildFile; fileRef = 9033C7B09FE347AB8986C351 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp */; };
		44B87F6C4DC74F6392384086 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.hpp */ = {isa = PBXBuildFile; fileRef = 8ADA69FCE6044366AF367DC0 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.hpp */; };
		44D89240990847EFA2456092 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/earlyexercisepathpricer.hpp */ = {isa = PBXBuildFile; fileRef = 6BE416D054514507974B07D4 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/earlyexercisepathpricer.hpp */; };
		450FF694204B40D690717BAB /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.hpp */ = {isa = PBXBuildFile; fileRef = 4EAB2298D39B42D89E47988B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.hpp */; };
		4511C6D6328046AE9BC6CF91 /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */ = {isa = PBXBuildFile; fileRef = 479E02AFB8E04E278744799E /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */; };
		45287253DCA54E2895796722 /* /Users/heiner/git/QuantLib/ql/volatilitymodel.hpp */ = {isa = PBXBuildFile; fileRef = 39462BF62D7B468F80B35A3C /* /Users/heiner/git/QuantLib/ql/volatilitymodel.hpp */; };
		452D0F2064104FF181DF01D5 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 533DD3A7D08A4DE4B4E3CE65 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolation.hpp */; };
		452F0C9975304763979CE499 /* /Users/heiner/git/QuantLib/ql/config.sun.hpp */ = {isa = PBXBuildFile; fileRef = 8A928DB22A3140BFAA27A7AC /* /Users/heiner/git/QuantLib/ql/config.sun.hpp */; };
		4534CB8648F2400BB0D43ECC /* /Users/heiner/git/QuantLib/test-suite/schedule.hpp */ = {isa = PBXBuildFile; fileRef = 4DB8CBB154B9453EAB3B2517 /* /Users/heiner/git/QuantLib/test-suite/schedule.hpp */; };
		4544FDCD4FF841579480B12A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 97B7EC46C5EE4FA196CE941E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp */; };
		454CE7FDD3164B02BE9C0EE4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp */ = {isa = PBXBuildFile; fileRef = 23F82CCB7BA74F07A82739C2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp */; };
		4551423AE2C34BF1921DF3BB /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */ = {isa = PBXBuildFile; fileRef = 23638F6BEDED48C7A83A802C /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */; };
		456362DD795440B89CE8D481 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.hpp */ = {isa = PBXBuildFile; fileRef = 17BD6BB578C24F07852F92DA /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.hpp */; };
		4578FDA45009455D9B2D08A0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.hpp */ = {isa = PBXBuildFile; fileRef = BF597126D2CD48C0B88FD74B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.hpp */; };
		4587D0C564D349F68103DC6A /* /Users/heiner/git/QuantLib/ql/utilities/clone.hpp */ = {isa = PBXBuildFile; fileRef = 94B3814AA29E4E299C9F2EDF /* /Users/heiner/git/QuantLib/ql/utilities/clone.hpp */; };
		45A6587AA6B3493FBD11813E /* /Users/heiner/git/QuantLib/ql/math/ode/adaptiverungekutta.hpp */ = {isa = PBXBuildFile; fileRef = CBA839F351B14FD6A3A17154 /* /Users/heiner/git/QuantLib/ql/math/ode/adaptiverungekutta.hpp */; };
		45A763679AC9495FA266BCD6 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */ = {isa = PBXBuildFile; fileRef = CDEC498029624FC491CC7813 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */; };
		45BAC1FA0D1B430C8AE87712 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.hpp */ = {isa = PBXBuildFile; fileRef = FAD58312BADE4E4EB4F0D91D /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.hpp */; };
		45D97C4CB1CD47868324ACDE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp */ = {isa = PBXBuildFile; fileRef = 28EB960C9E2F4445872383D0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp */; };
		45DECA197713415D811445ED /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.hpp */ = {isa = PBXBuildFile; fileRef = 0B0E71A5D00941D6A5BFEE7F /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.hpp */; };
		45E2FA060D51437DBB35056F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp */ = {isa = PBXBuildFile; fileRef = 7EC12C696FD84A5FB5096461 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp */; };
		4602B0D3BD00449BB031CFF8 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */ = {isa = PBXBuildFile; fileRef = D47D9D9608164FBABAC1D1DB /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */; };
		46373C6C8DBA4400B1933614 /* /Users/heiner/git/QuantLib/test-suite/overnightindexedswap.cpp */ = {isa = PBXBuildFile; fileRef = 1E3E152024CA4AB8B871AE91 /* /Users/heiner/git/QuantLib/test-suite/overnightindexedswap.cpp */; };
		463954BE70654293BC3EB0AC /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp */ = {isa = PBXBuildFile; fileRef = 11A01B4F11324BE2B680849A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp */; };
		463D2E7AA17249D9B8FD8C59 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.hpp */ = {isa = PBXBuildFile; fileRef = D947BCA7DFC84F138AF1BDB2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.hpp */; };
		46454F161D764F669FD4D1C4 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */ = {isa = PBXBuildFile; fileRef = 66AC20E0DF124840B0D501E6 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */; };
		4645B32425484A32940FC7FF /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */ = {isa = PBXBuildFile; fileRef = BA6E31F8583A4A699541D733 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */; };
		464DCFDED71848B597BF17BD /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 3B9C373CD44C4A17A52FEF05 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */; };
		4663E9CF4DC34FB2B2B1E8C2 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */ = {isa = PBXBuildFile; fileRef = E1AB727DC5DD458F9DA602D9 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */; };
		467592D54DF84DC8ADDC6CBC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.hpp */ = {isa = PBXBuildFile; fileRef = 509E6362B324492BAF5ED606 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.hpp */; };
		467A094307C144E69FC2A561 /* /Users/heiner/git/QuantLib/test-suite/zabr.cpp */ = {isa = PBXBuildFile; fileRef = 8220A71324A04FC7ABA27116 /* /Users/heiner/git/QuantLib/test-suite/zabr.cpp */; };
		468F88240AD3431EAB1F30CE /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */ = {isa = PBXBuildFile; fileRef = 5B6BE408A14944BE81C4C287 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */; };
		46967EE1358745B0B0A0A977 /* /Users/heiner/git/QuantLib/test-suite/asianoptions.hpp */ = {isa = PBXBuildFile; fileRef = C598B98A420B4F86823CFECE /* /Users/heiner/git/QuantLib/test-suite/asianoptions.hpp */; };
		46A005EF32D147E0A2B099BD /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.hpp */ = {isa = PBXBuildFile; fileRef = B50F0F3B039945A4A117AC68 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.hpp */; };
		46AFB624B86E4705A74E28AD /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/exercisestrategy.hpp */ = {isa = PBXBuildFile; fileRef = C26361DA785D48BCBA2B3301 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/exercisestrategy.hpp */; };
		46B8249EB4B14D0791213D9E /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */ = {isa = PBXBuildFile; fileRef = 21832C57373E47919CC254C4 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */; };
		46BC5F85624A4D1DA0F81D92 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */ = {isa = PBXBuildFile; fileRef = 149E40C0F2544AF892287577 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */; };
		46D4A708874C4B689E8F8AB1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationlossmodel.hpp */ = {isa = PBXBuildFile; fileRef = CA13E94B6F504640BEA07797 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationlossmodel.hpp */; };
		46E5EDFAF0A94F1E95C19C98 /* /Users/heiner/git/QuantLib/ql/prices.hpp */ = {isa = PBXBuildFile; fileRef = 6E89628B785848649872342A /* /Users/heiner/git/QuantLib/ql/prices.hpp */; };
		46E887E673FB448190AE5336 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.hpp */ = {isa = PBXBuildFile; fileRef = 47CB28B18F1E4D32870EDE68 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.hpp */; };
		46EFF57419B1406F887792AF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp */ = {isa = PBXBuildFile; fileRef = B794DF8B11024636AD8C82F3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp */; };
		46FEDE761CB84440B0BC94C5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.hpp */ = {isa = PBXBuildFile; fileRef = CF6BC0286D1F4153B4BE7A05 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.hpp */; };
		4707934A14634EE0A31AF631 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */ = {isa = PBXBuildFile; fileRef = 667B159329A94452B8B3A8D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */; };
		4709A6B42AA1422BB0FD75C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp */ = {isa = PBXBuildFile; fileRef = 8F249AA349D34404867291A3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp */; };
		471D95365E534476A093671D /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.hpp */ = {isa = PBXBuildFile; fileRef = 84AF38CE356D4C01839703F6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.hpp */; };
		471E48D83CAB4D7787F9B010 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/onefactoroperator.hpp */ = {isa = PBXBuildFile; fileRef = C7C73ACECA71410BA003FC6A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/onefactoroperator.hpp */; };
		474975618AB3441E898FBEC0 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.hpp */ = {isa = PBXBuildFile; fileRef = 129F6FBB7C8A4EF3865E8EC8 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.hpp */; };
		4775A4C9A36745EF954B897F /* /Users/heiner/git/QuantLib/ql/default.hpp */ = {isa = PBXBuildFile; fileRef = BDB22E2411274C5BAB2E8842 /* /Users/heiner/git/QuantLib/ql/default.hpp */; };
		477B3A96D9954E369B6B983E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendengine.hpp */ = {isa = PBXBuildFile; fileRef = F4237DAE73374F0CB5304A0D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendengine.hpp */; };
		4783CF634D4B453289807734 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */ = {isa = PBXBuildFile; fileRef = EA0CDC3203D0434596F4C6C8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */; };
		478D51F9EC4A4B169326F4C4 /* /Users/heiner/git/QuantLib/test-suite/digitalcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 98772D90C93C4DFFB340CD83 /* /Users/heiner/git/QuantLib/test-suite/digitalcoupon.cpp */; };
		47943A40E9AD4E18BEC70497 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */ = {isa = PBXBuildFile; fileRef = A66F9ADF38CD4A9F9D515C90 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */; };
		47973FF8DFBF4AD3B0CA7F29 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = 126D943E44CD4EDE95074DDA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/all.hpp */; };
		47A1AF49F8934CEEBC6ACF5E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */ = {isa = PBXBuildFile; fileRef = 85094A6D1D224EBBAF0D1D69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */; };
		47A96DC1C5BE4E60A4568D94 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */ = {isa = PBXBuildFile; fileRef = BAA0B940E32E481795A0869C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */; };
		47C789E78F45443E8DD77B45 /* /Users/heiner/git/QuantLib/Examples/MultidimIntegral/MultidimIntegral.cpp */ = {isa = PBXBuildFile; fileRef = D1599BD5F7044CABAF058058 /* /Users/heiner/git/QuantLib/Examples/MultidimIntegral/MultidimIntegral.cpp */; };
		47D34916C0D349C291ECE471 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.hpp */ = {isa = PBXBuildFile; fileRef = 595EEE26C03A4E9A8BB2E133 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.hpp */; };
		47E333CD43314CDCB69AAAE3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = 5284A354A92445EF8D0E2104 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp */; };
		47EDAF7952384F698D1B02BE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.hpp */ = {isa = PBXBuildFile; fileRef = 01C90914257542609C54B588 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.hpp */; };
		47F83263ECF844708A487288 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp */ = {isa = PBXBuildFile; fileRef = CAC3BCEF3310411BA298FF3E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp */; };
		47FB56434D0A4B189E3C9CEA /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/all.hpp */ = {isa = PBXBuildFile; fileRef = 319278978150425E8E1C2DAF /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/all.hpp */; };
		47FE630D8329461089573F41 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */ = {isa = PBXBuildFile; fileRef = F51866CC83C84B52B7664B71 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */; };
		481A512A47154C458586638A /* /Users/heiner/git/QuantLib/ql/money.hpp */ = {isa = PBXBuildFile; fileRef = A1BAC17565A64779902E7A1A /* /Users/heiner/git/QuantLib/ql/money.hpp */; };
		4827E0736B8C4CAD99809BBE /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */ = {isa = PBXBuildFile; fileRef = BABF7110FFBB4E5789D9F6EF /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */; };
		48323BA72084429085D1909F /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.hpp */ = {isa = PBXBuildFile; fileRef = 113CCB0442864053A2CE5AD6 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.hpp */; };
		4844B855609B4F72AB5592D3 /* /Users/heiner/git/QuantLib/ql/timegrid.hpp */ = {isa = PBXBuildFile; fileRef = DE98755773D940C891E1425C /* /Users/heiner/git/QuantLib/ql/timegrid.hpp */; };
		485419E7E8844DB791857431 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */ = {isa = PBXBuildFile; fileRef = 534AFB446A4E4056A389DC03 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */; };
		485A091C825245E1A18DB8D9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.hpp */ = {isa = PBXBuildFile; fileRef = 5DEAB18249464C889B756C46 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.hpp */; };
		4864617A70F64F8FAF0F95E3 /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.hpp */ = {isa = PBXBuildFile; fileRef = 7212DCA7A6FC4C0997BC2E2B /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.hpp */; };
		4864D2DC281A4D6D9DF9DF97 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */ = {isa = PBXBuildFile; fileRef = 709A3F94377947A8A8492579 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */; };
		48685EBC322D49CDB496B461 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/uscpi.hpp */ = {isa = PBXBuildFile; fileRef = 4E4C301598094C4FBBD93C4F /* /Users/heiner/git/QuantLib/ql/indexes/inflation/uscpi.hpp */; };
		4883414304D44E04AAEAFA6B /* /Users/heiner/git/QuantLib/test-suite/curvestates.hpp */ = {isa = PBXBuildFile; fileRef = 8B66CABCD7F049759C80A3B4 /* /Users/heiner/git/QuantLib/test-suite/curvestates.hpp */; };
		489E6AC4203748DC97C7D676 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.hpp */ = {isa = PBXBuildFile; fileRef = 6C568CB8FB7D490FABE540B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.hpp */; };
		48A7B1D7E0CD4F83A73DEE36 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */ = {isa = PBXBuildFile; fileRef = 4540360D55EF45E08F01D956 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */; };
		48CE3185E34C4E0F96CEF223 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.hpp */ = {isa = PBXBuildFile; fileRef = DCE1DBD55B4543C0B36895F3 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.hpp */; };
		48D46D4F22054457ACF5B47B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp */ = {isa = PBXBuildFile; fileRef = 1CFB43F3B7C34A2D8BD905B1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp */; };
		48E665BDCFA2422B97D8A3C6 /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */ = {isa = PBXBuildFile; fileRef = B401CE88B6A04C3F9FCB442D /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */; };
		48FF5D265F184E95AFEAECC2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */ = {isa = PBXBuildFile; fileRef = 13C7C991FF444877A348F89E /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */; };
		49116DE190714D9FA8B354FE /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */ = {isa = PBXBuildFile; fileRef = E52D17423F244186B62A746B /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */; };
		491269C8ED664500A29ADA15 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */ = {isa = PBXBuildFile; fileRef = 302FF43FFA804F6CAA46AF9C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */; };
		49218F4E8111451C8AD9BA3C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.hpp */ = {isa = PBXBuildFile; fileRef = A26BE9B829A546C0B9C0CA21 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.hpp */; };
		4933CCCAE3924E72AD334094 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 55664950830143D895C43365 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.hpp */; };
		493B96519B264BEAA6221FE8 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/all.hpp */ = {isa = PBXBuildFile; fileRef = D812BF84750847AD8AC5264E /* /Users/heiner/git/QuantLib/ql/instruments/bonds/all.hpp */; };
		493BF2C4581D478FAC60A4F0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdeshortrate.hpp */ = {isa = PBXBuildFile; fileRef = F48856416BA04453A6A03278 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdeshortrate.hpp */; };
		4961A79D4F094F279DB3A93C /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = 5CB37447CAE442F79A2B9090 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.hpp */; };
		4963679B086240BC9BE82411 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.hpp */ = {isa = PBXBuildFile; fileRef = 1ED3CE680ACB4A9491F7E980 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.hpp */; };
		496485314F36462DB6657664 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.hpp */ = {isa = PBXBuildFile; fileRef = 0E6A1F76AF29438EA60838CA /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.hpp */; };
		497F7CEDCEAD41528F72ECF6 /* /Users/heiner/git/QuantLib/ql/utilities/null.hpp */ = {isa = PBXBuildFile; fileRef = 13870DD916B747EAA6075EE4 /* /Users/heiner/git/QuantLib/ql/utilities/null.hpp */; };
		4982A2D600F54B7C808CC85A /* /Users/heiner/git/QuantLib/Examples/Gaussian1dModels/Gaussian1dModels.cpp */ = {isa = PBXBuildFile; fileRef = 7C703482F4E94FD28E84B41F /* /Users/heiner/git/QuantLib/Examples/Gaussian1dModels/Gaussian1dModels.cpp */; };
		4983430C63FB444FA841A6A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */ = {isa = PBXBuildFile; fileRef = 313C78F6E718484CB8387A94 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */; };
		49936DA96B624FB89CA77F2E /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */ = {isa = PBXBuildFile; fileRef = C5E20133064842FD876203A3 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */; };
		4994BEEEBEDD47C9B33BB989 /* /Users/heiner/git/QuantLib/ql/math/integrals/simpsonintegral.hpp */ = {isa = PBXBuildFile; fileRef = E2A46116D2F442469D12BAD1 /* /Users/heiner/git/QuantLib/ql/math/integrals/simpsonintegral.hpp */; };
		4994CAAD96C54290BBFD410A /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.hpp */ = {isa = PBXBuildFile; fileRef = BBEA55E18A8F443CB93F0BE0 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.hpp */; };
		499AAA4AB33640688FCA74D3 /* /Users/heiner/git/QuantLib/ql/patterns/all.hpp */ = {isa = PBXBuildFile; fileRef = 1B941B942908450E8021C1C7 /* /Users/heiner/git/QuantLib/ql/patterns/all.hpp */; };
		499AEB19E31244BB979B1828 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.hpp */ = {isa = PBXBuildFile; fileRef = 5032C87939704086915DCD88 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.hpp */; };
		49F5D639311241B981ED0167 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.hpp */ = {isa = PBXBuildFile; fileRef = 2B72E60B070C42D3846C589D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.hpp */; };
		4A081B59C6CD44F9813CAA50 /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */ = {isa = PBXBuildFile; fileRef = 9F7B6169A28246D991B7518E /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */; };
		4A21C23677CE4B38A20AF193 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = 7F8DF493CA554D9786B72900 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */; };
		4A27D984592C4333BFEC96AA /* /Users/heiner/git/QuantLib/ql/currency.cpp */ = {isa = PBXBuildFile; fileRef = 86DCC2EAAFC4405A8C8D6EE2 /* /Users/heiner/git/QuantLib/ql/currency.cpp */; };
		4A3E1810743F495EAE2146A8 /* /Users/heiner/git/QuantLib/Examples/Repo/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 361AE52A6EBF4A608607FAB7 /* /Users/heiner/git/QuantLib/Examples/Repo/CMakeLists.txt */; };
		4A5735C07FF14529911DD2DD /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.hpp */ = {isa = PBXBuildFile; fileRef = 11FFC12638AE41F6A1B76CD7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.hpp */; };
		4A5C651C4026402C81BAB9E2 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */ = {isa = PBXBuildFile; fileRef = 1FE1BF36E2CD488F99541970 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */; };
		4A5CC7DD8566422A84D687CD /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */ = {isa = PBXBuildFile; fileRef = 2F9361180CE7496F9DDD2C89 /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */; };
		4A65BFB6AC144F97A5485B98 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */ = {isa = PBXBuildFile; fileRef = 995621E94BF04C38B47E4FAC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */; };
		4A73C88BFAA0418792A8BEDC /* /Users/heiner/git/QuantLib/ql/math/generallinearleastsquares.hpp */ = {isa = PBXBuildFile; fileRef = 408FEF8763844AE19A5D2817 /* /Users/heiner/git/QuantLib/ql/math/generallinearleastsquares.hpp */; };
		4A9BD45AD17B4C7690A56E50 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */ = {isa = PBXBuildFile; fileRef = A09F18899F124F17BD8B5B9B /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */; };
		4A9DD1AFC27E4F68B6BE3BA5 /* /Users/heiner/git/QuantLib/ql/event.cpp */ = {isa = PBXBuildFile; fileRef = 85260F913A3440719AE1F689 /* /Users/heiner/git/QuantLib/ql/event.cpp */; };
		4AAFD4D3C3E64CE8B04E292C /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */ = {isa = PBXBuildFile; fileRef = 2A765C0087854B41B28D0A0D /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */; };
		4AFD6F3C3E7C4C50A22B91AC /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.hpp */ = {isa = PBXBuildFile; fileRef = 2DE966CC47E94DACAEB679F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.hpp */; };
		4B00F3CA6D524E46A072873F /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */ = {isa = PBXBuildFile; fileRef = 298CAE121A89431AAD8ED9B2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */; };
		4B07437DBC1E425E826C481B /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */ = {isa = PBXBuildFile; fileRef = 75D5299FB60F4B74A6ABC87C /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */; };
		4B0AF06C5D6F415FA255A3CA /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/g2swaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 38F5C033EC64452C925B67D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/g2swaptionengine.hpp */; };
		4B26D2D7BF41463180F209D2 /* /Users/heiner/git/QuantLib/ql/math/linearleastsquaresregression.hpp */ = {isa = PBXBuildFile; fileRef = 3EF8DB795E0142058AE7ED4C /* /Users/heiner/git/QuantLib/ql/math/linearleastsquaresregression.hpp */; };
		4B2C6BC4E02D435BBE518EDC /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.hpp */ = {isa = PBXBuildFile; fileRef = 7DD74202988F4F20A01BFBA1 /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.hpp */; };
		4B4E50DF9B554F66B5D1CE9A /* /Users/heiner/git/QuantLib/ql/math/lexicographicalview.hpp */ = {isa = PBXBuildFile; fileRef = E9728AB088E7475FB6A2EE6B /* /Users/heiner/git/QuantLib/ql/math/lexicographicalview.hpp */; };
		4B5F8B7AAA6648EE97766E4E /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */ = {isa = PBXBuildFile; fileRef = 261CFCC7261F4D41B729502B /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */; };
		4B608131DF394C2DACB21C9B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/all.hpp */ = {isa = PBXBuildFile; fileRef = 1D7D8BC474B34CB683A28638 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/all.hpp */; };
		4B8100C8B4AC43C7BFEE4634 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */ = {isa = PBXBuildFile; fileRef = F02B164BAF024A4681DD913F /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */; };
		4B99C0800CCF42D9854CE184 /* /Users/heiner/git/QuantLib/test-suite/inflationcpiswap.hpp */ = {isa = PBXBuildFile; fileRef = 0495BDB1EA124B008351A2DF /* /Users/heiner/git/QuantLib/test-suite/inflationcpiswap.hpp */; };
		4B9C1D067D7648968D0548D7 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.hpp */ = {isa = PBXBuildFile; fileRef = CBF9DB2E87EA46338BA6F45D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.hpp */; };
		4BB1ED6129C54A48BF698222 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */ = {isa = PBXBuildFile; fileRef = 009792FEB2A84C52A88D6879 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */; };
		4BB9D4A781D04B71813B799C /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.hpp */ = {isa = PBXBuildFile; fileRef = 7D81B65667AC4FA893D6DCFA /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.hpp */; };
		4BCBA85635AA40B4B5C66800 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = 691D39B0513F4AA6883521CF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */; };
		4BD9D9C306A143F39C9702DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp */ = {isa = PBXBuildFile; fileRef = FD08367E6159469B94E6004C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp */; };
		4BDE606BBE194F9EBC34B63E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp */ = {isa = PBXBuildFile; fileRef = 7E371034EFC140BDB5BA85A3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp */; };
		4BF1BF6E988E4AB48211C06D /* /Users/heiner/git/QuantLib/ql/experimental/models/all.hpp */ = {isa = PBXBuildFile; fileRef = 6BEAAA0CC2914B549BBC50DE /* /Users/heiner/git/QuantLib/ql/experimental/models/all.hpp */; };
		4BFB2D24072C4D84904565F5 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.hpp */ = {isa = PBXBuildFile; fileRef = 38ED1512D07044BFAB52FAF2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.hpp */; };
		4C026F5FA94A4646B9F4473C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */ = {isa = PBXBuildFile; fileRef = 484BACC67C4D4A3AA1D9A404 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */; };
		4C04D8E4E0D840A599229ED2 /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.hpp */ = {isa = PBXBuildFile; fileRef = 3AEEAE2424A94A9B91962EEE /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.hpp */; };
		4C0EBB201EA14930A0011A35 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */ = {isa = PBXBuildFile; fileRef = 4A2F648789CD410D900793EB /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */; };
		4C1D7BB408E2454BACF80671 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/all.hpp */ = {isa = PBXBuildFile; fileRef = 11C5203317DF489DB3B9C53F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/all.hpp */; };
		4C41CA7B6CFD484592FDA92A /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.hpp */ = {isa = PBXBuildFile; fileRef = 0A8D7C0046994E869F50FB16 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.hpp */; };
		4C493E6A6A52410B8F7D29EB /* /Users/heiner/git/QuantLib/test-suite/assetswap.hpp */ = {isa = PBXBuildFile; fileRef = 982F22B478A247D78212E106 /* /Users/heiner/git/QuantLib/test-suite/assetswap.hpp */; };
		4C662E2097BE4F32869BCAF5 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/all.hpp */ = {isa = PBXBuildFile; fileRef = 51E298E42D3F48FC81932F4A /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/all.hpp */; };
		4C68C053AF4E4B7DB624AEE0 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */ = {isa = PBXBuildFile; fileRef = 52866D304BBD46DFB3DA7240 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */; };
		4C6FDAB63B6F4465981D636E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */ = {isa = PBXBuildFile; fileRef = 35D80948C11242578B4848CA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */; };
		4C76EB14664E48F9A719E67C /* /Users/heiner/git/QuantLib/ql/time/calendars/target.hpp */ = {isa = PBXBuildFile; fileRef = 6D56E9FE9DDF4D16A6015D4F /* /Users/heiner/git/QuantLib/ql/time/calendars/target.hpp */; };
		4C81A902CD5842FCBFC57D2B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.hpp */ = {isa = PBXBuildFile; fileRef = 877CA413095046968566C6D3 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.hpp */; };
		4C8D0705387E4F5A9C2F0DFF /* /Users/heiner/git/QuantLib/test-suite/swingoption.cpp */ = {isa = PBXBuildFile; fileRef = 95808492BF0D45A7A3F9AA68 /* /Users/heiner/git/QuantLib/test-suite/swingoption.cpp */; };
		4C99BA3DC03141E6A93FE88F /* /Users/heiner/git/QuantLib/ql/termstructures/yield/impliedtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = C1BD392DF4194B18BA41A26C /* /Users/heiner/git/QuantLib/ql/termstructures/yield/impliedtermstructure.hpp */; };
		4CA370CB5F23433B9719D4A3 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */ = {isa = PBXBuildFile; fileRef = 5FA81CAD58A541FD9EEAB254 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */; };
		4CB15A8F97E845C8863A981C /* /Users/heiner/git/QuantLib/ql/time/daycounters/one.hpp */ = {isa = PBXBuildFile; fileRef = 58845B5754E04C8891AF2941 /* /Users/heiner/git/QuantLib/ql/time/daycounters/one.hpp */; };
		4CBBF5BC46F94BB4960C3EB7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/all.hpp */ = {isa = PBXBuildFile; fileRef = 32C25FA8A66F4AB492B55D13 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/all.hpp */; };
		4CC108464C65419584F49513 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.hpp */ = {isa = PBXBuildFile; fileRef = D1CDE9B7B3E7443492959A80 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.hpp */; };
		4CC1118289424FD88F11C64E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = F15CCEC4587845389EE577B5 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */; };
		4CD56AED77FB406B9EA538BF /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */ = {isa = PBXBuildFile; fileRef = 57A12BD48E4342AB9E2EEF91 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */; };
		4CEC4655B7804853901D53D9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */ = {isa = PBXBuildFile; fileRef = CDE5847593BA4F989B75089E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */; };
		4CF08A8478684AD0AB831B26 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = FBF9956033D14106A8250DF3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrsmilesection.hpp */; };
		4CF3D7D7948F4DF6B3B0CD4F /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = B9648FF11F3B47ABAE4032DF /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.hpp */; };
		4CFA84929B05401B988BC323 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 471B380A24DA4398A0C605DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */; };
		4CFBF9FA0AE148C7BF329142 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */ = {isa = PBXBuildFile; fileRef = 1B4A14A73796486A83DCC559 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */; };
		4D0442F218E442C7ACFB3188 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp */ = {isa = PBXBuildFile; fileRef = 8F7755B2A6294C2183CC001F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp */; };
		4D15BF08A20F4671BC063964 /* /Users/heiner/git/QuantLib/test-suite/fdmlinearop.hpp */ = {isa = PBXBuildFile; fileRef = 1A33D205ABE948DCA5C21324 /* /Users/heiner/git/QuantLib/test-suite/fdmlinearop.hpp */; };
		4D2009757D6945E486BE5A50 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.hpp */ = {isa = PBXBuildFile; fileRef = 5468D5BB4FF04A2E8B0DDBF8 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.hpp */; };
		4D2CCEF61ED1434BA557E728 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */ = {isa = PBXBuildFile; fileRef = 3EFFBFC6A2F04965843B4864 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */; };
		4D30A34165BE411CAA66A46E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.hpp */ = {isa = PBXBuildFile; fileRef = 1536005108314D03BDA2ADF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.hpp */; };
		4D3A9DC28D0B4D618AA44A97 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */ = {isa = PBXBuildFile; fileRef = 19B262F5F59D4A43B6833A58 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */; };
		4D435AE7B8AF48189F352344 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */ = {isa = PBXBuildFile; fileRef = A5895A4065B6421485A1406A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */; };
		4D496935A8BC429488E0741D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.hpp */ = {isa = PBXBuildFile; fileRef = F75F1FB4349E48F48093A8FB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.hpp */; };
		4D541EEF6DFA41E4A48B7B5E /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */ = {isa = PBXBuildFile; fileRef = 6977BD80E1944C2DA5B3E1FA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */; };
		4D576413382242D78BCB4ABD /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/all.hpp */ = {isa = PBXBuildFile; fileRef = ACF3841E5B194995815C87EE /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/all.hpp */; };
		4D57918E67464EF386722FB4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */ = {isa = PBXBuildFile; fileRef = 3266C17743724B93A359855D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */; };
		4D5A77D55619467CBE262088 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */ = {isa = PBXBuildFile; fileRef = 6407FA59155E46F1B3D9B2A2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */; };
		4D5AE50C746E4BC1A6DAE9FD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */ = {isa = PBXBuildFile; fileRef = A041EBBF7C7B450684C3DA63 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */; };
		4D75E64EBB994073AB459EF2 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 397C036C2BAA4A61876A3457 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolation.hpp */; };
		4D7CD54E755848A58FF4C455 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = AA24A5FD7CDD44BAA3F35BCB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */; };
		4D8BF95F579449DC9F34001D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/shoutcondition.hpp */ = {isa = PBXBuildFile; fileRef = EFC1315B1ACE49F480B00530 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/shoutcondition.hpp */; };
		4D8CD6899B5F4E4CA5DCA5CF /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */ = {isa = PBXBuildFile; fileRef = 311EDB16D5F54FF3AF1C9A72 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */; };
		4D941DECDB154F7894004B14 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.hpp */ = {isa = PBXBuildFile; fileRef = A128F42D3C2B4B0ABB031294 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.hpp */; };
		4DC1561CAD724B35BC96D981 /* /Users/heiner/git/QuantLib/test-suite/mersennetwister.cpp */ = {isa = PBXBuildFile; fileRef = 4417C3F694FD468AB33D554E /* /Users/heiner/git/QuantLib/test-suite/mersennetwister.cpp */; };
		4E072E80E1F84F5B8E109D43 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 152C9BA82B1B4792B6BC2518 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp */; };
		4E2DA9D7A0EE4B339F16CBFE /* /Users/heiner/git/QuantLib/test-suite/tqreigendecomposition.hpp */ = {isa = PBXBuildFile; fileRef = 574A0861DC2C4A8DB3E97574 /* /Users/heiner/git/QuantLib/test-suite/tqreigendecomposition.hpp */; };
		4E347528F3824C6FBE0FE8E2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */ = {isa = PBXBuildFile; fileRef = 2DF7ABA9933A4C60BB5AF453 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */; };
		4E3936883DA144CF871C104A /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.hpp */ = {isa = PBXBuildFile; fileRef = BB94E91F913D465A8BCF16E8 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.hpp */; };
		4E3A052704E44A77BA05D7AD /* /Users/heiner/git/QuantLib/ql/payoff.hpp */ = {isa = PBXBuildFile; fileRef = CB1D060ED8234D13BD01449A /* /Users/heiner/git/QuantLib/ql/payoff.hpp */; };
		4E42D52ADC4247528354434C /* /Users/heiner/git/QuantLib/Examples/Bonds/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 7FC97741BC9347A7BE5C0124 /* /Users/heiner/git/QuantLib/Examples/Bonds/CMakeLists.txt */; };
		4E50BBBB995D49B6B7509366 /* /Users/heiner/git/QuantLib/test-suite/swapforwardmappings.hpp */ = {isa = PBXBuildFile; fileRef = C681B5583A704BAD88444FEB /* /Users/heiner/git/QuantLib/test-suite/swapforwardmappings.hpp */; };
		4E50C3CB65454619A841F65A /* /Users/heiner/git/QuantLib/ql/version.hpp */ = {isa = PBXBuildFile; fileRef = FED1B62979E24E43A3A7B8A3 /* /Users/heiner/git/QuantLib/ql/version.hpp */; };
		4E50DCEADC1C481D8951E846 /* /Users/heiner/git/QuantLib/test-suite/inflation.cpp */ = {isa = PBXBuildFile; fileRef = 0B38904A51854BF392CA017E /* /Users/heiner/git/QuantLib/test-suite/inflation.cpp */; };
		4E6AEB70C30F4D7A85039885 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/mcvarianceswapengine.hpp */ = {isa = PBXBuildFile; fileRef = 0B9FD75191694AD48DA07B5E /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/mcvarianceswapengine.hpp */; };
		4E77D556386340A59AD475AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */ = {isa = PBXBuildFile; fileRef = 6F26414E8984402FB3C11091 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */; };
		4EA36A7B45284CBE9FFAD992 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.hpp */ = {isa = PBXBuildFile; fileRef = A0E451610EFB45F3B69B93D7 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.hpp */; };
		4EABCCAA18404B3990021598 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */ = {isa = PBXBuildFile; fileRef = 4EE42B86FA6D46C798720CE1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */; };
		4EC8F9638BCE431783BDBC9E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */ = {isa = PBXBuildFile; fileRef = 870E8B43D5BC4207A4A4CB90 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */; };
		4EE8A55F15F34118B0CAB1B8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */ = {isa = PBXBuildFile; fileRef = 1D6021D98B044D19953117AA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */; };
		4EE99C33A259432DA16DCEFD /* /Users/heiner/git/QuantLib/ql/indexes/ibor/aonia.hpp */ = {isa = PBXBuildFile; fileRef = E3D70E07B5734024B5129E9F /* /Users/heiner/git/QuantLib/ql/indexes/ibor/aonia.hpp */; };
		4EED04EF73F6444B8E00A594 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */ = {isa = PBXBuildFile; fileRef = 0DDEDC65B9094E9E9BA65C20 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */; };
		4EF65C9EF410496C8B104151 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */ = {isa = PBXBuildFile; fileRef = 4ADD4523688449D092907904 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */; };
		4F18B79F747048CCBD8AB4E9 /* /Users/heiner/git/QuantLib/test-suite/bonds.hpp */ = {isa = PBXBuildFile; fileRef = 9E33C6A89494458CB3AC2BAB /* /Users/heiner/git/QuantLib/test-suite/bonds.hpp */; };
		4F2B5F7646054B20B38D29A8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.hpp */ = {isa = PBXBuildFile; fileRef = DD7D2AE9AD1F4576B784E9C1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.hpp */; };
		4F3657C8822A4BAB8713FA14 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.hpp */ = {isa = PBXBuildFile; fileRef = 48E9D8B063A446368C19DFC8 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.hpp */; };
		4F49F1A29D9943A9B0FD4E92 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.hpp */ = {isa = PBXBuildFile; fileRef = B11556FCEAD24B4B8BA2C043 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.hpp */; };
		4F4E0360E0C14E1AB826C753 /* /Users/heiner/git/QuantLib/ql/math/optimization/simulatedannealing.hpp */ = {isa = PBXBuildFile; fileRef = 47E11AF51D674A75B07DF48D /* /Users/heiner/git/QuantLib/ql/math/optimization/simulatedannealing.hpp */; };
		4F686E221FC344E796BDF90C /* /Users/heiner/git/QuantLib/ql/pricingengine.hpp */ = {isa = PBXBuildFile; fileRef = E7B99A6DDBD44D93865B2B7D /* /Users/heiner/git/QuantLib/ql/pricingengine.hpp */; };
		4F76B5772AF248A79BDDE054 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */ = {isa = PBXBuildFile; fileRef = E92405522C8A4582AD8136A8 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */; };
		4F7DFEDB19E4482FB92F109E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */ = {isa = PBXBuildFile; fileRef = 222DCA80C2F442ACBF99E8DB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */; };
		4F8243139B9D4C33876BCE79 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */ = {isa = PBXBuildFile; fileRef = 1423A11185884818A52B7E63 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */; };
		4F8743BEFAC74C9F9E47F73C /* /Users/heiner/git/QuantLib/ql/instruments/all.hpp */ = {isa = PBXBuildFile; fileRef = A3E712BCC43046AA9CF76D44 /* /Users/heiner/git/QuantLib/ql/instruments/all.hpp */; };
		4F9AC91C64C04930AD65D0E3 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.hpp */ = {isa = PBXBuildFile; fileRef = 80DD8F8DE70C4523AC422A70 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.hpp */; };
		4FB27A05133546999FA8ACDC /* /Users/heiner/git/QuantLib/ql/math/statistics/sequencestatistics.hpp */ = {isa = PBXBuildFile; fileRef = 9D82577522754202B4ACDE8E /* /Users/heiner/git/QuantLib/ql/math/statistics/sequencestatistics.hpp */; };
		4FBF2F54F42A47E09B040241 /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.hpp */ = {isa = PBXBuildFile; fileRef = FE53913D92304D0D9B62AE53 /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.hpp */; };
		4FC01D4971644E59A11F6A23 /* /Users/heiner/git/QuantLib/ql/errors.cpp */ = {isa = PBXBuildFile; fileRef = 7D14662ED9B1416B9A07EAF7 /* /Users/heiner/git/QuantLib/ql/errors.cpp */; };
		4FD1690905CF42108CE2722D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp */ = {isa = PBXBuildFile; fileRef = EB88F397A1CD40A0BE361A1D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp */; };
		4FD50097B4AC43B9AADD83E0 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/all.hpp */ = {isa = PBXBuildFile; fileRef = E81603FD9C954DD2B068E240 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/all.hpp */; };
		4FED8F0BF39D4868B358BF65 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */ = {isa = PBXBuildFile; fileRef = E5FBE8681F104DE8B1CC0319 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */; };
		4FF5DEF7F45D469FAC61CCBB /* /Users/heiner/git/QuantLib/ql/cashflows/all.hpp */ = {isa = PBXBuildFile; fileRef = F5A75660C8A243B09E87008F /* /Users/heiner/git/QuantLib/ql/cashflows/all.hpp */; };
		50008AE73E0D4128AB3556F9 /* /Users/heiner/git/QuantLib/ql/quote.hpp */ = {isa = PBXBuildFile; fileRef = A2EFFC104B2E4D29AF20BE05 /* /Users/heiner/git/QuantLib/ql/quote.hpp */; };
		500EC96F83234A5BB9859DF7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */ = {isa = PBXBuildFile; fileRef = 2655BD5ED45F47EE8AAB4C0E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */; };
		50200536C0C44B448E2B102F /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */ = {isa = PBXBuildFile; fileRef = D3D519C5365D483296146E77 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */; };
		50438E59B71A4CF6818B58EC /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */ = {isa = PBXBuildFile; fileRef = 3B81A09C8764482EAC487C2B /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */; };
		505472C6435544C887810666 /* /Users/heiner/git/QuantLib/Examples/FittedBondCurve/FittedBondCurve.cpp */ = {isa = PBXBuildFile; fileRef = 7E27849BFCE543369EF740EE /* /Users/heiner/git/QuantLib/Examples/FittedBondCurve/FittedBondCurve.cpp */; };
		5064FCA20F2249CF8993910B /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.hpp */ = {isa = PBXBuildFile; fileRef = 578334E8981A4E0AAC9BFDD1 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.hpp */; };
		5072E059BD424C1C8BF6A4B8 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 8D708BF392A84B5BA786335F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */; };
		507C6CA69AE1489DA9BF8D0E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.hpp */ = {isa = PBXBuildFile; fileRef = 4822742F8BAB44B993A47D32 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.hpp */; };
		5089DE860C5045A4B6DBAC00 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 58DE29B570ED454D8F118956 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */; };
		508F91ACDB664AB49CE351A2 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */ = {isa = PBXBuildFile; fileRef = 87D92BFA8C9D4C849DA680A7 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */; };
		50B7AE01B6CF46CD90207223 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/all.hpp */ = {isa = PBXBuildFile; fileRef = 3BC156C2A72F4AD199BCB391 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/all.hpp */; };
		50C50B509FC347C2998622B1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 42EA873E48994316A2390688 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */; };
		50C8EE94D1DD4FAD9694EBF6 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = 71FE0FC985FE471CBC32AD4E /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */; };
		50CE815326FA4D9A8966CE91 /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */ = {isa = PBXBuildFile; fileRef = B0A377056FC845D59A44516C /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */; };
		50CEF36C8FBE4B6F951B439B /* /Users/heiner/git/QuantLib/ql/qldefines.hpp */ = {isa = PBXBuildFile; fileRef = E91ABF6CD04E4F38A80BE4B2 /* /Users/heiner/git/QuantLib/ql/qldefines.hpp */; };
		50CFE816043D4B4390C3FBBE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */ = {isa = PBXBuildFile; fileRef = 4EA32A0030A14E5C8FC4DECD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */; };
		50E0991C840E477EA2894148 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = B7BABD33024E41F08C45A6D7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp */; };
		50FF1CC6956D4BBB827D742E /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/tflattice.hpp */ = {isa = PBXBuildFile; fileRef = 018EDDBF02C64B22B0608163 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/tflattice.hpp */; };
		50FF845DB8734B98ADACFBD1 /* /Users/heiner/git/QuantLib/Examples/Swap/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = BA89531499F2413588B73834 /* /Users/heiner/git/QuantLib/Examples/Swap/CMakeLists.txt */; };
		51246CF64EB042638476D253 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */ = {isa = PBXBuildFile; fileRef = DD3E4F8CE70642DD88E980B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */; };
		512F1BDC43B941248025E8E3 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */ = {isa = PBXBuildFile; fileRef = C88A4595AB164A9794F23516 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */; };
		51325DDB54F145D683F2CA75 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */ = {isa = PBXBuildFile; fileRef = 79380F6023964E1B9958EC91 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */; };
		51434FAAEF374BEEA08F8529 /* /Users/heiner/git/QuantLib/ql/math/interpolations/forwardflatinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = E0A93936B4EA4704AE8ED718 /* /Users/heiner/git/QuantLib/ql/math/interpolations/forwardflatinterpolation.hpp */; };
		514BA82B2EFD49D29DC8900B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */ = {isa = PBXBuildFile; fileRef = 5B80DE6957FC45DA8F12A487 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */; };
		5154838D771A423292D6FD0A /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.hpp */ = {isa = PBXBuildFile; fileRef = 040FD6D4C3744F0E841849E9 /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.hpp */; };
		51565101F4A44804B1415DCC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp */ = {isa = PBXBuildFile; fileRef = 0345122C87FA4731BCF51B63 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp */; };
		5186898354C44D36970CB4B1 /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */ = {isa = PBXBuildFile; fileRef = 86EE4A70A8774A71BB03000A /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */; };
		519E7E4F79F74E2A91F03DB3 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp */ = {isa = PBXBuildFile; fileRef = 2D1465D3E40B43DFAD567B67 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp */; };
		51A30FE10D0E44C698AC7FB1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */ = {isa = PBXBuildFile; fileRef = 8314F5C8B6A04F2094940AAA /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */; };
		51A44D9B82774609A1A0FC1F /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */ = {isa = PBXBuildFile; fileRef = FEFACDDDBFA54AF484E2CC03 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */; };
		51EDF997673C4BC8B5DA10DB /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */ = {isa = PBXBuildFile; fileRef = 6787197E2F3B4E989B78A572 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */; };
		5202F6F3513448819952008D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 907981D2C9DA42A389D1B8AF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */; };
		520F1F602F694151B8E23998 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.hpp */ = {isa = PBXBuildFile; fileRef = 76F8999241144151B2853DE7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.hpp */; };
		52237597E80E47989D006AE7 /* /Users/heiner/git/QuantLib/ql/patterns/lazyobject.hpp */ = {isa = PBXBuildFile; fileRef = 72ACB624368A41D499E818C9 /* /Users/heiner/git/QuantLib/ql/patterns/lazyobject.hpp */; };
		5226EB16E0734EE09D4B55F7 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice.hpp */ = {isa = PBXBuildFile; fileRef = B007A6224359439FB086186D /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice.hpp */; };
		523962DB80B84C3BB497A496 /* /Users/heiner/git/QuantLib/Examples/Gaussian1dModels/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 3F53FB862992443C9CDE60F6 /* /Users/heiner/git/QuantLib/Examples/Gaussian1dModels/CMakeLists.txt */; };
		52493360004544CA92AF1FC7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = AF24F9D9462D4A4488BA74D8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.hpp */; };
		524A152E272F4289B309062F /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */ = {isa = PBXBuildFile; fileRef = 923DA78E608A45938D325D87 /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */; };
		5251F7E6B32B486AB4E2B98E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.hpp */ = {isa = PBXBuildFile; fileRef = CF3A31896C6C4FA6A58D1051 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.hpp */; };
		52678D35965D4A32B17001D0 /* /Users/heiner/git/QuantLib/ql/math/interpolations/linearinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = C098CF7674F04306B8D79BE7 /* /Users/heiner/git/QuantLib/ql/math/interpolations/linearinterpolation.hpp */; };
		5273A6E23F474A4B909E0022 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = F9908E23B95245F49E4F5E81 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.hpp */; };
		527C7AD378A6481DAF728D6A /* /Users/heiner/git/QuantLib/ql/processes/all.hpp */ = {isa = PBXBuildFile; fileRef = 40AC7642EA1B4D4C80B6DD99 /* /Users/heiner/git/QuantLib/ql/processes/all.hpp */; };
		527D16F237FE430C9F4415A4 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */ = {isa = PBXBuildFile; fileRef = 0D54B06B028243A1958719B5 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */; };
		529B6316B94B445ABA26BCBE /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.hpp */ = {isa = PBXBuildFile; fileRef = D03436046A4E456293802185 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.hpp */; };
		52A0F155861D405F91E3DF50 /* /Users/heiner/git/QuantLib/ql/currencies/asia.hpp */ = {isa = PBXBuildFile; fileRef = 6A412B937D3E456785AECB2E /* /Users/heiner/git/QuantLib/ql/currencies/asia.hpp */; };
		52C412FCE74B4201BE925B67 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.hpp */ = {isa = PBXBuildFile; fileRef = 10A18BA1029C44858437A128 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.hpp */; };
		52F13ECF37094C379B4190A4 /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */ = {isa = PBXBuildFile; fileRef = B7477FF05E0F45339ABA8FA4 /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */; };
		531B9CE8A9F24A779B85AF59 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */ = {isa = PBXBuildFile; fileRef = 46EA672B551348A1838A5911 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */; };
		53296AB9375743F7B3776360 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */ = {isa = PBXBuildFile; fileRef = 01CF112A59544192B5E2166C /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */; };
		532D2D7F09F7492DB827C6DE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */ = {isa = PBXBuildFile; fileRef = D27CAE725DF04898BD3245C3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */; };
		532E57F64D984B44BE02EF6C /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */ = {isa = PBXBuildFile; fileRef = 3B0BB55B4E374A96B6CABE8A /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */; };
		533400FE6D07433CBB666415 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.hpp */ = {isa = PBXBuildFile; fileRef = 965FE0D97E3C45DFBA34C7BB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.hpp */; };
		533CBD4D0BAB4C658C18E5D8 /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */ = {isa = PBXBuildFile; fileRef = 877107DA0F074B6BAA4C025A /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */; };
		533ECD2DAB49429BAB9373E5 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.hpp */ = {isa = PBXBuildFile; fileRef = 5AEE07C22122489692C11EEF /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.hpp */; };
		5352086A58614095B207E215 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */ = {isa = PBXBuildFile; fileRef = 5A246450A00946F889705527 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */; };
		53616302C84145DE8B720FD9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */ = {isa = PBXBuildFile; fileRef = B766B0F954E04316B07973C6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */; };
		5364A5DA46DA4DB6B3C775D0 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/all.hpp */ = {isa = PBXBuildFile; fileRef = F7E454F273434F73B673FB9E /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/all.hpp */; };
		539B33EAC3EE4C29930DE59C /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/all.hpp */ = {isa = PBXBuildFile; fileRef = ED54E48ACD924E3F923B753D /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/all.hpp */; };
		53AC5ABFF3134A8997A7D0E2 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/nodedata.hpp */ = {isa = PBXBuildFile; fileRef = 6543F35D0A6649BAA8E6A602 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/nodedata.hpp */; };
		53AD4A4268814C43AAA4EEC1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */ = {isa = PBXBuildFile; fileRef = 2334D432AEF34F8889F44759 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */; };
		53B065F4DA3D4ABEB6203D7D /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */ = {isa = PBXBuildFile; fileRef = B6FBFB20E0E94C25AC05419E /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */; };
		53B06D69BE9E41B9A3F8461C /* /Users/heiner/git/QuantLib/ql/quote.hpp */ = {isa = PBXBuildFile; fileRef = 2705463F5F8E48B1A23CED31 /* /Users/heiner/git/QuantLib/ql/quote.hpp */; };
		53B5DF37B6A949009C66E221 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */ = {isa = PBXBuildFile; fileRef = 4B72A5F4449F421AABD7F1E1 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */; };
		53C406EE45BB4C969F2D4F9D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */ = {isa = PBXBuildFile; fileRef = C70CD15AC49243F0B0FC1914 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */; };
		53C8FBDDCB7A45B781622AFC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = 4B0B60C9861F4E688CAB421E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */; };
		53CAF87907284963B7C6A910 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */ = {isa = PBXBuildFile; fileRef = 35260E37B3E54AA9A13713AF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */; };
		53E8F70E54BA4070ACE77A2B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp */ = {isa = PBXBuildFile; fileRef = 51A9B8693C9C42DAAF79FC1E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp */; };
		53EA162DD2BE4991B9432286 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */ = {isa = PBXBuildFile; fileRef = 25F3355794124E9B931EBBB6 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */; };
		53F514C931404DBBB7CB8E56 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */ = {isa = PBXBuildFile; fileRef = 53287880DC7C4703804B5B11 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */; };
		53F6BB8A7C2F4D3E9C041ADD /* /Users/heiner/git/QuantLib/ql/grid.hpp */ = {isa = PBXBuildFile; fileRef = 5DC320B78C1844BAB2CF2813 /* /Users/heiner/git/QuantLib/ql/grid.hpp */; };
		53F79B2FEB894A0DA21687FF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.hpp */ = {isa = PBXBuildFile; fileRef = 1A40E55E974A49AC8381DA82 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.hpp */; };
		5402C4D8FEDA4882B7A9F07B /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */ = {isa = PBXBuildFile; fileRef = B3100E437D5A45938D90B5E8 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */; };
		5422B29A20A449D781A83D6D /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */ = {isa = PBXBuildFile; fileRef = C408D9DB58E24CE8A4F851CC /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */; };
		5424993BB7844C63BA518181 /* /Users/heiner/git/QuantLib/ql/math/interpolations/cubicinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 70C66CCF228B4D7BAF43B102 /* /Users/heiner/git/QuantLib/ql/math/interpolations/cubicinterpolation.hpp */; };
		5428328DCC624436B8F30810 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */ = {isa = PBXBuildFile; fileRef = D6EAD93B3D504D0D9DD8C4EF /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */; };
		543B45A5356D40BC81B7FB4C /* /Users/heiner/git/QuantLib/ql/cashflows/replication.hpp */ = {isa = PBXBuildFile; fileRef = DA5D8D668E0244E890B6A179 /* /Users/heiner/git/QuantLib/ql/cashflows/replication.hpp */; };
		5444E74B9B984553A7AF7C58 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */ = {isa = PBXBuildFile; fileRef = 866D6C73C4764F36908DFC53 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */; };
		545617E601F74515B183DA57 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */ = {isa = PBXBuildFile; fileRef = 7B6F698FB6B349199AD0BFC9 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */; };
		545636D04487455EA43A96C8 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */ = {isa = PBXBuildFile; fileRef = 6CBD4CDA916043EEA1FCC9B9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */; };
		54666E8CC4B84ABB8FA2D1F7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 9B6029B2070D409494360D88 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolatedsmilesection.hpp */; };
		5467AF2042704651BFA65E98 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */ = {isa = PBXBuildFile; fileRef = 49D7680D62B1454CBC9A4C4C /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */; };
		547770757D4743D6BE019345 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = FA7226BBA00E42A4BFD8BC9B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp */; };
		548A4C2044E7484BA237F176 /* /Users/heiner/git/QuantLib/ql/math/rounding.hpp */ = {isa = PBXBuildFile; fileRef = 3CFFED5A221F4511B1223B79 /* /Users/heiner/git/QuantLib/ql/math/rounding.hpp */; };
		54967B72374C4564A64E199C /* /Users/heiner/git/QuantLib/ql/currency.hpp */ = {isa = PBXBuildFile; fileRef = 8E96291F6B134DF98D383A71 /* /Users/heiner/git/QuantLib/ql/currency.hpp */; };
		5497F224EBA6404F950CA53C /* /Users/heiner/git/QuantLib/ql/instruments/callabilityschedule.hpp */ = {isa = PBXBuildFile; fileRef = 57A01AD588304321800EC103 /* /Users/heiner/git/QuantLib/ql/instruments/callabilityschedule.hpp */; };
		54A06EFB87534399B7B90F62 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */ = {isa = PBXBuildFile; fileRef = 9720DA3AE3B64D929439D801 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */; };
		54AA741CDAFA4FC3828E3C33 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.hpp */ = {isa = PBXBuildFile; fileRef = D5C0B1CD60AD4B2FAB2D35D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.hpp */; };
		54BF2690BEFA45918BD604CB /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */ = {isa = PBXBuildFile; fileRef = 5AD4280997EB48FD8F1A5E44 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */; };
		54C8C2A3D76F40C99FF0F883 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.hpp */ = {isa = PBXBuildFile; fileRef = 16F6BE11AEBF45BD89EE5A48 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.hpp */; };
		54F176D141824761BCB24904 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */ = {isa = PBXBuildFile; fileRef = EFF44AAC7B7941CE8C54E5F0 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */; };
		551A9259AD9A4AA496ABABB2 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.hpp */ = {isa = PBXBuildFile; fileRef = C82E7D5C6D2543A0AC1043C3 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.hpp */; };
		551DEB59FA7345BB9CDA9738 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/all.hpp */ = {isa = PBXBuildFile; fileRef = 68C8EA6E1D8F4B1F92C45565 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/all.hpp */; };
		5520AB80FE3E4EA6A62B0E2B /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.hpp */ = {isa = PBXBuildFile; fileRef = FCEC5CDB8BDB41F6878283C3 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.hpp */; };
		5529D5A8201E4A7D97BE9942 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = C3B918000A55428D9C6986F4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */; };
		552E6CE4AC424EA59242C649 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.hpp */ = {isa = PBXBuildFile; fileRef = C86E0F54245A4096A0475A3A /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.hpp */; };
		5536054116EA4D4D98098E4A /* /Users/heiner/git/QuantLib/ql/position.hpp */ = {isa = PBXBuildFile; fileRef = AD822126242F4AB08EB60FDA /* /Users/heiner/git/QuantLib/ql/position.hpp */; };
		55495C2D3B9D4DD19FC8E132 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.hpp */ = {isa = PBXBuildFile; fileRef = 78E9838433744607ADEB3CAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.hpp */; };
		555FC90ADF714B4494C11FEB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/americancondition.hpp */ = {isa = PBXBuildFile; fileRef = DCAECD7850184F4180796704 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/americancondition.hpp */; };
		55683A3833BD4D519295A5AC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp */ = {isa = PBXBuildFile; fileRef = 87F3E346FF2C4F028B954AC3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp */; };
		557C3A52DC85412D996975C3 /* /Users/heiner/git/QuantLib/ql/timegrid.hpp */ = {isa = PBXBuildFile; fileRef = DCCAF8C554244D2FB9F68DDB /* /Users/heiner/git/QuantLib/ql/timegrid.hpp */; };
		557E4E20D8D44313B70A8A4F /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */ = {isa = PBXBuildFile; fileRef = D77CCB342F52469BA0BF189D /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */; };
		5595632D49D34C3DA4EDF3BD /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */ = {isa = PBXBuildFile; fileRef = B250ACAC8D7F4FAF91C1814A /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */; };
		55A6A171B6F3455C96599B85 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomsequencegenerator.hpp */ = {isa = PBXBuildFile; fileRef = 6DD1DB57576B443E934B91CC /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomsequencegenerator.hpp */; };
		55AE62A04A6F4B7C969A8C81 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.hpp */ = {isa = PBXBuildFile; fileRef = 502C964FBE114C0D938D40A9 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.hpp */; };
		55B5FE0C2DEF4517B539CCEF /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */ = {isa = PBXBuildFile; fileRef = 8CF4460AA2A8440EBB232199 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */; };
		55C00F8EB46846E38B0186E9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spotlosslatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = 0127E30E74F44F89A56EE996 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spotlosslatentmodel.hpp */; };
		55CB1AF9B8494FD388658A79 /* /Users/heiner/git/QuantLib/ql/experimental/credit/loss.hpp */ = {isa = PBXBuildFile; fileRef = 873C7546280C49B09DB8935F /* /Users/heiner/git/QuantLib/ql/experimental/credit/loss.hpp */; };
		55CC944B4C4B4F04B13BB38F /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */ = {isa = PBXBuildFile; fileRef = A96D91E9CF9349C98703008E /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */; };
		55D38E153DC44C48B7CB3282 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */ = {isa = PBXBuildFile; fileRef = AF0B1C49D9DC4305B322F053 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */; };
		55D72E13D2A946478E1B686E /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.hpp */ = {isa = PBXBuildFile; fileRef = 92A371B9FFF846C28D174736 /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.hpp */; };
		55E5D7B34388439087844D92 /* /Users/heiner/git/QuantLib/test-suite/integrals.hpp */ = {isa = PBXBuildFile; fileRef = ADF18E0C09374ABC9CCA304D /* /Users/heiner/git/QuantLib/test-suite/integrals.hpp */; };
		55EA5E9F835E4403A9F76EBC /* /Users/heiner/git/QuantLib/test-suite/transformedgrid.hpp */ = {isa = PBXBuildFile; fileRef = 08465B3A61104898BFF1F546 /* /Users/heiner/git/QuantLib/test-suite/transformedgrid.hpp */; };
		5602FD067C1F498C936515B4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */ = {isa = PBXBuildFile; fileRef = F1C56449EFB3464AB8980ADE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */; };
		560AA6E03AB24D119EB7E755 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = 21FD3A72E1E14D729338694B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp */; };
		56174599393545FC880213A3 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/bisection.hpp */ = {isa = PBXBuildFile; fileRef = B5C04DCB081C4689B0BF9F5D /* /Users/heiner/git/QuantLib/ql/math/solvers1d/bisection.hpp */; };
		56190BE323BE4AE1885ACE2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = C1243F4D7AA746F8B97F51B0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */; };
		5620A1BF330D404982D77087 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.hpp */ = {isa = PBXBuildFile; fileRef = F2C82B702A894A1A84CF3780 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.hpp */; };
		562150D36ABF457D8EF36E60 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.hpp */ = {isa = PBXBuildFile; fileRef = 8CF1B60AE5E9408FA2DAAE31 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.hpp */; };
		5625EC685C724B6D9CC1BDB1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/interpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = D5E86A1F7E214D72A12E0049 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/interpolatedsmilesection.hpp */; };
		5632299BBE4E4197A037040C /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = C0D2591D61EF483790D9C13B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */; };
		5667520384D248968301B663 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 34FFA67A7A154B2FB2360AAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */; };
		5676D903B09649F2AA9AA1B7 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */ = {isa = PBXBuildFile; fileRef = E2C5F2B061CF4A7E8263610B /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */; };
		5679682C5B104F81BB203E7E /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.hpp */ = {isa = PBXBuildFile; fileRef = 0767A8D0CC8C4E22B862A887 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.hpp */; };
		567A5FD41DAE425388367CB8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.hpp */ = {isa = PBXBuildFile; fileRef = 5FD5BD5FF5224C82A5FF68DC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.hpp */; };
		5696B5F392A5459280B386C3 /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.hpp */ = {isa = PBXBuildFile; fileRef = 40D84630AA9E483A92643FAA /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.hpp */; };
		569BCD78EE1243CABE82A5C3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */ = {isa = PBXBuildFile; fileRef = EBA0048CE3754B47815D3A96 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */; };
		569DFD3EA7A84E19A3C463E5 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.hpp */ = {isa = PBXBuildFile; fileRef = 186593E18F9140898E951B7C /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.hpp */; };
		56C0382C7057402AB3D2B3B6 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.hpp */ = {isa = PBXBuildFile; fileRef = E20FAE785B2B47D892810370 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.hpp */; };
		56C0A6FC6A014471B12A02A6 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.hpp */ = {isa = PBXBuildFile; fileRef = F4D7CCB2AE70451186C58559 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.hpp */; };
		56C46C495E9946199277B86A /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */ = {isa = PBXBuildFile; fileRef = 756D084ACB9949E79448B77A /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */; };
		56D30620ACD146BEB92A78AC /* /Users/heiner/git/QuantLib/ql/termstructures/all.hpp */ = {isa = PBXBuildFile; fileRef = 5408D807481742148C5CAFE7 /* /Users/heiner/git/QuantLib/ql/termstructures/all.hpp */; };
		56E892B98C8B4E54AC9ED0F7 /* /Users/heiner/git/QuantLib/ql/currencies/america.hpp */ = {isa = PBXBuildFile; fileRef = 3FFE806F5C3A476489C3B647 /* /Users/heiner/git/QuantLib/ql/currencies/america.hpp */; };
		56F51E76FAE3440E9BC77CFC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 3F0A5EB7FA2A42E3BF0EAB37 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp */; };
		5701BA04BDA74DFBAF7961DC /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */ = {isa = PBXBuildFile; fileRef = CFBD708F1E804A50B17F4F75 /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */; };
		57097CE3FF12421795E4E6C3 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */ = {isa = PBXBuildFile; fileRef = 9413A6ED619D4679AF08CB81 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */; };
		5722DB1E08D848FA8C9E7265 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.hpp */ = {isa = PBXBuildFile; fileRef = F8DE5BA863D24CE196BB6729 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.hpp */; };
		57272A73701C46C1AA7E9303 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.hpp */ = {isa = PBXBuildFile; fileRef = 18ADD40DAC0E471691A600C9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.hpp */; };
		572B0CDE3ABD43FAA92C5EFC /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.hpp */ = {isa = PBXBuildFile; fileRef = 5BBA4A2C946B45A7B968A596 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.hpp */; };
		5747F22DE75548D48D11F9FD /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */ = {isa = PBXBuildFile; fileRef = 8A2C5111970B4C2394C15B53 /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */; };
		5752D022BD354E65A919483A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.hpp */ = {isa = PBXBuildFile; fileRef = BFDD8788F6DD4B06A74AB83E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.hpp */; };
		576BDE222B3E417B9DD05AA1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.hpp */ = {isa = PBXBuildFile; fileRef = 53DC71E223AC4057A3CADCA5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.hpp */; };
		5777B9528C02456582D5A186 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */ = {isa = PBXBuildFile; fileRef = BDF42F6089B042B09C3467D3 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */; };
		577BF3881A4C4703BD2CD4A2 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.hpp */ = {isa = PBXBuildFile; fileRef = F8FF77F59F0F4A7E8038DD22 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.hpp */; };
		578EC16155ED4C709FC339C4 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 555965371450455D9F924E7B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */; };
		579A482D56CC4BA982FEB704 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */ = {isa = PBXBuildFile; fileRef = C1420BF60CEB42D6BD88D40A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */; };
		57A096E2A44A4CD7B5F22460 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.hpp */ = {isa = PBXBuildFile; fileRef = 51354ECB1345482DAEA57A7F /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.hpp */; };
		57B5E927F3C842A8A5233954 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */ = {isa = PBXBuildFile; fileRef = 2238AA619111419195214941 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */; };
		57BC977325964F198B4724BD /* /Users/heiner/git/QuantLib/test-suite/forwardoption.hpp */ = {isa = PBXBuildFile; fileRef = BFEC9561893E4239AFC7F60C /* /Users/heiner/git/QuantLib/test-suite/forwardoption.hpp */; };
		57BD86BD250641CAB07A1678 /* /Users/heiner/git/QuantLib/ql/math/autocovariance.hpp */ = {isa = PBXBuildFile; fileRef = 4CA94FB72E1B46D09CFC6883 /* /Users/heiner/git/QuantLib/ql/math/autocovariance.hpp */; };
		57C48BBEE451449F8A6FD5C8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */ = {isa = PBXBuildFile; fileRef = 5AFEAFF81DCD411097ACFA0B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */; };
		57D1F6C6FC0E427CA41345B6 /* /Users/heiner/git/QuantLib/ql/instruments/futures.hpp */ = {isa = PBXBuildFile; fileRef = 0EAE97D90582498688FDFD42 /* /Users/heiner/git/QuantLib/ql/instruments/futures.hpp */; };
		57E04B77A82B4D91ADBCED62 /* /Users/heiner/git/QuantLib/test-suite/himalayaoption.cpp */ = {isa = PBXBuildFile; fileRef = E2B0D2191E864DBA8A79CC6F /* /Users/heiner/git/QuantLib/test-suite/himalayaoption.cpp */; };
		57E3F910C74543D7A6D3AF56 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.hpp */ = {isa = PBXBuildFile; fileRef = BA3B2834F66F4725AD8E6FF7 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.hpp */; };
		57ED0053B7D64AFC95CEEAA1 /* /Users/heiner/git/QuantLib/ql/pricingengines/genericmodelengine.hpp */ = {isa = PBXBuildFile; fileRef = BF80F97BB4584331B05465A6 /* /Users/heiner/git/QuantLib/ql/pricingengines/genericmodelengine.hpp */; };
		57FCC865D3C741FF8327F8A8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/trlibor.hpp */ = {isa = PBXBuildFile; fileRef = 77FFC15D24A8462797D9BE56 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/trlibor.hpp */; };
		58041323215F4428A361CA80 /* /Users/heiner/git/QuantLib/ql/time/calendar.hpp */ = {isa = PBXBuildFile; fileRef = 080615EED59847D9BA7C42C6 /* /Users/heiner/git/QuantLib/ql/time/calendar.hpp */; };
		5816E63EA38B48C7B55A5B11 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */ = {isa = PBXBuildFile; fileRef = CF1C4D36BC8C49E1A9FDC0F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */; };
		58214B79AB834539BC5A446E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */ = {isa = PBXBuildFile; fileRef = 655DF95EF7EC499BB535DF18 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */; };
		585E7CDC17964CE39E504588 /* /Users/heiner/git/QuantLib/ql/math/interpolations/loginterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 206DFDFE040546FAB071DD11 /* /Users/heiner/git/QuantLib/ql/math/interpolations/loginterpolation.hpp */; };
		5875881E72B64110B93DCD48 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */ = {isa = PBXBuildFile; fileRef = 7A927598CEA842E7A562796D /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */; };
		58858A5B499A45A18708B946 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */ = {isa = PBXBuildFile; fileRef = 507E6A489874406C96AEFB71 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */; };
		588F52B5CA454EC49430B668 /* /Users/heiner/git/QuantLib/ql/math/interpolations/bicubicsplineinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = C72383B2794848A7AE45CD4D /* /Users/heiner/git/QuantLib/ql/math/interpolations/bicubicsplineinterpolation.hpp */; };
		58994DE003CC43F3915FA5BF /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.hpp */ = {isa = PBXBuildFile; fileRef = F68A7B6900814C579BAA8DF5 /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.hpp */; };
		58A529E1807F402990AF36B7 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */ = {isa = PBXBuildFile; fileRef = C2198BF0D96D47C09D2E9343 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */; };
		58B3A2BED0CF4ECAA92D3EE9 /* /Users/heiner/git/QuantLib/test-suite/paralleltestrunner.hpp */ = {isa = PBXBuildFile; fileRef = 3B8D03C6BA28450BACDA5562 /* /Users/heiner/git/QuantLib/test-suite/paralleltestrunner.hpp */; };
		58CEEF1A05C0420F8D348142 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */ = {isa = PBXBuildFile; fileRef = E1A6EBF1B6B04C8184129907 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */; };
		58E9EC9F6018444485A65A7E /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */ = {isa = PBXBuildFile; fileRef = D77B5FECB7614D83B5F8EA8D /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */; };
		590445923E0F47AAB61D740A /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cadlibor.hpp */ = {isa = PBXBuildFile; fileRef = 0F9760EC5A5544DEAA28A468 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cadlibor.hpp */; };
		592EEAC989884C988E10AB9B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.hpp */ = {isa = PBXBuildFile; fileRef = EBE1072F57D045FEB6144B2E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.hpp */; };
		59438F46DDE24C2AACDD6E63 /* /Users/heiner/git/QuantLib/ql/timeseries.hpp */ = {isa = PBXBuildFile; fileRef = 12088FD5A8D04785ACE4D6D7 /* /Users/heiner/git/QuantLib/ql/timeseries.hpp */; };
		59480EE857B14E24AAE33D9B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/parallelevolver.hpp */ = {isa = PBXBuildFile; fileRef = C2A89CDA517E4A658C931B1C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/parallelevolver.hpp */; };
		594AE7CFD0CB493FBE043D54 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */ = {isa = PBXBuildFile; fileRef = EAA6CA6FAB634675AB1F6128 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */; };
		595FB4CA734C419E8B8182AE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp */ = {isa = PBXBuildFile; fileRef = E468733F1F48401AB28A3E96 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp */; };
		597806E3BB4F4C3C9ABB452E /* /Users/heiner/git/QuantLib/test-suite/daycounters.cpp */ = {isa = PBXBuildFile; fileRef = AF54DCDCC4FE45B1A56F507E /* /Users/heiner/git/QuantLib/test-suite/daycounters.cpp */; };
		5984B136FE1E4CA4BFFBE111 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */ = {isa = PBXBuildFile; fileRef = 53682E8835654821913139F2 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */; };
		59B66B7B2B6B47CEBAE05A10 /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */ = {isa = PBXBuildFile; fileRef = C91DB88C547B495C99CEB66A /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */; };
		59BD68E739A344DB9B3D377D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */ = {isa = PBXBuildFile; fileRef = 5B85130580534A799EB4EC2D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */; };
		59BE7EA5A1B94E689227D99F /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.hpp */ = {isa = PBXBuildFile; fileRef = A70888817AB543E48C1DC234 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.hpp */; };
		59C082DE8B3B40979CE336CF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/all.hpp */ = {isa = PBXBuildFile; fileRef = 481D47204EF24D9086BAF9FC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/all.hpp */; };
		59D39AC3986A42B8BD2778D2 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.hpp */ = {isa = PBXBuildFile; fileRef = 57D8252C2BF74649BC475DF8 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.hpp */; };
		59E031D43D36483E8467A1EC /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */ = {isa = PBXBuildFile; fileRef = BB086D5579D24802A295A5FF /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */; };
		59E9A8299E1C43B680968D10 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */ = {isa = PBXBuildFile; fileRef = E13165BE777B4F898272CAA8 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */; };
		59F52C2E83014FE6A5753E68 /* /Users/heiner/git/QuantLib/test-suite/gaussianquadratures.cpp */ = {isa = PBXBuildFile; fileRef = D2296F44E5B242A7BA4D37E0 /* /Users/heiner/git/QuantLib/test-suite/gaussianquadratures.cpp */; };
		59F77A0CC9C94141A61D6E83 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */ = {isa = PBXBuildFile; fileRef = 75E11E8971B04163992838C6 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */; };
		5A18B85B64034ADA8DB254AF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 4EE98437B63F40AF9396AAA8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp */; };
		5A1B9F4597B04D89A6FEFCDA /* /Users/heiner/git/QuantLib/ql/math/interpolation.hpp */ = {isa = PBXBuildFile; fileRef = 6734C1ABD197443E95E7D712 /* /Users/heiner/git/QuantLib/ql/math/interpolation.hpp */; };
		5A2CB78842A64636ACBD377A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp */ = {isa = PBXBuildFile; fileRef = DCCC9F6214174C5A90BBFEB1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp */; };
		5A469D6480784DBA88ECA73C /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.hpp */ = {isa = PBXBuildFile; fileRef = 368F8ACBB302421289E0094E /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.hpp */; };
		5A52A51EC13B48B1971E094A /* /Users/heiner/git/QuantLib/ql/models/shortrate/all.hpp */ = {isa = PBXBuildFile; fileRef = 2804DC094E704B358B175DE5 /* /Users/heiner/git/QuantLib/ql/models/shortrate/all.hpp */; };
		5A69EFE08F0D43FF95C66061 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp */ = {isa = PBXBuildFile; fileRef = 30081C57F5704809A4A9EAED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp */; };
		5A7A96186C654ED3A4245E66 /* /Users/heiner/git/QuantLib/ql/patterns/curiouslyrecurring.hpp */ = {isa = PBXBuildFile; fileRef = C8704CE34698452DBC718445 /* /Users/heiner/git/QuantLib/ql/patterns/curiouslyrecurring.hpp */; };
		5A7B85D1DCAE4D89AD11D1E8 /* /Users/heiner/git/QuantLib/ql/instruments/swaption.hpp */ = {isa = PBXBuildFile; fileRef = C35A5051132F4FBAA72D36BC /* /Users/heiner/git/QuantLib/ql/instruments/swaption.hpp */; };
		5A7CC53ED6EA4FBFBAD744AB /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.hpp */ = {isa = PBXBuildFile; fileRef = B4CE47ED79DD4A03980CD733 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.hpp */; };
		5A8D4210A6354102AD50E2F7 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */ = {isa = PBXBuildFile; fileRef = 8B347E7B3D8646B6BDBE246B /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */; };
		5A9664BF83644F1FBBAF944C /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */ = {isa = PBXBuildFile; fileRef = 5F0746BCECC348D88C4CBFAB /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */; };
		5AB11B2BF68D4CBDA2C56537 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/earlyexercisepathpricer.hpp */ = {isa = PBXBuildFile; fileRef = D99A696F867D43A9A2C38B24 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/earlyexercisepathpricer.hpp */; };
		5ABF9CB0FE96419EA6970992 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp */ = {isa = PBXBuildFile; fileRef = 674CCDE8F71943198E6E237D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp */; };
		5ADFFBA6C3B149F2BB1A75F6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = 088B5C3322654F3AA004B027 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp */; };
		5AF24584DEC14364B178625A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.hpp */ = {isa = PBXBuildFile; fileRef = F364286E4E3543CB8AAA2B4B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.hpp */; };
		5AF6829F86DF4D4AA40D7962 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = 7CE1AF8D31E44B259E87F1D4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/all.hpp */; };
		5B03C8BD872F4C55919F9EFB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp */ = {isa = PBXBuildFile; fileRef = 32B880E80DE646D6A849DE12 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp */; };
		5B11B4E2BEC247D5930C8E56 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */ = {isa = PBXBuildFile; fileRef = 33C7E0BE7E294CD6BD078EEE /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */; };
		5B14E1AE4EA9432F9ED07A4F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = EC0A7CA3EF7A48D3B08E3C6C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */; };
		5B19AB70C31E45E9B9647A90 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 05D3718B74564A868E1BD249 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.hpp */; };
		5B35E964EF844ADF9DC566AC /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */ = {isa = PBXBuildFile; fileRef = 5042900DF6A04B158BE463C6 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */; };
		5B48EAA7E46144ACA3072036 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */ = {isa = PBXBuildFile; fileRef = 3EF53B054DB54F7385E4FABD /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */; };
		5B504BA2BB0541F59393F191 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp */ = {isa = PBXBuildFile; fileRef = 41257AF156914742B0CABEE3 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp */; };
		5B5184EB0DAC430391F9B673 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.hpp */ = {isa = PBXBuildFile; fileRef = 20FB6CC959A5416EBD4B9D0C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.hpp */; };
		5B531444A0F44DB2A2040ECB /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */ = {isa = PBXBuildFile; fileRef = D22715C41A124C8E84123E01 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */; };
		5B58E813A8594AB8BC9DAAC3 /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */ = {isa = PBXBuildFile; fileRef = 142E991C042C473E8E46CCFB /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */; };
		5B5C84ECC8404A898872B035 /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.hpp */ = {isa = PBXBuildFile; fileRef = 97E0DE5C58D84C559C42C87B /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.hpp */; };
		5B74710ECA1644AFA3F58499 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.hpp */ = {isa = PBXBuildFile; fileRef = 55F8A7E191ED4B1DB033905C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.hpp */; };
		5B826EF36C3E44448C856CC5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */ = {isa = PBXBuildFile; fileRef = D9C28A6DBD9348EC997A1D5A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */; };
		5B8A9F946723436CA1852437 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.hpp */ = {isa = PBXBuildFile; fileRef = 640A7D17D83F4095898DBAD2 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.hpp */; };
		5B90EEB4F61A41898881FA35 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */ = {isa = PBXBuildFile; fileRef = 63BB1F871AB14660B509CDCA /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */; };
		5B964537E1C84BB59C72996D /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */ = {isa = PBXBuildFile; fileRef = DA4AFC90D7674A7F992C0407 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */; };
		5C002D5A79304189B9AEE09B /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */ = {isa = PBXBuildFile; fileRef = 2C5D567B54C84E67A2B44C11 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */; };
		5C07A6BA9A7F49B5B99FE04E /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.hpp */ = {isa = PBXBuildFile; fileRef = F070E86BA9AE4ED3AAE6298B /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.hpp */; };
		5C26472E3E88415DB86F8A2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */ = {isa = PBXBuildFile; fileRef = C3AA9E29396D4260B1F680A0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */; };
		5C42CCB10E5B449098D017EB /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice1d.hpp */ = {isa = PBXBuildFile; fileRef = 59E82CDC049A4537ADB4C7BC /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice1d.hpp */; };
		5C4F2C0A91D54DC4A65DEC31 /* /Users/heiner/git/QuantLib/test-suite/creditriskplus.cpp */ = {isa = PBXBuildFile; fileRef = 77AA8F8BBE58420D864D8B87 /* /Users/heiner/git/QuantLib/test-suite/creditriskplus.cpp */; };
		5C5719FE290D4072A7732FE4 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.hpp */ = {isa = PBXBuildFile; fileRef = DD9A7E3DA36340DFB9BE444B /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.hpp */; };
		5C620177FD7740D2A2166B84 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */ = {isa = PBXBuildFile; fileRef = B39B67E665D5432EB1E8CA04 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */; };
		5C6A8467AF644D5FA4F756AD /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */ = {isa = PBXBuildFile; fileRef = 8CA82BAD24184DB994DEA36F /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */; };
		5C816041D67D49209C04C63F /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */ = {isa = PBXBuildFile; fileRef = 4F0A12BF2E1D47EEA3E22158 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */; };
		5C827041F23F40A9B7ADFD25 /* /Users/heiner/git/QuantLib/ql/patterns/visitor.hpp */ = {isa = PBXBuildFile; fileRef = 1D59932B7FB04E54B9A0865B /* /Users/heiner/git/QuantLib/ql/patterns/visitor.hpp */; };
		5C87A58E383F49C88F1FE8B8 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolateddefaultdensitycurve.hpp */ = {isa = PBXBuildFile; fileRef = B69398B52CB74E5C8EE5FB10 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolateddefaultdensitycurve.hpp */; };
		5C87AB5F08014335A5C05B5B /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */ = {isa = PBXBuildFile; fileRef = 45FD8E6D448B4FF29A85B9AE /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */; };
		5C9988CE8DC040E5A68FD638 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 86CA8F19B12D4ABEBCFDE97F /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */; };
		5CA97A3BFBDA49C2B0169221 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 990276D3DCBC4A018CA394AF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */; };
		5CB9165403BB4A6B9C26550B /* /Users/heiner/git/QuantLib/ql/utilities/null_deleter.hpp */ = {isa = PBXBuildFile; fileRef = C64115D907D24B1587FE9CB9 /* /Users/heiner/git/QuantLib/ql/utilities/null_deleter.hpp */; };
		5CBCED469B67474C8E14F706 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.hpp */ = {isa = PBXBuildFile; fileRef = 685EFA0BD4C943C58FC018B9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.hpp */; };
		5CEC53A40E154482B8122534 /* /Users/heiner/git/QuantLib/test-suite/optionletstripper.hpp */ = {isa = PBXBuildFile; fileRef = 7DAB28997E0144958170341D /* /Users/heiner/git/QuantLib/test-suite/optionletstripper.hpp */; };
		5D023811476142A99D1970E9 /* /Users/heiner/git/QuantLib/test-suite/riskstats.hpp */ = {isa = PBXBuildFile; fileRef = 9B4BF5B6D8294C9397BCD787 /* /Users/heiner/git/QuantLib/test-suite/riskstats.hpp */; };
		5D03930EE56E445F9021B41A /* /Users/heiner/git/QuantLib/ql/math/interpolations/multicubicspline.hpp */ = {isa = PBXBuildFile; fileRef = 0AFAD612DA8A4006B0EA11F9 /* /Users/heiner/git/QuantLib/ql/math/interpolations/multicubicspline.hpp */; };
		5D129BA2834340F39C68B9D5 /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.hpp */ = {isa = PBXBuildFile; fileRef = DA1E4B2D41D849AC82B671D2 /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.hpp */; };
		5D3E515D25F14F8BB738D5B6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */ = {isa = PBXBuildFile; fileRef = FBAB6CE56D4A45C58F348481 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */; };
		5D61C70A1C2D4CE68A2B5935 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */ = {isa = PBXBuildFile; fileRef = 8CDF222D5E3545C79702EE10 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */; };
		5D75EBC92A64464683F8CC61 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 2CB0011778AF47C8AC4E7236 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.hpp */; };
		5D88C480701B487293D884E3 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationtraits.hpp */ = {isa = PBXBuildFile; fileRef = D70E3F747605443D96BB0F64 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationtraits.hpp */; };
		5D89FA5C2CE74A3C832BE9B5 /* /Users/heiner/git/QuantLib/Examples/LatentModel/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 33C4A1B053D641B49816825F /* /Users/heiner/git/QuantLib/Examples/LatentModel/CMakeLists.txt */; };
		5DB598B3826B4D2BABDF9392 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/all.hpp */ = {isa = PBXBuildFile; fileRef = FE9899E360424EB297F79547 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/all.hpp */; };
		5DBD2F9CDCDA444280C09637 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */ = {isa = PBXBuildFile; fileRef = 595A5D59DC3D45C2B86FF879 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */; };
		5DD899C5D3314C8E87E1C241 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmesher.hpp */ = {isa = PBXBuildFile; fileRef = 1845593132A047438A614777 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmesher.hpp */; };
		5DE3FFB4C79243DDB729003B /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.hpp */ = {isa = PBXBuildFile; fileRef = 9BC8D6A7870F42FDA09C0251 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.hpp */; };
		5E041F2DA1424B4289E55147 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.hpp */ = {isa = PBXBuildFile; fileRef = CBF02E9A34804FD6B37EDDD5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.hpp */; };
		5E107966C1BF474EA94594D4 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.hpp */ = {isa = PBXBuildFile; fileRef = B9032A5DB2E044F68F2D081E /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.hpp */; };
		5E34BB04BCF648DF9C2BC6ED /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.hpp */ = {isa = PBXBuildFile; fileRef = 4855EF97652A471B8F964850 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.hpp */; };
		5E3C207F5C2340689E4CE9D5 /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */ = {isa = PBXBuildFile; fileRef = FF4BCE3E09D744CDA62143B1 /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */; };
		5E42FD2DD0C148D988CD0D95 /* /Users/heiner/git/QuantLib/ql/index.cpp */ = {isa = PBXBuildFile; fileRef = B9BD14AA60C2486BA0AF5D9E /* /Users/heiner/git/QuantLib/ql/index.cpp */; };
		5E4448337B3D47509548EEBB /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.hpp */ = {isa = PBXBuildFile; fileRef = 3942F392B7204F1B973C4053 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.hpp */; };
		5E48DB7607CF41F584A04D66 /* /Users/heiner/git/QuantLib/ql/patterns/curiouslyrecurring.hpp */ = {isa = PBXBuildFile; fileRef = 06AA987CD3E24FDB939655DE /* /Users/heiner/git/QuantLib/ql/patterns/curiouslyrecurring.hpp */; };
		5E4E33E316524B6B9BB09774 /* /Users/heiner/git/QuantLib/ql/experimental/math/claytoncopularng.hpp */ = {isa = PBXBuildFile; fileRef = 006FAF95BFA04CE48594F2EC /* /Users/heiner/git/QuantLib/ql/experimental/math/claytoncopularng.hpp */; };
		5E5276EE8DCC4ECDB9357253 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = EFACC3E9A3684323BED78B43 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp */; };
		5E8C109F1CCF42B8B1CB31F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */ = {isa = PBXBuildFile; fileRef = 77905C4BB17543A4B93A2D3E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */; };
		5EB6A95A0AD44066AC597ABD /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp */ = {isa = PBXBuildFile; fileRef = D87B36086B8A471A8538338F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp */; };
		5EBB954AF1544B97AFF1B47E /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.hpp */ = {isa = PBXBuildFile; fileRef = 78E52937083A4485A7D5A63F /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.hpp */; };
		5EC132948A534A0C83C2E33A /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */ = {isa = PBXBuildFile; fileRef = A236FF8982354E0B9EB9AFA1 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */; };
		5EC6DBF149964D679EF6D5C6 /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */ = {isa = PBXBuildFile; fileRef = CA8F69DC94A24133819048C4 /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */; };
		5ED8E7E9D99143E497D890BD /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */ = {isa = PBXBuildFile; fileRef = E9DD08B4BF1D4B5198AB514A /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */; };
		5EE21828027242728911575B /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = 60AC6987DE804DBC9A319FD9 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.hpp */; };
		5EFC62551EBA421DA037CAEB /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp */ = {isa = PBXBuildFile; fileRef = DC6E0CD1002346F7BB819B87 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp */; };
		5F02FCDAC5C64020AB740BDB /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.hpp */ = {isa = PBXBuildFile; fileRef = 88140968DE42492496C52CE0 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.hpp */; };
		5F090BC578D54873AF176DF1 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */ = {isa = PBXBuildFile; fileRef = 81588BC53BEF4178B3BEF761 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */; };
		5F24868676DE41D0A414DBFC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */ = {isa = PBXBuildFile; fileRef = 6BE40F5E599A41ADBA74B6C9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */; };
		5F61D846FE0D41E1AFED3AAB /* /Users/heiner/git/QuantLib/ql/experimental/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = 2473C452BE6846048A32CB6C /* /Users/heiner/git/QuantLib/ql/experimental/inflation/all.hpp */; };
		5F71668687C14F75B269BAD1 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */ = {isa = PBXBuildFile; fileRef = 2BC21EFE9AF74D96A03697BE /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */; };
		5F75BDC626E243D18ADFA1F3 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.hpp */ = {isa = PBXBuildFile; fileRef = DD23F3500FD6451099C6C21D /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.hpp */; };
		5F853A5D53D444DBAE86C55D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp */ = {isa = PBXBuildFile; fileRef = 9A9AB1CB86BC46EA81FC112F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp */; };
		5F96F96D8DD74D77B1346045 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bbsw.hpp */ = {isa = PBXBuildFile; fileRef = 75AAF712C88A42BFAAFE2453 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bbsw.hpp */; };
		5FA664A6BCBE4760AE7B717D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.hpp */ = {isa = PBXBuildFile; fileRef = 0D3C430D6AF64E00961CDFD3 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.hpp */; };
		5FA7EF7FBC2E4E6794CADDDD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/duffsdeviceinnerproduct.hpp */ = {isa = PBXBuildFile; fileRef = EBCFCFB0A1B142AD85150CA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/duffsdeviceinnerproduct.hpp */; };
		5FCD1186B9D44F84BC4D43EF /* /Users/heiner/git/QuantLib/ql/quantlib.hpp */ = {isa = PBXBuildFile; fileRef = F8168CEF056549E7B9D2AC4A /* /Users/heiner/git/QuantLib/ql/quantlib.hpp */; };
		5FD3BA023DEB474B9B9E8042 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.hpp */ = {isa = PBXBuildFile; fileRef = C7F686EF653B49B7B8DA8334 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.hpp */; };
		5FD5F2656223468681DAAB65 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp */ = {isa = PBXBuildFile; fileRef = 07BBD3825CFA45FFAA808FA4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp */; };
		5FE277079A5B45D4814DE2F8 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.hpp */ = {isa = PBXBuildFile; fileRef = C3E7B3388CAA47E3B457FC24 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.hpp */; };
		5FE9D4A7B89C409CBCD6E883 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */ = {isa = PBXBuildFile; fileRef = CE7556CE3C334C5EA6F3FD45 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */; };
		5FEA9AD2C46740A0B30274C3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.hpp */ = {isa = PBXBuildFile; fileRef = 63A7CC953D9F4C99AE869C6B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.hpp */; };
		5FFBFDB74B9541358A80ABF0 /* /Users/heiner/git/QuantLib/test-suite/inflationvolatility.hpp */ = {isa = PBXBuildFile; fileRef = A9D505AD9EA747DFAD877306 /* /Users/heiner/git/QuantLib/test-suite/inflationvolatility.hpp */; };
		5FFCD69A557B418A88952600 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.hpp */ = {isa = PBXBuildFile; fileRef = 8B99879D67FF472E9BBD2862 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.hpp */; };
		6013D09705644657AD9B642E /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */ = {isa = PBXBuildFile; fileRef = 064344D9864B4AB9BE166F45 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */; };
		6027B9FA207C40AD8C17D759 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.hpp */ = {isa = PBXBuildFile; fileRef = D90E8A66EE2149EB8F4A296E /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.hpp */; };
		603650CA330E4C8F802E8DC5 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.hpp */ = {isa = PBXBuildFile; fileRef = EAC6E7F6A65B4C13B4C20384 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.hpp */; };
		60541C78A72C40A0942BB842 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */ = {isa = PBXBuildFile; fileRef = AA615EDD6B28469CA795126D /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */; };
		605BC866BAF1472DA90C0059 /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */ = {isa = PBXBuildFile; fileRef = 69C4987189F5491593B9379D /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */; };
		60880864D7884F0798532D0F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */ = {isa = PBXBuildFile; fileRef = ACBF1F27A4964852A020D451 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */; };
		6092B651E6914EE4AEB67127 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 13287E20AAA745D2A4ABD803 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.hpp */; };
		609F189EF4B8471EA2D4C9A5 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = FA3A80D4EF35498CAD2FD26D /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.hpp */; };
		60B90AA7C0D7400BACF9F6CF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp */ = {isa = PBXBuildFile; fileRef = A4370E439FCD487C91E919E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp */; };
		61030E8EA5AC46F193DCE93C /* /Users/heiner/git/QuantLib/ql/discretizedasset.hpp */ = {isa = PBXBuildFile; fileRef = C6BE55CAD400473D95A7514C /* /Users/heiner/git/QuantLib/ql/discretizedasset.hpp */; };
		61032A16A3F8408A8CD4CC2D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */ = {isa = PBXBuildFile; fileRef = A96249085F6B435BAAB940D9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */; };
		611ED575A9C941D38A2C7D06 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = E51CF59DFBEB4ABE983B4F66 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp */; };
		61531FEEF82A46E299422C16 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */ = {isa = PBXBuildFile; fileRef = A03DA38ACFCB43ACA4430B12 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */; };
		6176921829214796A2E63B6D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */ = {isa = PBXBuildFile; fileRef = FB162405E4E241E8BD1042BC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */; };
		617996AD11A448AD99A5B298 /* /Users/heiner/git/QuantLib/ql/settings.hpp */ = {isa = PBXBuildFile; fileRef = DBEC4D85F81342E8B450D9D4 /* /Users/heiner/git/QuantLib/ql/settings.hpp */; };
		618B110A1CFE4108B7700D26 /* /Users/heiner/git/QuantLib/ql/patterns/observable.hpp */ = {isa = PBXBuildFile; fileRef = 0EB97ADDA08544648488B97D /* /Users/heiner/git/QuantLib/ql/patterns/observable.hpp */; };
		61C80CF61CAB4F1EAC62A4B5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/expliciteuler.hpp */ = {isa = PBXBuildFile; fileRef = 5F254CCB76C64D3FB817916E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/expliciteuler.hpp */; };
		61CAEC115E744795B7658644 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 37029505F3E74912BBD31D83 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp */; };
		61CFE19CAC3442B8A1812188 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp */ = {isa = PBXBuildFile; fileRef = 940B636C313943B59283F241 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp */; };
		61D69CE9E39344CB9536856B /* /Users/heiner/git/QuantLib/ql/patterns/composite.hpp */ = {isa = PBXBuildFile; fileRef = 94415481E20547859B499770 /* /Users/heiner/git/QuantLib/ql/patterns/composite.hpp */; };
		61D95387AC8C41789EACB712 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.hpp */ = {isa = PBXBuildFile; fileRef = A836B87431DD46BEAD2854E1 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.hpp */; };
		61DBC2208A54436CAADC76F2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzdlibor.hpp */ = {isa = PBXBuildFile; fileRef = 8ACF40E2423A493693566B52 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzdlibor.hpp */; };
		61DBCE7F1B3F4A0E91359B5E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = B7BF422BA645481DA085E48E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */; };
		61E4A27973224C748B1EBB99 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */ = {isa = PBXBuildFile; fileRef = C51C27D7BDA441F8881705D1 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */; };
		61EA8EF0006644B6AF46EB9B /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */ = {isa = PBXBuildFile; fileRef = 6122AEB922E64EDAA8A9B6B6 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */; };
		61ED07F63BD34E318161ED7C /* /Users/heiner/git/QuantLib/test-suite/margrabeoption.hpp */ = {isa = PBXBuildFile; fileRef = 8F7691EB609E4F439F2B6AF9 /* /Users/heiner/git/QuantLib/test-suite/margrabeoption.hpp */; };
		61FB0B637BBE4B6ABFBAF38B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */ = {isa = PBXBuildFile; fileRef = 04EDB76CDEF5409690F69623 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */; };
		6213550F83C643879451C3C1 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */ = {isa = PBXBuildFile; fileRef = 9E4D0F0570534415856CC0FE /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */; };
		62351A188D0F4CEEAE632B48 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */ = {isa = PBXBuildFile; fileRef = 1E028D9470A44375A0AA5C63 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */; };
		62379AB680C54862A1690444 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 19160BE3533C43E0A579CC1C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */; };
		6241D061DADD4A56A7E216CA /* /Users/heiner/git/QuantLib/ql/math/ode/all.hpp */ = {isa = PBXBuildFile; fileRef = 336ECAFBD42A42839986F998 /* /Users/heiner/git/QuantLib/ql/math/ode/all.hpp */; };
		6242B65DDF0D40A4A42455CB /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.hpp */ = {isa = PBXBuildFile; fileRef = 5C81D711743944F8B5050DB4 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.hpp */; };
		624B3ADB254D41A491ED274D /* /Users/heiner/git/QuantLib/ql/methods/lattices/bsmlattice.hpp */ = {isa = PBXBuildFile; fileRef = 110A7389A2634C0A93E98014 /* /Users/heiner/git/QuantLib/ql/methods/lattices/bsmlattice.hpp */; };
		6251EB8FFE444A5D9373C9A8 /* /Users/heiner/git/QuantLib/test-suite/solvers.hpp */ = {isa = PBXBuildFile; fileRef = E3FD0A7F2BA046EFB0438034 /* /Users/heiner/git/QuantLib/test-suite/solvers.hpp */; };
		625B37D0837F44DC81D8171C /* /Users/heiner/git/QuantLib/ql/experimental/math/latentmodel.hpp */ = {isa = PBXBuildFile; fileRef = 3F4C822065E44C58B387C9E4 /* /Users/heiner/git/QuantLib/ql/experimental/math/latentmodel.hpp */; };
		6265532B49494E8484F6D097 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */ = {isa = PBXBuildFile; fileRef = 664D70BBC1714428B478C834 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */; };
		62704ED095474B0199528E3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp */ = {isa = PBXBuildFile; fileRef = FFB7BE9EE3A1463CA41A40AB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp */; };
		62719BA840004B45BBD02CA0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */ = {isa = PBXBuildFile; fileRef = 2F18A92A41EA487681013380 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */; };
		62A13F902E2142FFBD9484E4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp */ = {isa = PBXBuildFile; fileRef = EB14BDDF7E5D4862BCEBBE36 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp */; };
		62AA088AD0954BC9B5C1F597 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */ = {isa = PBXBuildFile; fileRef = 1291203F53D54AD7B75A8077 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */; };
		62B2D8ECF6834702B8D9FAA4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp */ = {isa = PBXBuildFile; fileRef = D6EF1CCD5FD84F228286E1DD /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp */; };
		62FD1384842B40A6B0CB366E /* /Users/heiner/git/QuantLib/test-suite/dates.hpp */ = {isa = PBXBuildFile; fileRef = 2A0978E9E95D4EE597E8E74F /* /Users/heiner/git/QuantLib/test-suite/dates.hpp */; };
		62FEF2F087744402A691C16C /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/all.hpp */ = {isa = PBXBuildFile; fileRef = 1721036ED6284EDB8690A2B6 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/all.hpp */; };
		63125E13CDA34ED6A2331A5A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp */ = {isa = PBXBuildFile; fileRef = 1E68853422EE41029A1871F9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp */; };
		631B4B7E5E1543B4AA6D7893 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisemultiproduct.hpp */ = {isa = PBXBuildFile; fileRef = F02B507E9474498A93FB7BBF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisemultiproduct.hpp */; };
		63471F6CE307488E8FC56FAC /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.hpp */ = {isa = PBXBuildFile; fileRef = 84F473323FA6496390933A39 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.hpp */; };
		6354AE6A7C6847DB96037F16 /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.hpp */ = {isa = PBXBuildFile; fileRef = 55BC615E9FBA491C822B4D1E /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.hpp */; };
		6359FACBBF10436797C3E423 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.hpp */ = {isa = PBXBuildFile; fileRef = 16A957CDC16942E4A1D34686 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.hpp */; };
		63633B963B7940079C4F730B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/all.hpp */ = {isa = PBXBuildFile; fileRef = 01ECB4FEF26F4D8087314AC7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/all.hpp */; };
		63686469943040698CDC9611 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = DB5381FB1FFD4309BE15072B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.hpp */; };
		6374434C0B714443B3A0C2D3 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.hpp */ = {isa = PBXBuildFile; fileRef = 194903EBB6864508A1CB2666 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.hpp */; };
		637534A37B4E4A25849E31DE /* /Users/heiner/git/QuantLib/test-suite/mersennetwister.hpp */ = {isa = PBXBuildFile; fileRef = 4A9FC2D981B141E78115829D /* /Users/heiner/git/QuantLib/test-suite/mersennetwister.hpp */; };
		6375731E908841C1AE34EDCF /* /Users/heiner/git/QuantLib/ql/handle.hpp */ = {isa = PBXBuildFile; fileRef = BA83A09569E3497291A75A8E /* /Users/heiner/git/QuantLib/ql/handle.hpp */; };
		6388B23499194C5DB4B02E7E /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */ = {isa = PBXBuildFile; fileRef = 943BD1DA630C46F1A75443BE /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */; };
		638FEC61C0C04B8FA681B1B6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.hpp */ = {isa = PBXBuildFile; fileRef = A5BB170CD367402C92D8478E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.hpp */; };
		639FB6361ECE4C8DB61CCDB3 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */ = {isa = PBXBuildFile; fileRef = 1DA430D7CA3D4B6A918183C2 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */; };
		63A0CA92F5B54DB3836E27AA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */ = {isa = PBXBuildFile; fileRef = 8F85BC7400AE4ABDB6A4BAB3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */; };
		63A58164505344CAA859CCBC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.hpp */ = {isa = PBXBuildFile; fileRef = 1022D930840E44E09E238081 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.hpp */; };
		63A6DEDCF9AB4282A520A44A /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */ = {isa = PBXBuildFile; fileRef = EFACB444DFD647F1B5D63569 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */; };
		63B26851303249B38A1AB354 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.hpp */ = {isa = PBXBuildFile; fileRef = B9067D73479B45439DAA8A3A /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.hpp */; };
		63B9A6F62A4345A3BEE1757A /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */ = {isa = PBXBuildFile; fileRef = BA29497919904BB3BFD8D73D /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */; };
		63D4E358C82B471C89F1342A /* /Users/heiner/git/QuantLib/ql/money.hpp */ = {isa = PBXBuildFile; fileRef = F36DFA3AC37F47A386D3303B /* /Users/heiner/git/QuantLib/ql/money.hpp */; };
		63DBC835B525405CB5DEE8EE /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp */ = {isa = PBXBuildFile; fileRef = 9864DB89BADE40A0A50E98A0 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp */; };
		64016383F445468D93336EFF /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */ = {isa = PBXBuildFile; fileRef = AFA690CC379C43F188A0E376 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */; };
		641BFE42E4A949B1B23B0DDD /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */ = {isa = PBXBuildFile; fileRef = BDD3CCC1C5EB447A9E8B054B /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */; };
		641E3C200BF040C5B78AD011 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.hpp */ = {isa = PBXBuildFile; fileRef = 425E3B7566E845CABC1CDB63 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.hpp */; };
		641E85CB4B144EDC82C287E9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = A88B9F21D0DB46B698A9C1B9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrsmilesection.hpp */; };
		6427F6741C014D33AC738F70 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */ = {isa = PBXBuildFile; fileRef = D80B8BAA84D84894A9AF422C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */; };
		643476631D144DEFB7D77A31 /* /Users/heiner/git/QuantLib/ql/math/distributions/all.hpp */ = {isa = PBXBuildFile; fileRef = F2D78CA48CFC4748B6AE7BAC /* /Users/heiner/git/QuantLib/ql/math/distributions/all.hpp */; };
		643AEA90EF3E41A8ABC3DFE7 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */ = {isa = PBXBuildFile; fileRef = 76FE16BDE176448CA199C8EC /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */; };
		643F34A409E944B78AFD6975 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */ = {isa = PBXBuildFile; fileRef = FACF0ACB61754803A2254082 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */; };
		64411790017F42DB8BC47007 /* /Users/heiner/git/QuantLib/ql/errors.hpp */ = {isa = PBXBuildFile; fileRef = 0D86200326D840D6B39CBDFC /* /Users/heiner/git/QuantLib/ql/errors.hpp */; };
		645A6FCCB8A24A0088BCACC1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/factorspreadedhazardratecurve.hpp */ = {isa = PBXBuildFile; fileRef = D983BC410DC84892AD9820C1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/factorspreadedhazardratecurve.hpp */; };
		646AA3F4CA6849169628CF3D /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.hpp */ = {isa = PBXBuildFile; fileRef = 2D4146F034C840F884307B79 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.hpp */; };
		646ED2317FD64F23AA9B8424 /* /Users/heiner/git/QuantLib/ql/legacy/all.hpp */ = {isa = PBXBuildFile; fileRef = B5FCC3CB126141F78CB50F01 /* /Users/heiner/git/QuantLib/ql/legacy/all.hpp */; };
		6473A107CC304325ADA82644 /* /Users/heiner/git/QuantLib/ql/time/daycounter.hpp */ = {isa = PBXBuildFile; fileRef = D9E981E9738E4A3C9ED8928E /* /Users/heiner/git/QuantLib/ql/time/daycounter.hpp */; };
		649C1F7E022E420F982320C9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/all.hpp */ = {isa = PBXBuildFile; fileRef = 6199151913804A039926902E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/all.hpp */; };
		64A5093CE4DC49B18C8204CE /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 9E399BDEBF7F4AD1AED08990 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatinterpolation.hpp */; };
		64B6719421074163A0DFFD46 /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = A4DEBE024FD341D6A02E18A8 /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.hpp */; };
		64B689BCC11F47C7A4AE48D2 /* /Users/heiner/git/QuantLib/ql/math/functional.hpp */ = {isa = PBXBuildFile; fileRef = E7DD1752F7764383A261D496 /* /Users/heiner/git/QuantLib/ql/math/functional.hpp */; };
		64B937A865D54D3E983565A5 /* /Users/heiner/git/QuantLib/ql/exchangerate.hpp */ = {isa = PBXBuildFile; fileRef = B1B71DC2CDDD4DFFA30DE45C /* /Users/heiner/git/QuantLib/ql/exchangerate.hpp */; };
		64CA9A72EE60448EA5DB57E9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 4B28FBA4495848DB9215CD03 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */; };
		64CA9BF3F16E47C5A33ED07E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.hpp */ = {isa = PBXBuildFile; fileRef = 2A5A0C5E2D5E428EBAA56988 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.hpp */; };
		64D509D351B94CDAB70DEB31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = 648E51C6566F43EFAEE643FC /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.hpp */; };
		64DFE11246BD44CAB66C7D96 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.hpp */ = {isa = PBXBuildFile; fileRef = 350AC5D4BB55488BA2E56D3D /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.hpp */; };
		6500177AD67148A49CA23E75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */ = {isa = PBXBuildFile; fileRef = FC076640D0CC4E67BF58B871 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */; };
		65265C42536747DAB81D9539 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipath.hpp */ = {isa = PBXBuildFile; fileRef = BC25E1E22F1947F89A3F8457 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipath.hpp */; };
		6527C4FB2AE6464DB6819E82 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp */ = {isa = PBXBuildFile; fileRef = 9B0A39892BA740639C49E187 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp */; };
		6540F45AA80649808C2FC515 /* /Users/heiner/git/QuantLib/test-suite/twoassetcorrelationoption.hpp */ = {isa = PBXBuildFile; fileRef = 3135B753C40F436290575C42 /* /Users/heiner/git/QuantLib/test-suite/twoassetcorrelationoption.hpp */; };
		6542CE16C4D2479A99F2244D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.hpp */ = {isa = PBXBuildFile; fileRef = 92A249FE9265464F980BE939 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.hpp */; };
		657794D547C54B538D9AE865 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.hpp */ = {isa = PBXBuildFile; fileRef = C90A824266CC45AEA6F9CFD1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.hpp */; };
		659440D3505A47DEBBAF0CE2 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.hpp */ = {isa = PBXBuildFile; fileRef = 0B8E6AA990A640C2AB484639 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.hpp */; };
		659610E377884B52949AF46B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */ = {isa = PBXBuildFile; fileRef = F3B24FA6DBCB4BBE8A7EBC62 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */; };
		65A2F9D502244F4FBE3D788D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 0FD51DE83918413184860933 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp */; };
		65AF3BE2FEC54898B8E72ECB /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/all.hpp */ = {isa = PBXBuildFile; fileRef = 747C8A384B6B4671A2088ADB /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/all.hpp */; };
		65D5A69AA88544A889A9A582 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */ = {isa = PBXBuildFile; fileRef = 80AB74B7B3744649927FC8FA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */; };
		6609C3829A8A456EA2F5FBD5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/tree.hpp */ = {isa = PBXBuildFile; fileRef = 8854AFE38A164ADC8ADB0C7E /* /Users/heiner/git/QuantLib/ql/methods/lattices/tree.hpp */; };
		661075BBF2CC4678B800B924 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.hpp */ = {isa = PBXBuildFile; fileRef = 5B3106B25983491FB5285DE6 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.hpp */; };
		663ABBAEDB2A4C6482C748B2 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/replicatingvarianceswapengine.hpp */ = {isa = PBXBuildFile; fileRef = 433AFC848D4A4DF08073AB9D /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/replicatingvarianceswapengine.hpp */; };
		663C5AA368A84F698D67EB76 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelparametricexercise.hpp */ = {isa = PBXBuildFile; fileRef = 69ED8530774E44DCA9220010 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelparametricexercise.hpp */; };
		66571C901E354E9B87220020 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */ = {isa = PBXBuildFile; fileRef = 1C749647296F4548B80EAC15 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */; };
		66576E05E436401E98122992 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */ = {isa = PBXBuildFile; fileRef = 0254FA2168844B21AABBD645 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */; };
		6665048E02BD483598823196 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = 16CCF55507B54010A7EC164B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */; };
		666FFE23F23B411E9BF7CA5D /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */ = {isa = PBXBuildFile; fileRef = FFB28E478538491C95E87247 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */; };
		6683B26B06CF4C97AEE4521F /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice2d.hpp */ = {isa = PBXBuildFile; fileRef = AB0F7A99A1FA4CCA9C22989E /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice2d.hpp */; };
		66867005E23D4239A86EF2D5 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/chflibor.hpp */ = {isa = PBXBuildFile; fileRef = 5A8CCFFE0A4F4AD796C9513E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/chflibor.hpp */; };
		668C027621C5492C969D69C0 /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.hpp */ = {isa = PBXBuildFile; fileRef = B1C1667AE1A34924B3881256 /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.hpp */; };
		669C32BD23CB48C1B89E545A /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */ = {isa = PBXBuildFile; fileRef = 54F1CE6C5F6F4A43990A4350 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */; };
		66A4126529904AFEBBAEDCF6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = F0E78E1AB29C4127B3E77BC9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp */; };
		66A5A4C06C2C4B51882DDDAF /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.hpp */ = {isa = PBXBuildFile; fileRef = 02BFF3F762194489B8569D6B /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.hpp */; };
		66AEED91C0ED4C55A37F9426 /* /Users/heiner/git/QuantLib/ql/processes/g2process.hpp */ = {isa = PBXBuildFile; fileRef = AC03321338E141CDBD63D359 /* /Users/heiner/git/QuantLib/ql/processes/g2process.hpp */; };
		66B453F60971417B9A045B10 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */ = {isa = PBXBuildFile; fileRef = 65AB221092C548FE83F17D68 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */; };
		66B5644D8F7E491AAFA0AFEF /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/all.hpp */ = {isa = PBXBuildFile; fileRef = 63830BA6F12E4EA8A315351D /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/all.hpp */; };
		66B9AD6A980A4D849FC0FBF8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */ = {isa = PBXBuildFile; fileRef = F3D55DFDCC4E4A2093F2D7DE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */; };
		66BA9C4EA9CF487DA572302E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp */ = {isa = PBXBuildFile; fileRef = 0809DE844AB9438593ED61E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp */; };
		66BED7AAF76744368B573AB4 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipath.hpp */ = {isa = PBXBuildFile; fileRef = F6F9EDCABD104562A4AF67EA /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipath.hpp */; };
		66DA68B3860742E2B6FC5000 /* /Users/heiner/git/QuantLib/ql/numericalmethod.hpp */ = {isa = PBXBuildFile; fileRef = 8C6061BA68D04CAA923786C3 /* /Users/heiner/git/QuantLib/ql/numericalmethod.hpp */; };
		66DFE66547B24724BC1AF7DE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */ = {isa = PBXBuildFile; fileRef = 33E332F3045143AEBE6D9069 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */; };
		66E04AE51864490CA770881B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */ = {isa = PBXBuildFile; fileRef = EECF1A749B80475D9782EE77 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */; };
		66E4806A9A3447C3AB178BA2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp */ = {isa = PBXBuildFile; fileRef = 5FC88E126D45490FB5BA81EC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp */; };
		66EA84392B7743B78AB63604 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = C90DE2A6253548D58CB84000 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */; };
		66EE71B15A094DDFA9D42386 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */ = {isa = PBXBuildFile; fileRef = B71CB4B773C54A609E69805D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */; };
		6700D3F923B94850BAA29445 /* /Users/heiner/git/QuantLib/ql/quotes/simplequote.hpp */ = {isa = PBXBuildFile; fileRef = 975B26480F69436A8E929FAB /* /Users/heiner/git/QuantLib/ql/quotes/simplequote.hpp */; };
		6702821386054740A3AAE365 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.hpp */ = {isa = PBXBuildFile; fileRef = 1DC9FF7F4B824C1FBF26AEEE /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.hpp */; };
		670B4F56DE8346039447D0E7 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */ = {isa = PBXBuildFile; fileRef = 0F96D724ADB548258F962AC8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */; };
		67255595211F4301BCFF81F7 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.hpp */ = {isa = PBXBuildFile; fileRef = 203C32D6F15146728522BCEF /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.hpp */; };
		67336776A56E4C1A96022E5E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = E41EB056159E496DB9D4827B /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.hpp */; };
		67442A234B9E4A608FD97268 /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */ = {isa = PBXBuildFile; fileRef = 32691107CF29469C961F7A0F /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */; };
		6748E96315A44FAAB8398256 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.hpp */ = {isa = PBXBuildFile; fileRef = 5F01CBD78FE84C9B821EBA84 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.hpp */; };
		675862991FBE40F2BFEC219C /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 7F8A4F9462434A9188E1D4F8 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */; };
		675D02F3903342E0BDF7003B /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */ = {isa = PBXBuildFile; fileRef = 2AE13769D4F540BBAA6FEAC8 /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */; };
		675DF30004144142A495B73E /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */ = {isa = PBXBuildFile; fileRef = BA67288F86B74CCE8DAC5D95 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */; };
		676C2B32D2CC40418C2C58BB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */ = {isa = PBXBuildFile; fileRef = F72D49CE6296465BA60A7AB8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */; };
		6780520430EC41F79DC3491A /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/all.hpp */ = {isa = PBXBuildFile; fileRef = 8EA82D703C364FE58D966E2F /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/all.hpp */; };
		6783DBE2875B4532B92168D4 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 46692E96565F44BC862BD8F1 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */; };
		679E9399FD4A437FBF797E80 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.hpp */ = {isa = PBXBuildFile; fileRef = BCB5AB691FE2489D94A19CED /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.hpp */; };
		67A940649AB64EA18C2A952C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = D7CA63827A5E432A8599280D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */; };
		67AAD1B685124D3D8DE11690 /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.hpp */ = {isa = PBXBuildFile; fileRef = 93B0EF3E09CB4F06A21687D6 /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.hpp */; };
		67B832D3C1684CC08526A85E /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */ = {isa = PBXBuildFile; fileRef = DE1F4C76BC4E49FDB4F74276 /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */; };
		67D636576FE9420595827FD5 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */ = {isa = PBXBuildFile; fileRef = E2ECA52069914938B58AEEE3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */; };
		67DBC1622CA54A14B243DE85 /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/all.hpp */ = {isa = PBXBuildFile; fileRef = 2039243F188F4FC08A05CC55 /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/all.hpp */; };
		67F6CF27CF4345DBA815E037 /* /Users/heiner/git/QuantLib/ql/math/optimization/all.hpp */ = {isa = PBXBuildFile; fileRef = C2A314CDCCAD44078767FC9D /* /Users/heiner/git/QuantLib/ql/math/optimization/all.hpp */; };
		67FEAE63A01C4F3E975119F9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */ = {isa = PBXBuildFile; fileRef = FA846D43C6924EB1A4E2DB84 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */; };
		682A87BFA0E448558F1D8841 /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.hpp */ = {isa = PBXBuildFile; fileRef = 04FED45B7EA14746BC9473F6 /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.hpp */; };
		68421CB874DA45D39E0435F8 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */ = {isa = PBXBuildFile; fileRef = 65393B79958E42519E678E70 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */; };
		6852C73036F248C484AF9F0B /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 90638B3ECF0D471F8181E7CF /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.hpp */; };
		686D1CB1E2134B24A6BC935C /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp */ = {isa = PBXBuildFile; fileRef = 614A15481DCC45FBA0EA0BB6 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp */; };
		68A475B08CA74842854D29EC /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */ = {isa = PBXBuildFile; fileRef = D91AF6371FCB486A907FD7C3 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */; };
		68B45A2E884A42F3B313C410 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.hpp */ = {isa = PBXBuildFile; fileRef = 5676F1A434564C3B8AFE09A7 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.hpp */; };
		68B9A9764E914E178FC9FC03 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.hpp */ = {isa = PBXBuildFile; fileRef = 3B20F91A32644467A8287F9E /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.hpp */; };
		68C3017142C9479387C491DB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp */ = {isa = PBXBuildFile; fileRef = 9F76620D698546CFA192A1DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp */; };
		68C3FA66BEB34CED8F7438E9 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = A15B0F61ECB448B39FB1ED99 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */; };
		68D360CE717D41DE80C873FD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */ = {isa = PBXBuildFile; fileRef = A14FD360A4134344B0116C4D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */; };
		68D60417FDA5411288101F5F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = 2790FBBFA8424333A32C0904 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp */; };
		68DAB6AC151441719E8E0FA6 /* /Users/heiner/git/QuantLib/test-suite/cashflows.hpp */ = {isa = PBXBuildFile; fileRef = AF6A9CEF94D94D35B0F4FD85 /* /Users/heiner/git/QuantLib/test-suite/cashflows.hpp */; };
		68DEB08A02B64D0DA4039F8E /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */ = {isa = PBXBuildFile; fileRef = 567892B19E7F47569FE3FC5A /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */; };
		68EAF25B617C4101904947A9 /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.hpp */ = {isa = PBXBuildFile; fileRef = F103067B9B474C6BB654FC0C /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.hpp */; };
		68EE9BA739A54440826FEF53 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.hpp */ = {isa = PBXBuildFile; fileRef = 1920739A6DC542709B4014ED /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.hpp */; };
		690073B87A7D42D89A3E7A93 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/binomialbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 445268C5B9134478831B6562 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/binomialbarrierengine.hpp */; };
		6912F939B49546829B7A0804 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.hpp */ = {isa = PBXBuildFile; fileRef = 80F58BE226C14FB7BF41121F /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.hpp */; };
		6914B96FD96C4116BD8AB483 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.hpp */ = {isa = PBXBuildFile; fileRef = 7F39596FC2D84B38B700E06F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.hpp */; };
		6933A60BD296400BB8AC4F11 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.hpp */ = {isa = PBXBuildFile; fileRef = BEB9F9BF52614B3E8CB21632 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.hpp */; };
		694AB3948A904C86B1EA2628 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.hpp */ = {isa = PBXBuildFile; fileRef = A695EC07AE1E47478835831E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.hpp */; };
		694DF5087F894FB792BF6EB4 /* /Users/heiner/git/QuantLib/ql/time/imm.hpp */ = {isa = PBXBuildFile; fileRef = 0EB2606CBF524D20875730A4 /* /Users/heiner/git/QuantLib/ql/time/imm.hpp */; };
		695AE2606A3845AF83F5F968 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dzero.hpp */ = {isa = PBXBuildFile; fileRef = DB6278DC42684F5CBDBC5975 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dzero.hpp */; };
		695C165CA659481584B8A0EF /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.hpp */ = {isa = PBXBuildFile; fileRef = 5217F839CD8D42C7A14EDE44 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.hpp */; };
		695C51A6B847467D820B82F9 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/aucpi.hpp */ = {isa = PBXBuildFile; fileRef = 03398F762C3B49F5B5E0B3E9 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/aucpi.hpp */; };
		696F85EAD7EC4EFFADAB8582 /* /Users/heiner/git/QuantLib/test-suite/creditdefaultswap.cpp */ = {isa = PBXBuildFile; fileRef = DD6C4B83C23B457D965AE63C /* /Users/heiner/git/QuantLib/test-suite/creditdefaultswap.cpp */; };
		697CDA39028244F9BE68A2AC /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.hpp */ = {isa = PBXBuildFile; fileRef = 6EDDCF9442084490B25A159A /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.hpp */; };
		699D2FE6EA08438BA7ED68D8 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */ = {isa = PBXBuildFile; fileRef = 92F75C7D3C9143339A72599C /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */; };
		699D54B8EBA844C794F43FB3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.hpp */ = {isa = PBXBuildFile; fileRef = F26FC54ED7DC43E49E5314D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.hpp */; };
		699F30304DFE4BEBAB542457 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */ = {isa = PBXBuildFile; fileRef = E220226BB4E1457DB0AF4F4B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */; };
		69AFC584485D441F9E8E9606 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/all.hpp */ = {isa = PBXBuildFile; fileRef = 4EB7A20C649B4D3B946FEBBC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/all.hpp */; };
		69B47922BD57498D86D79715 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.hpp */ = {isa = PBXBuildFile; fileRef = 8DAC4D819290459B807EC371 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.hpp */; };
		69B685DCE64F4EFCB3ABBE3F /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */ = {isa = PBXBuildFile; fileRef = 18F46997B4F644A8AFF9AEF8 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */; };
		69CE6E18C49A4ABE83471157 /* /Users/heiner/git/QuantLib/ql/math/ode/all.hpp */ = {isa = PBXBuildFile; fileRef = 442A6937474A44A2B9682880 /* /Users/heiner/git/QuantLib/ql/math/ode/all.hpp */; };
		69E8B4B04866445E90CAC025 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */ = {isa = PBXBuildFile; fileRef = EFCE7D7BC6A04565816F4D95 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */; };
		69ED78A4EE39464E820576AE /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.hpp */ = {isa = PBXBuildFile; fileRef = 722F95F15D314954A3BA8F32 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.hpp */; };
		69F351570C0C41FAB66546FD /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */ = {isa = PBXBuildFile; fileRef = 2CA31CD1BE1644D48A351AB3 /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */; };
		69F6E84AECB44ADDAAD14295 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp */ = {isa = PBXBuildFile; fileRef = FDC47B752F2C412396433CE6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp */; };
		6A000788B8CE44D5B4CC0D12 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.hpp */ = {isa = PBXBuildFile; fileRef = 96CFCB310AC44FA3B2AB7C30 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.hpp */; };
		6A0F979F4B2B412980831447 /* /Users/heiner/git/QuantLib/ql/termstructures/iterativebootstrap.hpp */ = {isa = PBXBuildFile; fileRef = 7E2D976EB90542978DB2753F /* /Users/heiner/git/QuantLib/ql/termstructures/iterativebootstrap.hpp */; };
		6A103E6702784C45A408B566 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/multiproduct.hpp */ = {isa = PBXBuildFile; fileRef = 9C3B70081429458C9BC8A2AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/multiproduct.hpp */; };
		6A18D0197B3E479EA75A617D /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */ = {isa = PBXBuildFile; fileRef = 05F0A7A85C054AA59ACA74C6 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */; };
		6A1AEF8D83F848B88962D4AF /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.hpp */ = {isa = PBXBuildFile; fileRef = 729A4257D1DA4C87B5A45823 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.hpp */; };
		6A27BEF067944FCBB145AFA1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = 64CE86D48E1348469D309615 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp */; };
		6A3AAC48292040B49760BA68 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.hpp */ = {isa = PBXBuildFile; fileRef = 487B89EE62BC4836BB1F5AEC /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.hpp */; };
		6A3F08CDA4C84FCFA439C24B /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */ = {isa = PBXBuildFile; fileRef = 4AF811272028471296C73400 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */; };
		6A51F68C8D064878BCF242B2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdconditions.hpp */ = {isa = PBXBuildFile; fileRef = 62675524BE8F4F48937C36E8 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdconditions.hpp */; };
		6A6563469DBA4DCE8386F29B /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */ = {isa = PBXBuildFile; fileRef = 5ED8A2D944D0492380241804 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */; };
		6A80CEBB00314EDCB5BCEAE0 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */ = {isa = PBXBuildFile; fileRef = 5B79EBACB65147D5AE2DAFFE /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */; };
		6A84C7483E9C4FE2B1D949D7 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.hpp */ = {isa = PBXBuildFile; fileRef = 9DB078129ECC43868CFCEF90 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.hpp */; };
		6A874A00F8D849CF9CB8E8E4 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation2d.hpp */ = {isa = PBXBuildFile; fileRef = 448B1BB9DDCF4276A8A9E8D8 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation2d.hpp */; };
		6AA0FAB9944347C4BFF746FB /* /Users/heiner/git/QuantLib/test-suite/swaption.hpp */ = {isa = PBXBuildFile; fileRef = 3CF37B6654B34B01B4216A2A /* /Users/heiner/git/QuantLib/test-suite/swaption.hpp */; };
		6AA3042927E0454D95B723BC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 6DB907BC0D114E788564AB8F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.hpp */; };
		6AC9C047839E44228E60BF0E /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultlossmodel.hpp */ = {isa = PBXBuildFile; fileRef = 07DBDE33DEEB435492C923AB /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultlossmodel.hpp */; };
		6AD4592D8D1741A0B8F6222B /* /Users/heiner/git/QuantLib/ql/experimental/credit/spreadedhazardratecurve.hpp */ = {isa = PBXBuildFile; fileRef = 2CAB410FBFEF43FEB0A34AA6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spreadedhazardratecurve.hpp */; };
		6AEBA510DA124ADA949ACD20 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.hpp */ = {isa = PBXBuildFile; fileRef = EA07ED2E66094B6DA0558237 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.hpp */; };
		6AF765025F4C4604B83574E7 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */ = {isa = PBXBuildFile; fileRef = 85208FFFD0B04514B293DB49 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */; };
		6AFFBCB3943E4AE7B9652432 /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */ = {isa = PBXBuildFile; fileRef = 59CF883A671B41FE9C38938E /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */; };
		6B0A0E20B9514D3B9DB24B85 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp */ = {isa = PBXBuildFile; fileRef = EA33917D7899479C8B9030ED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp */; };
		6B178CC0A0024F0EB1ECE323 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/polynomial2Dspline.hpp */ = {isa = PBXBuildFile; fileRef = 855C1387866948B8ACB74D4D /* /Users/heiner/git/QuantLib/ql/experimental/inflation/polynomial2Dspline.hpp */; };
		6B1CF7A5F08848199EFF8486 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */ = {isa = PBXBuildFile; fileRef = F406BBCB0D0A447187CB94E6 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */; };
		6B316803C57345099B484517 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */ = {isa = PBXBuildFile; fileRef = 4D6956CC03A44670A85500C5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */; };
		6B7F1ECD92A34B4CB99AADC0 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 7E03B3C342BA4020BD6A218A /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */; };
		6B855A2894A64270A99C19A1 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */ = {isa = PBXBuildFile; fileRef = 4E8DA220FCD9416FADEBF64F /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */; };
		6B86695F03224FC7926ECE3B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.hpp */ = {isa = PBXBuildFile; fileRef = CF3620CBE0884862824B6296 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.hpp */; };
		6BA3686541C749F496734F64 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.hpp */ = {isa = PBXBuildFile; fileRef = 62EA52435A234048BF914EA1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.hpp */; };
		6BAD37651F764A08B1D4214A /* /Users/heiner/git/QuantLib/test-suite/quantlibbenchmark.cpp */ = {isa = PBXBuildFile; fileRef = B8E6CE85DBE343EABFCF9AC9 /* /Users/heiner/git/QuantLib/test-suite/quantlibbenchmark.cpp */; };
		6BCADCA9B6D54DC8BCC63531 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/all.hpp */ = {isa = PBXBuildFile; fileRef = E20FFB0ABA8A4265A4F1DD61 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/all.hpp */; };
		6BCCAAF1BD0D402AA79D38B4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 5CDF1A6C66F94FAA9AE1DE91 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp */; };
		6BDA63A5EAD544E2B564E3A4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */ = {isa = PBXBuildFile; fileRef = 8985911E330142D78CA6B002 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */; };
		6BDCDACADA49426292F5827A /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.hpp */ = {isa = PBXBuildFile; fileRef = 5978B02CA15C40BCAD7E0ABC /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.hpp */; };
		6BE4FC58626E4E2AB81D3CA4 /* /Users/heiner/git/QuantLib/ql/pricingengines/mclongstaffschwartzengine.hpp */ = {isa = PBXBuildFile; fileRef = ACDDD40EDBF84DA0B962A0F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/mclongstaffschwartzengine.hpp */; };
		6BE7D2A3E2FC4659AABD4BD6 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */ = {isa = PBXBuildFile; fileRef = 8C81DC66862B47E89FBB8085 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */; };
		6BF1A0C340E5421E8D0CD2A9 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.hpp */ = {isa = PBXBuildFile; fileRef = 54B5447C535E4BED9D02582D /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.hpp */; };
		6C02F172DB844530AF189BEE /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.hpp */ = {isa = PBXBuildFile; fileRef = F6AF73885D1A4E34B0BB6AD5 /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.hpp */; };
		6C068547E4134CC397B4D847 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */ = {isa = PBXBuildFile; fileRef = 96BFFCC989544D92A7297D69 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */; };
		6C1593D7E386475794B55024 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */ = {isa = PBXBuildFile; fileRef = D5E68829F28F4A639CD6E211 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */; };
		6C26BA325F4443B9AF4C3840 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.hpp */ = {isa = PBXBuildFile; fileRef = 5767F6A70124419FB152E7F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.hpp */; };
		6C288425D0A74862A6AF7509 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */ = {isa = PBXBuildFile; fileRef = 7EE2956280BC4D1492569ED5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */; };
		6C3F78E8CDEB4B0997C342CA /* /Users/heiner/git/QuantLib/ql/models/all.hpp */ = {isa = PBXBuildFile; fileRef = 6C24102F0D2B45AB93A4F34F /* /Users/heiner/git/QuantLib/ql/models/all.hpp */; };
		6C50CD49221F4170AFFF9830 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.hpp */ = {isa = PBXBuildFile; fileRef = F1A3A0DF2399429DB78F1478 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.hpp */; };
		6C569D3C76BF43D48347B8C7 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewisefunction.hpp */ = {isa = PBXBuildFile; fileRef = 93A8240A20974C97802D7181 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewisefunction.hpp */; };
		6C5809F7F8CC4595B1A95242 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */ = {isa = PBXBuildFile; fileRef = 84039867B5874E449CE7A932 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */; };
		6C653B47336B410C9BF9EAAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp */ = {isa = PBXBuildFile; fileRef = 64DC69D4080F492D85F5045C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp */; };
		6C67E6C1A96C41BD8A868D19 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp */ = {isa = PBXBuildFile; fileRef = 184742B8090B474C81E9AB9C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp */; };
		6C7940B58CD644508FF54D42 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.hpp */ = {isa = PBXBuildFile; fileRef = 9BFEEFD4A982499DB8293B7D /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.hpp */; };
		6C957F582BC047F582086D4A /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */ = {isa = PBXBuildFile; fileRef = 50A319C2CF7A4772938D5DC6 /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */; };
		6CA94D5EFB31464A9098BE22 /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.hpp */ = {isa = PBXBuildFile; fileRef = F4D35B33AC47465C891CF487 /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.hpp */; };
		6CB07095D7B144639B773DF8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */ = {isa = PBXBuildFile; fileRef = 006810E19C684AAE8DE854AB /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */; };
		6CB1E91C2DCD4D908000F3A2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp */ = {isa = PBXBuildFile; fileRef = 578C2C6AC2FF4FD7B5EAF44E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp */; };
		6CC4FE84A18E44E3A66C4F7C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelbasissystem.hpp */ = {isa = PBXBuildFile; fileRef = 77159EF635664CF5B57C4F1C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelbasissystem.hpp */; };
		6CE7DE8B1B02493DB0C807A5 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newtonsafe.hpp */ = {isa = PBXBuildFile; fileRef = 7816408FDEA1406A91CF6D3F /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newtonsafe.hpp */; };
		6CF2E61142E640EA84AF0F5E /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.hpp */ = {isa = PBXBuildFile; fileRef = 3BF57C0DDEEC4D2DAD62BE67 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.hpp */; };
		6CF7750BD55E4D96B96CBBA5 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */ = {isa = PBXBuildFile; fileRef = 828E238823D8454786673BD9 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */; };
		6D0590B265B44E55918EE158 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.hpp */ = {isa = PBXBuildFile; fileRef = BA28A128AC0648258EEA37F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.hpp */; };
		6D0C448373794A908362C134 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardcurve.hpp */ = {isa = PBXBuildFile; fileRef = 1E12F05460AB44DC8655A8F1 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardcurve.hpp */; };
		6D0CF824A8CC4E4BA0C54C15 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp */ = {isa = PBXBuildFile; fileRef = FABFB2CFAB51459B94D8F602 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp */; };
		6D17C8010E3C474A88983844 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp */ = {isa = PBXBuildFile; fileRef = 442D3212F535496AB8494F0F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp */; };
		6D378C5BF7E343708230A843 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp */ = {isa = PBXBuildFile; fileRef = 3BF956232CF240D39B770893 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp */; };
		6D3BED6B449D4AAB823D4362 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */ = {isa = PBXBuildFile; fileRef = 9CC78A1801544925B3A8D111 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */; };
		6D420C0C80F1463B822067C4 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */ = {isa = PBXBuildFile; fileRef = 5FBF941D03A347D6A46652C8 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */; };
		6D4786BEDEC642DC89812EDA /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */ = {isa = PBXBuildFile; fileRef = 13C5BC892C8D4E628EF34B60 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */; };
		6D4D8626F0324AFD9127B493 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */ = {isa = PBXBuildFile; fileRef = D7E9DDD11580418FB0F884F5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */; };
		6D5CD35B4E504BE5BE651381 /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */ = {isa = PBXBuildFile; fileRef = BB0CF4A6D6C34E7FB964F0FB /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */; };
		6D60CBA2FC724ACE904AC6DA /* /Users/heiner/git/QuantLib/ql/currencies/all.hpp */ = {isa = PBXBuildFile; fileRef = DD2DD2BFCA5F4B22A3233806 /* /Users/heiner/git/QuantLib/ql/currencies/all.hpp */; };
		6D7BC85E73964F258429A938 /* /Users/heiner/git/QuantLib/test-suite/inflationcapflooredcoupon.cpp */ = {isa = PBXBuildFile; fileRef = F3AF4B684EB74245851F3DAC /* /Users/heiner/git/QuantLib/test-suite/inflationcapflooredcoupon.cpp */; };
		6D7C5450629E424F89D7E5F6 /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */ = {isa = PBXBuildFile; fileRef = 4D45AE3A82A34C32B6083720 /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */; };
		6D8A271768AE483A9B8C97F9 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */ = {isa = PBXBuildFile; fileRef = E5FE7982931E4760A6C1790E /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */; };
		6D8B3EE1266B40F180BFC304 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */ = {isa = PBXBuildFile; fileRef = 22F1E361F05046B08F44E089 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */; };
		6D90395913E44429A9A5126D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.hpp */ = {isa = PBXBuildFile; fileRef = 970C9D165D4E45779790E409 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.hpp */; };
		6D95FD0434604B06B721D10C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplusdminus.hpp */ = {isa = PBXBuildFile; fileRef = A06309696D6E4B0EBC9D98F4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplusdminus.hpp */; };
		6D9B20FB30F54397909E2B7C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */ = {isa = PBXBuildFile; fileRef = 1BD4360619AE4EB1931F3242 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */; };
		6DA08E1B8F714160BC462F61 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.hpp */ = {isa = PBXBuildFile; fileRef = CF2CC3B0DD5D40579324661F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.hpp */; };
		6DAAFE7D82674F7C87487DA6 /* /Users/heiner/git/QuantLib/Examples/GlobalOptimizer/GlobalOptimizer.cpp */ = {isa = PBXBuildFile; fileRef = 76CDB78A6CC3403983C9D109 /* /Users/heiner/git/QuantLib/Examples/GlobalOptimizer/GlobalOptimizer.cpp */; };
		6DB9D51EAB034D29BA5F9131 /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.hpp */ = {isa = PBXBuildFile; fileRef = 0CEE15A5370943B79135BB3F /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.hpp */; };
		6DBFDA45E6D4458880D72BE8 /* /Users/heiner/git/QuantLib/ql/experimental/math/moorepenroseinverse.hpp */ = {isa = PBXBuildFile; fileRef = 9AFE7125ED7740D4BA76CE4B /* /Users/heiner/git/QuantLib/ql/experimental/math/moorepenroseinverse.hpp */; };
		6DD41C45AC5C4CA3BB9E4652 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */ = {isa = PBXBuildFile; fileRef = D0C9D8E786504E29B7903CD2 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */; };
		6DF028B20F2E4D4FA0CF9E35 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 9501997CF8CC4A3DA98F121C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.hpp */; };
		6E0319BDE3674762BF9AB467 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */ = {isa = PBXBuildFile; fileRef = 97DC1CF1C2F743B698991432 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */; };
		6E15628B7A174DA4982B90E0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */ = {isa = PBXBuildFile; fileRef = 05AF6A462CAF422989673DE4 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */; };
		6E2167CD724843479CBC238C /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */ = {isa = PBXBuildFile; fileRef = 44E9EC08054B426FBAAAEF91 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */; };
		6E21E7E52DD648C583F46B0D /* /Users/heiner/git/QuantLib/ql/instruments/dividendschedule.hpp */ = {isa = PBXBuildFile; fileRef = 669BE30BFC244881B08A7C87 /* /Users/heiner/git/QuantLib/ql/instruments/dividendschedule.hpp */; };
		6E42CF6CDE6148FE81226935 /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */ = {isa = PBXBuildFile; fileRef = 7F467DC7B2684D33BB3E49E4 /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */; };
		6E6C082FBADE4967916659B9 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */ = {isa = PBXBuildFile; fileRef = 29798D448C1E4FB48955B2D3 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */; };
		6E6EB5121FD0493091AC7D57 /* /Users/heiner/git/QuantLib/test-suite/catbonds.hpp */ = {isa = PBXBuildFile; fileRef = FF7B633A0CA24DAD885C6934 /* /Users/heiner/git/QuantLib/test-suite/catbonds.hpp */; };
		6E87D2D117EB4266860D8AAE /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */ = {isa = PBXBuildFile; fileRef = A582F54C4F374386B741A4F9 /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */; };
		6E9D9088ED73430C86724FAA /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 1A07E11F100B44789C0A9BCA /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */; };
		6EA75FF3F8924452A4DA90EF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp */ = {isa = PBXBuildFile; fileRef = 1E3C2688CF5949799EBE49F0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp */; };
		6ECB77D94382467EB4848F50 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.hpp */ = {isa = PBXBuildFile; fileRef = 8E7CAA896E3441A0B275BEEC /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.hpp */; };
		6ED59AF5A8EB44D8BC2AED25 /* /Users/heiner/git/QuantLib/test-suite/noarbsabr.cpp */ = {isa = PBXBuildFile; fileRef = 920977E0BB94478EBF997DA1 /* /Users/heiner/git/QuantLib/test-suite/noarbsabr.cpp */; };
		6EE8CB354B6E4D5EA7087AC7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp */ = {isa = PBXBuildFile; fileRef = 59F5DAB066324426B1619C78 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp */; };
		6EED0D8F51FB40978B672E1D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp */ = {isa = PBXBuildFile; fileRef = BB11AE20E37842DCA44FDD89 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp */; };
		6EEE70EFCB694BA3AE138145 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */ = {isa = PBXBuildFile; fileRef = D4EC9DDAF46643549C39DE1F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */; };
		6F090B8404CE499994E7BF1D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 9196BCF5C4C24827ADCD69ED /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.hpp */; };
		6F0B509C35FF41E18415D95E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */ = {isa = PBXBuildFile; fileRef = 8C816E5609044D88B2732E26 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */; };
		6F1BFD1921244F219CF8D172 /* /Users/heiner/git/QuantLib/ql/math/transformedgrid.hpp */ = {isa = PBXBuildFile; fileRef = 4894DD9155AC44D58A67D896 /* /Users/heiner/git/QuantLib/ql/math/transformedgrid.hpp */; };
		6F53BB5162F5469EA6E5D7FF /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.hpp */ = {isa = PBXBuildFile; fileRef = ADAD904E41A84D629880F56D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.hpp */; };
		6F557BA866FD48B58C0E134D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp */ = {isa = PBXBuildFile; fileRef = F812A29F5A224B6A930CFD31 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp */; };
		6F615642EF0A4544B18F873F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 6FB1EA72AC274EF180DCE317 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */; };
		6F64E69A9588425A8677F50F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.hpp */ = {isa = PBXBuildFile; fileRef = F2BB84E22AA84213876167D2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.hpp */; };
		6F6E8AFA4FB34BDDBB0914B8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */ = {isa = PBXBuildFile; fileRef = A68F4455E38F4C5DB378F7E9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */; };
		6F7CCF608AE3451BA3B52377 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativersg.hpp */ = {isa = PBXBuildFile; fileRef = 00826A5C7EAC447391A548D6 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativersg.hpp */; };
		6F80B676D5414E1B9C9A20CA /* /Users/heiner/git/QuantLib/ql/methods/lattices/all.hpp */ = {isa = PBXBuildFile; fileRef = A56033A6B7A442D88AB86C24 /* /Users/heiner/git/QuantLib/ql/methods/lattices/all.hpp */; };
		6F8B065A9063403C96870882 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */ = {isa = PBXBuildFile; fileRef = F6C9480EF5324F1E825D1952 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */; };
		6F8F1B66307E4D9CB09A162C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */ = {isa = PBXBuildFile; fileRef = D4980C5A346647268762CA98 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */; };
		6F955645FB3945C691342130 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/all.hpp */ = {isa = PBXBuildFile; fileRef = 4F70825A936247A7A59B262B /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/all.hpp */; };
		6F9B578394464043B8037D78 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.hpp */ = {isa = PBXBuildFile; fileRef = 28504A1421124447AC3428A3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.hpp */; };
		6F9BC05219D540EA8E61A20B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = B84735E400F34B0AB03C9156 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.hpp */; };
		6FAE336C484E44F380FC85DB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/all.hpp */ = {isa = PBXBuildFile; fileRef = 7F1AB4F3AF7848E4ADC03D2F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/all.hpp */; };
		6FAFBD8037154CFEB414993F /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */ = {isa = PBXBuildFile; fileRef = 567A074845BB4282AB2DCAED /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */; };
		6FB445561A834243990478BB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */ = {isa = PBXBuildFile; fileRef = 8006A246939741A6A4228956 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */; };
		6FB7566AB78E4117AF74FC61 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.hpp */ = {isa = PBXBuildFile; fileRef = AB8E11A19B394F20AC4255A2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.hpp */; };
		6FC05BF6BCED423B9BB6F659 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.hpp */ = {isa = PBXBuildFile; fileRef = 774751A4BF044D7DB42D18AE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.hpp */; };
		6FDF7BFC2A0945CA983F106B /* /Users/heiner/git/QuantLib/ql/timeseries.hpp */ = {isa = PBXBuildFile; fileRef = 17EFC9C98C32447DA93A4242 /* /Users/heiner/git/QuantLib/ql/timeseries.hpp */; };
		6FF3B7521C644AC0A1027F55 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.hpp */ = {isa = PBXBuildFile; fileRef = AA7282BF35D441DAB37811A2 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.hpp */; };
		700284DB44204979A9AE1639 /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 5807078F5CCB4AC48FCAE96C /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.hpp */; };
		70181340D44B48ECB81C6852 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 9B27AB6A49DB4D9C99B5A580 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp */; };
		7046626818794DFF9C39AF6F /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.hpp */ = {isa = PBXBuildFile; fileRef = 3C530D01838044CE8CCF95B8 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.hpp */; };
		7051BA3C50714AFA95E6AE56 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp */ = {isa = PBXBuildFile; fileRef = 59F9513B467A40C0A1FF39A8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp */; };
		7068144F18334CEABCBB2E3F /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.hpp */ = {isa = PBXBuildFile; fileRef = EB4E624A0A1C4A95A4F1BCE8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.hpp */; };
		706A11C40F4A4C64AF0AEE4A /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */ = {isa = PBXBuildFile; fileRef = C74E2222C9F746FE8001E472 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */; };
		7083A67DA0CA49D9A2ABF116 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */ = {isa = PBXBuildFile; fileRef = DCDBDB4FE08C42A7B34FEC74 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */; };
		709292E1B56840CD873BE003 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */ = {isa = PBXBuildFile; fileRef = 01DC8364D0BE4FCCB85BD926 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */; };
		7099BBF9A1A54E69AAB08798 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp */ = {isa = PBXBuildFile; fileRef = 8EE90EFE150743658006FFFB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp */; };
		709AF6A7C0E9488DBEF65482 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.hpp */ = {isa = PBXBuildFile; fileRef = 153C20F3B7DB4C0D991A6B88 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.hpp */; };
		70AACE4E513B49B4B8318BB4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */ = {isa = PBXBuildFile; fileRef = 06A09C2A8F8C4731B6D94FB7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */; };
		70C2BA22DE584C04BFBD3AB3 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.hpp */ = {isa = PBXBuildFile; fileRef = 311D71C6FE4845DF84B5C627 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.hpp */; };
		70D2C7B047C74A15A0B909E5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.hpp */ = {isa = PBXBuildFile; fileRef = 1C924446EB7A4DD2B3E41CD0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.hpp */; };
		70DAF5626AC043C38B657F9F /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.hpp */ = {isa = PBXBuildFile; fileRef = 44548468C5E44F90A0AFD3DB /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.hpp */; };
		70DEB8B59B5345E3A681F93D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 83CE3E0501A64B94A71EF4BF /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp */; };
		70F4FB9411E045AEB1EC979B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */ = {isa = PBXBuildFile; fileRef = 71AD2B26C352476686BC8A27 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */; };
		711E76D603424F2C85AC212F /* /Users/heiner/git/QuantLib/test-suite/matrices.cpp */ = {isa = PBXBuildFile; fileRef = 6D945D68541448EA86FF241C /* /Users/heiner/git/QuantLib/test-suite/matrices.cpp */; };
		712059CB32A64B6386D36E8D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = A834C86222BD49F6BA090F91 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */; };
		7126D67EBB354D7DA798E679 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.hpp */ = {isa = PBXBuildFile; fileRef = 146C6198770F445591F70908 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.hpp */; };
		7129170E28074BBC8C8DA37D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp */ = {isa = PBXBuildFile; fileRef = 13B9EE14F4434EDCB17BAC92 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp */; };
		713CD8B97E9A4EDE9DDC59AA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */ = {isa = PBXBuildFile; fileRef = 885F1322E68D4AEBBCDC6CE4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */; };
		7152A37C12E44DAA9BC8296D /* /Users/heiner/git/QuantLib/test-suite/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 9023D672B96A47D7B55665A7 /* /Users/heiner/git/QuantLib/test-suite/CMakeLists.txt */; };
		715645061AEB424B99607880 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */ = {isa = PBXBuildFile; fileRef = C0B933CE5A8A4FED9232D218 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */; };
		715B0F395C954C6AAECA6358 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */ = {isa = PBXBuildFile; fileRef = AE8EBA97C98E41BDB0E4F7A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */; };
		71706393C43646B7A5DD9083 /* /Users/heiner/git/QuantLib/test-suite/dates.cpp */ = {isa = PBXBuildFile; fileRef = 7FF67DBD77A848E798B35E4E /* /Users/heiner/git/QuantLib/test-suite/dates.cpp */; };
		7179BFC74B9B452EBFAF79CE /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */ = {isa = PBXBuildFile; fileRef = F19D0F97666C4418B4A8A5CA /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */; };
		717B473A911B49C290CC44D9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp */ = {isa = PBXBuildFile; fileRef = 9CE2109D7FC7484787A0ED74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp */; };
		718C39DF9B654DC98E85D38C /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.hpp */ = {isa = PBXBuildFile; fileRef = 7FF3CC6178A141CBA0C1F8CE /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.hpp */; };
		71A2114534A44A98ACB80060 /* /Users/heiner/git/QuantLib/test-suite/operators.hpp */ = {isa = PBXBuildFile; fileRef = C4D2108CD7DA48E8803A9F7B /* /Users/heiner/git/QuantLib/test-suite/operators.hpp */; };
		71B9699AC5ED4E0C95FD4974 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 65C43E7F10EC422BB9054585 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp */; };
		71C05995BC4F4BD19DB92027 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolver.hpp */ = {isa = PBXBuildFile; fileRef = 5012937909954DCD9A4A94F8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolver.hpp */; };
		71DFE08133AF425BBF45AB65 /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.hpp */ = {isa = PBXBuildFile; fileRef = 403307713DEA49B6B1506046 /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.hpp */; };
		71EBB6B814D54C139784AF1D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = FA8C8BF38D594D478D4C610A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.hpp */; };
		71F1AACD39F14E66AECA5DBB /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp */ = {isa = PBXBuildFile; fileRef = CED50A6AF1AD4496ADAD13D9 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp */; };
		71F722C5780A4302BD45EB9F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp */ = {isa = PBXBuildFile; fileRef = 1E7D7267A6FB46FF886CC9D9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp */; };
		7203366468CB4929BC6E76FE /* /Users/heiner/git/QuantLib/ql/math/copulas/all.hpp */ = {isa = PBXBuildFile; fileRef = DBCDAFE75F2F4393A855A87D /* /Users/heiner/git/QuantLib/ql/math/copulas/all.hpp */; };
		720E17AD71FF4055B83191A7 /* /Users/heiner/git/QuantLib/Examples/MarketModels/MarketModels.cpp */ = {isa = PBXBuildFile; fileRef = 87191A96118F467B814BF4A5 /* /Users/heiner/git/QuantLib/Examples/MarketModels/MarketModels.cpp */; };
		7231C29BB2E7482E955C9CFC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */ = {isa = PBXBuildFile; fileRef = E31BF51D3E8C49C88653A6E7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */; };
		723E1AB56DAC428D99D8E05C /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.hpp */ = {isa = PBXBuildFile; fileRef = E4170E4EAECA4D64A953C56A /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.hpp */; };
		723FE4926D5247C1B9CDB44F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.hpp */ = {isa = PBXBuildFile; fileRef = 979B49FD37364480A7864742 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.hpp */; };
		724107661E3D4DD098C1757B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */ = {isa = PBXBuildFile; fileRef = 052CC5E16CC44A2B9D77F243 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */; };
		724744EF50F94DAF94020EBB /* /Users/heiner/git/QuantLib/ql/experimental/math/farliegumbelmorgensterncopularng.hpp */ = {isa = PBXBuildFile; fileRef = 1E54CA6FF3D24941BAC92E2D /* /Users/heiner/git/QuantLib/ql/experimental/math/farliegumbelmorgensterncopularng.hpp */; };
		724AD627F87F486B9D814B56 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.hpp */ = {isa = PBXBuildFile; fileRef = C24B4881C506427CA90F1225 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.hpp */; };
		7268EBCF5F3F428D95D69D60 /* /Users/heiner/git/QuantLib/test-suite/tracing.hpp */ = {isa = PBXBuildFile; fileRef = E38DDE91A20A46FD9396AE34 /* /Users/heiner/git/QuantLib/test-suite/tracing.hpp */; };
		72692CE78CD84895888A2CBB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.hpp */ = {isa = PBXBuildFile; fileRef = 4A8CA30D159F4ACEAC0412F1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.hpp */; };
		726A72DD98034D0CAE919E66 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.hpp */ = {isa = PBXBuildFile; fileRef = FEE6DB57B8214465B20C4D72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.hpp */; };
		726AECA77C094E4AA9EBE354 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.hpp */ = {isa = PBXBuildFile; fileRef = D4C3AE1873FB49459FFB373B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.hpp */; };
		72805850F8444993ACAA97C6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/constrainedevolver.hpp */ = {isa = PBXBuildFile; fileRef = 73F2CF6A175142A29DC45683 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/constrainedevolver.hpp */; };
		7283AAD6F9D4485E91B8B5B3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.hpp */ = {isa = PBXBuildFile; fileRef = 8612F9BF9F514F0DB717DCD7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.hpp */; };
		728A8DA4E38A4097A813CE96 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */ = {isa = PBXBuildFile; fileRef = 6AF67A15278147B8A962AF73 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */; };
		728F612CB3394D26A1FF9B37 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */ = {isa = PBXBuildFile; fileRef = 4DD0651F20F44AF995590396 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */; };
		7295A53BC9684626BA1A91E8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */ = {isa = PBXBuildFile; fileRef = AA69B65ABD844AF3A8183018 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */; };
		7297CA66701145A4AEA21BB3 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolstructuresutilities.hpp */ = {isa = PBXBuildFile; fileRef = 8225C1D23FB14D1DB09D45DA /* /Users/heiner/git/QuantLib/test-suite/swaptionvolstructuresutilities.hpp */; };
		729FF2FDDFAD43619C689FAE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.hpp */ = {isa = PBXBuildFile; fileRef = AE841B8A1F8C4653B9649EE0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.hpp */; };
		72A3B3BC68CA45AE84D20402 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.hpp */ = {isa = PBXBuildFile; fileRef = C7C4E7C03C7049DEBAAF0655 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.hpp */; };
		72A7D90DF23D4D90925DE71C /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.hpp */ = {isa = PBXBuildFile; fileRef = B07B05945B4D498FA38CE223 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.hpp */; };
		72A9D2EFFC0E4057A6260760 /* /Users/heiner/git/QuantLib/ql/quotes/all.hpp */ = {isa = PBXBuildFile; fileRef = BBCB35684C43496A95EFC5C2 /* /Users/heiner/git/QuantLib/ql/quotes/all.hpp */; };
		72D0AA759759414981292C7A /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 162F402629504B21A9C17BBE /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.hpp */; };
		72D15D97D3F84347968296CA /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.hpp */ = {isa = PBXBuildFile; fileRef = 31EDD0A102DF45BAA27676CC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.hpp */; };
		72D5CB029766423C842FD347 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.hpp */ = {isa = PBXBuildFile; fileRef = 40FD31A5941E4324A13981B2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.hpp */; };
		72DAD0BC8663484889161F0A /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */ = {isa = PBXBuildFile; fileRef = A212B83008A34209AA5804AA /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */; };
		72E6CCBA01E548C5987DD704 /* /Users/heiner/git/QuantLib/Examples/EquityOption/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 8E66C6DC99EF493A94D1D0D9 /* /Users/heiner/git/QuantLib/Examples/EquityOption/CMakeLists.txt */; };
		73049E9ED32748009155FB5D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/all.hpp */ = {isa = PBXBuildFile; fileRef = 0B1DA786A0124B178A1BC820 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/all.hpp */; };
		730880BB06E6423D84B671D5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.hpp */ = {isa = PBXBuildFile; fileRef = C1E48BA7199848D09934D513 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.hpp */; };
		73092BF585AF4577B729EF8F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */ = {isa = PBXBuildFile; fileRef = BC90477AED7A4622ADC8252B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */; };
		730DE4C3837F4A3F9A12276B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.hpp */ = {isa = PBXBuildFile; fileRef = D00749DBADCB47368B5411D7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.hpp */; };
		732665E976B14D73A383C836 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */ = {isa = PBXBuildFile; fileRef = FE11375E997041429EBFC9B2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */; };
		732AF0DD71D04C5684317D22 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.hpp */ = {isa = PBXBuildFile; fileRef = 317E7C15525542BAABC2613A /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.hpp */; };
		733668EC5D744CCDB462F30C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.hpp */ = {isa = PBXBuildFile; fileRef = 5ADA72AABB2B403E82133BFF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.hpp */; };
		7342AF87B9654503A0E15CDF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = 683BA466E3B0437094E2FED3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */; };
		735DDDDB590E4E798FF8C2C0 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.hpp */ = {isa = PBXBuildFile; fileRef = D4EE30FBC4AD4240BB709B95 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.hpp */; };
		735EEA15DE0F418BB0C0B706 /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.hpp */ = {isa = PBXBuildFile; fileRef = CC14BA45EDBA4E528322BD2B /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.hpp */; };
		737B8AEBDADD454BB5EEBFEA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.hpp */ = {isa = PBXBuildFile; fileRef = A65F3F9D0D454D7DBB04328B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.hpp */; };
		7381BF5D63EA4FD68E0413C3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp */ = {isa = PBXBuildFile; fileRef = 9744C07412454ADEAED1801B /* /Users/heiner/git/QuantLib/ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp */; };
		738291C27C104208B697A7EF /* /Users/heiner/git/QuantLib/ql/indexes/ibor/audlibor.hpp */ = {isa = PBXBuildFile; fileRef = 6871687653E24294A86B54FD /* /Users/heiner/git/QuantLib/ql/indexes/ibor/audlibor.hpp */; };
		739CF045A56C481B88E38502 /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */ = {isa = PBXBuildFile; fileRef = D775EB719F344795812D44CF /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */; };
		73A7D5C74EA8409B9D628041 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.hpp */ = {isa = PBXBuildFile; fileRef = 1083C30C476D48ED960D18C6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.hpp */; };
		73ABDAB22C31419F948F2E3D /* /Users/heiner/git/QuantLib/ql/time/calendars/nullcalendar.hpp */ = {isa = PBXBuildFile; fileRef = 413964FE234D4DAAAF615565 /* /Users/heiner/git/QuantLib/ql/time/calendars/nullcalendar.hpp */; };
		73B4F83F6A77481F85E94F69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */ = {isa = PBXBuildFile; fileRef = 74378CCDAA8A4591BD83BC3A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */; };
		73BC1D1DAB2B4D9B9F6A3DDF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */ = {isa = PBXBuildFile; fileRef = 9E66872BF0DE4B258E59B912 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */; };
		73C6270AC17F467288A9FEE0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */ = {isa = PBXBuildFile; fileRef = 9045FF95C12C49DBA1C117FC /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */; };
		73DFE35657714BE2B74E027D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bkbm.hpp */ = {isa = PBXBuildFile; fileRef = 4B85762175B346E2A9638C53 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bkbm.hpp */; };
		73E3AA3A18064D04BC3B019A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.hpp */ = {isa = PBXBuildFile; fileRef = F276D49C9DEF4196A231C251 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.hpp */; };
		73EEBAC5EA6D46E2BB3CC6F6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = 9DB64EC477494220897024FE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp */; };
		73F9C7978E0C49D6B451B836 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.hpp */ = {isa = PBXBuildFile; fileRef = 69159201FE9D4B908048FBC1 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.hpp */; };
		74036FF345244B5F9C591183 /* /Users/heiner/git/QuantLib/ql/utilities/null.hpp */ = {isa = PBXBuildFile; fileRef = 26C4A55DEF554FA8B2B96567 /* /Users/heiner/git/QuantLib/ql/utilities/null.hpp */; };
		740C6E02E9124E0095147EB1 /* /Users/heiner/git/QuantLib/ql/experimental/math/farliegumbelmorgensterncopularng.hpp */ = {isa = PBXBuildFile; fileRef = F337B60C74D64515B0F57724 /* /Users/heiner/git/QuantLib/ql/experimental/math/farliegumbelmorgensterncopularng.hpp */; };
		7419F3277693419BB12B0377 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomlosslatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = BA164468DE5F43A1A86EBB1B /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomlosslatentmodel.hpp */; };
		745A196F73D1452387491F7B /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.hpp */ = {isa = PBXBuildFile; fileRef = 208C250D4A57488B96B4C444 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.hpp */; };
		745C46830C364ED4A1D06BED /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.hpp */ = {isa = PBXBuildFile; fileRef = F8872C2659CA4DCC9E21ECFB /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.hpp */; };
		747C14ED79624EF7A28D84C1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */ = {isa = PBXBuildFile; fileRef = EAB644E2FB0741819530780D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */; };
		747E30A717AA42759843DB0C /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */ = {isa = PBXBuildFile; fileRef = DEFBDA44A4384D89839A5FDF /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */; };
		7497C125D60B47B29BC25A47 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp */ = {isa = PBXBuildFile; fileRef = 501E5BB588914365B9FC7A5E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp */; };
		749CBDE338134F408A367ADC /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp */ = {isa = PBXBuildFile; fileRef = 73B87055D4424CFA928632E8 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp */; };
		74A1BFF472764C809ED5EC54 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipathgenerator.hpp */ = {isa = PBXBuildFile; fileRef = 4FFE538BAADE4AF4A8583933 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipathgenerator.hpp */; };
		74C2255EFB4E41DEA5A3B42B /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */ = {isa = PBXBuildFile; fileRef = B165474E091F4411829E8331 /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */; };
		74F7791BABDA45C796166AF3 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */ = {isa = PBXBuildFile; fileRef = A5D19D0848104A22AAAF0E84 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */; };
		74FBE4DB60E34819B9E106DD /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.hpp */ = {isa = PBXBuildFile; fileRef = F9EFD56C4157488AAA03F9F4 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.hpp */; };
		7504CF872B794D109C2EF10F /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 36CFB0770F3640EA984DC536 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */; };
		7507978EE33044B78D94E180 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */ = {isa = PBXBuildFile; fileRef = 8609F70A6D2149FD9BD3E098 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */; };
		751F03FC904A4F0B9FA2304F /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/all.hpp */ = {isa = PBXBuildFile; fileRef = 3A8D48B09CBF4D57B965B0B6 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/all.hpp */; };
		75232A780B8342A4918E853D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */ = {isa = PBXBuildFile; fileRef = 0FABA5A857DE4893BC4D418E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */; };
		7531B082346A4638B7FBC35C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.hpp */ = {isa = PBXBuildFile; fileRef = 987EEB341811428FB78F1A4C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.hpp */; };
		753C706F594B47FBB6707792 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.hpp */ = {isa = PBXBuildFile; fileRef = 24D1E1B6642A449C8ABD6BEE /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.hpp */; };
		7541582BC28C43F7BB0F49D8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */ = {isa = PBXBuildFile; fileRef = 03C441E6308146ADACF9B57F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */; };
		7547A448E64F4FEDB12526F1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp */ = {isa = PBXBuildFile; fileRef = 9E0EC08185E44111B81C09B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp */; };
		754B825E542B45F5996032FE /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */ = {isa = PBXBuildFile; fileRef = 86B399E6512E4AB986EC33FA /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */; };
		756EEBDC917D4682A736E8E2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */ = {isa = PBXBuildFile; fileRef = 155A0235D76149B2978C044D /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */; };
		75758A209A4B407F8747D949 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */ = {isa = PBXBuildFile; fileRef = 0616FBD49EA949E482DC68D6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */; };
		75923E07EAD5491688654905 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */ = {isa = PBXBuildFile; fileRef = 722BF0D6CF3A4A28AFD186A4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */; };
		7594A4785EB6424FB9CD2181 /* /Users/heiner/git/QuantLib/test-suite/partialtimebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = DCEDFEBE20FF409DB7BA23B8 /* /Users/heiner/git/QuantLib/test-suite/partialtimebarrieroption.hpp */; };
		75AFA5D89A6746FD95CF9132 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.hpp */ = {isa = PBXBuildFile; fileRef = AFDF074A4708499AB2D0F07B /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.hpp */; };
		75B08551BEEE46E591C791A9 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.hpp */ = {isa = PBXBuildFile; fileRef = 4220DF0E0AF44A56BFE7F877 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.hpp */; };
		75B23228647F44E1A8FB59EA /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.hpp */ = {isa = PBXBuildFile; fileRef = 5E183A6784D142D6985F3683 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.hpp */; };
		75BC07A9E398468B9E723B61 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */ = {isa = PBXBuildFile; fileRef = C1249EF7B19B439CAA05F211 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */; };
		75C3E73A49F546F79FECCFDC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp */ = {isa = PBXBuildFile; fileRef = E865D7B2CE3541CDAC620A3F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp */; };
		75D6A4A0390D4D27A6483B7E /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */ = {isa = PBXBuildFile; fileRef = D4C5E3A5332343DEB85309D1 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */; };
		75F2FE829FB94F6EB84C4D6B /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.hpp */ = {isa = PBXBuildFile; fileRef = 6494790BA24E4AC8813ADB1A /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.hpp */; };
		7615073BFAEB411598AE23CD /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.hpp */ = {isa = PBXBuildFile; fileRef = 51F03999B46A4AFFB17B5BEE /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.hpp */; };
		7618CFFB68334BD1B8B1E095 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */ = {isa = PBXBuildFile; fileRef = 968131179A9241FCB9673AB2 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */; };
		7628E24A2A974BDF9F4EF8E0 /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */ = {isa = PBXBuildFile; fileRef = D433A4C741EB401AB383D40C /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */; };
		763B75B1C5FE4633AA9FB2D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */ = {isa = PBXBuildFile; fileRef = 28C2797A60704E0FA46516CB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */; };
		7642BAAAD8474EF3824E8AE4 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */ = {isa = PBXBuildFile; fileRef = F4BECE987B66457EB4474562 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */; };
		765A7F9D30AA4104B48F5B90 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp */ = {isa = PBXBuildFile; fileRef = 786D10F263A0410B9F9C5261 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp */; };
		767A917719A44FCA843C41CC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/all.hpp */ = {isa = PBXBuildFile; fileRef = B492856BAE0740279C08855E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/all.hpp */; };
		76A6FE3B0CFB4B938ACFB22C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */ = {isa = PBXBuildFile; fileRef = B7366D80E5D0495693DED4E8 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */; };
		76C806A9E40A4E15AD6A734D /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.hpp */ = {isa = PBXBuildFile; fileRef = F4667A478C76460A85FA52CA /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.hpp */; };
		76D2DEA9B84940F2AC541A30 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdshoutengine.hpp */ = {isa = PBXBuildFile; fileRef = 5645CB088CD54B89BE0BB3FE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdshoutengine.hpp */; };
		7706EF0E4F784879AFCB7945 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */ = {isa = PBXBuildFile; fileRef = 5D51B239145547DD89291804 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */; };
		770FA7E6AC4B4C13961C677B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdconditions.hpp */ = {isa = PBXBuildFile; fileRef = B21FB2F2B47140229DD9F71A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdconditions.hpp */; };
		771ECD3D9C274E7D918B2607 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/all.hpp */ = {isa = PBXBuildFile; fileRef = A114B667EE3443CC92FC8252 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/all.hpp */; };
		77329981F9C8448B8B654D9A /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */ = {isa = PBXBuildFile; fileRef = 30C7D6E64FE744A5BF8399D2 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */; };
		773687EF4E0B49FAA068138D /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */ = {isa = PBXBuildFile; fileRef = 1E01AAF71FF64AFFAFB067AF /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */; };
		77466EB207764DCFA8635FEA /* /Users/heiner/git/QuantLib/test-suite/schedule.cpp */ = {isa = PBXBuildFile; fileRef = D8599B741C8148F8B83FCD27 /* /Users/heiner/git/QuantLib/test-suite/schedule.cpp */; };
		774E6EBF192F4FE5BA6EB3A8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */ = {isa = PBXBuildFile; fileRef = F3035B2DBDF34ECEBE10CE24 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */; };
		776B5E4BBA6C4346B4226316 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */ = {isa = PBXBuildFile; fileRef = C13C92F348764676BEAC3762 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */; };
		776C6B7D8CEF458AA1166C6A /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */ = {isa = PBXBuildFile; fileRef = F37D4E59DEFC43F285940360 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */; };
		778F1682B3DD4D3FB5DE7BD2 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/all.hpp */ = {isa = PBXBuildFile; fileRef = FB12D268F8B54C2D86234AD5 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/all.hpp */; };
		778F48592899430FB10CA8EA /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */ = {isa = PBXBuildFile; fileRef = 428B4AC6E0A146918C221448 /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */; };
		7798E3B84E9943288EAF8776 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = D1CF12C8AFF04B6099CC1ED5 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */; };
		779A0A2623CC4909958200CA /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 4E0EA78897094B1CA4B34962 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolation.hpp */; };
		77A0BAE680DB4DE2B93E48F2 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.hpp */ = {isa = PBXBuildFile; fileRef = 249A298E5B7B4E19A5EB0669 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.hpp */; };
		77B0F0454BFC4B0EB74E7805 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */ = {isa = PBXBuildFile; fileRef = 6562C7C1CFF14004A203A080 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */; };
		77B81475F87E4E6BA718221F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerator.hpp */ = {isa = PBXBuildFile; fileRef = 8C5EE0FCABA145FA96C504EA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerator.hpp */; };
		77C16A35E8864002B4F235EB /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */ = {isa = PBXBuildFile; fileRef = 5563DD4A358A4A7BB67E1F2E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */; };
		77C61885C9B14CB4B3DAB76A /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */ = {isa = PBXBuildFile; fileRef = 1F74BE886C1A4DC8ABE77346 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */; };
		77D2CC7DA8004E1C961F84DE /* /Users/heiner/git/QuantLib/ql/indexes/ibor/trlibor.hpp */ = {isa = PBXBuildFile; fileRef = CA06A22CA90843B19FBB5F9B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/trlibor.hpp */; };
		77EAE56EC45E4505B1D1B9B3 /* /Users/heiner/git/QuantLib/ql/experimental/math/frankcopularng.hpp */ = {isa = PBXBuildFile; fileRef = 2A75425B5E8746AEB3C894BD /* /Users/heiner/git/QuantLib/ql/experimental/math/frankcopularng.hpp */; };
		77EC5150ED8D438A89C1FEC4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerocurve.hpp */ = {isa = PBXBuildFile; fileRef = 9F649D91DF1A40DFA3CA7060 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerocurve.hpp */; };
		77F1D4BB5E6340E58C07E8A9 /* /Users/heiner/git/QuantLib/ql/time/calendars/all.hpp */ = {isa = PBXBuildFile; fileRef = 5CC2B1D279C3417086FC4708 /* /Users/heiner/git/QuantLib/ql/time/calendars/all.hpp */; };
		780C9964D1204966BFCC2F47 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp */ = {isa = PBXBuildFile; fileRef = 4E59B5CAE2074849B7B9DA7C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp */; };
		7823DE0AE0EF4573BDD2A9BB /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = 9634221BD0E84AB78B1605CE /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.hpp */; };
		7869D0D841B44D199C01B18F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */ = {isa = PBXBuildFile; fileRef = ABBF7473E1E941D8ADBA7346 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */; };
		786CD6E536BF4B77897E7642 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathpricer.hpp */ = {isa = PBXBuildFile; fileRef = 2D70FBB3C9A540DFB5BC398D /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathpricer.hpp */; };
		787FB29B56BF490F9848CDFB /* /Users/heiner/git/QuantLib/ql/experimental/fx/all.hpp */ = {isa = PBXBuildFile; fileRef = AA79577C99FD41BA97BE0767 /* /Users/heiner/git/QuantLib/ql/experimental/fx/all.hpp */; };
		7880D4B17F8E424E9E9D8D38 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.hpp */ = {isa = PBXBuildFile; fileRef = 5EF9807D44484F199326DF14 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.hpp */; };
		78862DEDCBE345DDBBDC8CF0 /* /Users/heiner/git/QuantLib/test-suite/everestoption.cpp */ = {isa = PBXBuildFile; fileRef = 3F6B28FB6846417BA49D3954 /* /Users/heiner/git/QuantLib/test-suite/everestoption.cpp */; };
		789313701EDE4177AD2512E3 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/all.hpp */ = {isa = PBXBuildFile; fileRef = B036FFBA271F479694448B5E /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/all.hpp */; };
		78A0A2ACBBAE4E738051BD6B /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */ = {isa = PBXBuildFile; fileRef = B119647C44314BEB8B4B4FBF /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */; };
		78CB389876FC42ADA0A06D66 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */ = {isa = PBXBuildFile; fileRef = ED23B48D837F4CC4B68B9525 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */; };
		78CC8A28E0C945D69D36CCAD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/modtriplebandlinearop.hpp */ = {isa = PBXBuildFile; fileRef = E796EDD7CB3E4FA0B9BDC05B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/modtriplebandlinearop.hpp */; };
		78CEE10D3E5D4FC49789E29F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.hpp */ = {isa = PBXBuildFile; fileRef = 3AD2F95423284449997FE788 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.hpp */; };
		78DA9419ABB743E094582126 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.hpp */ = {isa = PBXBuildFile; fileRef = 21B7E6408AD6474BA3541236 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.hpp */; };
		78DEB0D3C4CE49709B3380DE /* /Users/heiner/git/QuantLib/ql/methods/all.hpp */ = {isa = PBXBuildFile; fileRef = D40BA15CF79241169F99A304 /* /Users/heiner/git/QuantLib/ql/methods/all.hpp */; };
		79058A8847C941AA89423AA9 /* /Users/heiner/git/QuantLib/ql/utilities/vectors.hpp */ = {isa = PBXBuildFile; fileRef = D7B7C835A5184521B1876361 /* /Users/heiner/git/QuantLib/ql/utilities/vectors.hpp */; };
		79120C8122994C84B366DBDC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */ = {isa = PBXBuildFile; fileRef = 2C4F4A202939469B90607B2E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */; };
		792721F7B47E46808CCB8088 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/all.hpp */ = {isa = PBXBuildFile; fileRef = BD5CA40902C847A495C1EF1A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/all.hpp */; };
		793374701C61458B95D4FDBB /* /Users/heiner/git/QuantLib/ql/quotes/compositequote.hpp */ = {isa = PBXBuildFile; fileRef = 856BAEFE419E493AA3B22006 /* /Users/heiner/git/QuantLib/ql/quotes/compositequote.hpp */; };
		79879B23D6CC4729905C19CA /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.hpp */ = {isa = PBXBuildFile; fileRef = DBC49BED7438495E9393C58D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.hpp */; };
		7987BD8CB921434993930419 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/euhicp.hpp */ = {isa = PBXBuildFile; fileRef = 9FE20CBC91224564BA025214 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/euhicp.hpp */; };
		79968F79A64341CD9C5F29E4 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */ = {isa = PBXBuildFile; fileRef = C7B3F35481014013A851090B /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */; };
		79971706F70B479FB4753090 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */ = {isa = PBXBuildFile; fileRef = 8E6FBBCB76B24C3D95D7618C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */; };
		79A07E94B6F14D38A8A93E46 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/all.hpp */ = {isa = PBXBuildFile; fileRef = 417ABAFCECDF4445AE642775 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/all.hpp */; };
		79B1374926024B16A5BCBDD2 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */ = {isa = PBXBuildFile; fileRef = 749E981048CB48B78DC90F18 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */; };
		79B365FA6D2140308FE41E73 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.hpp */ = {isa = PBXBuildFile; fileRef = 60DAEE67FA4B4F7281A3B663 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.hpp */; };
		79B63247662242E38E06931E /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */ = {isa = PBXBuildFile; fileRef = F5F96096F5F94FA5938C2BF5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */; };
		79B8A67675B14B18A61237DD /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.hpp */ = {isa = PBXBuildFile; fileRef = 72D60290DDE34357862CE4AC /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.hpp */; };
		79C41112A3004C1AA621921A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.hpp */ = {isa = PBXBuildFile; fileRef = 3065AC836D134B8C9C9DEC52 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.hpp */; };
		79C569956F804945A17844D4 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/all.hpp */ = {isa = PBXBuildFile; fileRef = 7F0217D93CD74A758383C731 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/all.hpp */; };
		79C5DA62457A43BE90DDC5C3 /* /Users/heiner/git/QuantLib/ql/time/asx.hpp */ = {isa = PBXBuildFile; fileRef = FA450171CABE48F4AF951DA9 /* /Users/heiner/git/QuantLib/ql/time/asx.hpp */; };
		79CD50EF6F6D4B3EA4FF1A06 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.hpp */ = {isa = PBXBuildFile; fileRef = 8F96C3125D93407A9E6C084E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.hpp */; };
		79CD9D546F7A4BC2A027B569 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.hpp */ = {isa = PBXBuildFile; fileRef = 550E32F12B2547B98B5EF13E /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.hpp */; };
		79E015D546D14746B9EC0AB9 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.hpp */ = {isa = PBXBuildFile; fileRef = 7EA5C1BE78B84C41B7CFE557 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.hpp */; };
		79EAD023A80045D7BC7498B0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp */ = {isa = PBXBuildFile; fileRef = CF930318F70B4575A81BF414 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp */; };
		79FAB031D2FF4DDD899BE462 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/all.hpp */ = {isa = PBXBuildFile; fileRef = 52C8DE6733FC41D689D7FD39 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/all.hpp */; };
		79FD977F9F0B4D9794892C0E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.hpp */ = {isa = PBXBuildFile; fileRef = 04CF43BB5C1F42598FB38CB3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.hpp */; };
		7A00F73FA340401E8069DDDA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.hpp */ = {isa = PBXBuildFile; fileRef = 27167E3BADF14D33B0201C81 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.hpp */; };
		7A06B611D03C4C96AC4557A0 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */ = {isa = PBXBuildFile; fileRef = 70D73330B9D241D0B48B58A3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */; };
		7A0998F601944452A9D9BF8D /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */ = {isa = PBXBuildFile; fileRef = 2A775885FD0E44EA890C794B /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */; };
		7A12916BAFEC40A3AEA1715B /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */ = {isa = PBXBuildFile; fileRef = E153A18889C343D99725FA5A /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */; };
		7A14097788A04EDEAABA22EB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.hpp */ = {isa = PBXBuildFile; fileRef = 58F3BB9116AF49E190E9E909 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.hpp */; };
		7A2D2C2072C241928F06B06C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendshoutengine.hpp */ = {isa = PBXBuildFile; fileRef = 7E8CFFD70BA442F6AAC4B2C2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendshoutengine.hpp */; };
		7A319312D7C54D6F991364A8 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.hpp */ = {isa = PBXBuildFile; fileRef = 0EF4C3E522CE421BB2502AF7 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.hpp */; };
		7A379183A96C4C17969B3CD9 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */ = {isa = PBXBuildFile; fileRef = D678752894894836892DFA12 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */; };
		7A407B90D47A49ECBA4A4B5A /* /Users/heiner/git/QuantLib/test-suite/twoassetbarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = ED7AB3EAF0464970A96A738C /* /Users/heiner/git/QuantLib/test-suite/twoassetbarrieroption.hpp */; };
		7A4F04FB52DB470088B4EA2F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackconstantvol.hpp */ = {isa = PBXBuildFile; fileRef = 0924B62B361D4CDBAC25BCAB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackconstantvol.hpp */; };
		7A4F20B519364F199CD34414 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */ = {isa = PBXBuildFile; fileRef = D772CE8750084F6CB71ED307 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */; };
		7A55EDEE34B84DB9BBEB89E0 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 2EC31C91FD6941B8BDD80C62 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp */; };
		7A6C1DA102BA405E9C612AF4 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.hpp */ = {isa = PBXBuildFile; fileRef = 5D7A195224904A2AAFA34D7C /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.hpp */; };
		7A81731A7C3247E8AE8A1A91 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */ = {isa = PBXBuildFile; fileRef = 53EA5718E1CE499B956B0F92 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */; };
		7A91540D9E9447569A9F93AE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.hpp */ = {isa = PBXBuildFile; fileRef = 905908B7D76E4A3692080253 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.hpp */; };
		7A9AFAC0531743EFB7006760 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */ = {isa = PBXBuildFile; fileRef = 86B1249822BD46C5AD945C54 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */; };
		7AA4AAAC257B4E138F412375 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */ = {isa = PBXBuildFile; fileRef = 07CCE326764443B8B3337E3E /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */; };
		7AB3AA59EC8F4A8F890B72EC /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.hpp */ = {isa = PBXBuildFile; fileRef = BA6D833CD7724703AC14F355 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.hpp */; };
		7AC6586404DA453CAD41CF99 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */ = {isa = PBXBuildFile; fileRef = 2FF62E70E9204698BDD34AFD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */; };
		7AEC09CBAE6641EEAEA8BF95 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp */ = {isa = PBXBuildFile; fileRef = AA09FA3383024A4D995AD023 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp */; };
		7B0993188F704E93AFDD32B3 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */ = {isa = PBXBuildFile; fileRef = EACEE39FB59F4B9FAB1ABFE0 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */; };
		7B100FBCE0E94054BB7FD5BF /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */ = {isa = PBXBuildFile; fileRef = 1A8E7004FFBA41EF8B8600BE /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */; };
		7B12703FBA5646549D199B23 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */ = {isa = PBXBuildFile; fileRef = 8E935A08FC5E4562B4555411 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */; };
		7B218ACBB95A4728BE178450 /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */ = {isa = PBXBuildFile; fileRef = 51737F9F99F44F04B0F0E11A /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */; };
		7B29DDE0345245E79179FE00 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */ = {isa = PBXBuildFile; fileRef = 382A6E18EDE8449693794932 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */; };
		7B37DBE5710C45998E3FDABE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */ = {isa = PBXBuildFile; fileRef = E8DF6D34B4A54B6B8800E366 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */; };
		7B3B53F5E59B477CBCFB8067 /* /Users/heiner/git/QuantLib/ql/experimental/math/levyflightdistribution.hpp */ = {isa = PBXBuildFile; fileRef = 25C8ACAE0E3448B0A28EF9B1 /* /Users/heiner/git/QuantLib/ql/experimental/math/levyflightdistribution.hpp */; };
		7B3EACAB86EC460DA3A07A8D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp */ = {isa = PBXBuildFile; fileRef = BC0832B0E2A64379939B3BA7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp */; };
		7B3EE81CEF9648B897A4DA26 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.hpp */ = {isa = PBXBuildFile; fileRef = 9B0C8F3E921B45919D7A1587 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.hpp */; };
		7B40FFD56AF9478D91E5F841 /* /Users/heiner/git/QuantLib/test-suite/stats.cpp */ = {isa = PBXBuildFile; fileRef = 1BE4E779798847A5BB9D7819 /* /Users/heiner/git/QuantLib/test-suite/stats.cpp */; };
		7B454B59D83E45BCB11B48B8 /* /Users/heiner/git/QuantLib/ql/currencies/america.hpp */ = {isa = PBXBuildFile; fileRef = AEA2E8380D9C414F9501D87A /* /Users/heiner/git/QuantLib/ql/currencies/america.hpp */; };
		7B46F2B6B30142FA94B18EA0 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.hpp */ = {isa = PBXBuildFile; fileRef = C5A1112C7686486D8DF3BA8B /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.hpp */; };
		7B55C528748A47988D9F11BE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */ = {isa = PBXBuildFile; fileRef = 7B5E0B31701649D5A15A2E26 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */; };
		7B7087086DE34F1E8082291D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaform.hpp */ = {isa = PBXBuildFile; fileRef = 062BFB7F77964D49A1A7DDDF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaform.hpp */; };
		7B7A1FF573DE4EB49E56E43E /* /Users/heiner/git/QuantLib/ql/time/calendars/all.hpp */ = {isa = PBXBuildFile; fileRef = C83A2DB0771C497389CB7024 /* /Users/heiner/git/QuantLib/ql/time/calendars/all.hpp */; };
		7B7EBB0A8DA84A7282A05B0D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.hpp */ = {isa = PBXBuildFile; fileRef = D44169D38F32446198000ED7 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.hpp */; };
		7B82ADA8A38D4980946370B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */ = {isa = PBXBuildFile; fileRef = 6FBC8F35887043E0B0FDA038 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */; };
		7BB7DE48EDDB486C9B5954C4 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = 8479B117176E4674885BF970 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */; };
		7BE5606223904D9ABA69979A /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */ = {isa = PBXBuildFile; fileRef = 7E8B32EE24484BC5B4EC5B1A /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */; };
		7BEA32EB88DA4EB6913C0A63 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp */ = {isa = PBXBuildFile; fileRef = E797130A3B674AC6A67EE812 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp */; };
		7BFC16AB832C4AAB899E80F6 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = CF3F8C7477684882A35ED24B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */; };
		7C15D03F67DB4636A9295A63 /* /Users/heiner/git/QuantLib/ql/math/interpolations/flatextrapolation2d.hpp */ = {isa = PBXBuildFile; fileRef = 2E876584A5A745F1AD1F086C /* /Users/heiner/git/QuantLib/ql/math/interpolations/flatextrapolation2d.hpp */; };
		7C1B640A16844A318D67EEB9 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.hpp */ = {isa = PBXBuildFile; fileRef = BAC6949F392847CB8C648730 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.hpp */; };
		7C2607F8710E4A008ECBF633 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 3F7F114B1F514D41B48AAC98 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */; };
		7C2929CF3A0642D3BECB637C /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */ = {isa = PBXBuildFile; fileRef = 2EAB42F71E6B4945B455B25D /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */; };
		7C347B3C30A14091909EC661 /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealingfunctors.hpp */ = {isa = PBXBuildFile; fileRef = A1F0E92F6BC34F8C99EE003F /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealingfunctors.hpp */; };
		7C49CAAD3A1B4A8C8D09C851 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */ = {isa = PBXBuildFile; fileRef = 0C311916C72E4B5FAF9E1EA7 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */; };
		7C4D1DD903C54AB18A290557 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */ = {isa = PBXBuildFile; fileRef = 37251C76D2864BE9BC6B6B7F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */; };
		7C86491ACC5147D2ACB66095 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = A74AAB767C2D4E66B2FC8E6B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */; };
		7C8EAD2EB3DC476882963933 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp */ = {isa = PBXBuildFile; fileRef = 77ECA370D4FC45299583AED9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp */; };
		7C93E6E548894D9D88A859CF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.hpp */ = {isa = PBXBuildFile; fileRef = 310472F71F20484BA6D61570 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.hpp */; };
		7C972BEDA353494699B69BBC /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */ = {isa = PBXBuildFile; fileRef = 362057D51C46471ABB5581CB /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */; };
		7C990DADD9B546798D818E0B /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */ = {isa = PBXBuildFile; fileRef = 97E56A97452A40B08F79C3F4 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */; };
		7C9EA22CD2D641E99B10635C /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.hpp */ = {isa = PBXBuildFile; fileRef = 68F327A63A6D4C2388F510A8 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.hpp */; };
		7CA45E8249BC4AC098DFC837 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp */ = {isa = PBXBuildFile; fileRef = DC86CFD3C1784454A7516515 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp */; };
		7CA56F3CFF0D48F49AE28D33 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 094B9001F01F4D16AD23EF1C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.hpp */; };
		7CA8AA18BAEC4E069851A0F1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 733F24C9F4D94879A4C681E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.hpp */; };
		7CB7FD3AFE794B97BFB30D1E /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */ = {isa = PBXBuildFile; fileRef = A438EC12264348FEAAB320CD /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */; };
		7CBE1B14CC1D478FB079577E /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.hpp */ = {isa = PBXBuildFile; fileRef = E17DC22669D94A1F9B7E3CE6 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.hpp */; };
		7CCAB38B30F0446B9011097D /* /Users/heiner/git/QuantLib/ql/time/weekday.hpp */ = {isa = PBXBuildFile; fileRef = C6422DA41EA543168FCC6823 /* /Users/heiner/git/QuantLib/ql/time/weekday.hpp */; };
		7CCE3459A056460EB07563CC /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitylatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = B7887FF2901C4BA0B04ECA61 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitylatentmodel.hpp */; };
		7CD283EE18E24E299D39AB4A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = BC7459EDA652483485CAEECA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp */; };
		7CD60C01B2D148BFA1EFB6AA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */ = {isa = PBXBuildFile; fileRef = 354179D9AE664435A43CE66E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */; };
		7CD8EE66BC814238931D4104 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */ = {isa = PBXBuildFile; fileRef = EC8BC8C1AE9D45CDAA4E608B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */; };
		7CE64FABDF27499C9BC8AC40 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/binomialdoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 8BE41E89A22F4A40ADCC9E24 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/binomialdoublebarrierengine.hpp */; };
		7CED228E0844414696D20625 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */ = {isa = PBXBuildFile; fileRef = D3D4E1AAC10D4BA287428DBC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */; };
		7CF6B735A0284CFBAF0B8B74 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewisezeroinflationcurve.hpp */ = {isa = PBXBuildFile; fileRef = C966D6D26E624106A29049A3 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewisezeroinflationcurve.hpp */; };
		7CFC794F91A9463FAB7AA69A /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */ = {isa = PBXBuildFile; fileRef = 4F6949DC2B6D41B7861EF4CE /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */; };
		7D05210BDC61402AA542C7C8 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 3B76728258204835AA641669 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp */; };
		7D0DBF7162EC403FAF0CAD6C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */ = {isa = PBXBuildFile; fileRef = D0BDF8F509A848DAA4357855 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */; };
		7D1B74E7247F437093B62AF2 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */ = {isa = PBXBuildFile; fileRef = 6B4A9F705DC84C03948F82AA /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */; };
		7D1C389697834F2F8A07E802 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.hpp */ = {isa = PBXBuildFile; fileRef = 6B40965D8C244E6085B7E834 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.hpp */; };
		7D1DD0C85A0047DCB8732F8A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp */ = {isa = PBXBuildFile; fileRef = 6A60A7729CAC4B45A7FB810C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp */; };
		7D33E28573D94F77AF8D76B2 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */ = {isa = PBXBuildFile; fileRef = 5CAF0D2D417241FFAF0DB838 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */; };
		7D3BEFDBC9C74CCD86C1B195 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.hpp */ = {isa = PBXBuildFile; fileRef = 2EF6F3813DB74774B094D4D3 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.hpp */; };
		7D3D34A0ABDA4BD2AC98943D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */ = {isa = PBXBuildFile; fileRef = 29E1B776F59E416B863BFFEF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */; };
		7D3DF1D470AE423A94C17AB9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */ = {isa = PBXBuildFile; fileRef = 97B2D52572274DEAAF390A72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */; };
		7D4D693CB28547DDBBCF0049 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.hpp */ = {isa = PBXBuildFile; fileRef = 6195256BB1E1439D87431CAC /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.hpp */; };
		7D5A066730604066841B42C3 /* /Users/heiner/git/QuantLib/ql/patterns/observable.hpp */ = {isa = PBXBuildFile; fileRef = 65EA1E9FD21C4F069F1EBFEB /* /Users/heiner/git/QuantLib/ql/patterns/observable.hpp */; };
		7D5DEB3A97834101A8EE8864 /* /Users/heiner/git/QuantLib/test-suite/varianceoption.hpp */ = {isa = PBXBuildFile; fileRef = 00B0D8E028944B5AA7C720B5 /* /Users/heiner/git/QuantLib/test-suite/varianceoption.hpp */; };
		7D6AE2FEF97B482FB5B15AAD /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.hpp */ = {isa = PBXBuildFile; fileRef = 6E7DCB9038D84518A4DC02F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.hpp */; };
		7D7D9C2FAA444C5498F2E020 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */ = {isa = PBXBuildFile; fileRef = 4215578761BE45C6AA65A971 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */; };
		7D85A1207DC74E16A70921B7 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = FE3D86CFA6D943958231134B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */; };
		7D9DE8FCE57448348A2EFE49 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */ = {isa = PBXBuildFile; fileRef = 3BA6436F7CB94F7681B949B1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */; };
		7D9E36A8CE4C4EB8AA666E9C /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */ = {isa = PBXBuildFile; fileRef = 32273276621F485DABD12671 /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */; };
		7D9E7A21E4BF4D5DAD7B149C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp */ = {isa = PBXBuildFile; fileRef = A39583EE04CC40059A6DC702 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp */; };
		7DB5F5C642FF458183FB6476 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp */ = {isa = PBXBuildFile; fileRef = AF56DFDD5A6449889F2859D6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp */; };
		7DBB2AB091D448F98B278A93 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = BBBC7E62F3A44575BA4C7742 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanengine.hpp */; };
		7DBFA959FF324814B4DCA5F6 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 4895DA24EE6F46A5A6E5AB99 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.hpp */; };
		7DC980C2661040DFAA6E3119 /* /Users/heiner/git/QuantLib/test-suite/main.cpp */ = {isa = PBXBuildFile; fileRef = 91F4EE17F5254BA8AECFE44F /* /Users/heiner/git/QuantLib/test-suite/main.cpp */; };
		7DE64C28DFB64A3DBACF45EE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp */ = {isa = PBXBuildFile; fileRef = 13EE32FFB362484496A310BD /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp */; };
		7DF651B67E62482B8AC7C614 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */ = {isa = PBXBuildFile; fileRef = 86CEF52FCCC44C8BA3F0F3D7 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */; };
		7E1588D06098412580769E09 /* /Users/heiner/git/QuantLib/ql/time/all.hpp */ = {isa = PBXBuildFile; fileRef = F54E3C0E123C4D3CA8F7E7DF /* /Users/heiner/git/QuantLib/ql/time/all.hpp */; };
		7E3D2AB7C416425782D89101 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/zibor.hpp */ = {isa = PBXBuildFile; fileRef = 455DCCA9285B4BCBA84206C8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/zibor.hpp */; };
		7E4B0E0CAF964D54A0F06ED4 /* /Users/heiner/git/QuantLib/test-suite/speedlevel.hpp */ = {isa = PBXBuildFile; fileRef = E8CCC8A2407F4C67AE7C2A34 /* /Users/heiner/git/QuantLib/test-suite/speedlevel.hpp */; };
		7E5188F9EFB04945BE6BC370 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */ = {isa = PBXBuildFile; fileRef = DD42447AB13542C7B26D9050 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */; };
		7E5E04717E734033847F2E40 /* /Users/heiner/git/QuantLib/test-suite/instruments.hpp */ = {isa = PBXBuildFile; fileRef = A880575A14684CBA8D03A699 /* /Users/heiner/git/QuantLib/test-suite/instruments.hpp */; };
		7E683B798DDF499F8DB73F99 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */ = {isa = PBXBuildFile; fileRef = D2EC4BAED7BD42E1BEFF6AF0 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */; };
		7E6CC12877BC4E4497B2D06B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp */ = {isa = PBXBuildFile; fileRef = 414D2FD24BD84976A4D52E56 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp */; };
		7E6FEDF305A04D4D848F8EE6 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */ = {isa = PBXBuildFile; fileRef = 1139314DC80749069F15BEC1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */; };
		7E77260D33BE4B6A81C042CA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp */ = {isa = PBXBuildFile; fileRef = 87C44D3F331E45CDB5DCC065 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp */; };
		7E79CC08251342EC83044FE4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */ = {isa = PBXBuildFile; fileRef = 814FBE71082C4D9581C68079 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */; };
		7EA271972CD54C3D86999683 /* /Users/heiner/git/QuantLib/test-suite/calendars.cpp */ = {isa = PBXBuildFile; fileRef = 3402FC31560A4B24A11898D0 /* /Users/heiner/git/QuantLib/test-suite/calendars.cpp */; };
		7EAF1C627B4145E6B6FDA45F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */ = {isa = PBXBuildFile; fileRef = 0BAC7654FC9F42BF8D42CE8D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */; };
		7EDF9B92BDCF4FA6A5F345E3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */ = {isa = PBXBuildFile; fileRef = F25860B997B34ACE899D87E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */; };
		7EE835D925AD4EF79CA582AC /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardcurve.hpp */ = {isa = PBXBuildFile; fileRef = 85CAFE3A8B2B432AB53E5334 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardcurve.hpp */; };
		7F2FAC26B2644A1F86143436 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.hpp */ = {isa = PBXBuildFile; fileRef = 4A7025838AC547D680DED3B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.hpp */; };
		7F327F1BFC8B4A5E96E2B60B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/all.hpp */ = {isa = PBXBuildFile; fileRef = 2F5F52928DDF49A3B3781D7E /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/all.hpp */; };
		7F37492984514B638E5C3439 /* /Users/heiner/git/QuantLib/ql/math/ode/adaptiverungekutta.hpp */ = {isa = PBXBuildFile; fileRef = 1E3CE28B098047EEBEA8BE98 /* /Users/heiner/git/QuantLib/ql/math/ode/adaptiverungekutta.hpp */; };
		7F377FAD7D9F4C7394B1B9CA /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */ = {isa = PBXBuildFile; fileRef = 14BFF57B924F4195A9813837 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */; };
		7F39E031308C4EF3B78C9835 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp */ = {isa = PBXBuildFile; fileRef = F7415DE49E2C4E698F72943B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp */; };
		7F467224A00F47718E4C0541 /* /Users/heiner/git/QuantLib/ql/time/date.cpp */ = {isa = PBXBuildFile; fileRef = DB4748D9352F498EB8B39C86 /* /Users/heiner/git/QuantLib/ql/time/date.cpp */; };
		7F5C0620061E46A3BCF8F763 /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.hpp */ = {isa = PBXBuildFile; fileRef = 4E0C92ABA46C474BAD9BF63E /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.hpp */; };
		7F6F0BCF1A8B4091990E617E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */ = {isa = PBXBuildFile; fileRef = 20D1726C3E9641E59AA70FF4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */; };
		7FC21DB8021848B5A9EA7A58 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.hpp */ = {isa = PBXBuildFile; fileRef = 21FEA4399AF84481A1C4A3B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.hpp */; };
		7FD8436AA0654336B979F4E0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp */ = {isa = PBXBuildFile; fileRef = 9A11E01CE0DE4041903A2033 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp */; };
		7FF754F0FF4B4D899C36CE4B /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */ = {isa = PBXBuildFile; fileRef = 27517EA43B9D4BE8971F89D9 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */; };
		8002429694374892A98E6D70 /* /Users/heiner/git/QuantLib/ql/math/matrix.hpp */ = {isa = PBXBuildFile; fileRef = EC2BE9340E024A9EB3C5A613 /* /Users/heiner/git/QuantLib/ql/math/matrix.hpp */; };
		801CC8D783B04E0EA21C3BD8 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.hpp */ = {isa = PBXBuildFile; fileRef = 006C8EE694E14828A92DC965 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.hpp */; };
		801EEAD85FF9499083F8483F /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.hpp */ = {isa = PBXBuildFile; fileRef = 1F1555B687124615BC0AB6FA /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.hpp */; };
		802539CD47BB403E84B30968 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */ = {isa = PBXBuildFile; fileRef = 11F1CA81C2344AFE8ADF93E4 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */; };
		802DA59ABAA444ACBDFACCEE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.hpp */ = {isa = PBXBuildFile; fileRef = 50AC258CB96D4D50ACE26E8B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.hpp */; };
		806A843767344F2286673336 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp */ = {isa = PBXBuildFile; fileRef = 201E4D7B7B784508BD2DA66A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp */; };
		806B8B51C85D4A35859DD7F4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */ = {isa = PBXBuildFile; fileRef = 8FA48EDD170D41E9A1E8BEC1 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */; };
		80753B61B9DB400886DF1B6D /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 243E4C51F6B44C418AD912F7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */; };
		8084C231FA7A41779C671DE4 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */ = {isa = PBXBuildFile; fileRef = 4C525C37BA9D4815BB47CA34 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */; };
		80897D63D1C54874A346378D /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.hpp */ = {isa = PBXBuildFile; fileRef = 7EA8C32A9C714A0593A1799B /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.hpp */; };
		80B768F78FC247879BC55582 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */ = {isa = PBXBuildFile; fileRef = 97C34D1F525D4B3985893D55 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */; };
		80BDF55C1F344801A8AE50D1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */ = {isa = PBXBuildFile; fileRef = 56F802BB63174EDC87E655EA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */; };
		80D6884B806E4074BC05D29D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */ = {isa = PBXBuildFile; fileRef = ED9BC6773D4141069CD909B9 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */; };
		80DC8786564D4D1990A7487B /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.hpp */ = {isa = PBXBuildFile; fileRef = 8531FDF381FF4D87B178C72C /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.hpp */; };
		80E6801EF23F47FBB2C50835 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */ = {isa = PBXBuildFile; fileRef = DF64ECA5380F4F62B4BF026B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */; };
		8100C71E96674DE49E1F6382 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */ = {isa = PBXBuildFile; fileRef = 41D08D6399FB4FBD9D3BAE10 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */; };
		810671F623974C52AE531A89 /* /Users/heiner/git/QuantLib/ql/math/interpolations/bicubicsplineinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 4D5714FCF9A248D3A6CAF003 /* /Users/heiner/git/QuantLib/ql/math/interpolations/bicubicsplineinterpolation.hpp */; };
		8111130B1FE2469C8B21D164 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */ = {isa = PBXBuildFile; fileRef = 47E28414BB064E0592DA466D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */; };
		811A7B5F142F48C2ACE65F4A /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */ = {isa = PBXBuildFile; fileRef = A3BF21AAD7F244F2A7339009 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */; };
		8147B78729974518BB1BA4D2 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.hpp */ = {isa = PBXBuildFile; fileRef = 9B19F3A62AA64E798E90A8CB /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.hpp */; };
		814B58EAA01A4FED9427B326 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 8DDF376493AA44039AADE764 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */; };
		81535FDED894415FA9F1CC68 /* /Users/heiner/git/QuantLib/ql/utilities/null_deleter.hpp */ = {isa = PBXBuildFile; fileRef = AB5643AB4E2343A2BF65C908 /* /Users/heiner/git/QuantLib/ql/utilities/null_deleter.hpp */; };
		8160A25800DA4D58A8C960F3 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */ = {isa = PBXBuildFile; fileRef = 37A4C0C18EDC4A03B46AC7D3 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */; };
		81B382BF5CEC40D6A02B4CD6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/multiproduct.hpp */ = {isa = PBXBuildFile; fileRef = 3A7BA5711B3C4A7998C9F312 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/multiproduct.hpp */; };
		81BBF3099BC345538957C5B4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */ = {isa = PBXBuildFile; fileRef = 075210B1D0D8466492AC4153 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */; };
		81BFC457F68F4F55B005A3EF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 6582773D54DC48B7BE287517 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcvanillaengine.hpp */; };
		81C4517F51094811AAEE2BF5 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */ = {isa = PBXBuildFile; fileRef = 21A7871A022447DEB7289D25 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */; };
		81CD131CE4F34263BF9BCE65 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/ridder.hpp */ = {isa = PBXBuildFile; fileRef = 9114B8670B5F4536A1B46D52 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/ridder.hpp */; };
		81E303B3508B4C10880DC035 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/quantotermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 8D628C15B7D6435EA7AA30E5 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/quantotermstructure.hpp */; };
		81E5448DFFC9462F8BF2D9F1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */ = {isa = PBXBuildFile; fileRef = 4DA7B631C0DC4400AD52FEE5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */; };
		81FC10D086E642CCAA530587 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */ = {isa = PBXBuildFile; fileRef = 439B56F6087745C389BA9C54 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */; };
		81FE69444EE744B89F69DB0D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.hpp */ = {isa = PBXBuildFile; fileRef = BA4B050C3667407A9F54C508 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.hpp */; };
		82409BB64F2240669D98E761 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.hpp */ = {isa = PBXBuildFile; fileRef = C6D24E3E36404C46AA2050B1 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.hpp */; };
		824C31255A904FB4800E4C7D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.hpp */ = {isa = PBXBuildFile; fileRef = 8D783B120FE646A9B55DDAA7 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.hpp */; };
		8254BB81063B4D34AA83E96B /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.hpp */ = {isa = PBXBuildFile; fileRef = B561260C71FC4EAF92A43270 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.hpp */; };
		8259CF4592E84690A0E2D3FD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 94A1E6725B9A415280A06DE7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */; };
		8272DB207FE64D2DAF02F00E /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.hpp */ = {isa = PBXBuildFile; fileRef = 0D3ABC142DE84BF0AF338EC4 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.hpp */; };
		82815C32EC46404182D47335 /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealingfunctors.hpp */ = {isa = PBXBuildFile; fileRef = BDF7CB9A7EC442DA8EB19F52 /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealingfunctors.hpp */; };
		828543932F924CA3B3E1F275 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = CB945F1D8AE54834A50D0DDD /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */; };
		828CA2B9CBEA4E20822678AD /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.hpp */ = {isa = PBXBuildFile; fileRef = 4EA33D3E791947D2A28D8E2F /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.hpp */; };
		8293AFC6D1284C35B9EA29EE /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp */ = {isa = PBXBuildFile; fileRef = 1190AF169B8347B5A1726B36 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp */; };
		829FCD501925440D81A6CB91 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp */ = {isa = PBXBuildFile; fileRef = 22AD64ED941F4B9588D1016B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp */; };
		829FCE1057C141B78C7B8F63 /* /Users/heiner/git/QuantLib/ql/experimental/math/all.hpp */ = {isa = PBXBuildFile; fileRef = 9C4033EEAF9A4D5C9A99BA1B /* /Users/heiner/git/QuantLib/ql/experimental/math/all.hpp */; };
		82A036B0498E4BB8B78A6BB8 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.hpp */ = {isa = PBXBuildFile; fileRef = 31F05562E2F649A2B10A1447 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.hpp */; };
		82A534A6F80447159A176CDD /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.hpp */ = {isa = PBXBuildFile; fileRef = 51BC1A0C626F4BF192E2CE1A /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.hpp */; };
		82A6D8C4C06749AEA28D44A7 /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */ = {isa = PBXBuildFile; fileRef = 225FFAFBF783483DAE009DDC /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */; };
		82B98DAD22174B0C8589EF82 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.hpp */ = {isa = PBXBuildFile; fileRef = F7D960BFB3174395BCAEA0A8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.hpp */; };
		82B99C30C7724C8E8D3022E1 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/all.hpp */ = {isa = PBXBuildFile; fileRef = 54F4BEB5F2F44BA3AFC6CEAC /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/all.hpp */; };
		82CE44052B424E2D8D16412E /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.hpp */ = {isa = PBXBuildFile; fileRef = 9C0C5ABF44E04A64B1B865C0 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.hpp */; };
		82D6BEC5CF5644D9BCC6585C /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationtraits.hpp */ = {isa = PBXBuildFile; fileRef = 9BC5341157FF4E118F1931EA /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationtraits.hpp */; };
		82D8712E760148B1B0A512AC /* /Users/heiner/git/QuantLib/test-suite/vpp.cpp */ = {isa = PBXBuildFile; fileRef = 991AE5BA31F744B1A3C0745B /* /Users/heiner/git/QuantLib/test-suite/vpp.cpp */; };
		82E2859B792A46A3AE6EC910 /* /Users/heiner/git/QuantLib/test-suite/europeanoption.hpp */ = {isa = PBXBuildFile; fileRef = 5BC2A0D98DA74B3CA1F2E17A /* /Users/heiner/git/QuantLib/test-suite/europeanoption.hpp */; };
		82F0948DE128445198A178EB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */ = {isa = PBXBuildFile; fileRef = 58BA92191E0441CBA9910B7A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */; };
		82FEEC4999234285968200CD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 9794802D04E549599507E8C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.hpp */; };
		83011E5ACCDF470B90475A11 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.hpp */ = {isa = PBXBuildFile; fileRef = E278707C1FE94AE3B8BAA273 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.hpp */; };
		83111C81EAD24E58A027FC36 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.hpp */ = {isa = PBXBuildFile; fileRef = BF0A759D43714BB5A3B7E7C3 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.hpp */; };
		831261B978504B3296CFAD9D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/all.hpp */ = {isa = PBXBuildFile; fileRef = F6350A60CB7A4674ACC92B79 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/all.hpp */; };
		8319CDE4D71B4C2A8CE48125 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.hpp */ = {isa = PBXBuildFile; fileRef = 48BB17B7C0E2464A801BE3C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.hpp */; };
		83235CD828F8494EAD498F2D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */ = {isa = PBXBuildFile; fileRef = 2B7B943E4E4E44DB9E9E7664 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */; };
		832C9B67F00E4CDAB246525F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */ = {isa = PBXBuildFile; fileRef = E4F9F52781F44785A3959F60 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */; };
		834883F7F49B4212B5F9DD76 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */ = {isa = PBXBuildFile; fileRef = B7AC15262B254130BB5C0997 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */; };
		834E7B01F1F14604AF247CD7 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.hpp */ = {isa = PBXBuildFile; fileRef = 4482367BD973419ABBBC80C3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.hpp */; };
		835474DBECC14473A6D38E44 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */ = {isa = PBXBuildFile; fileRef = 741484C70A8A4D1FB54FA7B3 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */; };
		835D8761FEBE45389E23C609 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp */ = {isa = PBXBuildFile; fileRef = E71501587608460AA3B5B1FA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp */; };
		8368F549D9BF43FDBF0A4867 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.hpp */ = {isa = PBXBuildFile; fileRef = DAE0230ED71E43368F70E398 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.hpp */; };
		8382C80BFD66413E8FBB3BCB /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */ = {isa = PBXBuildFile; fileRef = 62202F96122D43BD9367F2F4 /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */; };
		8397E18DD67A4C80800AB235 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.hpp */ = {isa = PBXBuildFile; fileRef = BD845D548D7F49F796B51A2B /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.hpp */; };
		83B55C014FEB4034A3DD2EFB /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */ = {isa = PBXBuildFile; fileRef = 6E0F344F76B74C0DBAE855AF /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */; };
		83B8D29CCF9442E28016CC63 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.hpp */ = {isa = PBXBuildFile; fileRef = A06019B2861E4F19805D82C2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.hpp */; };
		83C1F5F43744429FA51AC461 /* /Users/heiner/git/QuantLib/ql/math/integrals/all.hpp */ = {isa = PBXBuildFile; fileRef = 12142095DFC74786BA8B8655 /* /Users/heiner/git/QuantLib/ql/math/integrals/all.hpp */; };
		83C764EDA19A4BBE834AD24D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */ = {isa = PBXBuildFile; fileRef = 8D9A760E253E45D1BD08A355 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */; };
		83E3D658A2994CF08AD47FAA /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp */ = {isa = PBXBuildFile; fileRef = 0FEE10B599A0497088B3DC80 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp */; };
		83E94D3A36444B66B19C68C9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */ = {isa = PBXBuildFile; fileRef = 13123F6F512545E69B11BFA2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */; };
		840626EAC36E42A9A96384FE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */ = {isa = PBXBuildFile; fileRef = 93550DC7E9E14932BDA7293F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */; };
		84195D21D0554DFB9280D111 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.hpp */ = {isa = PBXBuildFile; fileRef = 176DD3244D2D40008A131940 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.hpp */; };
		841DF96F50B64329983EE179 /* /Users/heiner/git/QuantLib/test-suite/markovfunctional.cpp */ = {isa = PBXBuildFile; fileRef = B4AD575F96A348C688AD700F /* /Users/heiner/git/QuantLib/test-suite/markovfunctional.cpp */; };
		8420844B7C3B4A4A88B1ECD0 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/rngtraits.hpp */ = {isa = PBXBuildFile; fileRef = A3B29145A2A2412DA2F75E03 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/rngtraits.hpp */; };
		84257CE13B814955850F9888 /* /Users/heiner/git/QuantLib/ql/instruments/stock.hpp */ = {isa = PBXBuildFile; fileRef = C3B696713DF546AAB42CC01A /* /Users/heiner/git/QuantLib/ql/instruments/stock.hpp */; };
		84285BBA84BA46CCB2954611 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */ = {isa = PBXBuildFile; fileRef = F35ACE45A6874A2683EBD0C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */; };
		842DF4B826E94A70871E337A /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */ = {isa = PBXBuildFile; fileRef = ECCD7820AC1D409C860E98E2 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */; };
		84389B215D074FADA08CAE05 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdeshortrate.hpp */ = {isa = PBXBuildFile; fileRef = B0414D060DF94021BBDEC847 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdeshortrate.hpp */; };
		8441750B10BF4EA9B00A93CE /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardengine.hpp */ = {isa = PBXBuildFile; fileRef = 88B44CF942414C55952FD030 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardengine.hpp */; };
		845400067416423AAAAE080A /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 41A2DD9BB6DD43E0945ED672 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.hpp */; };
		84668EBCDCE84788A7F0044A /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.hpp */ = {isa = PBXBuildFile; fileRef = 095E2B99D9544EB7BD15ACB0 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.hpp */; };
		846AE620BCFF4B7BB8E35158 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.hpp */ = {isa = PBXBuildFile; fileRef = 79F93382F9E64E2A8EAD3825 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.hpp */; };
		846CCD090D5241DB8054DC7A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.hpp */ = {isa = PBXBuildFile; fileRef = A6B1FFAEDE234F76848AB08D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.hpp */; };
		84777C9C275C448FB266CB47 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */ = {isa = PBXBuildFile; fileRef = EC0335B3FFF14F71A6291F44 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */; };
		847D5E8A65E74412BC71C6C2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 528D99A56F324B1BBD8070B0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.hpp */; };
		848C479A86C64A0AAFC96BA5 /* /Users/heiner/git/QuantLib/test-suite/piecewisezerospreadedtermstructure.cpp */ = {isa = PBXBuildFile; fileRef = FE153250506C42A3A1C22FF9 /* /Users/heiner/git/QuantLib/test-suite/piecewisezerospreadedtermstructure.cpp */; };
		849A659CF52C4D7B88CF1B19 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mcdiscreteasianengine.hpp */ = {isa = PBXBuildFile; fileRef = E2040684F77B492DAA7F7DA2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mcdiscreteasianengine.hpp */; };
		84AB97D49F03474FBEDBAFEB /* /Users/heiner/git/QuantLib/test-suite/swingoption.hpp */ = {isa = PBXBuildFile; fileRef = 37D5F558A0A8444CA475B34D /* /Users/heiner/git/QuantLib/test-suite/swingoption.hpp */; };
		84BEC5BB8B834071BC70F7FF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp */ = {isa = PBXBuildFile; fileRef = 104F7F8ADB9A4777AC7B2ED3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp */; };
		84C448ED1FC544AEA8D87BFE /* /Users/heiner/git/QuantLib/ql/money.cpp */ = {isa = PBXBuildFile; fileRef = BF11F5B8632948C1915786D5 /* /Users/heiner/git/QuantLib/ql/money.cpp */; };
		84CB33098706449C8391D726 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp */ = {isa = PBXBuildFile; fileRef = 5B941474E1F649E8B45D1906 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp */; };
		84D3B8BF9C54461A9848F0F7 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.hpp */ = {isa = PBXBuildFile; fileRef = A171ABAA9979430A9BE81A54 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.hpp */; };
		84D66B2A0B334019AECB0228 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */ = {isa = PBXBuildFile; fileRef = 66AF5F308E8C4DFFACC20BD0 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */; };
		84DAC7043EDE47F18F1A360A /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */ = {isa = PBXBuildFile; fileRef = 06E2911E3AE3493897F318B7 /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */; };
		84F83B303C0F4367B0144AB6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/parallelevolver.hpp */ = {isa = PBXBuildFile; fileRef = F982C1522A7040B693DC6283 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/parallelevolver.hpp */; };
		850809DBEF7C4A15AC430332 /* /Users/heiner/git/QuantLib/ql/math/linearleastsquaresregression.hpp */ = {isa = PBXBuildFile; fileRef = 45BEE43CD9D44CA3A7D557BE /* /Users/heiner/git/QuantLib/ql/math/linearleastsquaresregression.hpp */; };
		85163DE9288F4ACE804E2CD2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.hpp */ = {isa = PBXBuildFile; fileRef = C5D5D74ADC8945E2992CF928 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.hpp */; };
		852C3EBBE32C4CDA9504EC9C /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.hpp */ = {isa = PBXBuildFile; fileRef = 4EE84EC50A3C4CAD8069DF69 /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.hpp */; };
		853EC0D717A342F6ADF2E6B4 /* /Users/heiner/git/QuantLib/test-suite/timeseries.cpp */ = {isa = PBXBuildFile; fileRef = 29BC3518DC4C4036BEDAC897 /* /Users/heiner/git/QuantLib/test-suite/timeseries.cpp */; };
		85572272A4B74693BE830649 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 4DCCFC71C74B4BE7BFC53BE0 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.hpp */; };
		8570459FAAB341A5B693C967 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp */ = {isa = PBXBuildFile; fileRef = 7B9F3CCC6A9844CB9443626B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp */; };
		85757D946A77485C90D6FFA8 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 7299EB922E374B81BC3F6E06 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.hpp */; };
		858BE03E3721470394165D03 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */ = {isa = PBXBuildFile; fileRef = 2FED7A83C26A480CBA8E37F3 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */; };
		85A421B7D159478DB05494FF /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */ = {isa = PBXBuildFile; fileRef = 59573AE3D28D411790196090 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */; };
		85B2462CEA0D44F59209EFB7 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */ = {isa = PBXBuildFile; fileRef = C4BFD541C396498A9E525CCC /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */; };
		85B84DC7E9284A7280F27AEC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp */ = {isa = PBXBuildFile; fileRef = 0FCD59D751F04AB09DABF0B1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp */; };
		85BB42C06C164A0EAF01CBBF /* /Users/heiner/git/QuantLib/ql/experimental/credit/factorspreadedhazardratecurve.hpp */ = {isa = PBXBuildFile; fileRef = 61EA760A1F6E482E8F758711 /* /Users/heiner/git/QuantLib/ql/experimental/credit/factorspreadedhazardratecurve.hpp */; };
		85DBCBE2D5884C0A8C825C4F /* /Users/heiner/git/QuantLib/test-suite/fdmlinearop.cpp */ = {isa = PBXBuildFile; fileRef = 99833774493843C58DC121C8 /* /Users/heiner/git/QuantLib/test-suite/fdmlinearop.cpp */; };
		85DC3C68A1764C1B9BB4EDA9 /* /Users/heiner/git/QuantLib/ql/time/timeunit.hpp */ = {isa = PBXBuildFile; fileRef = B5A39FE90CA94DE7BCA43D07 /* /Users/heiner/git/QuantLib/ql/time/timeunit.hpp */; };
		85E3463B3A2D4BBABE6D9F42 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.hpp */ = {isa = PBXBuildFile; fileRef = 9CDEB905D22E43829782EFC4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.hpp */; };
		85E91452643E4AF6B3C930B6 /* /Users/heiner/git/QuantLib/ql/processes/all.hpp */ = {isa = PBXBuildFile; fileRef = A92BDE9101F64BCD8A4B5C5B /* /Users/heiner/git/QuantLib/ql/processes/all.hpp */; };
		85EF341B52D64D49AC95E0C3 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */ = {isa = PBXBuildFile; fileRef = 92BE93EE4B294287A662D0B5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */; };
		861F651A623749C7A4AA068D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */ = {isa = PBXBuildFile; fileRef = 7A1E6DA78E34497085D6546E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */; };
		862AAF56FDE74C71B1280D9A /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealing.hpp */ = {isa = PBXBuildFile; fileRef = 6DE0C05B4ECC4211946C404C /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealing.hpp */; };
		863BF885E90643FDAFE1BF33 /* /Users/heiner/git/QuantLib/test-suite/pathgenerator.hpp */ = {isa = PBXBuildFile; fileRef = 3AB9A178A43F4CD8840F2E7F /* /Users/heiner/git/QuantLib/test-suite/pathgenerator.hpp */; };
		86479F895330469484C2A938 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */ = {isa = PBXBuildFile; fileRef = 6620943A3D5D467885806F90 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */; };
		8662941B923C4676998EC28C /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */ = {isa = PBXBuildFile; fileRef = 07F535B02BB64DF9B371B0D3 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */; };
		866D9E3BF2434704B85589B9 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */ = {isa = PBXBuildFile; fileRef = 8F087AD426034EB8922F282A /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */; };
		8672FAC4711844CCA889F0C7 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */ = {isa = PBXBuildFile; fileRef = 383DD6C0466947638D7CFA95 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */; };
		869BFC96E0A3481E9FA5203F /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.hpp */ = {isa = PBXBuildFile; fileRef = 8DC3BD4BF23C4B2BB51835C2 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.hpp */; };
		86AEB3D812914E40B9C8B935 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */ = {isa = PBXBuildFile; fileRef = 02FC4F64941F42CE9FE61F74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */; };
		86AF05D8F13247BCA00C88D1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp */ = {isa = PBXBuildFile; fileRef = C15833BC55AE4DA1A7DCCD57 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp */; };
		86F40A85561143A4A5548E33 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/zerocondition.hpp */ = {isa = PBXBuildFile; fileRef = 5A82A550337F448B8A8461C4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/zerocondition.hpp */; };
		86F5AF3B3B44402BB53648A3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/polynomial2Dspline.hpp */ = {isa = PBXBuildFile; fileRef = 16D3827E275144CF98D5E884 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/polynomial2Dspline.hpp */; };
		86FC9812A79B402B939E965F /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */ = {isa = PBXBuildFile; fileRef = 23BBEFD2CC334FCB9B1F705F /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */; };
		870DAB8427FD433D8667D9E0 /* /Users/heiner/git/QuantLib/test-suite/binaryoption.hpp */ = {isa = PBXBuildFile; fileRef = 2329E1E35608498A85280FC3 /* /Users/heiner/git/QuantLib/test-suite/binaryoption.hpp */; };
		871871E29136495F82795ACE /* /Users/heiner/git/QuantLib/ql/math/statistics/gaussianstatistics.hpp */ = {isa = PBXBuildFile; fileRef = 3B3540969CF84C19BAF1116D /* /Users/heiner/git/QuantLib/ql/math/statistics/gaussianstatistics.hpp */; };
		8725E7BE5AC64E528BDE2A54 /* /Users/heiner/git/QuantLib/test-suite/spreadoption.hpp */ = {isa = PBXBuildFile; fileRef = C300AE2612664BF08C58DD45 /* /Users/heiner/git/QuantLib/test-suite/spreadoption.hpp */; };
		873264F1FB4E4AB9991D8455 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */ = {isa = PBXBuildFile; fileRef = 2A17EDF07386443CA1BAFB87 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */; };
		87415BF48EC1489387BEFDC6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.hpp */ = {isa = PBXBuildFile; fileRef = D05E325A6FC24EE0914D3A92 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.hpp */; };
		8756D8C7236B46F8B6B8EF72 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.hpp */ = {isa = PBXBuildFile; fileRef = 7FF620BB39C548BBA6EA1F49 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.hpp */; };
		8764520CF389400E8148679A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.hpp */ = {isa = PBXBuildFile; fileRef = C6214F79D0054B8484AE705C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.hpp */; };
		8765D7D89F7248F287991E2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */ = {isa = PBXBuildFile; fileRef = 4E1A6BA1AF884524B7080130 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */; };
		8777C1354126408BB6FBE1A4 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.hpp */ = {isa = PBXBuildFile; fileRef = F98021BB0F974725980DDC76 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.hpp */; };
		878D4F793723413488026F20 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */ = {isa = PBXBuildFile; fileRef = 70D34DF7B19A482D8ADDFBC2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */; };
		879A3C2D9D90426EA712109E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */ = {isa = PBXBuildFile; fileRef = 48AAC6EA46264B92A91DBA6D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */; };
		879B27EF9C5D47D5996986EF /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.hpp */ = {isa = PBXBuildFile; fileRef = 0B3B4B839BF74819AF49C080 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.hpp */; };
		87BDF85947D14FB79B99D0A6 /* /Users/heiner/git/QuantLib/test-suite/termstructures.cpp */ = {isa = PBXBuildFile; fileRef = 499CC1CD34E4451DA2F06AD4 /* /Users/heiner/git/QuantLib/test-suite/termstructures.cpp */; };
		87C759C95E164FCAA51F11BA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 8BB344B8FB6C4E78A04E2EC3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */; };
		87D0B052D8E143CB816B08E0 /* /Users/heiner/git/QuantLib/test-suite/interestrates.cpp */ = {isa = PBXBuildFile; fileRef = 38A4988BE9F74FDCA068CF2F /* /Users/heiner/git/QuantLib/test-suite/interestrates.cpp */; };
		87DDE34E995D4D53B9C6EA1E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp */ = {isa = PBXBuildFile; fileRef = 45BF546172F2408798CD7E14 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp */; };
		87F32FB9BD1041B38EB32785 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.hpp */ = {isa = PBXBuildFile; fileRef = 525933389273470CA0DF4F1B /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.hpp */; };
		87FFD7BA1871468B9CC047D2 /* /Users/heiner/git/QuantLib/test-suite/cdo.cpp */ = {isa = PBXBuildFile; fileRef = F7E41A518F7F48E6BCA61D28 /* /Users/heiner/git/QuantLib/test-suite/cdo.cpp */; };
		88020B4E99CF44C98BBC7E05 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 03380EC7A0D14CDCAECE08C2 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.hpp */; };
		8829C50AB2DB42CD9DEC7AA2 /* /Users/heiner/git/QuantLib/test-suite/rngtraits.cpp */ = {isa = PBXBuildFile; fileRef = 75C91662FFE6433DB536959E /* /Users/heiner/git/QuantLib/test-suite/rngtraits.cpp */; };
		882C675B1CB94BC7998AD2F8 /* /Users/heiner/git/QuantLib/ql/cashflows/duration.hpp */ = {isa = PBXBuildFile; fileRef = BE4E0AF9FDFC4185B6FD21E3 /* /Users/heiner/git/QuantLib/ql/cashflows/duration.hpp */; };
		8832B74813DB4EEE8A96DFF8 /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */ = {isa = PBXBuildFile; fileRef = 99EDC349777F44E98E74724C /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */; };
		8838047100EA434595907EB9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */ = {isa = PBXBuildFile; fileRef = F1512D3858394C2589800FAE /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */; };
		8839D9B98FE84AE2B1D83E33 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/trbdf2.hpp */ = {isa = PBXBuildFile; fileRef = 2C64FB1EAACB444AAB24106A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/trbdf2.hpp */; };
		88697C3FD2DE4426A73868B1 /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.hpp */ = {isa = PBXBuildFile; fileRef = 3DB8082A875E4B34A21C6728 /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.hpp */; };
		8871D16207A74688A969DF7A /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/path.hpp */ = {isa = PBXBuildFile; fileRef = FF22544FF8DE4D38A6344ACE /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/path.hpp */; };
		88B14EC560AB4B408631D8F7 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */ = {isa = PBXBuildFile; fileRef = 00B1A01CA763483C8D8E9FEB /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */; };
		88B3288F869A4FAA8AEEA37C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */ = {isa = PBXBuildFile; fileRef = 572AEE3AAB9A4391BE8D0F31 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */; };
		88B4AA93F0364FD394F6F159 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.hpp */ = {isa = PBXBuildFile; fileRef = D0B5BEE0689C476CB27DBB94 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.hpp */; };
		88BA5E7AC87744E189323FD7 /* /Users/heiner/git/QuantLib/ql/termstructures/interpolatedcurve.hpp */ = {isa = PBXBuildFile; fileRef = 4858451253E5469BA9C1209F /* /Users/heiner/git/QuantLib/ql/termstructures/interpolatedcurve.hpp */; };
		88BD59C7F2454E4A8497C307 /* /Users/heiner/git/QuantLib/ql/math/interpolations/cubicinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = AEA1B960D02A49C9B95DD8C5 /* /Users/heiner/git/QuantLib/ql/math/interpolations/cubicinterpolation.hpp */; };
		88C3ABD91C654BC493E6A93E /* /Users/heiner/git/QuantLib/ql/math/interpolations/abcdinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 4CC503B1FC95439DACCA48E4 /* /Users/heiner/git/QuantLib/ql/math/interpolations/abcdinterpolation.hpp */; };
		88DB9DD956C24665A0FB84AA /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp */ = {isa = PBXBuildFile; fileRef = A5F9D5A8DD384BFF955F7602 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp */; };
		88E13A16BEB343BE9D8317AC /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/all.hpp */ = {isa = PBXBuildFile; fileRef = 8A645F3B8A9547D3BA4CAD65 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/all.hpp */; };
		88E4859BDA274A1D857EC02E /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */ = {isa = PBXBuildFile; fileRef = 5B6970D761354780B58E3D60 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */; };
		88E54F43D81E408A8C573E98 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.hpp */ = {isa = PBXBuildFile; fileRef = 72D10E50977A44EDA4744A36 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.hpp */; };
		890C6A1A875141ABABEF5B1A /* /Users/heiner/git/QuantLib/ql/experimental/credit/binomiallossmodel.hpp */ = {isa = PBXBuildFile; fileRef = 00F38AD869AB4C6DA51223FC /* /Users/heiner/git/QuantLib/ql/experimental/credit/binomiallossmodel.hpp */; };
		8933459E144948E6A1D7FC91 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.hpp */ = {isa = PBXBuildFile; fileRef = 3C478FA7FCC34CF5BC32A9AD /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.hpp */; };
		89383483E8184984BBF17B0D /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */ = {isa = PBXBuildFile; fileRef = 03CC19D3964D47EBABDCCF60 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */; };
		8967A418B38D490EAF30BE33 /* /Users/heiner/git/QuantLib/test-suite/ode.hpp */ = {isa = PBXBuildFile; fileRef = 7B2187032A2A468AA7759EC9 /* /Users/heiner/git/QuantLib/test-suite/ode.hpp */; };
		896E8635CE3448D79DF896EE /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */ = {isa = PBXBuildFile; fileRef = 737462AD12F1415C93E238FC /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */; };
		897C0C05EC134521B7E1BE59 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp */ = {isa = PBXBuildFile; fileRef = 15329A73D9F9420BB4E6E549 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp */; };
		897D50171F74433FBE953E4A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.hpp */ = {isa = PBXBuildFile; fileRef = 22F2453C175A4240A89F18B5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.hpp */; };
		897D6BA8386A4DAE8163258F /* /Users/heiner/git/QuantLib/ql/termstructures/yield/quantotermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 5F25EB49761B4FB0B3CEFB79 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/quantotermstructure.hpp */; };
		89802575887547F6925201B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 9AC96ADFD0F8408B8C92771B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.hpp */; };
		899094FB7BE449049404E75B /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */ = {isa = PBXBuildFile; fileRef = 19B563BF08174D92B3276739 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */; };
		89B492CDAD144AB0ADA37244 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.hpp */ = {isa = PBXBuildFile; fileRef = 54EFB15EEC464AEFB59F6CD0 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.hpp */; };
		89B843AFED5B496A80084271 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 318664DD40EC4DB4B67467C0 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */; };
		89BE0C5C27CA4F77AC487750 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = EBBB23DC23F54EEA8A803320 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp */; };
		89C572D85F3041A083D91222 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.hpp */ = {isa = PBXBuildFile; fileRef = 1D525C511B45433983560971 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.hpp */; };
		89CD2A9569D5445F9C4D805C /* /Users/heiner/git/QuantLib/ql/currencies/europe.hpp */ = {isa = PBXBuildFile; fileRef = 0050A765092448B69AE08D2E /* /Users/heiner/git/QuantLib/ql/currencies/europe.hpp */; };
		89CF530AAC0D473C92230D4D /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.hpp */ = {isa = PBXBuildFile; fileRef = 52671152F31040BD905EDDF0 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.hpp */; };
		89D1BCA1AF374343B12BCD67 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = E4F264B723A54674A729B4B9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.hpp */; };
		89FFF57682E94900B0750D66 /* /Users/heiner/git/QuantLib/test-suite/garch.hpp */ = {isa = PBXBuildFile; fileRef = FE9F2B80249246CCA06C1ACE /* /Users/heiner/git/QuantLib/test-suite/garch.hpp */; };
		8A0CE028A1344D1BB92433A6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */ = {isa = PBXBuildFile; fileRef = 0DCBB79888E7447AB09E4BD4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */; };
		8A2FAF6578C545C58420A8DB /* /Users/heiner/git/QuantLib/test-suite/period.hpp */ = {isa = PBXBuildFile; fileRef = 89D0D7E923A14090A4BFCB3F /* /Users/heiner/git/QuantLib/test-suite/period.hpp */; };
		8A473E2E642F49D5839EE705 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.hpp */ = {isa = PBXBuildFile; fileRef = 5BB4087B382C4351B1AE4D12 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.hpp */; };
		8A6174BEAC5C4CF2844CECC7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */ = {isa = PBXBuildFile; fileRef = E4523F0899B449BDAC23270A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */; };
		8A8775DC918842BE9EA105A5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */ = {isa = PBXBuildFile; fileRef = 6B5E98EB33254F7EBD078D55 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */; };
		8A947767A92F4A1AA6DA0A43 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */ = {isa = PBXBuildFile; fileRef = 37B24FA84A4A438280BD325A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */; };
		8AA04B6389A347ED8AA6692F /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */ = {isa = PBXBuildFile; fileRef = CCCF6D50A00B4C71A0D7CFC0 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */; };
		8AA30BB74E5D4D01A126FB2C /* /Users/heiner/git/QuantLib/test-suite/optimizers.hpp */ = {isa = PBXBuildFile; fileRef = 78451FEFCF1F4757A8216CDA /* /Users/heiner/git/QuantLib/test-suite/optimizers.hpp */; };
		8AC77D4BD6384358A19C6E97 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.hpp */ = {isa = PBXBuildFile; fileRef = CCD3885D6B9041EC92CFDAA4 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.hpp */; };
		8AE803CF14D941F498BBAD27 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.hpp */ = {isa = PBXBuildFile; fileRef = EE5760FBB4F44EFC9D083272 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.hpp */; };
		8AF60F4093A64BC3AF7B9DC6 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */ = {isa = PBXBuildFile; fileRef = EA446F805EE746078B9F29AD /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */; };
		8AFA8943D51C4DFBB71E45C0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */ = {isa = PBXBuildFile; fileRef = 324A8496505F463EB070BCD0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */; };
		8B003E58E96F4B7AA2575EB4 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitycube.hpp */ = {isa = PBXBuildFile; fileRef = F08506CB518A46439DE7CF84 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitycube.hpp */; };
		8B041B68AA4342DB8D2AB9C1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */ = {isa = PBXBuildFile; fileRef = 6A53D28FF66A4EA1A5DB3BB9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */; };
		8B1845E2A8BC451FA1454529 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.hpp */ = {isa = PBXBuildFile; fileRef = 404F704BB8A14EAA9EBB96B0 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.hpp */; };
		8B227AEEF1F446A4AFA41025 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 641B8A3263F0441FAE798224 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp */; };
		8B2552ECC397419E9C0C16FA /* /Users/heiner/git/QuantLib/ql/math/interpolations/xabrinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = E2C5AD4AC82C47C79DE46471 /* /Users/heiner/git/QuantLib/ql/math/interpolations/xabrinterpolation.hpp */; };
		8B2FC4794A2E43FAADE7C5FD /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.hpp */ = {isa = PBXBuildFile; fileRef = 01D2EA71E695453B9560B539 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.hpp */; };
		8B473DAD278544E9A4490F73 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 87EAD2E8351040FDAF923857 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.hpp */; };
		8B52DE11E074470EB37BEB67 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 1C119F1F3F4848D78CC596D1 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.hpp */; };
		8B67F5BCA5CC4ECEA0105608 /* /Users/heiner/git/QuantLib/test-suite/ode.cpp */ = {isa = PBXBuildFile; fileRef = 893E32F52FF045A39B53C20A /* /Users/heiner/git/QuantLib/test-suite/ode.cpp */; };
		8B72D89D47FB4570883AD336 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.hpp */ = {isa = PBXBuildFile; fileRef = 64BCE37647EF45DDAC858B3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.hpp */; };
		8B7468DF1581421C8CA38A43 /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/all.hpp */ = {isa = PBXBuildFile; fileRef = EECDFEBF1E2D44EFAD23EB08 /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/all.hpp */; };
		8B8D10618DB947FEBE8A7D97 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp */ = {isa = PBXBuildFile; fileRef = 93A6C958C1BC4638B9ABD048 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp */; };
		8B9329232C7544E69F156D69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */ = {isa = PBXBuildFile; fileRef = 6F75357CF3194361B6153F8E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */; };
		8BA0E261DDA644B0842FC8A6 /* /Users/heiner/git/QuantLib/ql/termstructure.hpp */ = {isa = PBXBuildFile; fileRef = ACBB973FB15C41B598016E8B /* /Users/heiner/git/QuantLib/ql/termstructure.hpp */; };
		8BA876FE05984C59AF418DDE /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */ = {isa = PBXBuildFile; fileRef = 306C694AB733471EAC699706 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */; };
		8BAC337B40604BDEAE8149FE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */ = {isa = PBXBuildFile; fileRef = CA447438AA524531A4CD46BF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */; };
		8BB42E7AC4CE4D39A6120F2B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp */ = {isa = PBXBuildFile; fileRef = 39B641096A9C42C2BEAD20CE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp */; };
		8BD989CB6472421D9C0738B1 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */ = {isa = PBXBuildFile; fileRef = 7E91C3A443AC46F580A31793 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */; };
		8BDE8CA31E8F46DD898F05BB /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp */ = {isa = PBXBuildFile; fileRef = 0BCA5A974F994F999CF59744 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp */; };
		8BE5798D82674B40AF4C730B /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */ = {isa = PBXBuildFile; fileRef = B653FC6C464049F9B98B12AD /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */; };
		8BED807D4A164F038E666402 /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */ = {isa = PBXBuildFile; fileRef = 62D70AE3DFDB407EAF87C31A /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */; };
		8BFC36DA36754B1BA80739CA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.hpp */ = {isa = PBXBuildFile; fileRef = C86A0286AD2D4B12BF509C48 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.hpp */; };
		8C0065EF6E014A1DAB8ED1AF /* /Users/heiner/git/QuantLib/ql/math/solvers1d/secant.hpp */ = {isa = PBXBuildFile; fileRef = A6A1479CE7E840F184D467CA /* /Users/heiner/git/QuantLib/ql/math/solvers1d/secant.hpp */; };
		8C02F6646ED54DBD9C270B87 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */ = {isa = PBXBuildFile; fileRef = 911A8EA500534B4DA862FF28 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */; };
		8C070E2C9886447EB56F742E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp */ = {isa = PBXBuildFile; fileRef = FF3479BF062D4C62ABC9E745 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp */; };
		8C071D91332D4477B255E089 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.hpp */ = {isa = PBXBuildFile; fileRef = F6195788EBC448DB8EB8BDBA /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.hpp */; };
		8C2FC03842CF47E2ABB9028C /* /Users/heiner/git/QuantLib/ql/math/quadratic.hpp */ = {isa = PBXBuildFile; fileRef = E927A9B618D54D6AB05A156A /* /Users/heiner/git/QuantLib/ql/math/quadratic.hpp */; };
		8C5A7D2ECF8C41A992FC2F81 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp */ = {isa = PBXBuildFile; fileRef = 0784532EE54F4E428990514E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp */; };
		8C7BBE87DC1D42E58D6BF92E /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.hpp */ = {isa = PBXBuildFile; fileRef = 3600F69AF0D14C44BEDD358F /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.hpp */; };
		8C967717625B4A1997709069 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */ = {isa = PBXBuildFile; fileRef = 039CFC60DD73416C97D4072A /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */; };
		8CA86B2CCDB547EA83990858 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */ = {isa = PBXBuildFile; fileRef = 152989448E59484E90F8D4B3 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */; };
		8CBA6FADDB864677B82CF55A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */ = {isa = PBXBuildFile; fileRef = D9E63CA20B9543F1B1A5B10C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */; };
		8CD499D0B6A34EB9A0B27AAB /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.hpp */ = {isa = PBXBuildFile; fileRef = 1AEDD3BE752449AB812CDF97 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.hpp */; };
		8CD599C31C984F7BAC1A0786 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */ = {isa = PBXBuildFile; fileRef = F7E0DD7FB9B845B58DCA5506 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */; };
		8CE96B998A18428DAAED7743 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.hpp */ = {isa = PBXBuildFile; fileRef = 92C767B9CF0D48BA9161757F /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.hpp */; };
		8CF35604CE2D43798E255D93 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedhazardratecurve.hpp */ = {isa = PBXBuildFile; fileRef = CD65A1289EA84479977E9841 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedhazardratecurve.hpp */; };
		8D0ED54E096143C2A11BE69C /* /Users/heiner/git/QuantLib/test-suite/solvers.cpp */ = {isa = PBXBuildFile; fileRef = 722E1A6A859244CA85F3525B /* /Users/heiner/git/QuantLib/test-suite/solvers.cpp */; };
		8D19F9112B2C42038EDFD519 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */ = {isa = PBXBuildFile; fileRef = E139CFB04DEF4E09B749532B /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */; };
		8D1B432646E84D709E6DB71F /* /Users/heiner/git/QuantLib/ql/math/bspline.hpp */ = {isa = PBXBuildFile; fileRef = 8366F96498794CC1BC3A9B33 /* /Users/heiner/git/QuantLib/ql/math/bspline.hpp */; };
		8D585CD74D6642E794E207B6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.hpp */ = {isa = PBXBuildFile; fileRef = 9951BC6A8FEE4731A0E5F693 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.hpp */; };
		8D857552F94348A1B5D6B50D /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */ = {isa = PBXBuildFile; fileRef = F2E5E48AE3794E08A2D0728C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */; };
		8D8E7F9C07D448C2B9701082 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */ = {isa = PBXBuildFile; fileRef = 4D71A0AC7DE14EFBBEE60049 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */; };
		8D94593528A6491BBA1BBA77 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.hpp */ = {isa = PBXBuildFile; fileRef = 40B4A67E7C0D4FF58A45493F /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.hpp */; };
		8D9A85A83F8E48F6B6CD68A1 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardperformanceengine.hpp */ = {isa = PBXBuildFile; fileRef = 33E806DDE24142ADBEDC5891 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardperformanceengine.hpp */; };
		8DA9A694418E46FC88BAAE79 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.hpp */ = {isa = PBXBuildFile; fileRef = 100BCEB7CFFB4FB6BD28FFDD /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.hpp */; };
		8DB15DAE04744113804333A5 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */ = {isa = PBXBuildFile; fileRef = 4B5BD8F6C77B474391110A81 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */; };
		8DC2444B15944080B63C434B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp */ = {isa = PBXBuildFile; fileRef = 692BC2CD9C6C41F89A361721 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp */; };
		8DCA65A7ADCA4D3FA644E7B7 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */ = {isa = PBXBuildFile; fileRef = 4F2501349EBA4903A0237ABE /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */; };
		8DCDFCD40FF24841BA0C1A77 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */ = {isa = PBXBuildFile; fileRef = DD49A86FA5D14A848809B130 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */; };
		8DD13472FDFA4B7D96278BB8 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.hpp */ = {isa = PBXBuildFile; fileRef = D97AF2EB9A8B45AD8A9C6163 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.hpp */; };
		8DD313C6D04D41CF87186602 /* /Users/heiner/git/QuantLib/ql/termstructures/iterativebootstrap.hpp */ = {isa = PBXBuildFile; fileRef = 4BC0576E3CAA47FB812C51B4 /* /Users/heiner/git/QuantLib/ql/termstructures/iterativebootstrap.hpp */; };
		8DDB60CF472C489D81ECF931 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */ = {isa = PBXBuildFile; fileRef = 327320B9D0F946E88722E820 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */; };
		8DF258BF7FD74EDB9615A2F7 /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */ = {isa = PBXBuildFile; fileRef = 5D7BBC1DF34D4366BD08EC6B /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */; };
		8E0E6C840FD74382A3AB40DA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */ = {isa = PBXBuildFile; fileRef = 368BE6503367463193A000E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */; };
		8E156696E82E4863B7D13A37 /* /Users/heiner/git/QuantLib/ql/math/statistics/all.hpp */ = {isa = PBXBuildFile; fileRef = ABFEAC1C77714516BB076C72 /* /Users/heiner/git/QuantLib/ql/math/statistics/all.hpp */; };
		8E1BED29224D477A9AF787EA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp */ = {isa = PBXBuildFile; fileRef = 3C6D1A21514B40719710A5D2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp */; };
		8E26AA10E1AD4270A4EBEB6B /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */ = {isa = PBXBuildFile; fileRef = D867B19C09B1497DAF2A9586 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */; };
		8E3B1585B1174B9EA7B2251C /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */ = {isa = PBXBuildFile; fileRef = 1F79811002E842678B1C2B82 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */; };
		8E3FED5860444D1891D00221 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */ = {isa = PBXBuildFile; fileRef = FD85DA5652C64FB1870F4CF4 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */; };
		8E5AAC9EAF774E28B1EF9289 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.hpp */ = {isa = PBXBuildFile; fileRef = 801914C49D3B4B11961B95DF /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.hpp */; };
		8E5EF13C014B4D5AA693FFB5 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = D78E4B9F244F44ABB8B85AA8 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation.hpp */; };
		8E7A8F080B0A42898086EE0C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp */ = {isa = PBXBuildFile; fileRef = 4BBAB747B1434479885400CB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp */; };
		8E8138080B84443EB04B6FD8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/all.hpp */ = {isa = PBXBuildFile; fileRef = A8E580EAE7194B4987B8EBDB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/all.hpp */; };
		8E87AF1D68774DDCB7057114 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */ = {isa = PBXBuildFile; fileRef = 8F8414C512C84288A4B3D386 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */; };
		8E9225B15BAA4E6BAF15CA6C /* /Users/heiner/git/QuantLib/ql/indexes/inflation/zacpi.hpp */ = {isa = PBXBuildFile; fileRef = B7DDE0E3C93D48D4B0BA95D4 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/zacpi.hpp */; };
		8E92BC4FCE5F4E20912E17A8 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 32E518B6AD5D4A92B2CAA9D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.hpp */; };
		8E93FA38CD3A437090933063 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */ = {isa = PBXBuildFile; fileRef = DB12BABCD84842619753BD75 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */; };
		8E99922162AD441E907CA0A4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */ = {isa = PBXBuildFile; fileRef = A66DB87898F64CD6B913AB2F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */; };
		8EA2EC3994A843A98ED78D8F /* /Users/heiner/git/QuantLib/Examples/DiscreteHedging/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 9FD3AC04588C4A0DA1399A6E /* /Users/heiner/git/QuantLib/Examples/DiscreteHedging/CMakeLists.txt */; };
		8EA8DF7D12C14B748F00B3AA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */ = {isa = PBXBuildFile; fileRef = 4B0C0A5D948B4979B888A60E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */; };
		8EBE7F695FE04DB4AD42A845 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.hpp */ = {isa = PBXBuildFile; fileRef = FE30DBDC3C924704ACCC626D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.hpp */; };
		8EC3BBCBEE394814970E4B47 /* /Users/heiner/git/QuantLib/test-suite/inflationcpiswap.cpp */ = {isa = PBXBuildFile; fileRef = 680B4A091E824DBBBA605573 /* /Users/heiner/git/QuantLib/test-suite/inflationcpiswap.cpp */; };
		8ECA4ABCE6DB4E98A8C84C60 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */ = {isa = PBXBuildFile; fileRef = 17BF0DEAF2DB4F3099965BF1 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */; };
		8EE5339E1F6845A38F51C150 /* /Users/heiner/git/QuantLib/test-suite/creditdefaultswap.hpp */ = {isa = PBXBuildFile; fileRef = 670CBF772A2E4D0CB1C3EE2C /* /Users/heiner/git/QuantLib/test-suite/creditdefaultswap.hpp */; };
		8EEF4C2FB03A49F78FD6AFDF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */ = {isa = PBXBuildFile; fileRef = 541D680AB41045FB814D75FB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */; };
		8EF693C37CEB4F5280386D71 /* /Users/heiner/git/QuantLib/test-suite/extendedtrees.hpp */ = {isa = PBXBuildFile; fileRef = 9ADB5522E2454210AE071D1E /* /Users/heiner/git/QuantLib/test-suite/extendedtrees.hpp */; };
		8EF9FE4530D24B1282B98EF2 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/all.hpp */ = {isa = PBXBuildFile; fileRef = 8EA2546C5145406BA5C2ECAA /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/all.hpp */; };
		8EFCB99D0C2045A6826CDC29 /* /Users/heiner/git/QuantLib/test-suite/functions.hpp */ = {isa = PBXBuildFile; fileRef = DE606117DA7C4BE08B32A3CA /* /Users/heiner/git/QuantLib/test-suite/functions.hpp */; };
		8F0A91969224423CAEA7619D /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.hpp */ = {isa = PBXBuildFile; fileRef = 36F585D3921742A888B1C0A3 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.hpp */; };
		8F0DE72895C34268AAA313E0 /* /Users/heiner/git/QuantLib/test-suite/cashflows.cpp */ = {isa = PBXBuildFile; fileRef = B929B6A190034AB18D3E35E8 /* /Users/heiner/git/QuantLib/test-suite/cashflows.cpp */; };
		8F21B07DFCD04B1DB79201E7 /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */ = {isa = PBXBuildFile; fileRef = 0B87F05A5B0F41458DC8913F /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */; };
		8F47BA5D31C64A94A0BAA1F5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp */ = {isa = PBXBuildFile; fileRef = 5C6220482ADF4CCBA46BA09C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp */; };
		8F4C73EA8434474E8E333554 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */ = {isa = PBXBuildFile; fileRef = 14DA7CE5BE43450FBCB7C372 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */; };
		8F5822D32E67461D9B595EE1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */ = {isa = PBXBuildFile; fileRef = 1521AD3C70DC4F1992235C1C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */; };
		8F5FBD9230244FA386CEB082 /* /Users/heiner/git/QuantLib/ql/currencies/africa.hpp */ = {isa = PBXBuildFile; fileRef = 974D1C8184FE436E873EFA73 /* /Users/heiner/git/QuantLib/ql/currencies/africa.hpp */; };
		8F656D2C21B84B01910DEE3F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */ = {isa = PBXBuildFile; fileRef = B5193D26DA20410DAFD41B79 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */; };
		8F6C96D4A9274492B719ADB4 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */ = {isa = PBXBuildFile; fileRef = 603F69CD5C354D93BEC41701 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */; };
		8F6E3002A52147A3B3B29D4A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = DC40619392534AE782083FD9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.hpp */; };
		8F7A70A995234E0B81E7627D /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.hpp */ = {isa = PBXBuildFile; fileRef = CD7CCFB59D784E7D86AACF87 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.hpp */; };
		8F7E93B07C6C44B19E843267 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/ukrpi.hpp */ = {isa = PBXBuildFile; fileRef = 28649FA367B54E5BA3786DAB /* /Users/heiner/git/QuantLib/ql/indexes/inflation/ukrpi.hpp */; };
		8F80B9CE5B314B4BBE2488B1 /* /Users/heiner/git/QuantLib/test-suite/capfloor.hpp */ = {isa = PBXBuildFile; fileRef = E23D913B257B4E29956DCD97 /* /Users/heiner/git/QuantLib/test-suite/capfloor.hpp */; };
		8F87738605A04C2EAB0F6FCD /* /Users/heiner/git/QuantLib/ql/version.hpp */ = {isa = PBXBuildFile; fileRef = 6B2D7218B0744E899DD3A463 /* /Users/heiner/git/QuantLib/ql/version.hpp */; };
		8F981AEF10C741B9924DB641 /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.hpp */ = {isa = PBXBuildFile; fileRef = CF1C10EB299C420DA131436E /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.hpp */; };
		8FA1DE4A209E469DAA30CC60 /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */ = {isa = PBXBuildFile; fileRef = 301D4FE2F9AA40D8B5DB7130 /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */; };
		8FBC42514D614550BAD8884A /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.hpp */ = {isa = PBXBuildFile; fileRef = AFC294CF772A477894885047 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.hpp */; };
		8FC10974EF534FA99D7A9C13 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */ = {isa = PBXBuildFile; fileRef = ACAA3D574B714EDBA0999E75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */; };
		8FC4EF5407D7469E81EFDAD9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.hpp */ = {isa = PBXBuildFile; fileRef = EA2384DA0CD245A7B45E6E2C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.hpp */; };
		8FE058F91D6647178D2BB64B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/usdlibor.hpp */ = {isa = PBXBuildFile; fileRef = D524CA771616428E8AEA7855 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/usdlibor.hpp */; };
		9004C943516444BC9DC63725 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */ = {isa = PBXBuildFile; fileRef = 1018D9A472C8403C84491747 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */; };
		900DBABE33994CAB933417C1 /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */ = {isa = PBXBuildFile; fileRef = E5B3A8F9FC3B408180D2C436 /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */; };
		90216AB5FB54451087AAB357 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp */ = {isa = PBXBuildFile; fileRef = EC50D95183754F51BD429BC7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp */; };
		904684CADAD64C2280317E45 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = A2C5F6EB6E3C49B9BACC22A5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */; };
		9046CF941527436E9DD32E7F /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.hpp */ = {isa = PBXBuildFile; fileRef = E0CF809E111E42479ED6CBC3 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.hpp */; };
		9047D19EC6E544B2B6528486 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.hpp */ = {isa = PBXBuildFile; fileRef = 0CD50E376C6346DA861A0ED3 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.hpp */; };
		9050A2AC7A76477BACC4E3A4 /* /Users/heiner/git/QuantLib/test-suite/amortizingbond.hpp */ = {isa = PBXBuildFile; fileRef = 441F225AE53B499AA8291971 /* /Users/heiner/git/QuantLib/test-suite/amortizingbond.hpp */; };
		9064B9410CB5423885C57300 /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */ = {isa = PBXBuildFile; fileRef = 80B7FFA4A67D4306AFC988CF /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */; };
		9068FC5CFF994052915D5FB1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.hpp */ = {isa = PBXBuildFile; fileRef = 5C1E0FBB356A4F4893626F5D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.hpp */; };
		90B1AAD69ABB46E88373F344 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearop.hpp */ = {isa = PBXBuildFile; fileRef = EAFE56C014EE45DCAE05F6FF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearop.hpp */; };
		90B7654C36534DC39BE5A5AB /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */ = {isa = PBXBuildFile; fileRef = F6E2CC9A5C9749FE8C00F96F /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */; };
		90B903F81F7A47958BC093AB /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = 5D30F52F09CB4243A7D8C4BC /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.hpp */; };
		90CA78E139E6410983B80860 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp */ = {isa = PBXBuildFile; fileRef = 3BDFEC1B451A4E07B4F1957B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp */; };
		90F12728C75746B78CBAA7FC /* /Users/heiner/git/QuantLib/ql/time/calendars/china.hpp */ = {isa = PBXBuildFile; fileRef = 593B9AF12644421BA13E3D10 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.hpp */; };
		90F545199BA441CB96AD5BCC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmndimsolver.hpp */ = {isa = PBXBuildFile; fileRef = C8D8D8F7DF9A4F0BB0EA525A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmndimsolver.hpp */; };
		911823E272294BDC8BD1E5FA /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.hpp */ = {isa = PBXBuildFile; fileRef = 329567C383DD4156B3F4BF22 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.hpp */; };
		911D5D19167E4E69AF5882EA /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.hpp */ = {isa = PBXBuildFile; fileRef = B1CC7A444E264026B25F1E7B /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.hpp */; };
		91272E35DC2A4CCE99AE3291 /* /Users/heiner/git/QuantLib/ql/math/interpolations/forwardflatinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 813229799C304A129D6CACCD /* /Users/heiner/git/QuantLib/ql/math/interpolations/forwardflatinterpolation.hpp */; };
		912FC6254940440D8FFEC298 /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */ = {isa = PBXBuildFile; fileRef = D4A2C591901545FDA68534BE /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */; };
		9132360EF9FA41B98DE4DB6E /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */ = {isa = PBXBuildFile; fileRef = 119AFE72218846AB97555986 /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */; };
		9139EABE9C294E948BC172EB /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */ = {isa = PBXBuildFile; fileRef = 6E3791E0518A40848BA0ED45 /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */; };
		915B4752A02A42E2AF9686C7 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.hpp */ = {isa = PBXBuildFile; fileRef = C6BF71F3166E46C4A898E888 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.hpp */; };
		9160A03DA01146569866E8F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = F003ED0639644B4B9538F728 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */; };
		918276D264CF4A34B76C066E /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */ = {isa = PBXBuildFile; fileRef = C1F2F0806C674837B49F949B /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */; };
		9187AE6CB5DD45AF8923374A /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */ = {isa = PBXBuildFile; fileRef = 23809A6EAF1D41819DAEC4B3 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */; };
		918DDFD9C30E4AE29F32A431 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */ = {isa = PBXBuildFile; fileRef = 8A2FC95BED6F450DA390808F /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */; };
		9192FBC7602E4E849DB4C31F /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */ = {isa = PBXBuildFile; fileRef = F5F1423454FE42C6BFE9236F /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */; };
		91AF0D763C284297B71BE5FA /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp */ = {isa = PBXBuildFile; fileRef = 264AF580F396441986FED7F8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp */; };
		91B198600320497EB4CAAFF8 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.hpp */ = {isa = PBXBuildFile; fileRef = F12556F45E3845E68615EE9F /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.hpp */; };
		91B92618BE954453B353CFBE /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */ = {isa = PBXBuildFile; fileRef = 30C03CA191C8450A98E8C0D6 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */; };
		91D858D1F28246279C85D2E1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 21EB3C45352A42D6ABF18BC9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp */; };
		91DF25B5660E4DDEA555842D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */ = {isa = PBXBuildFile; fileRef = 08E4E04FC3234542A10EB9D9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */; };
		91F50D907CEA48FBA7E64231 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/centrallimitgaussianrng.hpp */ = {isa = PBXBuildFile; fileRef = 0080F4068E9F481FBF7D1C7F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/centrallimitgaussianrng.hpp */; };
		91F86241103C4C23835F3B04 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.hpp */ = {isa = PBXBuildFile; fileRef = CD40C67377FA4E5B96670D46 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.hpp */; };
		91FD63A4F69D416B9B16ADAF /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */ = {isa = PBXBuildFile; fileRef = 72B411F0185642938BDC2C43 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */; };
		91FE9D337C51445CAB50BF05 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */ = {isa = PBXBuildFile; fileRef = AA749B3C422040F6BCDC5695 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */; };
		920645A9EBE446518CAA2E09 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = C0F8A44D969A444692A88649 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */; };
		9207ED378A444701856EBB46 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/exchangecontract.hpp */ = {isa = PBXBuildFile; fileRef = 8D51D45336944198B0BB44BF /* /Users/heiner/git/QuantLib/ql/experimental/commodities/exchangecontract.hpp */; };
		9223F4EE266C4CC9A7C2438A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */ = {isa = PBXBuildFile; fileRef = E15FC3278B854B2B801AC682 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */; };
		92259E92A68D47BDB2455EC5 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */ = {isa = PBXBuildFile; fileRef = 0BB78A7024814A4C86DC5BE9 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */; };
		924A41F750FA4C3FAAF56ADD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp */ = {isa = PBXBuildFile; fileRef = FD9CD071D7E141978284AC2C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp */; };
		924F19C37C0B479FA1C3711B /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */ = {isa = PBXBuildFile; fileRef = 1CF9FFFE20E841748D28A606 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */; };
		92582D596F1B46CE8164A673 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp */ = {isa = PBXBuildFile; fileRef = E25A45CA3EEF48BA90B3B492 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp */; };
		929B103A6C1D42228386B39E /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */ = {isa = PBXBuildFile; fileRef = AEE8964BA0704D1C9E6902D9 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */; };
		92A7C82409E745B3A89EF452 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */ = {isa = PBXBuildFile; fileRef = A57B0A0EF2834328A2431DCB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */; };
		92A813B6CCF04D8097FEBC04 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.hpp */ = {isa = PBXBuildFile; fileRef = D96FB027AC224043B2A75DF3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.hpp */; };
		92AAC455AF0145ED8B7C4F33 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */ = {isa = PBXBuildFile; fileRef = 031C3BE23E964707B0CD4DA8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */; };
		92B54930DFDA41DBBF63E3BF /* /Users/heiner/git/QuantLib/ql/patterns/visitor.hpp */ = {isa = PBXBuildFile; fileRef = E956560BEF5844AA9321FD9B /* /Users/heiner/git/QuantLib/ql/patterns/visitor.hpp */; };
		92B9FF31B7CA4865BE46E974 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = AE47A1200A6047869FB2AD59 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp */; };
		92C19269B7604EDAA961BE08 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp */ = {isa = PBXBuildFile; fileRef = 45BF80F2F6344A21892A5B8C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp */; };
		92DDD066C0024B7A8D831DDB /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.hpp */ = {isa = PBXBuildFile; fileRef = 5ED80E79B0D64A7E89928EF4 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.hpp */; };
		92E6D4EAC5F04A2DB77C996F /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.hpp */ = {isa = PBXBuildFile; fileRef = A366F4F76CE94DD0B0C0FAB9 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.hpp */; };
		92E92C3A51E7438785ACB01F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */ = {isa = PBXBuildFile; fileRef = AC78B52A018A4318A74EE6C2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */; };
		92F13673FAAD4695B0A6741F /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 75B0AC35C2D7456D81B39FF2 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.hpp */; };
		932C693DAE6D412A9460C44C /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraperror.hpp */ = {isa = PBXBuildFile; fileRef = 9F77D48FA5EB441EA70B016B /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraperror.hpp */; };
		934BC2C39DD5460381957669 /* /Users/heiner/git/QuantLib/ql/math/factorial.hpp */ = {isa = PBXBuildFile; fileRef = A9CBD1C94E3948CFB290788D /* /Users/heiner/git/QuantLib/ql/math/factorial.hpp */; };
		93541E0550344E4FA0192B61 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */ = {isa = PBXBuildFile; fileRef = 9758DBB3682F4867AE8098EC /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */; };
		9355595D8DBE4728A10B9616 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */ = {isa = PBXBuildFile; fileRef = 8D7C456260AA405DAF5CE000 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */; };
		935DBCC078924B78A8B32786 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */ = {isa = PBXBuildFile; fileRef = 3A1041E2FCC74032BF62DA4A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */; };
		937A1C18FA534308A6D37C59 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.hpp */ = {isa = PBXBuildFile; fileRef = 294C595484E64289B2E75A70 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.hpp */; };
		93892806A42E4EE68C3BCDB4 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.hpp */ = {isa = PBXBuildFile; fileRef = AF4DB7D72E1F4F50AEC39DFB /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.hpp */; };
		93958E4A239741EB85B2BDCE /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 72708D0A909743C8A22C4A1D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp */; };
		93B356859AF141F4A6B43C2F /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.hpp */ = {isa = PBXBuildFile; fileRef = 722E03A22CEF4F09B378DB67 /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.hpp */; };
		93B36A529F364C669C2503ED /* /Users/heiner/git/QuantLib/ql/experimental/math/latentmodel.hpp */ = {isa = PBXBuildFile; fileRef = 27D96FC5A5694F3FB7F45859 /* /Users/heiner/git/QuantLib/ql/experimental/math/latentmodel.hpp */; };
		93B5925602054E799EE4157D /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 8B710299F38A4C67A0D8CFBA /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */; };
		93C77449BC584EDAB434A56C /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp */ = {isa = PBXBuildFile; fileRef = 5D703687DB534B1C84F14F9C /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp */; };
		93CCE91E9F874841B54F150D /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */ = {isa = PBXBuildFile; fileRef = 37F44C1CD88A46D28DF71021 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */; };
		93D195C13AC849B09B8494C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */ = {isa = PBXBuildFile; fileRef = E8FD524900564051A1910917 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */; };
		93D1F517B13F430CA73E04C8 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */ = {isa = PBXBuildFile; fileRef = A141646111CF4C1A8FF89F63 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */; };
		93DD4C88C900494BBE6917B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/americancondition.hpp */ = {isa = PBXBuildFile; fileRef = 1A861E701A8E426CADEB7AB4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/americancondition.hpp */; };
		93E251AA621C42AD9B4736D9 /* /Users/heiner/git/QuantLib/ql/experimental/math/moorepenroseinverse.hpp */ = {isa = PBXBuildFile; fileRef = 7FECAE9146654BC083AAE86D /* /Users/heiner/git/QuantLib/ql/experimental/math/moorepenroseinverse.hpp */; };
		93EBE2456E7B4104BEA532F7 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */ = {isa = PBXBuildFile; fileRef = 5D773582E12649A4B961BE04 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */; };
		940F4CA4AB85420AB215B10C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp */ = {isa = PBXBuildFile; fileRef = CF6E4BEA8BD24727BEEE6B75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp */; };
		9414C8F7B05C4CF997F22099 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.hpp */ = {isa = PBXBuildFile; fileRef = 10A5D5BDF21B4BDC8211B9B2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.hpp */; };
		9421671778554084A2A3A482 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/all.hpp */ = {isa = PBXBuildFile; fileRef = E2ACAC07B2644FAE94CC07F0 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/all.hpp */; };
		942418C0507549FDAB9FAB43 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp */ = {isa = PBXBuildFile; fileRef = 631A0B0C63CA4A4993C09397 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp */; };
		9440A6B79E57410C888495E2 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.hpp */ = {isa = PBXBuildFile; fileRef = 4A33E1561DAE4B9084A2D4B2 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.hpp */; };
		944E223DF2544AA8AEB3E7DF /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */ = {isa = PBXBuildFile; fileRef = 142C7D13FD074E5B8CE3E2DA /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */; };
		945858A810A0431AB1FC61B9 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.hpp */ = {isa = PBXBuildFile; fileRef = 5D9D41399A2F476690047343 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.hpp */; };
		948A7C21442E4A539DA9D39F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.hpp */ = {isa = PBXBuildFile; fileRef = C7B889154A6346B7A5D2B07C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.hpp */; };
		94A0FD46DED5437B86411D53 /* /Users/heiner/git/QuantLib/test-suite/commodityunitofmeasure.cpp */ = {isa = PBXBuildFile; fileRef = 487C11E8C9104BB79747307F /* /Users/heiner/git/QuantLib/test-suite/commodityunitofmeasure.cpp */; };
		94A7CA198B3D445396D303ED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.hpp */ = {isa = PBXBuildFile; fileRef = 5EF3A59369E643DDB07161F4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.hpp */; };
		94CE716040514192BE07596E /* /Users/heiner/git/QuantLib/ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp */ = {isa = PBXBuildFile; fileRef = C7A809D4BE3A4781A999BFC5 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp */; };
		94E8D6B182014F1089A36B83 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 9A8FBFE3785E4CABB7A4C89F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */; };
		950D3F804C5244309E9DD586 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/all.hpp */ = {isa = PBXBuildFile; fileRef = E8AF2AD378014949AE82150C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/all.hpp */; };
		950FA37129DB44D3856E6A9C /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp */ = {isa = PBXBuildFile; fileRef = 810B3124492D4A61864FC83E /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp */; };
		951836E27B2F4941B5B70F72 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */ = {isa = PBXBuildFile; fileRef = 624985C8D54A49D2BBF559EE /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */; };
		952EFE59E81244DFA553F68B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp */ = {isa = PBXBuildFile; fileRef = E0287AE132DC4821B93D3101 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp */; };
		9539799567F54A9CB43849D7 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.hpp */ = {isa = PBXBuildFile; fileRef = 4812530EF838403681954743 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.hpp */; };
		953E4C947A2C41A18D53B1BD /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.hpp */ = {isa = PBXBuildFile; fileRef = 5E8AFC64F3F546E1872A641A /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.hpp */; };
		95412B1609AD4E4085CC102B /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.hpp */ = {isa = PBXBuildFile; fileRef = E085CB478CDA42DEB262EE6A /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.hpp */; };
		9557369A5E3B4E1EA12E3082 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */ = {isa = PBXBuildFile; fileRef = 56A0A315FE9B4BF884399915 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */; };
		957704F964034920A8CCC83F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */ = {isa = PBXBuildFile; fileRef = F390710A05214AC19FA39DBE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */; };
		9589ACFF03C44514B0236E6B /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.hpp */ = {isa = PBXBuildFile; fileRef = 64F75B21AECA4532B0A9BEB0 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.hpp */; };
		958D5164C31A49F0A5DD5537 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */ = {isa = PBXBuildFile; fileRef = FB8B696E177A4B8DB503DF33 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */; };
		95BCDD6110114945BE1DAA1D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/all.hpp */ = {isa = PBXBuildFile; fileRef = 361C067F298D4A4EBEB026F1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/all.hpp */; };
		95BCF1EA56A24719B9C09CEC /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.hpp */ = {isa = PBXBuildFile; fileRef = B10A74D01E8F4DA0B59F6802 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.hpp */; };
		95BF216F2F984FF882C78D19 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.hpp */ = {isa = PBXBuildFile; fileRef = 0C68ADDFC226480E98B5AA7B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.hpp */; };
		95CE6E85ECB1400186B54597 /* /Users/heiner/git/QuantLib/ql/math/interpolation.hpp */ = {isa = PBXBuildFile; fileRef = 606415A500F643F9A120BD8C /* /Users/heiner/git/QuantLib/ql/math/interpolation.hpp */; };
		95DA0B1638A946E99BA43A5D /* /Users/heiner/git/QuantLib/ql/prices.cpp */ = {isa = PBXBuildFile; fileRef = 9D1895A41477452DAA5FE4B3 /* /Users/heiner/git/QuantLib/ql/prices.cpp */; };
		95F8D0B62B06430C9E8E4C1C /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */ = {isa = PBXBuildFile; fileRef = C11F8C87B15B4DF6AAE08312 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */; };
		9604D6A52ED141668F719A2B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */ = {isa = PBXBuildFile; fileRef = 4E97DAF8AAE1472981D8E61E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */; };
		96136E4B933C4814B6DFCFE8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextousolver.hpp */ = {isa = PBXBuildFile; fileRef = 9C5D0052F5B54CF49E24E723 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextousolver.hpp */; };
		96140474C7C847559708CC2E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */ = {isa = PBXBuildFile; fileRef = 2BAAC6B0FB2C4C0088D2D82B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */; };
		96168E0BF74D425E91A4E9EC /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.hpp */ = {isa = PBXBuildFile; fileRef = 7BFE197CB82E49568770FF59 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.hpp */; };
		9617DE58CF87432CA19F92C3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */ = {isa = PBXBuildFile; fileRef = F4D6CE52C6484A2F9BEA568D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */; };
		961E29EEAE48440985200862 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */ = {isa = PBXBuildFile; fileRef = 487285A315834D6EBD5C521E /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */; };
		96273E44CDD448B8ACDBF4A4 /* /Users/heiner/git/QuantLib/ql/time/daycounter.hpp */ = {isa = PBXBuildFile; fileRef = 14923D3BE2F34757AC005788 /* /Users/heiner/git/QuantLib/ql/time/daycounter.hpp */; };
		962AE2520ED442C0B581FDDC /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.hpp */ = {isa = PBXBuildFile; fileRef = BD619FA10F914796A1AADA84 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.hpp */; };
		96399C4D6D0644E89C619737 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */ = {isa = PBXBuildFile; fileRef = CA0D8999BF6B4FD3A696EFEB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */; };
		96438079E10E44AA909E473C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */ = {isa = PBXBuildFile; fileRef = D15721A22C804C7DA2A68C92 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */; };
		964719D5B9524AF3B4F6D575 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.hpp */ = {isa = PBXBuildFile; fileRef = F582207E402542D89555D0C3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.hpp */; };
		966221B6B2AD4569A39FE2FF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp */ = {isa = PBXBuildFile; fileRef = 667DED74FF0D4E2ABE17D197 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp */; };
		966484E61CE24E0881DC70E3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */ = {isa = PBXBuildFile; fileRef = 77FA4DEF32F74A11856B365B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */; };
		96707ECA4AED4D3CBC152598 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */ = {isa = PBXBuildFile; fileRef = 484C3E257D6A4BD7BFC4D874 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */; };
		96B7918F6C554927B11240B5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/piecewiseconstantcorrelation.hpp */ = {isa = PBXBuildFile; fileRef = 7D0B4F21EAC243DEAB393186 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/piecewiseconstantcorrelation.hpp */; };
		96B7F341C9644DB58212882B /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */ = {isa = PBXBuildFile; fileRef = 511C5F600DDF457C827D2259 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */; };
		96E04163E95F4D378FF2B34C /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.hpp */ = {isa = PBXBuildFile; fileRef = 06404A9BC4104A2EBFE15F74 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.hpp */; };
		96EE5E22D33C4CDFA89525B5 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */ = {isa = PBXBuildFile; fileRef = F1E3EDF37B5E4D3E896255A2 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */; };
		96EF3ECEC8F447418649F855 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */ = {isa = PBXBuildFile; fileRef = F86AA7250B84444A90656317 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */; };
		96F57B182F57415F9B5D97E3 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewisezeroinflationcurve.hpp */ = {isa = PBXBuildFile; fileRef = 3A1B557E4E3A426BB5484DFB /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewisezeroinflationcurve.hpp */; };
		97011C792C3C487FBD0F2BB0 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.hpp */ = {isa = PBXBuildFile; fileRef = AAD3C7DA50ED4BAAB9A9F7F5 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.hpp */; };
		9709282ED74147508604B11B /* /Users/heiner/git/QuantLib/Examples/BermudanSwaption/BermudanSwaption.cpp */ = {isa = PBXBuildFile; fileRef = 8A6F582D4F9C40CEA010A914 /* /Users/heiner/git/QuantLib/Examples/BermudanSwaption/BermudanSwaption.cpp */; };
		970942D44424499AA0429793 /* /Users/heiner/git/QuantLib/test-suite/lazyobject.hpp */ = {isa = PBXBuildFile; fileRef = 57C046AB5DDF4AE5979FC5F3 /* /Users/heiner/git/QuantLib/test-suite/lazyobject.hpp */; };
		973817EC6A3B48149CE328C1 /* /Users/heiner/git/QuantLib/test-suite/extensibleoptions.cpp */ = {isa = PBXBuildFile; fileRef = C9B933142A07435A9067ABDA /* /Users/heiner/git/QuantLib/test-suite/extensibleoptions.cpp */; };
		97404578B0704D0E8F6684B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.hpp */ = {isa = PBXBuildFile; fileRef = FE83EAE0C6964AFC88D0FD4F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.hpp */; };
		974CC72A7A8644ABBD212A55 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */ = {isa = PBXBuildFile; fileRef = 2CC129C24C8C4379B83B4605 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */; };
		9757CC31B52A42538D501627 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 93748A23EFB24809A3C061A7 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp */; };
		9778881BF07F41E1BB6CB9B8 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */ = {isa = PBXBuildFile; fileRef = 1CD3C7624EAA43409448C3B4 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */; };
		9779F9C53C0342B2ACC8854D /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */ = {isa = PBXBuildFile; fileRef = 1487797027684F86BEEDAF89 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */; };
		97D178E1C1B040CE9BFF1764 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */ = {isa = PBXBuildFile; fileRef = 44C2386F01754AFE88075CC5 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */; };
		97DC5FF07F714339B008E81B /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.hpp */ = {isa = PBXBuildFile; fileRef = 58E83F2E06A2415A9FB0028A /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.hpp */; };
		97E1FB7F77844813BE53979B /* /Users/heiner/git/QuantLib/ql/config.sun.hpp */ = {isa = PBXBuildFile; fileRef = 6CB398B7A705449C90FB6345 /* /Users/heiner/git/QuantLib/ql/config.sun.hpp */; };
		97E36149E36944DEAE31E66C /* /Users/heiner/git/QuantLib/test-suite/observable.hpp */ = {isa = PBXBuildFile; fileRef = 17DDB17CE2334A26A5FD8ADA /* /Users/heiner/git/QuantLib/test-suite/observable.hpp */; };
		97E4B7353A8F4B22B33AD0D7 /* /Users/heiner/git/QuantLib/test-suite/period.cpp */ = {isa = PBXBuildFile; fileRef = F9C0127AF1EA4ED99D1A9FB3 /* /Users/heiner/git/QuantLib/test-suite/period.cpp */; };
		97F4AB755CBA4FBF887CD827 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.hpp */ = {isa = PBXBuildFile; fileRef = 8643B11415134C2D8B4E6468 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.hpp */; };
		97FCAF1CCC3F4B048D028E5B /* /Users/heiner/git/QuantLib/ql/pricingengines/mclongstaffschwartzengine.hpp */ = {isa = PBXBuildFile; fileRef = C9929185E8934B69BF84CF6F /* /Users/heiner/git/QuantLib/ql/pricingengines/mclongstaffschwartzengine.hpp */; };
		98072549AE5E41369F6B7974 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */ = {isa = PBXBuildFile; fileRef = 9A99BF80A6634F348A49FF24 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */; };
		981450441FAD4972BE89C73F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */ = {isa = PBXBuildFile; fileRef = BD35949C9F0042BA958D0EF2 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */; };
		981BC004025846EEBE1105F7 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice1d.hpp */ = {isa = PBXBuildFile; fileRef = 8F950EDA87554F6288E29D3F /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice1d.hpp */; };
		98262AEA5D8D4543917F0F4C /* /Users/heiner/git/QuantLib/ql/math/interpolations/all.hpp */ = {isa = PBXBuildFile; fileRef = B5944E362F0F4957AB44137A /* /Users/heiner/git/QuantLib/ql/math/interpolations/all.hpp */; };
		983100CA7F9F42FFBDF6DF17 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */ = {isa = PBXBuildFile; fileRef = 7284F6B4B881412CAD93083D /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */; };
		9837545D96E44C3C9E68A9FA /* /Users/heiner/git/QuantLib/ql/models/model.hpp */ = {isa = PBXBuildFile; fileRef = FF3F527D6E064408803B13D0 /* /Users/heiner/git/QuantLib/ql/models/model.hpp */; };
		984FAF70B5BD4B4FBB6572F2 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 5F7B68748D5642159D8E1F94 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.hpp */; };
		9854B72E40FF4330B43DB590 /* /Users/heiner/git/QuantLib/ql/mathconstants.hpp */ = {isa = PBXBuildFile; fileRef = 7770482AD0DB4C829896ED67 /* /Users/heiner/git/QuantLib/ql/mathconstants.hpp */; };
		9859C2D67BBF42AEB6F6D918 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp */ = {isa = PBXBuildFile; fileRef = D6340B6412BE4CF58EF872A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp */; };
		985EB4A3F499416C9DEEB208 /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */ = {isa = PBXBuildFile; fileRef = D7D6A56A20D243A8BB0366CD /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */; };
		98691419E1304E8BAEBCB8A4 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */ = {isa = PBXBuildFile; fileRef = 220DC17D71F7457CB17F1130 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */; };
		9878789AACC64BFF88239E5B /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.hpp */ = {isa = PBXBuildFile; fileRef = B4C5C1E7340341B6B964217D /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.hpp */; };
		987B93D880FC4B3C85DC9C8E /* /Users/heiner/git/QuantLib/test-suite/utilities.hpp */ = {isa = PBXBuildFile; fileRef = 6734D08994544AA784FC94B5 /* /Users/heiner/git/QuantLib/test-suite/utilities.hpp */; };
		9881840BA7594FD4BF71F190 /* /Users/heiner/git/QuantLib/ql/math/statistics/statistics.hpp */ = {isa = PBXBuildFile; fileRef = 58E07DA9D1514A41A0F66845 /* /Users/heiner/git/QuantLib/ql/math/statistics/statistics.hpp */; };
		988D09F9F6554783AC1CA179 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 0F0BB933E576441C85CC13E1 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */; };
		98AEDF28561F40F6B107D390 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.hpp */ = {isa = PBXBuildFile; fileRef = 720FBE9F730C4F5F912EB6AF /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.hpp */; };
		98C3C94E34C644568F117A29 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */ = {isa = PBXBuildFile; fileRef = B7C2EA6BE9404866A15A937B /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */; };
		98C486AF8F6E4A96BD447949 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 539EA6610AA64B47A3FC30C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */; };
		98CCB536278749ECBD4DEA69 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */ = {isa = PBXBuildFile; fileRef = CBEC3E3B67CA4C94B5F86E03 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */; };
		98E0C0BD73EF42FEA95ABAFE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */ = {isa = PBXBuildFile; fileRef = A1C0201B20F8435AA078B5FC /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */; };
		98E1E53548AF4984A540F792 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */ = {isa = PBXBuildFile; fileRef = D8C8517E94B84EE89D11678F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */; };
		990063AE18AE4324964D866E /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.hpp */ = {isa = PBXBuildFile; fileRef = 0E1091FD26EB4169BFD25E2B /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.hpp */; };
		990716ABC9AC45B49BA7A2EB /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.hpp */ = {isa = PBXBuildFile; fileRef = E09A39AA423E450E9C0D1705 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.hpp */; };
		991756D3BD2E4F8E89B0B1CD /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/all.hpp */ = {isa = PBXBuildFile; fileRef = EF6139D6F93A41E685E93A72 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/all.hpp */; };
		991C334A5C0B43EEB6C1351A /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */ = {isa = PBXBuildFile; fileRef = 38EECF0665D7490F890821A4 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */; };
		991E4B5B23464138968C3EBB /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */ = {isa = PBXBuildFile; fileRef = 2FBDAD82617B41D480840D40 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */; };
		99250BEB821D42FA88918D7C /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */ = {isa = PBXBuildFile; fileRef = 5CD3B1BFB0E74C52BCF72FAC /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */; };
		9926E012B3DF4128B6ED5883 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.hpp */ = {isa = PBXBuildFile; fileRef = B36F771D7CC64E59B39C2A9F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.hpp */; };
		9935C084052C4C95A5E7852D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = BCCDD44B92E745F49C1BA409 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.hpp */; };
		9940F506147A42818E7FD0B4 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 75323AB4D69A4A5DA0D312C0 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */; };
		994833C348D54A699AE36FD2 /* /Users/heiner/git/QuantLib/ql/utilities/all.hpp */ = {isa = PBXBuildFile; fileRef = 1B71C9EDDA0C4916A977B694 /* /Users/heiner/git/QuantLib/ql/utilities/all.hpp */; };
		994BA8971EDE493B94823FD4 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */ = {isa = PBXBuildFile; fileRef = EFFC7F9C386C47B6AE1CDD25 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */; };
		995080675D8F46BA8A908FEE /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = 96FD8F812F7F4AAF8E489560 /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.hpp */; };
		995D8A0317EA46D0A0AD90AE /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.hpp */ = {isa = PBXBuildFile; fileRef = 3225080C851E4E409FF1E7C3 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.hpp */; };
		996727E212F04190B42D68A1 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */ = {isa = PBXBuildFile; fileRef = BE55879DD9E64BD4BDA677E4 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */; };
		9967A956EEAB44D987302026 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.hpp */ = {isa = PBXBuildFile; fileRef = E99A1451E88F42A1B35474AF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.hpp */; };
		996919AD452B4D07BFA41A20 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = C0D74A2F51CE40D29F0A0F20 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */; };
		997917D10DFD4B4D852D67F2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/inhomogeneouspooldef.hpp */ = {isa = PBXBuildFile; fileRef = 2D279C45ECA54996BD36A80D /* /Users/heiner/git/QuantLib/ql/experimental/credit/inhomogeneouspooldef.hpp */; };
		99A1A52C3AD04C8FA96B9E2B /* /Users/heiner/git/QuantLib/ql/currency.cpp */ = {isa = PBXBuildFile; fileRef = 70A714522EC54243877FD586 /* /Users/heiner/git/QuantLib/ql/currency.cpp */; };
		99AAB9F17D5A46539C643C7A /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 357667C6493645AD8FFD5FA0 /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */; };
		99AE826BB288454F997AF69D /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/all.hpp */ = {isa = PBXBuildFile; fileRef = E460B05EFE9B46BC8227AA9F /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/all.hpp */; };
		99F8CD685037422691FDCB23 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.hpp */ = {isa = PBXBuildFile; fileRef = 55E122EE76EA4603A146DD93 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.hpp */; };
		99FC42F9F2A449DDAB4853AC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */ = {isa = PBXBuildFile; fileRef = 305FE06F4F8644D5942B76D6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */; };
		9A0CCF6C2E0044FDA01D298C /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/all.hpp */ = {isa = PBXBuildFile; fileRef = 0FC09BF9F69940C598DDF43A /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/all.hpp */; };
		9A2592A228084373BE303346 /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */ = {isa = PBXBuildFile; fileRef = 94855942923C43A5905E864D /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */; };
		9A25AB35E2A34F70BA7F951D /* /Users/heiner/git/QuantLib/test-suite/digitaloption.hpp */ = {isa = PBXBuildFile; fileRef = 1CCB5C0EA2F44CEB8316D56F /* /Users/heiner/git/QuantLib/test-suite/digitaloption.hpp */; };
		9A295F0E83CF4DAD82A4D52A /* /Users/heiner/git/QuantLib/test-suite/capfloor.cpp */ = {isa = PBXBuildFile; fileRef = 4FBB2ED3EA5A4A1FA009609E /* /Users/heiner/git/QuantLib/test-suite/capfloor.cpp */; };
		9A478BCF8BBF47389C9FE921 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp */ = {isa = PBXBuildFile; fileRef = BC186081314641D9A992AE74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp */; };
		9A486841E9C647D68992B07C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniform1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = D230FA6B60954E0FBBC53393 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniform1dmesher.hpp */; };
		9A574F0B06AD492BA994DF8B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = FA4B3E65FA6A4F13A4C9BEE6 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */; };
		9A632890EB4C4AC7837A6382 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.hpp */ = {isa = PBXBuildFile; fileRef = 5486B0EA2B234FAEB22B1006 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.hpp */; };
		9A66FC6D65894726BC6506F7 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp */ = {isa = PBXBuildFile; fileRef = C6E861446AEF4A46A892B442 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp */; };
		9A6BDB0FF19A4EA8A53D5823 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */ = {isa = PBXBuildFile; fileRef = 204B338E1ECD47728CD32B44 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */; };
		9A6C92B2A9FF49B5B3B61BB9 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = FAFB5A9A76254A76A057032D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp */; };
		9AAA28981A61430BB1317357 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.hpp */ = {isa = PBXBuildFile; fileRef = F3F98D1C01564510B38CDE15 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.hpp */; };
		9ACD2BC3E7BE4BD5B0D5BB30 /* /Users/heiner/git/QuantLib/test-suite/mclongstaffschwartzengine.cpp */ = {isa = PBXBuildFile; fileRef = 0100D27D15A747BFA72FF4FA /* /Users/heiner/git/QuantLib/test-suite/mclongstaffschwartzengine.cpp */; };
		9ACFCB5140A846D0B2827347 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp */ = {isa = PBXBuildFile; fileRef = 224606ECE466476DBC117080 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp */; };
		9AD9F341900248DA8786F7C5 /* /Users/heiner/git/QuantLib/ql/instruments/forward.hpp */ = {isa = PBXBuildFile; fileRef = 12343F58A246433D9607866F /* /Users/heiner/git/QuantLib/ql/instruments/forward.hpp */; };
		9AE3E984BC974704B6EC5D6C /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.hpp */ = {isa = PBXBuildFile; fileRef = 9C17004C50A54EF995CE1603 /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.hpp */; };
		9AF022CA0D00495F98AE4FC5 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.hpp */ = {isa = PBXBuildFile; fileRef = 8DC2A60E01364F0FB4D60433 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.hpp */; };
		9B09A33DDB5845E2BA1604D8 /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */ = {isa = PBXBuildFile; fileRef = 9A73C09D751243B6AC797FED /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */; };
		9B191BD15C9448F28F60F64D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp */ = {isa = PBXBuildFile; fileRef = 8D29DAD2B819445099B943EE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp */; };
		9B198601BF51454AA99715B6 /* /Users/heiner/git/QuantLib/Examples/GlobalOptimizer/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = D1D4FDBDE1E9467396549E59 /* /Users/heiner/git/QuantLib/Examples/GlobalOptimizer/CMakeLists.txt */; };
		9B219D3AE9A04C44B99339A2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */ = {isa = PBXBuildFile; fileRef = 5C642962A63D44A4B1521CC4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */; };
		9B2441B75A4F442D8EB6BF02 /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.hpp */ = {isa = PBXBuildFile; fileRef = F714070814F64D229A63901B /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.hpp */; };
		9B378B1285BD46939CD61D55 /* /Users/heiner/git/QuantLib/ql/exercise.hpp */ = {isa = PBXBuildFile; fileRef = 2DD3A078E433410C9E526AD2 /* /Users/heiner/git/QuantLib/ql/exercise.hpp */; };
		9B479B2DD7454B839DCD0535 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.hpp */ = {isa = PBXBuildFile; fileRef = AD478E4B54594A148BB2567A /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.hpp */; };
		9B629B188C9C498EA3423374 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.hpp */ = {isa = PBXBuildFile; fileRef = 011C5D77E6BC4AA5A5477AF3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.hpp */; };
		9B69C6119AC741CA981603EE /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */ = {isa = PBXBuildFile; fileRef = 7439E3E5562D4BA1861C7E53 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */; };
		9B7715DB89274557805DCCA4 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */ = {isa = PBXBuildFile; fileRef = E419F983F59348BEB5AAC075 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */; };
		9B88B5AC57C94C6197DBEA66 /* /Users/heiner/git/QuantLib/ql/experimental/credit/loss.hpp */ = {isa = PBXBuildFile; fileRef = E57C9371DEBC489B8CDB170F /* /Users/heiner/git/QuantLib/ql/experimental/credit/loss.hpp */; };
		9B8B83452DB44B70A26ADB76 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.hpp */ = {isa = PBXBuildFile; fileRef = 4EA4229741544AFAA2703C8F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.hpp */; };
		9BB39295195143D282923B74 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativerng.hpp */ = {isa = PBXBuildFile; fileRef = 1DBFC0DBAD384C548C4FCBE2 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativerng.hpp */; };
		9BC01E1E61FD4BD4B6C8AA16 /* /Users/heiner/git/QuantLib/ql/experimental/credit/saddlepointlossmodel.hpp */ = {isa = PBXBuildFile; fileRef = 841BF0D5DD0C4384B351C6EB /* /Users/heiner/git/QuantLib/ql/experimental/credit/saddlepointlossmodel.hpp */; };
		9BE3C992D175450EBFA7BCB9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */ = {isa = PBXBuildFile; fileRef = 240A18DB50C042EA97B1A331 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */; };
		9BE57092234040228579E0B3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */ = {isa = PBXBuildFile; fileRef = FD5E2891C74646939DA477D5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */; };
		9BFE1C76479F45B58E1B7208 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.hpp */ = {isa = PBXBuildFile; fileRef = 2AA2FFE9612341359C2A51EA /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.hpp */; };
		9C0B41E7D2844125850B0A5B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jpylibor.hpp */ = {isa = PBXBuildFile; fileRef = CDA7A4CD37D44C8988C56F31 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jpylibor.hpp */; };
		9C16A5A13B2844A79FA2AE74 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */ = {isa = PBXBuildFile; fileRef = 02D3B8C3FA4A426181027961 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */; };
		9C18D4AB9F814C978FC8D95D /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.hpp */ = {isa = PBXBuildFile; fileRef = 3E9AF4D482AF434494C2DA8C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.hpp */; };
		9C1BAA1159B54016B0F7F693 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */ = {isa = PBXBuildFile; fileRef = 574054733914434EB3678A17 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */; };
		9C23AB7425CC4453BE281E52 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/genericindexes.hpp */ = {isa = PBXBuildFile; fileRef = 8FC06832709B4F7E972D0D69 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/genericindexes.hpp */; };
		9C2D25F4049B49079605CCE4 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 2793E3FFB99F437BB032896A /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.hpp */; };
		9C4CAA1D2FCE422BBA4FF8B4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.hpp */ = {isa = PBXBuildFile; fileRef = 4DAF0FC9F5BA49AC82944EEE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.hpp */; };
		9C5B283A73E4477A9C484456 /* /Users/heiner/git/QuantLib/ql/pricingengines/latticeshortratemodelengine.hpp */ = {isa = PBXBuildFile; fileRef = 67EE9FB105E8466AB232EB88 /* /Users/heiner/git/QuantLib/ql/pricingengines/latticeshortratemodelengine.hpp */; };
		9C5CA3D358D04D548A24BB26 /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */ = {isa = PBXBuildFile; fileRef = 2AF65ACE48114F80B41EED0B /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */; };
		9C5DFB0386B64FD3A6277447 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.hpp */ = {isa = PBXBuildFile; fileRef = A47799947EFE427F9D7255FB /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.hpp */; };
		9C6972C987BA43B08B9A631A /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.hpp */ = {isa = PBXBuildFile; fileRef = A86D4505930A448EB1102E26 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.hpp */; };
		9C87EEB642B84E3B9FE4FAA5 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.hpp */ = {isa = PBXBuildFile; fileRef = DD370370E58A42D9BDF305F1 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.hpp */; };
		9C9EE42032AE467F868C0EE9 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 5BD80BB2F1674154A518C299 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */; };
		9C9F8C7D4144425E8430CC6F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp */ = {isa = PBXBuildFile; fileRef = 386169C11EB54D1897E0C36C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp */; };
		9CA64F3BEB144E9E8D181F0E /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */ = {isa = PBXBuildFile; fileRef = ECDADD0581CE465E8D9B8596 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */; };
		9CBDA339DBE24DDFA327FC1C /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.hpp */ = {isa = PBXBuildFile; fileRef = CD252DA6F5D147429496FBCA /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.hpp */; };
		9CE0AE0AA8004C0CAFFA6B69 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.hpp */ = {isa = PBXBuildFile; fileRef = 5173C9AC7C8E44EFB11E63C0 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.hpp */; };
		9CE7EDEF20594AAB89471465 /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */ = {isa = PBXBuildFile; fileRef = 47ADE1A3C7F847EA876D7347 /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */; };
		9CEB447355284049AE7C06A4 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 4507CD473A1F4EEB890CD598 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.hpp */; };
		9CF56E4E05F340BDA1430612 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.hpp */ = {isa = PBXBuildFile; fileRef = 3E52A140DA2249B38E96DE6F /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.hpp */; };
		9D16CBDDA2314475BCC7388B /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = F1C34D0FBC83431184906D8E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp */; };
		9D2A23CCBD7D4D03A65E0959 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */ = {isa = PBXBuildFile; fileRef = 14DC0241079B4702B15EA8AE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */; };
		9D3D565DFB12450B9883BD41 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/all.hpp */ = {isa = PBXBuildFile; fileRef = D92F27C29D06469987CFB2CE /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/all.hpp */; };
		9D410B1E70784FDDAE8DCDB9 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bootstraptraits.hpp */ = {isa = PBXBuildFile; fileRef = 84505A7CE7864456B0C1F436 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bootstraptraits.hpp */; };
		9D45898DBE2640DFA5A142A2 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 6D747A2FF12246039AC92F48 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */; };
		9D4C7A0C626D4BF6B400773B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */ = {isa = PBXBuildFile; fileRef = B8A4A80FA3384C56AABF5C9E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */; };
		9D70A1FD89874A66B5A06832 /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */ = {isa = PBXBuildFile; fileRef = 018BEBAD744B431EBA6692EC /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */; };
		9D76F028A44D4B469007ACCB /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */ = {isa = PBXBuildFile; fileRef = 82FB87DEC9094EC9A73B0F2D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */; };
		9D87AE764B964E30840C551A /* /Users/heiner/git/QuantLib/test-suite/rangeaccrual.hpp */ = {isa = PBXBuildFile; fileRef = F1F45D877134441F9E142298 /* /Users/heiner/git/QuantLib/test-suite/rangeaccrual.hpp */; };
		9DAFF8BC209748BA9EB2A6B1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */ = {isa = PBXBuildFile; fileRef = 793FEFC234E84BB1A120E26F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */; };
		9DB0D9AB055648FAA2610B1B /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.hpp */ = {isa = PBXBuildFile; fileRef = 172AFFA3A0044ECB97D0ED76 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.hpp */; };
		9DB9A5E72E2640F1AE3473E1 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */ = {isa = PBXBuildFile; fileRef = 48E6CB858C8048A9AD94F374 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */; };
		9DBF14EB7B614912B18E98C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp */ = {isa = PBXBuildFile; fileRef = 698B0D9D29A44C90AA960A54 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp */; };
		9DD906C87F6E401BA20CB9E6 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */ = {isa = PBXBuildFile; fileRef = 9A9ADE16A5494C1EB7066E42 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */; };
		9DE052EA88464A74A0716DF7 /* /Users/heiner/git/QuantLib/test-suite/optimizers.cpp */ = {isa = PBXBuildFile; fileRef = 0DC260C4B6E24F5DA70A8BB6 /* /Users/heiner/git/QuantLib/test-suite/optimizers.cpp */; };
		9DED54D26D6F44F097472C2C /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.hpp */ = {isa = PBXBuildFile; fileRef = C88DE54CA5514C318623B96E /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.hpp */; };
		9DF444017C9A42EAA09734A2 /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.hpp */ = {isa = PBXBuildFile; fileRef = 56CF698855C7446DA904A35E /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.hpp */; };
		9DF5D0387EB94266B87CA86F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 4256F347F20E4FC798CEE1D5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.hpp */; };
		9DF9F7B95DDA46FFAD010D22 /* /Users/heiner/git/QuantLib/test-suite/twoassetcorrelationoption.cpp */ = {isa = PBXBuildFile; fileRef = 9BFAB5A552414CAE930F785B /* /Users/heiner/git/QuantLib/test-suite/twoassetcorrelationoption.cpp */; };
		9E0AE78F2DF6460690311C94 /* /Users/heiner/git/QuantLib/ql/math/lexicographicalview.hpp */ = {isa = PBXBuildFile; fileRef = A8CA434F4C1A4BB4970E3B11 /* /Users/heiner/git/QuantLib/ql/math/lexicographicalview.hpp */; };
		9E1211C837C04804956A513B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.hpp */ = {isa = PBXBuildFile; fileRef = 2D77C9714F814494976091BA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.hpp */; };
		9E176F1801E54A588A205668 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */ = {isa = PBXBuildFile; fileRef = C42BC6C673464C8C95FFA5CB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */; };
		9E187C6589544158887DEF9A /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */ = {isa = PBXBuildFile; fileRef = 3E00C5362D4E4286A9273AB5 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */; };
		9E2D8AFA1D9948AAA2CC3350 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/brent.hpp */ = {isa = PBXBuildFile; fileRef = A9DAB2F045804718BADDCF42 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/brent.hpp */; };
		9E2DE16FDA8342039F3522F8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */ = {isa = PBXBuildFile; fileRef = 136E0A55BC8F4330852DEB33 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */; };
		9E36EFACB86540D1A5F2A50C /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.hpp */ = {isa = PBXBuildFile; fileRef = 5D83C262809D4B7395FFA4C7 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.hpp */; };
		9E3D358CFBD44655BB5689D2 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */ = {isa = PBXBuildFile; fileRef = 725BE8B184DC4DC38965A503 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */; };
		9E3DF3AD7A174195B76B25CF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.hpp */ = {isa = PBXBuildFile; fileRef = A61D003C13D84F65B72C8978 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.hpp */; };
		9E44A50F7FA94C8F8A53A215 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.hpp */ = {isa = PBXBuildFile; fileRef = D437666561D24ACF906BEE4F /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.hpp */; };
		9E49A835889A44FA98B19729 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */ = {isa = PBXBuildFile; fileRef = 59F9B6AED65D4C2BB4EF0E1F /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */; };
		9E5064BFCCC6472D9A885069 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = AFB883CFF9B14A468F28EAC4 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/all.hpp */; };
		9E5FDBC9835240CAA0E70176 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.hpp */ = {isa = PBXBuildFile; fileRef = E6F08A40D1304395AFB069CC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.hpp */; };
		9E603AB9A3274F578E3BFBB1 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 69865B9475644376809C596C /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */; };
		9E628654ACC34FF984D5ECEE /* /Users/heiner/git/QuantLib/test-suite/twoassetbarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = 345F3383B8F2477C8D2B26F2 /* /Users/heiner/git/QuantLib/test-suite/twoassetbarrieroption.cpp */; };
		9E74250EF6FD499885462355 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.hpp */ = {isa = PBXBuildFile; fileRef = C1F782B6EA4D48608EDE4B6F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.hpp */; };
		9E7A02A354D74006964BFD4A /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */ = {isa = PBXBuildFile; fileRef = 02CD75A20FE7408A87CE393C /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */; };
		9E8011B0C7CA4D688EDAC251 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */ = {isa = PBXBuildFile; fileRef = 962B07DB1B0D45D8B9FADA12 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */; };
		9EA78439823948CBB5D81FFD /* /Users/heiner/git/QuantLib/ql/math/functional.hpp */ = {isa = PBXBuildFile; fileRef = 11D74FA58A5D4375AA3ECA71 /* /Users/heiner/git/QuantLib/ql/math/functional.hpp */; };
		9EA79FB146B045DAA179ED27 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 32D9F5D2A740485FA56E09F3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.hpp */; };
		9EA9F502661B439E8D3217ED /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.hpp */ = {isa = PBXBuildFile; fileRef = B4EC4F4AEAA24604AA765FC8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.hpp */; };
		9EAF130D9A9C4B7AA425EC5F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.hpp */ = {isa = PBXBuildFile; fileRef = 785C669A82EF4B0E90BDC1B3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.hpp */; };
		9EAF4A322378487582178185 /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */ = {isa = PBXBuildFile; fileRef = C67BBD8D07114495949FC146 /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */; };
		9EBF934AF87946FCA9EB2A6D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp */ = {isa = PBXBuildFile; fileRef = FBA1951F3D1E4F7A90693E43 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp */; };
		9ECEB754FD90433BAAF9045A /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.hpp */ = {isa = PBXBuildFile; fileRef = 82D1D8D9AA7B4DBC88B9FABC /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.hpp */; };
		9ED21E3ED781483E9F5F65D3 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */ = {isa = PBXBuildFile; fileRef = 539AE749C80D47D288607343 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */; };
		9EE8C5BDBAE94AD7A6609A1E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/impliciteuler.hpp */ = {isa = PBXBuildFile; fileRef = 293628F995F348EA90BA2EE8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/impliciteuler.hpp */; };
		9EF3A282AEB14DAAAAEB545F /* /Users/heiner/git/QuantLib/ql/experimental/math/all.hpp */ = {isa = PBXBuildFile; fileRef = A9C963232D5A421C8CF1ADDB /* /Users/heiner/git/QuantLib/ql/experimental/math/all.hpp */; };
		9EF75CEC1E5541E9A6541FEF /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.hpp */ = {isa = PBXBuildFile; fileRef = 61A260A49E994164973E6677 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.hpp */; };
		9F0A6D555FA843CE9145A343 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */ = {isa = PBXBuildFile; fileRef = 2EEF8A9AE2584B009EDEC04F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */; };
		9F0A9676E19A49C7A4C6FC3B /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.hpp */ = {isa = PBXBuildFile; fileRef = 01A895D7E1D9433991C052FA /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.hpp */; };
		9F0FB6C3FB4343DFB729CAC8 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/sample.hpp */ = {isa = PBXBuildFile; fileRef = DA4B5010EEDD48AC9DE145CC /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/sample.hpp */; };
		9F19B16433E54F8786DD2A56 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.hpp */ = {isa = PBXBuildFile; fileRef = 1E0289D85DEC412789817356 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.hpp */; };
		9F290EB0C8E242DFAE61911E /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.hpp */ = {isa = PBXBuildFile; fileRef = D802FE11F74745C094018280 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.hpp */; };
		9F2940D1645D4F9C8BD9236C /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */ = {isa = PBXBuildFile; fileRef = 900A01B3719C4BF2892A321D /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */; };
		9F3133B97490415AB287702D /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = A1B6ECCFAD3E4AC186D7675E /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp */; };
		9F462B1E7A03483ABC63484B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */ = {isa = PBXBuildFile; fileRef = 7F1190DD65B547959E539CAF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */; };
		9F4E1B2C75984B0DBBC960B1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */ = {isa = PBXBuildFile; fileRef = A3314D13BA0D47A198174DFD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */; };
		9F5A652869CE4B5989A49D03 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */ = {isa = PBXBuildFile; fileRef = 2C0630617C7D4C31892F9C16 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */; };
		9F5FACE78866454D9D6BA9A4 /* /Users/heiner/git/QuantLib/ql/math/rounding.hpp */ = {isa = PBXBuildFile; fileRef = 53FEDF07BDA34C499980C0D4 /* /Users/heiner/git/QuantLib/ql/math/rounding.hpp */; };
		9F73F7745A764D42B88D302C /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/all.hpp */ = {isa = PBXBuildFile; fileRef = 6708D9F094FA4B78973EF235 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/all.hpp */; };
		9FA643B765634BED8432C83C /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */ = {isa = PBXBuildFile; fileRef = B204DD88CE5E4CD39BE66C5B /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */; };
		9FAAAF6105284A2DBCEB2672 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */ = {isa = PBXBuildFile; fileRef = 2A313E29FB6A483284FCC5CC /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */; };
		9FC65C99433340BAAE1D2718 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.hpp */ = {isa = PBXBuildFile; fileRef = F4D42CE0D5F44CFCBF3705C7 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.hpp */; };
		9FCAB09FBC064AE0B791E0A3 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.hpp */ = {isa = PBXBuildFile; fileRef = C6BAB37563C242A7B2AA01C3 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.hpp */; };
		9FD13D8545D64431B426CDF5 /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */ = {isa = PBXBuildFile; fileRef = 1007DC5F9CB84630ABAEC512 /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */; };
		9FD238308B6942F4886D8F00 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cadlibor.hpp */ = {isa = PBXBuildFile; fileRef = 8228DC41E3C24EB5BB4F607C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cadlibor.hpp */; };
		9FFE155E44ED4A4CADEA1F6E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */ = {isa = PBXBuildFile; fileRef = 5BB54CBA7BFF4AC995840328 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */; };
		9FFFD577C66949D0BA3B0F8B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = CEE78CDF60F94DE8B8624400 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp */; };
		A00EBA572614403986A42D8F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = 73D83B64579A42D9A848741D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */; };
		A019659231F2422C854DC374 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.hpp */ = {isa = PBXBuildFile; fileRef = 5636E00EF80A49269686D7AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.hpp */; };
		A01AE1B568DF4E52AAD97CDA /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletcalibration.cpp */ = {isa = PBXBuildFile; fileRef = FB6C1685918F4F98849420D6 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletcalibration.cpp */; };
		A023E8D57FE441E08629BBC6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */ = {isa = PBXBuildFile; fileRef = 874E2A008C674A4DA9B9FD18 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */; };
		A0251FE86AC4467C92926600 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.hpp */ = {isa = PBXBuildFile; fileRef = B56D6919B8384F4C8136B308 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.hpp */; };
		A031E787476F461B8E8E6D90 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/all.hpp */ = {isa = PBXBuildFile; fileRef = 62627729D31F4421834C9D1F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/all.hpp */; };
		A040FD3E63C54AE5B6AF2223 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.hpp */ = {isa = PBXBuildFile; fileRef = D2172497C0F0487D81DAF5CA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.hpp */; };
		A051310CE0A744A0B03AE4FB /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.hpp */ = {isa = PBXBuildFile; fileRef = EE32606E110D44638BC6EACB /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.hpp */; };
		A0536FD3D43146F9A3395F22 /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.hpp */ = {isa = PBXBuildFile; fileRef = 1F349D6887154916A732CAD0 /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.hpp */; };
		A05E79ADCE324057A390DC06 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */ = {isa = PBXBuildFile; fileRef = 94620BB75A0048188412B47D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */; };
		A05F947B650543E18D794F72 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.hpp */ = {isa = PBXBuildFile; fileRef = 8A13ACBCC00349E19A9B70DC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.hpp */; };
		A07A04168E0548C79E2EC381 /* /Users/heiner/git/QuantLib/ql/methods/all.hpp */ = {isa = PBXBuildFile; fileRef = 0503E56FDE4D45ADB947A6B1 /* /Users/heiner/git/QuantLib/ql/methods/all.hpp */; };
		A0860D2518B446F1B5E8ECCD /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.hpp */ = {isa = PBXBuildFile; fileRef = A4738264B13944A380199623 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.hpp */; };
		A092712C5B224CA6877E1F95 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.hpp */ = {isa = PBXBuildFile; fileRef = ABCDC3C9862544EA99FDF5BD /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.hpp */; };
		A0929168A9A84E1A8400337E /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */ = {isa = PBXBuildFile; fileRef = 10EC6AB739944192A78B58E6 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */; };
		A0947C4E8EA54081A2496C9B /* /Users/heiner/git/QuantLib/test-suite/timeseries.hpp */ = {isa = PBXBuildFile; fileRef = 1AE30CB7FEDE4F9694CA99A0 /* /Users/heiner/git/QuantLib/test-suite/timeseries.hpp */; };
		A0B272ECA96A4C499260C268 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */ = {isa = PBXBuildFile; fileRef = EB1843651AC24250BF53D0BC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */; };
		A0B31E403518436C97E77A98 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.hpp */ = {isa = PBXBuildFile; fileRef = 976000574C5643D187CA99C2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.hpp */; };
		A0E093D5827E428B8D266A7C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp */ = {isa = PBXBuildFile; fileRef = 5050536B78204E63AE3A38CB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp */; };
		A0EFA2A0394A4590BBCC807C /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */ = {isa = PBXBuildFile; fileRef = 994F85C7F69D46989AC20676 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */; };
		A0F94FB95D6F415286A7AE47 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 8A6ECAD6E17D47C5A366D8F6 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.hpp */; };
		A10600E2CA0C4F5D8B8C67D1 /* /Users/heiner/git/QuantLib/ql/time/weekday.hpp */ = {isa = PBXBuildFile; fileRef = FF3901C5C7EE4F1DAD99E1C0 /* /Users/heiner/git/QuantLib/ql/time/weekday.hpp */; };
		A1288D3F35AA440BBDB4AF5C /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = EE63F1F862A7403A95D56B66 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */; };
		A12FF5DDB7CD4F60ABF38BB8 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.hpp */ = {isa = PBXBuildFile; fileRef = 91B9BB39E6634274BAD63161 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.hpp */; };
		A143D02162F740A6A922CD29 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/binomialengine.hpp */ = {isa = PBXBuildFile; fileRef = AC8C1A51F2964293ABEAE9C4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/binomialengine.hpp */; };
		A14C8700D0224A628BAB0E33 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.hpp */ = {isa = PBXBuildFile; fileRef = 0617D32EE45941B5B65F3080 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.hpp */; };
		A163A2803411495FAD58226B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp */ = {isa = PBXBuildFile; fileRef = 0D559E8C96C84DEE8A590B46 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp */; };
		A181C33C736E4AFE8F51F953 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = CC4F8B65C46D4CD4BCDFF8D9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.hpp */; };
		A183ECF95D0345FB90C50DB9 /* /Users/heiner/git/QuantLib/ql/errors.cpp */ = {isa = PBXBuildFile; fileRef = E51C4042C2914362AA0564A4 /* /Users/heiner/git/QuantLib/ql/errors.cpp */; };
		A1869AAA30DF43DD83A6C968 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp */ = {isa = PBXBuildFile; fileRef = 181157B800E84F2A94C83698 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp */; };
		A1A0912ECD0847198AC821BF /* /Users/heiner/git/QuantLib/test-suite/stats.hpp */ = {isa = PBXBuildFile; fileRef = 4358D274DA2D463799D896F7 /* /Users/heiner/git/QuantLib/test-suite/stats.hpp */; };
		A1C9485246CA4907BEE9587E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.hpp */ = {isa = PBXBuildFile; fileRef = C6EFE03A57B24FC782D9DA72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.hpp */; };
		A1D0370551A74CB4B9C965A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */ = {isa = PBXBuildFile; fileRef = 230A40475D004614B66C23EE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */; };
		A1D9978B6AFE425DA9015269 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.hpp */ = {isa = PBXBuildFile; fileRef = 99C7C7EB235F496EB2E497D2 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.hpp */; };
		A1F5BC824FE24A2FBB090FE2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */ = {isa = PBXBuildFile; fileRef = 7D3C4E8E5D8049148482516E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */; };
		A1FB8BF3FAEF446B8B4C159F /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */ = {isa = PBXBuildFile; fileRef = 67ED4A6C0A6D457E91C8B440 /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */; };
		A20EBC2ECE0A44D5AF79EFA2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/all.hpp */ = {isa = PBXBuildFile; fileRef = 4E944116FB3D48BE84ED1B11 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/all.hpp */; };
		A219A125EF164B65884653CB /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cdor.hpp */ = {isa = PBXBuildFile; fileRef = 1B16C83B956B441092A55FF9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cdor.hpp */; };
		A22328B642E0436F8C08786B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.hpp */ = {isa = PBXBuildFile; fileRef = 52271DD409AC4D11B27D13AB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.hpp */; };
		A2272CE6FCF44E658EEED881 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 69D72D7D2CBF44DDB0CA724F /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */; };
		A22C7C4B648F4B1DA0A3BFCB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */ = {isa = PBXBuildFile; fileRef = CCBBEEDB04DE4F7595A5FD06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */; };
		A22D6D4CA3CA4B9DBAEF8E12 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 7398026339D8450CAA75A068 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.hpp */; };
		A231796102C54479AE817FB3 /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */ = {isa = PBXBuildFile; fileRef = D5F80D3EB8E2423196974456 /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */; };
		A23B0C9F876042EB97E5B636 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */ = {isa = PBXBuildFile; fileRef = 205A6B43FFE840D89369D561 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */; };
		A27B3923213748979D8B21C8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/exercisevalue.hpp */ = {isa = PBXBuildFile; fileRef = 90F518583BD8425A8AB52789 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/exercisevalue.hpp */; };
		A27CD3BB1B6F4C0CB1D3DEB2 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.hpp */ = {isa = PBXBuildFile; fileRef = BB52D5B41396452C911ACC28 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.hpp */; };
		A290915716CE4B28B16F73B7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */ = {isa = PBXBuildFile; fileRef = 4FC81DE1D0D14253B943FDB3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */; };
		A29E1F7A4EE44DF4834FFB53 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */ = {isa = PBXBuildFile; fileRef = 4AD8ACDAD4254C708F1D7C38 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */; };
		A29E3715B1274E4CA6D62492 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */ = {isa = PBXBuildFile; fileRef = BAA1BE77604D4EB398899C88 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */; };
		A29FBB1C31F44A8996D56D4E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.hpp */ = {isa = PBXBuildFile; fileRef = F6857F3CB38742AEA5B5B66B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.hpp */; };
		A2D226FABF3747AA965F2996 /* /Users/heiner/git/QuantLib/test-suite/covariance.hpp */ = {isa = PBXBuildFile; fileRef = 6080B83A5FF0402D819B0065 /* /Users/heiner/git/QuantLib/test-suite/covariance.hpp */; };
		A2FB1759C9964988AFC025CC /* /Users/heiner/git/QuantLib/test-suite/linearleastsquaresregression.hpp */ = {isa = PBXBuildFile; fileRef = F212F399DF654E98A443A21B /* /Users/heiner/git/QuantLib/test-suite/linearleastsquaresregression.hpp */; };
		A305513D2F0942C198C38734 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.hpp */ = {isa = PBXBuildFile; fileRef = ED938153AB0B4A779345CA01 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.hpp */; };
		A314F89363704C2CBDD267D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 21AA004B8DC0411399C64B67 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */; };
		A31718E7344C45F6B632644B /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolateddefaultdensitycurve.hpp */ = {isa = PBXBuildFile; fileRef = 8829404B47674E4DA465A4F3 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolateddefaultdensitycurve.hpp */; };
		A31A1EF0D1CC4211A750679C /* /Users/heiner/git/QuantLib/test-suite/amortizingbond.cpp */ = {isa = PBXBuildFile; fileRef = C63831D2F9104D51AAEB4418 /* /Users/heiner/git/QuantLib/test-suite/amortizingbond.cpp */; };
		A31AAC5781E04D5E90C5B21C /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */ = {isa = PBXBuildFile; fileRef = 573C37266D254997B4EDDD8F /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */; };
		A33D8688A25F444A9057F414 /* /Users/heiner/git/QuantLib/ql/models/model.hpp */ = {isa = PBXBuildFile; fileRef = 06D9309E0D8546779BACBBC0 /* /Users/heiner/git/QuantLib/ql/models/model.hpp */; };
		A33EFD8DF0054745A64A7243 /* /Users/heiner/git/QuantLib/ql/math/integrals/simpsonintegral.hpp */ = {isa = PBXBuildFile; fileRef = BA378CB6AC8A4263A9D44B2A /* /Users/heiner/git/QuantLib/ql/math/integrals/simpsonintegral.hpp */; };
		A3442049423E4149A22C132E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/all.hpp */ = {isa = PBXBuildFile; fileRef = 495C1202CFDC4131907EA624 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/all.hpp */; };
		A346E3B618ED4ADCA3EDB1A7 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/all.hpp */ = {isa = PBXBuildFile; fileRef = DED832A73A974D229E924982 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/all.hpp */; };
		A367B9A01A20475395E4AF5B /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.hpp */ = {isa = PBXBuildFile; fileRef = 56A4D2F487D6422E9D290493 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.hpp */; };
		A36871BEADB949ACA30F5162 /* /Users/heiner/git/QuantLib/ql/settings.cpp */ = {isa = PBXBuildFile; fileRef = 2DA30B9775EE43E5ACC678D4 /* /Users/heiner/git/QuantLib/ql/settings.cpp */; };
		A37AEEAC2D6C45689B09A6B8 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/brent.hpp */ = {isa = PBXBuildFile; fileRef = A19399A0C8CE45E29F5B2212 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/brent.hpp */; };
		A37DE4925E594354B29C07B8 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.hpp */ = {isa = PBXBuildFile; fileRef = 44B56B56A4EF4311B8388EDF /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.hpp */; };
		A3958F7AD3094522A6409EA2 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewiseyieldcurve.hpp */ = {isa = PBXBuildFile; fileRef = 21BCD6EC82EF4518BD6981E8 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewiseyieldcurve.hpp */; };
		A39E8FB86B8B49869D1C5334 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.hpp */ = {isa = PBXBuildFile; fileRef = C4F3313E080C405C8926F965 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.hpp */; };
		A3A828FE4C104F83A89675FF /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.hpp */ = {isa = PBXBuildFile; fileRef = 0901712FDDD84CEFAEE50BDD /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.hpp */; };
		A3AE175951BE478483F6FB69 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */ = {isa = PBXBuildFile; fileRef = 10B745FC436B4A3BBA70CD15 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */; };
		A3B3399BF1204DE482FAB58B /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */ = {isa = PBXBuildFile; fileRef = C3B9E44B266843E285192941 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */; };
		A3B95E0432654F54BAA97DBD /* /Users/heiner/git/QuantLib/ql/math/errorfunction.hpp */ = {isa = PBXBuildFile; fileRef = 47235A96B3684FD9B1A8DEF0 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.hpp */; };
		A3C5531E6D344581A2D54CC0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp */ = {isa = PBXBuildFile; fileRef = DAAE9AA77C734CCA9E75C9F6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp */; };
		A3CA0FB1D3934304A6E9E4B0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.hpp */ = {isa = PBXBuildFile; fileRef = 66FCAF4A2F324F9991E24012 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.hpp */; };
		A3D2E8C30D3743F392499A8E /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 50EFF9FCEC3F40B2AD04E1F6 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.hpp */; };
		A3E273258954448D997C8217 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */ = {isa = PBXBuildFile; fileRef = B4D643808AAE421C88C777B2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */; };
		A3EB725198894551940E11B0 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/all.hpp */ = {isa = PBXBuildFile; fileRef = CE09B311529345768743EF2C /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/all.hpp */; };
		A3F0B47019C2413FB69742D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */ = {isa = PBXBuildFile; fileRef = 65BE492AE8614F47ACCB42DF /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */; };
		A3F7A833015D4B2F9F412A52 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmtermoperator.hpp */ = {isa = PBXBuildFile; fileRef = 16E4154BB1D94AA495D6BA54 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmtermoperator.hpp */; };
		A400B54F49E4490790240D37 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.hpp */ = {isa = PBXBuildFile; fileRef = E270E7F962ED4830A8D4E3C2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.hpp */; };
		A406EB93E944459D991E4500 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */ = {isa = PBXBuildFile; fileRef = 9367A331883E4A968E5A601B /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */; };
		A407FAF615E84FBEB3808979 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */ = {isa = PBXBuildFile; fileRef = 99695AD9A0E84A21BB8DECF2 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */; };
		A424095366FE47EEAC8A97A6 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.hpp */ = {isa = PBXBuildFile; fileRef = 9376CD25BC664543AF602667 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.hpp */; };
		A426AB100F1740E59B15B01E /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */ = {isa = PBXBuildFile; fileRef = 161E094255E545F88C51940E /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */; };
		A435D042E0734F4D9187FC81 /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */ = {isa = PBXBuildFile; fileRef = B200164722C94439AE092710 /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */; };
		A44040443E95413996FCA5D5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */ = {isa = PBXBuildFile; fileRef = D7C2302456024246A306F440 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */; };
		A44F89E598FE4A859C735FC8 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.hpp */ = {isa = PBXBuildFile; fileRef = D1689EC535664DB092FD628C /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.hpp */; };
		A485B0BFAED24EA9BAF34384 /* /Users/heiner/git/QuantLib/test-suite/creditriskplus.hpp */ = {isa = PBXBuildFile; fileRef = F529D7723BCA461A9E800253 /* /Users/heiner/git/QuantLib/test-suite/creditriskplus.hpp */; };
		A49111BA2E81408B8543106F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */ = {isa = PBXBuildFile; fileRef = 1E3B2BC36ABA4643AEFA124C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */; };
		A495FCAB0AA54DB3AAFBA272 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.hpp */ = {isa = PBXBuildFile; fileRef = 09A43A9AB6124C5B80B57731 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.hpp */; };
		A4A403A7711C4B8889DE943D /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 072485EAF284432C817B7E9F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.hpp */; };
		A4C5A6440D81464094EE1035 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.hpp */ = {isa = PBXBuildFile; fileRef = B7B86E377CCA4F6381EF4C64 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.hpp */; };
		A4D3A0F4B1F244AE8B27C0C8 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.hpp */ = {isa = PBXBuildFile; fileRef = 042CD602A8B0479D958B4AAC /* /Users/heiner/git/QuantLib/ql/processes/merton76process.hpp */; };
		A5078A159BB24AB28ADDA2AF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.hpp */ = {isa = PBXBuildFile; fileRef = C32982A1C08A46F9B54FDFE4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.hpp */; };
		A52D99EF03954374BB4B7EEF /* /Users/heiner/git/QuantLib/test-suite/libormarketmodelprocess.hpp */ = {isa = PBXBuildFile; fileRef = 1EC949EAC29B4D98BB23EF86 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodelprocess.hpp */; };
		A53EAFAD7BFA449C9E9B0157 /* /Users/heiner/git/QuantLib/test-suite/variancegamma.hpp */ = {isa = PBXBuildFile; fileRef = 6851DF7F458042F6B3851407 /* /Users/heiner/git/QuantLib/test-suite/variancegamma.hpp */; };
		A5542008763E4386BB189016 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp */ = {isa = PBXBuildFile; fileRef = 35E512423B5C4C5989039B3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp */; };
		A55A3B39BD5245FA9B791BCF /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */ = {isa = PBXBuildFile; fileRef = 16339DFDD45F4E70A6936F80 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */; };
		A56712153D9344FF82ADD62B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.hpp */ = {isa = PBXBuildFile; fileRef = 9E2546AC6C9C4075B91F77D8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.hpp */; };
		A57560879E28499696032F9A /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.hpp */ = {isa = PBXBuildFile; fileRef = F2DFC1263D4C4869843A38ED /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.hpp */; };
		A57B99DBBDB5452B82D3FCA4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp */ = {isa = PBXBuildFile; fileRef = 709375F300BF4203915AB07D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp */; };
		A59C71A6F5494EB49280E064 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */ = {isa = PBXBuildFile; fileRef = E8DB09A2D75F43BA9893275E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */; };
		A5CCB472EDC3476A9C6D19A8 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.hpp */ = {isa = PBXBuildFile; fileRef = B6110D77B38B4975AA95A6B0 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.hpp */; };
		A5D5486B15524924A617D936 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */ = {isa = PBXBuildFile; fileRef = 6911297420A8469BA5D5AA32 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */; };
		A5D6214D10A5436DAB444BDA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.hpp */ = {isa = PBXBuildFile; fileRef = D9E102131605421582AD33E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.hpp */; };
		A5D6D9B6979C4EDCA040A19B /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.hpp */ = {isa = PBXBuildFile; fileRef = 691790C50A704FC7B3787830 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.hpp */; };
		A5E0C7C541A545D38B5EC6EC /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = B45D732372CE45EE93A22517 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.hpp */; };
		A5E7B6DB77B1492398CF14BB /* /Users/heiner/git/QuantLib/ql/utilities/observablevalue.hpp */ = {isa = PBXBuildFile; fileRef = 904569C69C6C4AB4A1C4FA36 /* /Users/heiner/git/QuantLib/ql/utilities/observablevalue.hpp */; };
		A5F031D60151443ABEFD4980 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 250DDC4607094D9CABA50D07 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.hpp */; };
		A5F13A5E3CCC4CE18D1B3661 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzocr.hpp */ = {isa = PBXBuildFile; fileRef = AA1053C66AB34DF79021ED0E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzocr.hpp */; };
		A5F2728400E84F5989A5EE9D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 6ECC14CBDA7B41878EA43862 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp */; };
		A5F56C0FB00F44EF86A66D0F /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */ = {isa = PBXBuildFile; fileRef = ED6EFAEF006441B5B27E8E2F /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */; };
		A5F7FE772490468BAC9D2861 /* /Users/heiner/git/QuantLib/ql/experimental/credit/constantlosslatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = EF5E6182765841FCA1816E05 /* /Users/heiner/git/QuantLib/ql/experimental/credit/constantlosslatentmodel.hpp */; };
		A608C319566949839CBF912E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */ = {isa = PBXBuildFile; fileRef = EC5BA0EFC5E04FF2A5FEAEB3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */; };
		A6180600647942A39D5FF4BC /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 28297F5D7DA64BBB9324D963 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */; };
		A61BE1C1419B4492A959EA1D /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */ = {isa = PBXBuildFile; fileRef = 1E7EFD06435B4E72AC3247B2 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */; };
		A621577A88094F709B638BA8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */ = {isa = PBXBuildFile; fileRef = 3E01ABEF3CA24B02BC530FC8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */; };
		A6236194CC0847AC99679743 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.hpp */ = {isa = PBXBuildFile; fileRef = 735EEFFE46234EE797145AF8 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.hpp */; };
		A62A224E71D34E668CD5F8CE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdeuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = 43B4FB05A2A04310B9F0EA08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdeuropeanengine.hpp */; };
		A62B72972BF84C6DBC817192 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */ = {isa = PBXBuildFile; fileRef = 8573BF9EDD4E4E9788657C9E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */; };
		A650B27309D7458C819944F2 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.hpp */ = {isa = PBXBuildFile; fileRef = ADFF26E9D95C479D8F9E402F /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.hpp */; };
		A65164431AAF474D9980C662 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.hpp */ = {isa = PBXBuildFile; fileRef = 8C211B4F8269468FA9110584 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.hpp */; };
		A655FA84EDA14F84A06D2E28 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.hpp */ = {isa = PBXBuildFile; fileRef = B06E2E2A16CF423C8D5ED831 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.hpp */; };
		A6646AAAD22E4D8699267412 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/tibor.hpp */ = {isa = PBXBuildFile; fileRef = D15F282FEE3C46C79DA5BBE9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/tibor.hpp */; };
		A66589F852414F1A9329D7C3 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.hpp */ = {isa = PBXBuildFile; fileRef = 4003DDCCBFC84F938972BB52 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.hpp */; };
		A67F44215DA54D69BE630B29 /* /Users/heiner/git/QuantLib/test-suite/hybridhestonhullwhiteprocess.hpp */ = {isa = PBXBuildFile; fileRef = 0D734930A7AA449CBBB97063 /* /Users/heiner/git/QuantLib/test-suite/hybridhestonhullwhiteprocess.hpp */; };
		A6930174A79246B2BA5E9155 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */ = {isa = PBXBuildFile; fileRef = FE5345BA33E24C80AE849165 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */; };
		A69C8B86F117418288F1CBBC /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp */ = {isa = PBXBuildFile; fileRef = 6040C789D51943FA8F8AE74C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp */; };
		A6B9F8BAE6A24B3FB3CB0618 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */ = {isa = PBXBuildFile; fileRef = 8732229F1C374D06A2B06D10 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */; };
		A6C2DC7C85DF4B51B3C43D41 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */ = {isa = PBXBuildFile; fileRef = 0157FD42DDB641A2A70A3DB9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */; };
		A6C8598B033A4B23B322BD90 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */ = {isa = PBXBuildFile; fileRef = A78E77A4C01746D8AE2DBA70 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */; };
		A6D19A31D46B4B1794FCB1FA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.hpp */ = {isa = PBXBuildFile; fileRef = 34636571D6F24192A5D7C74D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.hpp */; };
		A6D2B9BE2B46492386BBC8B0 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */ = {isa = PBXBuildFile; fileRef = D63296BE5E3D4941B46B5BD6 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */; };
		A6E4CA6FEBF34AEBB396C596 /* /Users/heiner/git/QuantLib/test-suite/partialtimebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = 7BC4E3575B714A939FCC9369 /* /Users/heiner/git/QuantLib/test-suite/partialtimebarrieroption.cpp */; };
		A6E9D1F0A36640E4A351E0C2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.hpp */ = {isa = PBXBuildFile; fileRef = E8FB4A160929435C96681DF9 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.hpp */; };
		A6EAA975B59044A0A7B9F43E /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp */ = {isa = PBXBuildFile; fileRef = C609C31A2EF14BD4BD2C60E2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp */; };
		A6F008BB7CC84AE7A51D9991 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.hpp */ = {isa = PBXBuildFile; fileRef = A4A129FDC2434FE19E63CC48 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.hpp */; };
		A705104923B04B2BB224BC4C /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.hpp */ = {isa = PBXBuildFile; fileRef = 1FEC683DF2054C419EC4B055 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.hpp */; };
		A7056F18E0E14A0CAEC3E2B6 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/drifttermstructure.hpp */ = {isa = PBXBuildFile; fileRef = D8754615BDE54FF481184F19 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/drifttermstructure.hpp */; };
		A71D91A759AB43F688E4E717 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */ = {isa = PBXBuildFile; fileRef = 2CB1979224AB43BB9A15440E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */; };
		A733480267E7438189745915 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp */ = {isa = PBXBuildFile; fileRef = 640F5E312E67465A95C92E2E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp */; };
		A7AC9B91848B4EACA4DC8FD9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */ = {isa = PBXBuildFile; fileRef = D699ED832DD949E2A244B39C /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */; };
		A7B837C293BC4FB4B5E459CA /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.hpp */ = {isa = PBXBuildFile; fileRef = BB1B11DD00504A519720A3B0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.hpp */; };
		A7D92C3EEFEA43F98809DCD7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.hpp */ = {isa = PBXBuildFile; fileRef = FE87706A04124E93AE818D74 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.hpp */; };
		A7DACC673685458E915A6050 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/audlibor.hpp */ = {isa = PBXBuildFile; fileRef = 7B28B4EDB0D94E8CA1BE4A10 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/audlibor.hpp */; };
		A804414C64FE4444B505586D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.hpp */ = {isa = PBXBuildFile; fileRef = A78A83BC77344803843FDB3D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.hpp */; };
		A83133DECB9F497789B347E7 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */ = {isa = PBXBuildFile; fileRef = 48DBB8CCC2E64759BBE302B0 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */; };
		A83B2D6D06F6407C80C8A910 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */ = {isa = PBXBuildFile; fileRef = 6814732A27F246FCA66EA309 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */; };
		A8491CEC80D64D6FA169664B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */ = {isa = PBXBuildFile; fileRef = D30DA5DAF947473682372B1F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */; };
		A85A086709FC408EA059D340 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */ = {isa = PBXBuildFile; fileRef = EF11AEC76CFD4CF3AC3019B5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */; };
		A86367E23C714AFE94E012F8 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */ = {isa = PBXBuildFile; fileRef = 17CD99BF1C4A4C5A967DCA9B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */; };
		A88794DB56EB4C1FA7C9BF47 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */ = {isa = PBXBuildFile; fileRef = BAC7CEA728FA460D83FC4578 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */; };
		A8A1415905CA4870A4515499 /* /Users/heiner/git/QuantLib/test-suite/numericaldifferentiation.hpp */ = {isa = PBXBuildFile; fileRef = 76B68133693B4B2CBDE9E886 /* /Users/heiner/git/QuantLib/test-suite/numericaldifferentiation.hpp */; };
		A8C1FF68AE6E4A7382F84C20 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = DD5C571DB1D1423B9A769154 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolation.hpp */; };
		A8C63908944D4288827BD6F7 /* /Users/heiner/git/QuantLib/ql/math/transformedgrid.hpp */ = {isa = PBXBuildFile; fileRef = B421DE84457E4E4D87701EA1 /* /Users/heiner/git/QuantLib/ql/math/transformedgrid.hpp */; };
		A8CB3721E0B34B8198225002 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.hpp */ = {isa = PBXBuildFile; fileRef = 82E60D02318345A79EB99F82 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.hpp */; };
		A8D376EB88934226B8C2988D /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */ = {isa = PBXBuildFile; fileRef = A2C02865DB924784B5CD8FE4 /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */; };
		A8E18A5F9CE5497CA6FED56A /* /Users/heiner/git/QuantLib/ql/math/fastfouriertransform.hpp */ = {isa = PBXBuildFile; fileRef = D0EF24D2FD77419AAD8D2B34 /* /Users/heiner/git/QuantLib/ql/math/fastfouriertransform.hpp */; };
		A8E7AAE2B7524EFD82BC119C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */ = {isa = PBXBuildFile; fileRef = BCCB0A19B1A64BC88E9D1E65 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */; };
		A8E7F9379131463DB550E83F /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */ = {isa = PBXBuildFile; fileRef = 3BFC425B087848AB8A9ACC83 /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */; };
		A8F90061868D407481F3CEFC /* /Users/heiner/git/QuantLib/ql/time/period.cpp */ = {isa = PBXBuildFile; fileRef = 2EF664CCB9EE40118BF008F5 /* /Users/heiner/git/QuantLib/ql/time/period.cpp */; };
		A8FC38A2E4384B63815C71CB /* /Users/heiner/git/QuantLib/ql/utilities/all.hpp */ = {isa = PBXBuildFile; fileRef = 9B1F469D9F154A0EAAC04F74 /* /Users/heiner/git/QuantLib/ql/utilities/all.hpp */; };
		A90077DDEE6C48C795147E34 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/all.hpp */ = {isa = PBXBuildFile; fileRef = CBADD508D1E94CAFA603F553 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/all.hpp */; };
		A922A530B56C4405862CE71E /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365nl.hpp */ = {isa = PBXBuildFile; fileRef = C3D5EF54BB1D4B1AB079333F /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365nl.hpp */; };
		A93BAB4370164EBE870A2E13 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */ = {isa = PBXBuildFile; fileRef = FD97EC3D717D41AAAA8FA37E /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */; };
		A93F4B2DB9DB472BB1E5CB14 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */ = {isa = PBXBuildFile; fileRef = CD3744AF35E349F6A4B4DE39 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */; };
		A94EC2AAB2CE4EA1B93742CF /* /Users/heiner/git/QuantLib/ql/math/errorfunction.hpp */ = {isa = PBXBuildFile; fileRef = 527B712EDACD43409545E619 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.hpp */; };
		A94FCA5E108947778230BF70 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.hpp */ = {isa = PBXBuildFile; fileRef = 6CB81C402E7B405A9A38B0C4 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.hpp */; };
		A9516B943DF74079A5FCA581 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.hpp */ = {isa = PBXBuildFile; fileRef = F95839FAB6DA4CEDA160B6C3 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.hpp */; };
		A955EF37A94F443D8EC4C3FE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */ = {isa = PBXBuildFile; fileRef = D0A20E8B008C4AF49EA77056 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */; };
		A9623D0723EA466CB1109211 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/longstaffschwartzpathpricer.hpp */ = {isa = PBXBuildFile; fileRef = 80BD2A9458AD4101960FA5B9 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/longstaffschwartzpathpricer.hpp */; };
		A969C0EA1614460D8ECC7F04 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = 27E7258449C34545901D8A08 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp */; };
		A980C35B076045BFB0B303AD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */ = {isa = PBXBuildFile; fileRef = 0E01B903773242A29C90A980 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */; };
		A98F206FFE4A4D4E983F04B5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */ = {isa = PBXBuildFile; fileRef = DA7C3CDE166D4EA2A860E8BE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */; };
		A9965058E50442EF8F837C04 /* /Users/heiner/git/QuantLib/test-suite/inflationvolatility.cpp */ = {isa = PBXBuildFile; fileRef = 6E0D6AE302734FE586FA8F47 /* /Users/heiner/git/QuantLib/test-suite/inflationvolatility.cpp */; };
		A9988DF9F500436893431E73 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.hpp */ = {isa = PBXBuildFile; fileRef = 3E8B8B7DBCDE4F4CA91BD2CC /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.hpp */; };
		A9A1BA08C3CE428A923BD1AC /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = FD6373654DCC450BA8B9D925 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.hpp */; };
		A9AAEBD60C1B4B5A9D4A5F6C /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.hpp */ = {isa = PBXBuildFile; fileRef = F3C45C38C1814C1C8E09DCC0 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.hpp */; };
		A9ACDF4709244700B722408A /* /Users/heiner/git/QuantLib/ql/experimental/credit/saddlepointlossmodel.hpp */ = {isa = PBXBuildFile; fileRef = D67364B4D8244BADA3DCA8F0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/saddlepointlossmodel.hpp */; };
		A9B9F216915D4A6C88AA4067 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = C05684EE5E774112A0E73514 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */; };
		A9BA7DB70F684361A3F4061D /* /Users/heiner/git/QuantLib/ql/time/asx.hpp */ = {isa = PBXBuildFile; fileRef = 03397A7102BE47DEBADE4A66 /* /Users/heiner/git/QuantLib/ql/time/asx.hpp */; };
		A9C73425A03447988D1163B9 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */ = {isa = PBXBuildFile; fileRef = 9311FA9F8E764C0ABFD61773 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */; };
		A9EF6505190E435D8B01D191 /* /Users/heiner/git/QuantLib/Examples/LatentModel/LatentModel.cpp */ = {isa = PBXBuildFile; fileRef = 3E416F541BEF4FF780308BE1 /* /Users/heiner/git/QuantLib/Examples/LatentModel/LatentModel.cpp */; };
		A9FC4CC8532E4190A25E4677 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pde.hpp */ = {isa = PBXBuildFile; fileRef = B0E95597B0F94A888F34E81A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pde.hpp */; };
		A9FE5F5B7C3544AB824A1F54 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */ = {isa = PBXBuildFile; fileRef = CFB45DA77D934D9683E061C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */; };
		AA12BC04ABE1428C9E547E86 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp */ = {isa = PBXBuildFile; fileRef = 67BBF21C0B874A6FB3940B6E /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp */; };
		AA187810D8284A47AFD74F32 /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.hpp */ = {isa = PBXBuildFile; fileRef = AEEC24CFE96842789B77C16A /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.hpp */; };
		AA38DE508F25435AB1305FEC /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.hpp */ = {isa = PBXBuildFile; fileRef = CA9311EB03CA4CA7990F76B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.hpp */; };
		AA4906D5E82141328C6BA59A /* /Users/heiner/git/QuantLib/Examples/Repo/Repo.cpp */ = {isa = PBXBuildFile; fileRef = 59048626F7F94BCF960C38B8 /* /Users/heiner/git/QuantLib/Examples/Repo/Repo.cpp */; };
		AA7291F478C7494ABE0ED3ED /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */ = {isa = PBXBuildFile; fileRef = 634C58F16E5B499398DD3D10 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */; };
		AA8C1AD9775F46C0A7DFA32A /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */ = {isa = PBXBuildFile; fileRef = 1D1D81699A5142269728CA2B /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */; };
		AA9E8C808C8D4AF490FEDBAB /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.hpp */ = {isa = PBXBuildFile; fileRef = DCC0B71814F04550A05AA609 /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.hpp */; };
		AAA47F56EEA742B4A6789F65 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */ = {isa = PBXBuildFile; fileRef = 118E19C667294262BC94DE75 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */; };
		AAA77FAFD2A74CA6B5830B36 /* /Users/heiner/git/QuantLib/test-suite/margrabeoption.cpp */ = {isa = PBXBuildFile; fileRef = DC335895F88F4BE9AB4EFA0A /* /Users/heiner/git/QuantLib/test-suite/margrabeoption.cpp */; };
		AAB8F47C9BB548639EF86F96 /* /Users/heiner/git/QuantLib/ql/pricingengines/mcsimulation.hpp */ = {isa = PBXBuildFile; fileRef = B4E34BA846F945ACBF2C469A /* /Users/heiner/git/QuantLib/ql/pricingengines/mcsimulation.hpp */; };
		AABD17764AEE45C6A2C6CDC0 /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.hpp */ = {isa = PBXBuildFile; fileRef = 18FEF8DC8E924F5981EE9D3B /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.hpp */; };
		AAC88D47279440CA9B739B84 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */ = {isa = PBXBuildFile; fileRef = 7538D7DFC8A142CABA7D7508 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */; };
		AAD0E3F3A6B34675A55D4E81 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */ = {isa = PBXBuildFile; fileRef = 61CAB9CEB3A24900AB1C5E9A /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */; };
		AAE83059FF97405489715B9D /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.hpp */ = {isa = PBXBuildFile; fileRef = 4596A3B5C05841A7884EF6B1 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.hpp */; };
		AAEAA3C86CE943238C630327 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */ = {isa = PBXBuildFile; fileRef = A76476021B8143F8B86ABE09 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */; };
		AB07884E122A46A7B52C86D9 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */ = {isa = PBXBuildFile; fileRef = 2FB1F7BC14B14A00AD18DFFF /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */; };
		AB0D971FDA01430684E2851B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp */ = {isa = PBXBuildFile; fileRef = 77B489C8DC3F42989A50D41C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp */; };
		AB1149C3F14B4EF094F32509 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */ = {isa = PBXBuildFile; fileRef = BB35C423E8484015AC69CB31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */; };
		AB154312C5EA45CA848384E1 /* /Users/heiner/git/QuantLib/ql/math/optimization/problem.hpp */ = {isa = PBXBuildFile; fileRef = BFD0D9B7BF444DFDA0233817 /* /Users/heiner/git/QuantLib/ql/math/optimization/problem.hpp */; };
		AB28F1A91FB24EC4B48DA55B /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.hpp */ = {isa = PBXBuildFile; fileRef = 79B336D5F2B54C5B8F78963F /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.hpp */; };
		AB2B2FDFCB32441984F10EDA /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.hpp */ = {isa = PBXBuildFile; fileRef = ECF76C5A82D444BAA7EFBFEB /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.hpp */; };
		AB38DEC09E7846879069193C /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */ = {isa = PBXBuildFile; fileRef = 8C072F53FEBE49B6B06CBA6F /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */; };
		AB3D650F65D444F883908BD4 /* /Users/heiner/git/QuantLib/ql/math/all.hpp */ = {isa = PBXBuildFile; fileRef = 377BB54AE5784F5296BABFF8 /* /Users/heiner/git/QuantLib/ql/math/all.hpp */; };
		AB4586D133524D0085B9975B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/duffsdeviceinnerproduct.hpp */ = {isa = PBXBuildFile; fileRef = C47BFF0137DE44BFA5582E08 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/duffsdeviceinnerproduct.hpp */; };
		AB48B47A5B7D437E83C8BF18 /* /Users/heiner/git/QuantLib/test-suite/compoundoption.hpp */ = {isa = PBXBuildFile; fileRef = 4EF3779333B84F62B25A937A /* /Users/heiner/git/QuantLib/test-suite/compoundoption.hpp */; };
		AB4ED68677B544C9B42B938C /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */ = {isa = PBXBuildFile; fileRef = F21801B891164FFB91F743D7 /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */; };
		AB5FB5A6E64D4CFFA89215E1 /* /Users/heiner/git/QuantLib/ql/indexes/swap/all.hpp */ = {isa = PBXBuildFile; fileRef = BB826C6F13254708910AED02 /* /Users/heiner/git/QuantLib/ql/indexes/swap/all.hpp */; };
		AB74F62480D54341B185B951 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.hpp */ = {isa = PBXBuildFile; fileRef = 23C1EB5408914FD2AF145CC6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.hpp */; };
		AB7A0CB493314011B73EB9E7 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */ = {isa = PBXBuildFile; fileRef = 0756F26BB323497A9296F5E1 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */; };
		AB7C4E73311E4EA1A6D78C6D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp */ = {isa = PBXBuildFile; fileRef = 55FC659CC90043ABA6BEFE2A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp */; };
		AB8EF0CAE6CC4C83A35206E2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/all.hpp */ = {isa = PBXBuildFile; fileRef = ADA62BF1FB264451ABC0EBD3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/all.hpp */; };
		ABB74C0611D8401DBF9EAEE1 /* /Users/heiner/git/QuantLib/ql/utilities/vectors.hpp */ = {isa = PBXBuildFile; fileRef = 586E2DF8FDB849888049FF37 /* /Users/heiner/git/QuantLib/ql/utilities/vectors.hpp */; };
		ABBA9B74874D4848A04597F6 /* /Users/heiner/git/QuantLib/ql/instruments/vanillastorageoption.hpp */ = {isa = PBXBuildFile; fileRef = A62DA6AE90344F048BE4ECE9 /* /Users/heiner/git/QuantLib/ql/instruments/vanillastorageoption.hpp */; };
		ABBDB6DB92F74934BF29AA80 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.hpp */ = {isa = PBXBuildFile; fileRef = 4D3A729580D84F66BCABDAD5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.hpp */; };
		ABC2998CA47449B6B76B08FF /* /Users/heiner/git/QuantLib/ql/experimental/credit/binomiallossmodel.hpp */ = {isa = PBXBuildFile; fileRef = 0723B6F0F1BA4BBDA7BD4A13 /* /Users/heiner/git/QuantLib/ql/experimental/credit/binomiallossmodel.hpp */; };
		ABC6DF930AC247C4B9F8D1AA /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */ = {isa = PBXBuildFile; fileRef = 8624F280F146493EBA4ADBE0 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */; };
		ABC79E109AE6404C8D44240D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.hpp */ = {isa = PBXBuildFile; fileRef = AAFFDD48A5BD46BCA2F24EEA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.hpp */; };
		ABD2E55CA67449B9B747990F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */ = {isa = PBXBuildFile; fileRef = 0FE60105CCD945E88AD25D54 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */; };
		AC02DEB205D5403E81E2C7DC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.hpp */ = {isa = PBXBuildFile; fileRef = BC59B318083B4BEBB1A54871 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.hpp */; };
		AC14A3842BCD466D8B8114F4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */ = {isa = PBXBuildFile; fileRef = 501DAE8DBD9349F784EB7896 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */; };
		AC1834B6EC7044E6A5444B62 /* /Users/heiner/git/QuantLib/ql/math/integrals/trapezoidintegral.hpp */ = {isa = PBXBuildFile; fileRef = 18ECB99B98A14F08826E72E5 /* /Users/heiner/git/QuantLib/ql/math/integrals/trapezoidintegral.hpp */; };
		AC27ECE3228E4DEF87FAF723 /* /Users/heiner/git/QuantLib/test-suite/swapforwardmappings.cpp */ = {isa = PBXBuildFile; fileRef = B9B83B6D3F8840069AA133C9 /* /Users/heiner/git/QuantLib/test-suite/swapforwardmappings.cpp */; };
		AC29292B518B44559692655F /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/all.hpp */ = {isa = PBXBuildFile; fileRef = 6FD73CC66A3041708E8D1DA8 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/all.hpp */; };
		AC5C5195957E41D893EDC822 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */ = {isa = PBXBuildFile; fileRef = 41F0579DC6BD4545A154A6E2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */; };
		AC5DF45CFC8B475B86FE28C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 420E44B227884B918650A6D9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */; };
		AC65C7B5934C4F71B117F585 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */ = {isa = PBXBuildFile; fileRef = CAE8E839FDC645B3B688E95C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */; };
		AC74FF3821A0409DB4ED2DA0 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */ = {isa = PBXBuildFile; fileRef = 11DBB270489D4AF2B60A1602 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */; };
		AC79EE4A5E0C46C3823E80F8 /* /Users/heiner/git/QuantLib/ql/math/factorial.hpp */ = {isa = PBXBuildFile; fileRef = 8D9D4C978AB44F3BBAE17401 /* /Users/heiner/git/QuantLib/ql/math/factorial.hpp */; };
		AC8A95C007944265BFB48BDA /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */ = {isa = PBXBuildFile; fileRef = 6C9D36F28B72452BB53EFE9B /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */; };
		AC8E93C338C144E696FE558F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.hpp */ = {isa = PBXBuildFile; fileRef = 4BFBB19898874B11A70CAE83 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.hpp */; };
		AC93CB9A0BF14DF5BC199BB0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */ = {isa = PBXBuildFile; fileRef = A1823A6C71E8462082148D81 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */; };
		ACADE41F12FD4246A44127BC /* /Users/heiner/git/QuantLib/test-suite/gaussianquadratures.hpp */ = {isa = PBXBuildFile; fileRef = A54C24ECC07041F587896982 /* /Users/heiner/git/QuantLib/test-suite/gaussianquadratures.hpp */; };
		ACAEE25BA5DB4C90A72DB7BB /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 77569132181248AD8A41D27E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */; };
		ACB74339DE6F4A8BAFB37975 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp */ = {isa = PBXBuildFile; fileRef = C16B49A2DC5142198AF3F470 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp */; };
		ACB75BDBF46A49619C3474D7 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */ = {isa = PBXBuildFile; fileRef = EEA2F20075004C7794583371 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */; };
		ACC557FB58044B9F8AEF0D91 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */ = {isa = PBXBuildFile; fileRef = 867BF28AF87C482A8A687198 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */; };
		ACDE535D743646C39ED8FE99 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.hpp */ = {isa = PBXBuildFile; fileRef = 2B1EC6567163437988279F37 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.hpp */; };
		ACF11BDD6798417CBCC6099A /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */ = {isa = PBXBuildFile; fileRef = 45182F7525BF45339F56C4EB /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */; };
		AD04B00599624C5194CB3CF9 /* /Users/heiner/git/QuantLib/ql/userconfig.hpp */ = {isa = PBXBuildFile; fileRef = 2212C8576CB342128A3D107C /* /Users/heiner/git/QuantLib/ql/userconfig.hpp */; };
		AD25A01F8DC3490FB5A6B840 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = D4CBD100C7DA47D2ACA55775 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */; };
		AD41A6F4BE4B478C8F2FC45F /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp */ = {isa = PBXBuildFile; fileRef = 6469981ED01D4E55B5D09235 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp */; };
		AD4B418D8F1E4ECFBACF66F6 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.hpp */ = {isa = PBXBuildFile; fileRef = 670CC737DD594D94AEB9FFB2 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.hpp */; };
		AD608C0F5CF74944B1EFE7E5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.hpp */ = {isa = PBXBuildFile; fileRef = 4F023923B992471A9B5C9590 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.hpp */; };
		AD74B8B19F824F59BE9CF12C /* /Users/heiner/git/QuantLib/ql/math/interpolations/bilinearinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = C05E95828B7F4B53AE66BA6B /* /Users/heiner/git/QuantLib/ql/math/interpolations/bilinearinterpolation.hpp */; };
		AD7BA99C4F6448D1AB7C1CA2 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.hpp */ = {isa = PBXBuildFile; fileRef = 90AC1769F4254830BD8149C7 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.hpp */; };
		AD84EB6AF9B9420D9C6E2F60 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgainterpolation.hpp */ = {isa = PBXBuildFile; fileRef = E80C22D0454C470DA229ADC4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgainterpolation.hpp */; };
		AD96E863BFB04F8DA47FC6D7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = BDB49D3066194EF8B483C700 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.hpp */; };
		AD9BF7AAE35644248FB11DC3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 26D66FDD4C1C45B691C1DE91 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.hpp */; };
		ADACCB9517C84E1B8919CBB3 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */ = {isa = PBXBuildFile; fileRef = D8D2616ED26E4A989EF4B68D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */; };
		ADB83B91D8A34448B1B1F574 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.hpp */ = {isa = PBXBuildFile; fileRef = 790B3E4DCD1E4CE4A95C03AA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.hpp */; };
		ADD59CBCA8A1402F8EC242C3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */ = {isa = PBXBuildFile; fileRef = E145D61DBD4E440AB0F98C37 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */; };
		ADF67652CD804143B19DA070 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.hpp */ = {isa = PBXBuildFile; fileRef = 7675D3BE4C1F46E6B2C14753 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.hpp */; };
		ADFF72DB25744F3393D35097 /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.hpp */ = {isa = PBXBuildFile; fileRef = 3A5D122085E642AF8A5C990E /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.hpp */; };
		AE125A0AFB1D47C4BE6200BD /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp */ = {isa = PBXBuildFile; fileRef = DD3ECEF5E3674807A5223FC4 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp */; };
		AE13E289B5BB47A7A8EB4350 /* /Users/heiner/git/QuantLib/ql/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 38D2F948B1714B9B88CA7933 /* /Users/heiner/git/QuantLib/ql/CMakeLists.txt */; };
		AE2F0657FD7849BA90F81841 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = ACC8F9D064FA4CFEAA57B319 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp */; };
		AE4DB1A1413748B18B8D55B7 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = BD78B95663C7495D878E0888 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/all.hpp */; };
		AE5169D7A59B4FF4B1FA4C82 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.hpp */ = {isa = PBXBuildFile; fileRef = F5DB1B1C137A46FB944E0436 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.hpp */; };
		AE521C77E4FD4AD9BFEAC59D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/spreadoption.hpp */ = {isa = PBXBuildFile; fileRef = 2E38D60664AD437F9602C9E6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/spreadoption.hpp */; };
		AE94B48E6A68424B9553B4C2 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.hpp */ = {isa = PBXBuildFile; fileRef = 00B752E1938043DCAF286A33 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.hpp */; };
		AEB19EC6B1BA40E3BAB661F5 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.hpp */ = {isa = PBXBuildFile; fileRef = 34BE0ACA75A540C591447FDA /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.hpp */; };
		AEB1A370B58843218C337808 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.hpp */ = {isa = PBXBuildFile; fileRef = 6760D3404C744100BF024B92 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.hpp */; };
		AEC156ED49604BEF88B4E8F8 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = F85CB12C80C54EB5A75948F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcvanillaengine.hpp */; };
		AEC6485BE2764103A27329E4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp */ = {isa = PBXBuildFile; fileRef = C58EBD5D118A49CB9A7CE177 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp */; };
		AEC74E993E8744CCBA00E3C8 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */ = {isa = PBXBuildFile; fileRef = F9C3AF5CAE5B45DDA02DE982 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */; };
		AEECD6800C3C4E86AE43E084 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */ = {isa = PBXBuildFile; fileRef = 5D9F17860D524525AA85782C /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */; };
		AEF16CE5F21647ECA4EEF734 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */ = {isa = PBXBuildFile; fileRef = 92AD2C6F1D34464280C0CFE3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */; };
		AEF245A323E9471E8411676E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.hpp */ = {isa = PBXBuildFile; fileRef = D6F1455604A14AD0AC2975C5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.hpp */; };
		AEFD66812BE34E268E263FC6 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice2d.hpp */ = {isa = PBXBuildFile; fileRef = A98137FB01C24435A3857CD5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice2d.hpp */; };
		AF0890186F5A4CB7AF5AC0B2 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/all.hpp */ = {isa = PBXBuildFile; fileRef = C7179A1DC646467EBD34B9DE /* /Users/heiner/git/QuantLib/ql/experimental/averageois/all.hpp */; };
		AF15D3E2606B4D538938393B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.hpp */ = {isa = PBXBuildFile; fileRef = 1B3C0DBC7CEB4FF79E8CA230 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.hpp */; };
		AF2BF78F38BA475D90725159 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */ = {isa = PBXBuildFile; fileRef = 2EA07D33AB9543EEB8B183F1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */; };
		AF35C23F0A964911AB0E599F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp */ = {isa = PBXBuildFile; fileRef = E47C8B229D85406C9D5B47D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp */; };
		AF478012E4734E018E211A9C /* /Users/heiner/git/QuantLib/ql/math/distributions/all.hpp */ = {isa = PBXBuildFile; fileRef = ABC5160ACA4543A3BAFEFF9E /* /Users/heiner/git/QuantLib/ql/math/distributions/all.hpp */; };
		AF503E37545647BE976EDF58 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */ = {isa = PBXBuildFile; fileRef = BC970F97D5B34814B8B0F6B7 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */; };
		AF59D392CCC54852BF1B6FBF /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */ = {isa = PBXBuildFile; fileRef = FC891863FF9E40B2A457F64C /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */; };
		AF5E22CB65E04788898DD020 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.hpp */ = {isa = PBXBuildFile; fileRef = 7CD0AA0509E84763BC12C89B /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.hpp */; };
		AF79AF46F45F44829488E6F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */ = {isa = PBXBuildFile; fileRef = 4E4BA8E4E2464EAAB353C970 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */; };
		AF8A7B1E9A7F481C8BB9A15D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp */ = {isa = PBXBuildFile; fileRef = 5234E45F386647EF95AB76C6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp */; };
		AF970132E6C349EFAB2F43EB /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */ = {isa = PBXBuildFile; fileRef = BC62AC17873D449BA0E84CFC /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */; };
		AFAAFDE1C2254648976DFE89 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = 4F1192B1D8A943A99E8A64A9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp */; };
		AFAF256482C348DEBB0C25E0 /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */ = {isa = PBXBuildFile; fileRef = F07AE9820BD04447B7491FED /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */; };
		AFBB9497E8454A268F825D58 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */ = {isa = PBXBuildFile; fileRef = 5FB5784EAF974A78BA88D680 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */; };
		AFBD843A04564189A3799417 /* /Users/heiner/git/QuantLib/test-suite/exchangerate.hpp */ = {isa = PBXBuildFile; fileRef = 037316B2F76446F79C536EF7 /* /Users/heiner/git/QuantLib/test-suite/exchangerate.hpp */; };
		AFCD61491A8A47C88C9929B1 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.hpp */ = {isa = PBXBuildFile; fileRef = 8F8D31DF43E34824B1C8B962 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.hpp */; };
		AFD2A6FD25F14D2D8EB9B34B /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */ = {isa = PBXBuildFile; fileRef = CEE94EF0FC0940D484AEF6E9 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */; };
		AFD3E886CEAF441EA099B9D2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */ = {isa = PBXBuildFile; fileRef = 4CB072417AEF4EFFAEDBD9CA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */; };
		AFDE8F0F206A40109941E611 /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.hpp */ = {isa = PBXBuildFile; fileRef = 1CAB32A5924A4167ACF6FD4C /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.hpp */; };
		AFE2546244F44C968D7775B6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp */ = {isa = PBXBuildFile; fileRef = B9F3A226A89A426E8F4C8507 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp */; };
		B015150821084013AAF2A9A3 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/aonia.hpp */ = {isa = PBXBuildFile; fileRef = 67C99341E6B6454EB20F28DB /* /Users/heiner/git/QuantLib/ql/indexes/ibor/aonia.hpp */; };
		B01AF28EE3554988805B2262 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.hpp */ = {isa = PBXBuildFile; fileRef = 0C737ED440644A7A8B751896 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.hpp */; };
		B01C7F419F8448FDB534CFC3 /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraperror.hpp */ = {isa = PBXBuildFile; fileRef = DA45287B420E49AD8A29EB8B /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraperror.hpp */; };
		B025103964DA46138C13A5E9 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */ = {isa = PBXBuildFile; fileRef = 2D8C1D6AA7F84B12B8A93031 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */; };
		B03EC3D4E7624795AB93B135 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.hpp */ = {isa = PBXBuildFile; fileRef = 0B56E5A839B04F1684C113F4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.hpp */; };
		B03F4ADE718741ECABF9155A /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = B6B68C09BF844359A83CD195 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.hpp */; };
		B04E1106D6714D2BBCC1D3FC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.hpp */ = {isa = PBXBuildFile; fileRef = 97B1835C7AE944DCA1F0F889 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.hpp */; };
		B0564919A6BF40DE804B48A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 7E0CB62D352047CC9CB97827 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */; };
		B05E297CECF34532B629CBDA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp */ = {isa = PBXBuildFile; fileRef = CEFBD4E0B0BC4ABC9282FCA1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp */; };
		B068DC929DAF41D09CA9468C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp */ = {isa = PBXBuildFile; fileRef = 36DDDF80DCB84FC6A3D9D6C7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp */; };
		B0AD6446C4EE44B5BE28325D /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */ = {isa = PBXBuildFile; fileRef = 1C120649325F40E18415BCA1 /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */; };
		B0B4404AF5AF43B4B0481469 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */ = {isa = PBXBuildFile; fileRef = 035B4B5B5F564DBBA83624FA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */; };
		B0BA4C819D984EFABA99A702 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */ = {isa = PBXBuildFile; fileRef = 24BE04D2909D4DCC8D780F12 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */; };
		B0C79FED00BD4CB5BE8892DA /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */ = {isa = PBXBuildFile; fileRef = D8FEA9CEB7E34857B261F359 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */; };
		B0E8A892F7D448589E4E616F /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */ = {isa = PBXBuildFile; fileRef = 413D599B96564B8E8E3CBCF3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */; };
		B0F1E48D118D4E22AFD146DC /* /Users/heiner/git/QuantLib/ql/math/interpolations/flatextrapolation2d.hpp */ = {isa = PBXBuildFile; fileRef = 86B0D80353334FDEB66EBA23 /* /Users/heiner/git/QuantLib/ql/math/interpolations/flatextrapolation2d.hpp */; };
		B102E2CC8B88432BADFFCDD1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */ = {isa = PBXBuildFile; fileRef = 71ECEBDE7B924A248D9E238B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */; };
		B10523276459481C93DE7316 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.hpp */ = {isa = PBXBuildFile; fileRef = 0B5520CD96674784A12BE108 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.hpp */; };
		B112DE6DDE784E3FB9578326 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp */ = {isa = PBXBuildFile; fileRef = ACAEFAB9CE1A4A1D905856DE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp */; };
		B11C67C41A7D4C1EAB223EA3 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */ = {isa = PBXBuildFile; fileRef = 0F7A5A9C3C844158B3F24B4C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */; };
		B13B91F2BD9C4099A5AB269F /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */ = {isa = PBXBuildFile; fileRef = 781DD5A0528E4BC988F319DC /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */; };
		B13FEB3A167040B1A436739B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/swaptionvolcube1a.hpp */ = {isa = PBXBuildFile; fileRef = 42991F784BE94216814BBF2E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/swaptionvolcube1a.hpp */; };
		B152D06FA12C45C0A4B13107 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */ = {isa = PBXBuildFile; fileRef = 53CDF0B69CAC4D22A53C247C /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */; };
		B15604B526A543BA99DD460A /* /Users/heiner/git/QuantLib/test-suite/termstructures.hpp */ = {isa = PBXBuildFile; fileRef = CEB72580375849A48DFBF5A4 /* /Users/heiner/git/QuantLib/test-suite/termstructures.hpp */; };
		B1605A0EBAE24EAF9A2EAD97 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */ = {isa = PBXBuildFile; fileRef = 454D6184561444F0AE29D38F /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */; };
		B1A3D4E14D8C4C4B86BDB8BB /* /Users/heiner/git/QuantLib/ql/instruments/makecms.hpp */ = {isa = PBXBuildFile; fileRef = D4F3C13884BE4D96A9FBA607 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.hpp */; };
		B1B4DB9839AB4456A67411F0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */ = {isa = PBXBuildFile; fileRef = 9419FAE0934B4E98ABC0D26C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */; };
		B1B5FA46114F47C9B338DBFD /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp */ = {isa = PBXBuildFile; fileRef = 327BD098D98548E7988819A1 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp */; };
		B1B83109952C441597E6E39B /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */ = {isa = PBXBuildFile; fileRef = 28F4CC8AD45F4C3FBC5B9775 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */; };
		B1BEE952B8A849CB9CC7DFBB /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = 43C947F031E14CCDB9B1EA4D /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/all.hpp */; };
		B1D992F1ECEB4C9798A80E6F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */ = {isa = PBXBuildFile; fileRef = D6318C4CFE3E415285EC4A1B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */; };
		B1DEB13C03104E46AAC1B117 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.hpp */ = {isa = PBXBuildFile; fileRef = CC280486D159429CBABCE984 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.hpp */; };
		B1E42F5276E94E589D5E3DD0 /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.hpp */ = {isa = PBXBuildFile; fileRef = EC7EA256AC3F4F1D922C796B /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.hpp */; };
		B1E843C6D8FC46AA8170942F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */ = {isa = PBXBuildFile; fileRef = EE0BC8C396A444B989860C0C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */; };
		B1F6747B22DA40CAA89E952E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaform.hpp */ = {isa = PBXBuildFile; fileRef = AF17F6FE1AC943BDBB095E5B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaform.hpp */; };
		B1F6F1DA0BCD4ABEA3B3D90A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */ = {isa = PBXBuildFile; fileRef = 7627A40E642D4FCD92816E9B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */; };
		B20C53FE52E343FA89AB52EA /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomlosslatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = F858256C7AF544D8B8F47757 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomlosslatentmodel.hpp */; };
		B214F0370A004EBD93ED1AB3 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.hpp */ = {isa = PBXBuildFile; fileRef = D255C81650934E49AC01A0A8 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.hpp */; };
		B216CF9E12864DAFA7AE1CB3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.hpp */ = {isa = PBXBuildFile; fileRef = DDA7BAD99FD44A6DAECDD5F3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.hpp */; };
		B2186BD1E2214F90A31E3208 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */ = {isa = PBXBuildFile; fileRef = 7137928634FA489B899D896E /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */; };
		B227016D0EDF4FC482BF49AB /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 097A87976881441A9D0F20BC /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.hpp */; };
		B24654F337AB477CA2D4F357 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */ = {isa = PBXBuildFile; fileRef = 7EC3E0979E3C4B52967F8B82 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */; };
		B2579BCDD2A04E149CFAE0F7 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.hpp */ = {isa = PBXBuildFile; fileRef = 7D138A9AC75D484BABA540F7 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.hpp */; };
		B25BC4F14B744E0CB849BEC5 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewisefunction.hpp */ = {isa = PBXBuildFile; fileRef = 01E7517357694EE797DE9655 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewisefunction.hpp */; };
		B2720E98041D4A78ABEEC938 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */ = {isa = PBXBuildFile; fileRef = 9C49A9F48C464E93985FA263 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */; };
		B2871FA64C1043659C2A14A2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.hpp */ = {isa = PBXBuildFile; fileRef = F0EC821A79B840B198FC3535 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.hpp */; };
		B2880BC7D35F487BB2300D6D /* /Users/heiner/git/QuantLib/ql/experimental/credit/spreadedhazardratecurve.hpp */ = {isa = PBXBuildFile; fileRef = CC614E68900E4C2FBA6D5144 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spreadedhazardratecurve.hpp */; };
		B28A1316065342A595629B31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 0C9B86B7519C4DB599E25897 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp */; };
		B29F4D686D214A488338B0F8 /* /Users/heiner/git/QuantLib/ql/instruments/bond.hpp */ = {isa = PBXBuildFile; fileRef = 426241327858466B983AC9A9 /* /Users/heiner/git/QuantLib/ql/instruments/bond.hpp */; };
		B2C32A27E3814A8CBD6CA876 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.hpp */ = {isa = PBXBuildFile; fileRef = 65947FAB60384D829F042425 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.hpp */; };
		B2DAD242AA4A4B05ABB3D3DA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.hpp */ = {isa = PBXBuildFile; fileRef = 6EAD0323F83B4E61BB780A59 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.hpp */; };
		B2E3B2EE6CBE400B904E54E3 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.hpp */ = {isa = PBXBuildFile; fileRef = 0786A405ADB444D9BA31E377 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.hpp */; };
		B3036B62A250437E9246A421 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */ = {isa = PBXBuildFile; fileRef = 446872B3F9DD4165B578FD0A /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */; };
		B30BE06A574348739B872805 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.hpp */ = {isa = PBXBuildFile; fileRef = 83E50653C6014524BB456E65 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.hpp */; };
		B31166A2A65C41BEAA2A192F /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.hpp */ = {isa = PBXBuildFile; fileRef = 75B6FD9F5C7A44A9999FCC31 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.hpp */; };
		B3292B6047C94046AF011A41 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.hpp */ = {isa = PBXBuildFile; fileRef = 9CA214B9B1EF45F2A06B63C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.hpp */; };
		B32E26DA053E47308ACEB945 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/pricingperiod.hpp */ = {isa = PBXBuildFile; fileRef = FD62D91946594A7A9C005ECE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/pricingperiod.hpp */; };
		B330363F29C64DF7BD0121BB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.hpp */ = {isa = PBXBuildFile; fileRef = 95560CED36094D2998D088B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.hpp */; };
		B350021D9F2F4EBE8A61DC3B /* /Users/heiner/git/QuantLib/ql/math/statistics/gaussianstatistics.hpp */ = {isa = PBXBuildFile; fileRef = 40FEA2AFF4964E25B0F9D14D /* /Users/heiner/git/QuantLib/ql/math/statistics/gaussianstatistics.hpp */; };
		B36CA79FE2FD4A21B3586743 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = EECCEA3EF1104082B83CEEF8 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */; };
		B378E1E9B624464BACB8743C /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.hpp */ = {isa = PBXBuildFile; fileRef = 3A8DDF5D2EC947BE9A7B95C9 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.hpp */; };
		B3830A686D064BA0A8C4EFEA /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */ = {isa = PBXBuildFile; fileRef = 363B338E15D848929FACBA70 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */; };
		B386870174D8479FAA7074F9 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/montecarlomodel.hpp */ = {isa = PBXBuildFile; fileRef = 933669A4A4BD45838766946D /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/montecarlomodel.hpp */; };
		B3A0361515764C04A3EC45F6 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */ = {isa = PBXBuildFile; fileRef = E942C76A9A30418BAF4BFAB3 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */; };
		B3AF5FEB485F454EA1C0BFC2 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/all.hpp */ = {isa = PBXBuildFile; fileRef = 00334B34DB41479180383473 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/all.hpp */; };
		B3BE6CE9B26D4E77862BDD3A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp */ = {isa = PBXBuildFile; fileRef = 6117754E8BDD4E558F548983 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp */; };
		B3BEF32C1CFA4F80A432F96B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisemultiproduct.hpp */ = {isa = PBXBuildFile; fileRef = CC2D8B640E114521A2A7142E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisemultiproduct.hpp */; };
		B3BFE64F5BE440998FFCABEC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/all.hpp */ = {isa = PBXBuildFile; fileRef = A137354145DF45E4A232F46B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/all.hpp */; };
		B3C4A4D495A6423F9238E40B /* /Users/heiner/git/QuantLib/test-suite/tracing.cpp */ = {isa = PBXBuildFile; fileRef = 2E7DC188EF5741DAB0FEFD07 /* /Users/heiner/git/QuantLib/test-suite/tracing.cpp */; };
		B3CB297671AB478E9EF2A170 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.hpp */ = {isa = PBXBuildFile; fileRef = 86FEDA313A5541219186183D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.hpp */; };
		B3CC64BDF9E8480DBBCB584A /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */ = {isa = PBXBuildFile; fileRef = 20596AA7CA004127AFFEB12E /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */; };
		B3D2B1119C2B4838A58C3DBA /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */ = {isa = PBXBuildFile; fileRef = 15AA8550DB314587A42A47AB /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */; };
		B3EF1A3D74524768B10D4CF3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */ = {isa = PBXBuildFile; fileRef = 9068A72ED3CE411BB2D5B29F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */; };
		B3EFFDC8C15741EC926A5B83 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp */ = {isa = PBXBuildFile; fileRef = F25D78948D0547D68D754ADC /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp */; };
		B3F0FAFA6A994CA9B9D24D29 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/all.hpp */ = {isa = PBXBuildFile; fileRef = 42889CBFDE394F48BDACD945 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/all.hpp */; };
		B3FD8F267135498AB16F371F /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */ = {isa = PBXBuildFile; fileRef = C78BCF16190F435784BBA616 /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */; };
		B41B9D1D2FBA4AC296CEE93E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/mctraits.hpp */ = {isa = PBXBuildFile; fileRef = 24C90E22B2074DF6969BA255 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/mctraits.hpp */; };
		B420E6CB21824992BC595267 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.hpp */ = {isa = PBXBuildFile; fileRef = EC9BB6D7E4B54A17AE1B8AEB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.hpp */; };
		B43D1EA141B54382B57EFEAD /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.hpp */ = {isa = PBXBuildFile; fileRef = 3B8E19C55E4A40648E721544 /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.hpp */; };
		B44F47DE01E44812B89248C3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/all.hpp */ = {isa = PBXBuildFile; fileRef = C858008CA65243A5A1CF84CF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/all.hpp */; };
		B4672CAD0F2B4FF78B19DD0B /* /Users/heiner/git/QuantLib/ql/types.hpp */ = {isa = PBXBuildFile; fileRef = E739D98C0DC24333AA7CAA9F /* /Users/heiner/git/QuantLib/ql/types.hpp */; };
		B4686CC7E9894380B6BF02F4 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.hpp */ = {isa = PBXBuildFile; fileRef = E098DF0433044C8CBCF77CE8 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.hpp */; };
		B47D495F20EB48E7AF8CDABF /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */ = {isa = PBXBuildFile; fileRef = 841D631217FC485EA7D3FD1B /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */; };
		B486ACA2A0E14639A6F62F92 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = C21B23D8DC5F4199B28AD58B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */; };
		B494A1ACEE2941D2BA944876 /* /Users/heiner/git/QuantLib/ql/config.msvc.hpp */ = {isa = PBXBuildFile; fileRef = 2603CEA4AD744AAFB63CD2C6 /* /Users/heiner/git/QuantLib/ql/config.msvc.hpp */; };
		B4D86CA85E2841CFAADFAEA0 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.hpp */ = {isa = PBXBuildFile; fileRef = 4DDF08643F2244EE8BA263BD /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.hpp */; };
		B4DC17DDC1234283B73B80B1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatorfactory.hpp */ = {isa = PBXBuildFile; fileRef = A95C52381C78405588226578 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatorfactory.hpp */; };
		B4DCD8DFDC5C48339398FB8C /* /Users/heiner/git/QuantLib/ql/termstructures/credit/probabilitytraits.hpp */ = {isa = PBXBuildFile; fileRef = 6D3DF95EB98E4A04B9AB503A /* /Users/heiner/git/QuantLib/ql/termstructures/credit/probabilitytraits.hpp */; };
		B4E1FED417484F34B90E7AFF /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */ = {isa = PBXBuildFile; fileRef = 440DE69B80654E739D63D84C /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */; };
		B4F741F97A484E83A4FFA6D3 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp */ = {isa = PBXBuildFile; fileRef = BDBA9E6A046C487CBE26FB76 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp */; };
		B508EC643CFF43E898B36F74 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */ = {isa = PBXBuildFile; fileRef = E1CE1724D7E54A94B089D6A9 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */; };
		B56A74E4ED5149F9BCAFCCD7 /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.hpp */ = {isa = PBXBuildFile; fileRef = 582452318D24487FBD7A2F66 /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.hpp */; };
		B56B260948BA4BE5B59CC37B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.hpp */ = {isa = PBXBuildFile; fileRef = 36623341F68F4F74A77CBEA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.hpp */; };
		B58CFA692189476B8A583FDC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp */ = {isa = PBXBuildFile; fileRef = CA88A2A5A29D4E678FE5FF5E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp */; };
		B58E06BFADA84155BECFA621 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.hpp */ = {isa = PBXBuildFile; fileRef = E021CFFC8DC54719BB43B3EB /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.hpp */; };
		B596953BC134467F90A9D487 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/all.hpp */ = {isa = PBXBuildFile; fileRef = D17068B72BC44F7982B33ED8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/all.hpp */; };
		B5BF8720CC1541D1938DA52F /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/all.hpp */ = {isa = PBXBuildFile; fileRef = 2D66929F0BE04DECB6DDD604 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/all.hpp */; };
		B5C24BD7D0104985981A7B18 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */ = {isa = PBXBuildFile; fileRef = 6975C72CF0F14739B6CB8692 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */; };
		B5D1BEBB50294D59A226EE2A /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.hpp */ = {isa = PBXBuildFile; fileRef = 8A92F57473E84302B40AAB55 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.hpp */; };
		B5D25A65AA3B470692C862F5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 88316A3B0D9E423AB6B676F6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */; };
		B5D2B84C1E2345D987E48A3A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/all.hpp */ = {isa = PBXBuildFile; fileRef = F7D2800C780542EA85B3F5EE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/all.hpp */; };
		B5E6FF4F55CF4CD1A768A2F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp */ = {isa = PBXBuildFile; fileRef = 71A484A517F84F00B35A3834 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp */; };
		B5F8F5865D964C28A2ECB7AC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */ = {isa = PBXBuildFile; fileRef = 80CC7BB7C92A4FB08413BDDC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */; };
		B5FA7608814E4EED8A82EB78 /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */ = {isa = PBXBuildFile; fileRef = 61EEE7033A544139A2587418 /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */; };
		B602ACFBE2154DBD844552C5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/binomialengine.hpp */ = {isa = PBXBuildFile; fileRef = 421FECA56D0B415D979BC16D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/binomialengine.hpp */; };
		B60F8470469848088BFDBCE7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */ = {isa = PBXBuildFile; fileRef = 5F41D2DB50F44C83BFB05F40 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */; };
		B61B82FE0B9B4719B6C63CF1 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */ = {isa = PBXBuildFile; fileRef = 0D3A1E7F3BB64EBF821B5662 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */; };
		B633E579BB654137B591AEBE /* /Users/heiner/git/QuantLib/ql/math/quadratic.hpp */ = {isa = PBXBuildFile; fileRef = 51DCDF5258294375B38853D9 /* /Users/heiner/git/QuantLib/ql/math/quadratic.hpp */; };
		B6402A35747540B6B106A41F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp */ = {isa = PBXBuildFile; fileRef = DB70C5DC74974B929DB585B4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp */; };
		B64E441AF46F45DFA7446015 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.hpp */ = {isa = PBXBuildFile; fileRef = 541A4BF4DA4C43D69A8F87FA /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.hpp */; };
		B653FA4F24DB4DC294540170 /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.hpp */ = {isa = PBXBuildFile; fileRef = E3E56377F4F14344950DD04B /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.hpp */; };
		B668F6523CC849A7A13249E3 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */ = {isa = PBXBuildFile; fileRef = A83E5A30C1BC4568A6E8CC0B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */; };
		B674880C82D2440B86A396D1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localconstantvol.hpp */ = {isa = PBXBuildFile; fileRef = 0DCF4F24BC5C4C2C8CEFB94D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localconstantvol.hpp */; };
		B676D06D515B4BF8BE77AA15 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */ = {isa = PBXBuildFile; fileRef = B22C94CC3910494AAD7E9A08 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */; };
		B68E7E621C0F4C8E860393C9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 5375DE18BFD642BEB3653246 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */; };
		B6A2B6B0C7AC4AA88537F201 /* /Users/heiner/git/QuantLib/test-suite/markovfunctional.hpp */ = {isa = PBXBuildFile; fileRef = 2C18E01C93C94F019F60C760 /* /Users/heiner/git/QuantLib/test-suite/markovfunctional.hpp */; };
		B6B279B56D8342ADA34EE45B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */ = {isa = PBXBuildFile; fileRef = 6E5D74E5FFD940449B5F5440 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */; };
		B6BAE179A651403683CA70A6 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitymatrix.cpp */ = {isa = PBXBuildFile; fileRef = D44D2B49A1124F23A09A4A99 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitymatrix.cpp */; };
		B6BB0A3576CC438D94F0B05D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.hpp */ = {isa = PBXBuildFile; fileRef = EEC894FD8A7542E0A0DFB7D9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.hpp */; };
		B6BE8DEB6EBB4C4B80E70D5A /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */ = {isa = PBXBuildFile; fileRef = 1E21CB3C637A4405A77B537C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */; };
		B6C271480AB744D4B9B06E1A /* /Users/heiner/git/QuantLib/ql/time/daycounters/one.hpp */ = {isa = PBXBuildFile; fileRef = B3429F3FF99C4E81B4D33399 /* /Users/heiner/git/QuantLib/ql/time/daycounters/one.hpp */; };
		B6D0DA7B09064CC39D3C0D9C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp */ = {isa = PBXBuildFile; fileRef = C158E16275794D7A8913C1C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp */; };
		B6D2323EBCC94AE59097A90F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 72F12B6B452A4C29A5EAC94E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */; };
		B6F573A295CC453AB1BD33F8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp */ = {isa = PBXBuildFile; fileRef = EA11E71ED2174A71B0AC034B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp */; };
		B71EB8A245CF4C8DB5CD3203 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 62388503D5984168B3DFC1E0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */; };
		B72F7683CF6D4464AD36867A /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardspreadedtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 8015F3AB65C24791812B13D8 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardspreadedtermstructure.hpp */; };
		B734C0DEC7E9457AB27A4045 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp */ = {isa = PBXBuildFile; fileRef = 88B9981154E04292AA66897C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp */; };
		B73FA5F177DB4945BAEFD72B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.hpp */ = {isa = PBXBuildFile; fileRef = E134DAF1B3474CC5BDBCC43C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.hpp */; };
		B74961D728DC4F7E9DEB70AA /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */ = {isa = PBXBuildFile; fileRef = 0A28AE6FB6F74A5182471786 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */; };
		B76F79EEFF4841B0A017546A /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.hpp */ = {isa = PBXBuildFile; fileRef = A3EABA2643A24A42A08A20EA /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.hpp */; };
		B7720835985F42EC86785E55 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/finitedifferencenewtonsafe.hpp */ = {isa = PBXBuildFile; fileRef = 5D5CC20A22B04BA18E37DD77 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/finitedifferencenewtonsafe.hpp */; };
		B791CA9E7A3447D18ED9D8FB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/volatilitytype.hpp */ = {isa = PBXBuildFile; fileRef = 4A06824B1BC64E21B2320219 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/volatilitytype.hpp */; };
		B7A8C0D48A6A4D0BA5A1F357 /* /Users/heiner/git/QuantLib/ql/prices.cpp */ = {isa = PBXBuildFile; fileRef = 7375DF317D7B4B10A5B2FEBA /* /Users/heiner/git/QuantLib/ql/prices.cpp */; };
		B7D04B6E90234D77A02743C4 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */ = {isa = PBXBuildFile; fileRef = 71DB6A2816BF4F6EADDEB248 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */; };
		B7EA602411534925A102C909 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */ = {isa = PBXBuildFile; fileRef = FD4BC3F2E89F41FFBEB2345C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */; };
		B812A86BA9A644AD9EF9AF9B /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletcalibration.hpp */ = {isa = PBXBuildFile; fileRef = 9FC7AFF0EB46446599D6B1B7 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletcalibration.hpp */; };
		B813265887F94C528C06CE5C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.hpp */ = {isa = PBXBuildFile; fileRef = 3F209E6373FD4A3195ED1B02 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.hpp */; };
		B81428D214B9479C8D335D89 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */ = {isa = PBXBuildFile; fileRef = D0AE37D984D1457A9B0C0AD6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */; };
		B820041BA1484168B4FB077C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 3D4781333FB44D2898B7154B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.hpp */; };
		B848D6EEED564BDE9B9A1967 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */ = {isa = PBXBuildFile; fileRef = CF2545A861B342F48483829C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */; };
		B849455A43EF437F965C4E89 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = BA497A62E0594F15B0300598 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */; };
		B84CE635B22F4D918AA9F1DD /* /Users/heiner/git/QuantLib/ql/currency.hpp */ = {isa = PBXBuildFile; fileRef = ADC8962152B34362B4058F07 /* /Users/heiner/git/QuantLib/ql/currency.hpp */; };
		B85B1840CDDB410F835D2F5D /* /Users/heiner/git/QuantLib/ql/currencies/africa.hpp */ = {isa = PBXBuildFile; fileRef = 1F3E2AE3A6E0424E901FD9A6 /* /Users/heiner/git/QuantLib/ql/currencies/africa.hpp */; };
		B86A194D58B440B393550072 /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */ = {isa = PBXBuildFile; fileRef = F11B550894424D4085F15DFB /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */; };
		B86BE318AC7543BFBF6BB84C /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.hpp */ = {isa = PBXBuildFile; fileRef = D8A60C65E6C54331A8450AEB /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.hpp */; };
		B89A49793D3149A89A244310 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = 6224A3CEDA5C4B58B33D68AE /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */; };
		B8B8CC7576534C0FAC1B0D75 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = BBC22BACABBF43A6AA998B31 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.hpp */; };
		B8C6286C073843F082B494FE /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.hpp */ = {isa = PBXBuildFile; fileRef = 13D0C8B3AF0D43AF9671C16B /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.hpp */; };
		B8C8472DF9DC4761AC78AA7F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */ = {isa = PBXBuildFile; fileRef = E7118F7BBF0A4297BD7EB5A6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */; };
		B8CAB736F60E4998A9801EDD /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */ = {isa = PBXBuildFile; fileRef = 9EF28D186508446393D2CB62 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */; };
		B8EB1532586B4EAD8000FE25 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */ = {isa = PBXBuildFile; fileRef = 8F2C0D0C2E6B4D82A5DEBF98 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */; };
		B8ECD686F4D041289BD0E70C /* /Users/heiner/git/QuantLib/ql/cashflow.hpp */ = {isa = PBXBuildFile; fileRef = 76DF11C47B2F4D56A92790FD /* /Users/heiner/git/QuantLib/ql/cashflow.hpp */; };
		B9155658A016485F8C222C60 /* /Users/heiner/git/QuantLib/ql/math/statistics/riskstatistics.hpp */ = {isa = PBXBuildFile; fileRef = 39EBF0242D6543EB8B9C4850 /* /Users/heiner/git/QuantLib/ql/math/statistics/riskstatistics.hpp */; };
		B91F2B9A12694F9CB8A481DB /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = FBFCDB2AF3394A7DA95A1646 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatinterpolation.hpp */; };
		B93C041C3368418C861CC414 /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */ = {isa = PBXBuildFile; fileRef = 66A3E04836C449E6A13376EA /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */; };
		B958567AC344476FBB081B3E /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardspreadedtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 775DB70BF6FD4E72B23113E3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardspreadedtermstructure.hpp */; };
		B9639D0D5B5349189747D028 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */ = {isa = PBXBuildFile; fileRef = 95DDBBFCFD3F4FA099EA63EC /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */; };
		B9738AA07AC0490BBA4D6E98 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp */ = {isa = PBXBuildFile; fileRef = F91AC6258071491FB240D1D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp */; };
		B9775A6A81DD4AC783B56EA7 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/genericindexes.hpp */ = {isa = PBXBuildFile; fileRef = 1C6B7D16662F4B5B94509D9A /* /Users/heiner/git/QuantLib/ql/experimental/inflation/genericindexes.hpp */; };
		B984D4602C5F470596C09AAB /* /Users/heiner/git/QuantLib/ql/termstructures/interpolatedcurve.hpp */ = {isa = PBXBuildFile; fileRef = 029322324E834A8BA6CB84A9 /* /Users/heiner/git/QuantLib/ql/termstructures/interpolatedcurve.hpp */; };
		B9867E8C90D4463C827EC942 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp */ = {isa = PBXBuildFile; fileRef = 8702C2FCEB09472D95BEA409 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp */; };
		B9DBDB2EA0804F168CD0609F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp */ = {isa = PBXBuildFile; fileRef = 8403472BDDF14B11AE64096B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp */; };
		B9E878AAE8E4469FBCD92714 /* /Users/heiner/git/QuantLib/ql/instruments/swap.hpp */ = {isa = PBXBuildFile; fileRef = 25FAEDD96E1E4C298C4391D6 /* /Users/heiner/git/QuantLib/ql/instruments/swap.hpp */; };
		BA016941F24F4D00A3BB1001 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.hpp */ = {isa = PBXBuildFile; fileRef = A5AFED4145CE46A5A837E33D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.hpp */; };
		BA0EB8DC6EC542C4842A3ED3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 9F34AB39A69E428599FA3100 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp */; };
		BA114375293642ABAE8B670E /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */ = {isa = PBXBuildFile; fileRef = 2DDFFB6488BA4A3C841F36A3 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */; };
		BA1A8F7FEBBC4657BFE726D5 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */ = {isa = PBXBuildFile; fileRef = DA212D12CC75489F8BA6145A /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */; };
		BA250BC84C6441108EA0848B /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */ = {isa = PBXBuildFile; fileRef = BA394D48A06343BBA140BA31 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */; };
		BA462FE5CE1F4C208F3F773C /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */ = {isa = PBXBuildFile; fileRef = 6F77AEACE4F145E5818D7134 /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */; };
		BA4F50C4D4EE4B51820E7ED0 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */ = {isa = PBXBuildFile; fileRef = 216CA42761D34C4D9C74B6A4 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */; };
		BA596FBCA6254AD3A1C41FEF /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.hpp */ = {isa = PBXBuildFile; fileRef = 33577D7A56C04BF78065BB68 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.hpp */; };
		BA81FD3BA008451BB1F0C33B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp */ = {isa = PBXBuildFile; fileRef = 7BB20559F7584AAB892E03C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp */; };
		BA82A0D8C460436596E11186 /* /Users/heiner/git/QuantLib/ql/termstructures/all.hpp */ = {isa = PBXBuildFile; fileRef = 14C72B60AEEB4A88AA1D9576 /* /Users/heiner/git/QuantLib/ql/termstructures/all.hpp */; };
		BA8F5A9CFBB5495AB512BF73 /* /Users/heiner/git/QuantLib/test-suite/compoundoption.cpp */ = {isa = PBXBuildFile; fileRef = 0BA1F903974F4ABAB91DC565 /* /Users/heiner/git/QuantLib/test-suite/compoundoption.cpp */; };
		BABA1F4557624A6A97020D03 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */ = {isa = PBXBuildFile; fileRef = 46A068C5F76D491896E2A82B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */; };
		BAC7A81316E748FAAD4B56CC /* /Users/heiner/git/QuantLib/test-suite/piecewiseyieldcurve.hpp */ = {isa = PBXBuildFile; fileRef = 1120617299F04DC0B087FD09 /* /Users/heiner/git/QuantLib/test-suite/piecewiseyieldcurve.hpp */; };
		BAC9DDA8FFAA4E88A86FE8C4 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.hpp */ = {isa = PBXBuildFile; fileRef = 445D6BAA886347A9B0FAFF66 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.hpp */; };
		BAF66496B76E40FBA8C925A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */ = {isa = PBXBuildFile; fileRef = D5DE58C101FB48A186A631B4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */; };
		BB17C3B4AAD942D39DA97C0D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */ = {isa = PBXBuildFile; fileRef = 6A5BC28AAF5A488C8A71A397 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */; };
		BB1B916DD74D49549DCB06DC /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */ = {isa = PBXBuildFile; fileRef = FF2C6A3F962442CAB31D1A43 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */; };
		BB56EC8CDB644321B321A9B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = D25C8C1146D046688B39932B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp */; };
		BB5AC7E38C5E45FE9A254F69 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp */ = {isa = PBXBuildFile; fileRef = CFE7B78BF1AB40E38E8C2F6D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp */; };
		BB5CE238E4AC4524B4AD0B6F /* /Users/heiner/git/QuantLib/test-suite/fastfouriertransform.cpp */ = {isa = PBXBuildFile; fileRef = 2469D118A5A244C7AC45F9C7 /* /Users/heiner/git/QuantLib/test-suite/fastfouriertransform.cpp */; };
		BB5F21496376461390B93B74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */ = {isa = PBXBuildFile; fileRef = E5B0360DA5B347F498CE1D50 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */; };
		BB66B3371D624735AB49F939 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */ = {isa = PBXBuildFile; fileRef = 55F388F18860463D84E2C654 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */; };
		BB6DD10FB2DD4ACC98D2F09B /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */ = {isa = PBXBuildFile; fileRef = 89A6C64D2FB149A9B55E9880 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */; };
		BB7EBD7A0032452E804F088A /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp */ = {isa = PBXBuildFile; fileRef = 63E20E60D3F347D694FA28BB /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp */; };
		BB822B52A8E6429DA57EA0B4 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jibar.hpp */ = {isa = PBXBuildFile; fileRef = 03E1A5AC46B84F1289CCA625 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jibar.hpp */; };
		BB88B4C46AF549538D8FA38F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp */ = {isa = PBXBuildFile; fileRef = 289C55D86CB64F19863ADC8B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp */; };
		BB8BB71F64254E6CA2B5FEC1 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.hpp */ = {isa = PBXBuildFile; fileRef = D6C6A6BA4B8442E3B8A71D6B /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.hpp */; };
		BBA2C17668434AE1B5B49DD3 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.hpp */ = {isa = PBXBuildFile; fileRef = ACC78179E4E049F7B0F66548 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.hpp */; };
		BBAC493C0CBE437BBE88634F /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */ = {isa = PBXBuildFile; fileRef = 1240B4E5DE5A406D81F5BE4F /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */; };
		BBB67C7643E443559417A287 /* /Users/heiner/git/QuantLib/ql/experimental/credit/homogeneouspooldef.hpp */ = {isa = PBXBuildFile; fileRef = 7D6A59C4B4BC4466AFD73E6B /* /Users/heiner/git/QuantLib/ql/experimental/credit/homogeneouspooldef.hpp */; };
		BBB872DBF0BF4549843BFA0C /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */ = {isa = PBXBuildFile; fileRef = 4FFEC83EAEA34FE39C833982 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */; };
		BBD4014C967540849D411C82 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.hpp */ = {isa = PBXBuildFile; fileRef = 228FCAED1F154A399EE96223 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.hpp */; };
		BBE7DEF38A044DE183291086 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */ = {isa = PBXBuildFile; fileRef = EB8D9653A71D4D1896635818 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */; };
		BBF5B378ECAE4C9EA6D46F6A /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.hpp */ = {isa = PBXBuildFile; fileRef = 537BEE69784D4F268D1635A9 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.hpp */; };
		BC0956B7DCB94764874919FE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */ = {isa = PBXBuildFile; fileRef = AA46E699D82440F382224253 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */; };
		BC5524DEAFF24C9A8C18C303 /* /Users/heiner/git/QuantLib/ql/experimental/risk/all.hpp */ = {isa = PBXBuildFile; fileRef = 0142420D2C2C4DC4981861E9 /* /Users/heiner/git/QuantLib/ql/experimental/risk/all.hpp */; };
		BC66ECA4C04B4CF59F290890 /* /Users/heiner/git/QuantLib/test-suite/interpolations.hpp */ = {isa = PBXBuildFile; fileRef = 93D79CCD95CB474FB4ED1283 /* /Users/heiner/git/QuantLib/test-suite/interpolations.hpp */; };
		BC7989F473524DACB3B7C553 /* /Users/heiner/git/QuantLib/test-suite/normalclvmodel.cpp */ = {isa = PBXBuildFile; fileRef = 557BE6E7F9564498912B04D5 /* /Users/heiner/git/QuantLib/test-suite/normalclvmodel.cpp */; };
		BC7BC3637B9F42EEA189819F /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */ = {isa = PBXBuildFile; fileRef = 68108F556CB3471FBCDE9DC5 /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */; };
		BC9D04C473B4449BA3C6AB31 /* /Users/heiner/git/QuantLib/ql/instruments/stock.hpp */ = {isa = PBXBuildFile; fileRef = C6001021A5174D93ACBEB552 /* /Users/heiner/git/QuantLib/ql/instruments/stock.hpp */; };
		BCA4BACBF45342D39B7EF8CF /* /Users/heiner/git/QuantLib/test-suite/curvestates.cpp */ = {isa = PBXBuildFile; fileRef = EF91077BE69049C094EECA31 /* /Users/heiner/git/QuantLib/test-suite/curvestates.cpp */; };
		BCB69D6F58C343728B1B2EDA /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */ = {isa = PBXBuildFile; fileRef = 2BF78E76A38C45C99E446A39 /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */; };
		BCCD4253977B46EFA504F5A0 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.hpp */ = {isa = PBXBuildFile; fileRef = 8718904EFD00406A807F9672 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.hpp */; };
		BCCDA894A471428B80D74854 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/all.hpp */ = {isa = PBXBuildFile; fileRef = 59CEC9D6610940AEAF26147E /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/all.hpp */; };
		BCDA16566E324B1CA4793F11 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdamericanengine.hpp */ = {isa = PBXBuildFile; fileRef = 82FD57C228B64CC48C0779AE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdamericanengine.hpp */; };
		BD02F1A28ABF4D30BFB919E9 /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */ = {isa = PBXBuildFile; fileRef = E0C8C68A64AF4099B2258DAC /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */; };
		BD12336909A04BF3A46348CB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.hpp */ = {isa = PBXBuildFile; fileRef = CE519827D7B04C44BC8C5289 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.hpp */; };
		BD18DC4549B44E739CB5FF4A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */ = {isa = PBXBuildFile; fileRef = 3FAAF21ABDF74334A03C8ADD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */; };
		BD19547BAD57423CAEF7825E /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 6D0FB2D55E1B420CB242329A /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation.hpp */; };
		BD1AD71FBADC429B8F7534D1 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */ = {isa = PBXBuildFile; fileRef = 62527E44BA394DB8B05B705A /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */; };
		BD1C5C4D84C94555A5B7B7B6 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/tflattice.hpp */ = {isa = PBXBuildFile; fileRef = 9F02503CFC6D465D94F806D5 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/tflattice.hpp */; };
		BD22AE2679054C66BB37E7B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdeuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = 15D77F067E7E409D8CC5FD47 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdeuropeanengine.hpp */; };
		BD272BBB260D4BF39A477D3E /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.hpp */ = {isa = PBXBuildFile; fileRef = AF133D2B4C364D9A92D8D628 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.hpp */; };
		BD313D4EE1FD4C7C85D20160 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.hpp */ = {isa = PBXBuildFile; fileRef = D26E1F04B62946E98B810825 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.hpp */; };
		BD360BF1637A43DEAAB7AAED /* /Users/heiner/git/QuantLib/Examples/Bonds/Bonds.cpp */ = {isa = PBXBuildFile; fileRef = 1B28043E50704478BE655A71 /* /Users/heiner/git/QuantLib/Examples/Bonds/Bonds.cpp */; };
		BD36D2D976AC44278BB1CC92 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */ = {isa = PBXBuildFile; fileRef = 1DF2B180629C4B1C9F331082 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */; };
		BD62DBBDA2E744648838AD22 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */ = {isa = PBXBuildFile; fileRef = 11E925DEC5FF40FA84ADACF8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */; };
		BD69760FAED2409FA2776AD3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */ = {isa = PBXBuildFile; fileRef = 6198F95F407445FEBA6F84AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */; };
		BD766D7E7604426FBC9E26D6 /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.hpp */ = {isa = PBXBuildFile; fileRef = 2E32A8C06DB94A9F8BE67CFC /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.hpp */; };
		BD7D387C820F420EACC8FC38 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */ = {isa = PBXBuildFile; fileRef = 14E49C007F2041E0B7419A3A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */; };
		BD84FE0025B14D858CDB6E92 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */ = {isa = PBXBuildFile; fileRef = 42EC522D4410422AAFD3E820 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */; };
		BD93E31EE3D649D0B6471893 /* /Users/heiner/git/QuantLib/test-suite/bonds.cpp */ = {isa = PBXBuildFile; fileRef = 1E24CD04416E42919F0CEDDF /* /Users/heiner/git/QuantLib/test-suite/bonds.cpp */; };
		BDA84815342648ADBCB72C67 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.hpp */ = {isa = PBXBuildFile; fileRef = 94415D00F71741AC831F6086 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.hpp */; };
		BDB25241E2D449ADB9B4B9B6 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */ = {isa = PBXBuildFile; fileRef = 64F8D32A248D4477BD754623 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */; };
		BDBFD196D50744BB80F4FDE9 /* /Users/heiner/git/QuantLib/ql/experimental/all.hpp */ = {isa = PBXBuildFile; fileRef = 831074BE34F0457F8C34FAF0 /* /Users/heiner/git/QuantLib/ql/experimental/all.hpp */; };
		BDC6F30AAB634639AB45B057 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.hpp */ = {isa = PBXBuildFile; fileRef = DBA37B2A815A441DB4F8C755 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.hpp */; };
		BDDCC9BEE9C14D90B7363787 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcaplethomocalibration.hpp */ = {isa = PBXBuildFile; fileRef = 29284C9337794CEBA1BCC4F2 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcaplethomocalibration.hpp */; };
		BDF3138F6BC54ECBA56457A1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.hpp */ = {isa = PBXBuildFile; fileRef = 46A4930A53F1467AB61863D6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.hpp */; };
		BDF31BFB79AF4948A4B15098 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */ = {isa = PBXBuildFile; fileRef = E84852B79F63477F8EB3ABAE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */; };
		BDFE793225EA447E9CAC2D4D /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.hpp */ = {isa = PBXBuildFile; fileRef = AE8741D349294CA6A240D207 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.hpp */; };
		BE005F955B304666BDF3BD37 /* /Users/heiner/git/QuantLib/ql/math/integrals/twodimensionalintegral.hpp */ = {isa = PBXBuildFile; fileRef = F1328A9FB52049FC81F647C3 /* /Users/heiner/git/QuantLib/ql/math/integrals/twodimensionalintegral.hpp */; };
		BE090F79D5C34D0B92508B45 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */ = {isa = PBXBuildFile; fileRef = ADCEABE53B4348878E5578ED /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */; };
		BE12FE8414E34421AA0CD9D1 /* /Users/heiner/git/QuantLib/ql/instruments/callabilityschedule.hpp */ = {isa = PBXBuildFile; fileRef = 5E95CBC756F847289E3E31D1 /* /Users/heiner/git/QuantLib/ql/instruments/callabilityschedule.hpp */; };
		BE3891E08C8249359DB346CA /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.hpp */ = {isa = PBXBuildFile; fileRef = 33E208C8B1234D3E9ABCBF57 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.hpp */; };
		BE47C9982C6A45069F8E7BD6 /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.hpp */ = {isa = PBXBuildFile; fileRef = 1F77C0781D0A4B228E347217 /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.hpp */; };
		BE58A76316564759BD9AF00E /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathpayoff.hpp */ = {isa = PBXBuildFile; fileRef = 989F047C7BF94FCDAC7D37DC /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathpayoff.hpp */; };
		BE63FFC4D9FB46B3BA87B9F1 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.hpp */ = {isa = PBXBuildFile; fileRef = 2EC1D0E2A2FD49169C7B96CB /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.hpp */; };
		BE679DAA1B714552898EFD9D /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */ = {isa = PBXBuildFile; fileRef = 9BA2F7CC64A14FDB970DF0E3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */; };
		BE6C48F7FF6449B4A76AD89C /* /Users/heiner/git/QuantLib/ql/math/all.hpp */ = {isa = PBXBuildFile; fileRef = B6F895E42B844785BE26248F /* /Users/heiner/git/QuantLib/ql/math/all.hpp */; };
		BE7387DE1077423EB4EA96EB /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.hpp */ = {isa = PBXBuildFile; fileRef = 8DB1C749F61040D4814C8496 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.hpp */; };
		BEA41FB27D744E8EA4B4C2FE /* /Users/heiner/git/QuantLib/test-suite/exchangerate.cpp */ = {isa = PBXBuildFile; fileRef = 2D4D849160D74F6AA216BC36 /* /Users/heiner/git/QuantLib/test-suite/exchangerate.cpp */; };
		BEA606791DA342FE868C456B /* /Users/heiner/git/QuantLib/ql/math/optimization/method.hpp */ = {isa = PBXBuildFile; fileRef = 76CC76BEA90949A1AD4FC575 /* /Users/heiner/git/QuantLib/ql/math/optimization/method.hpp */; };
		BEA89928A5ED49448DFC8467 /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */ = {isa = PBXBuildFile; fileRef = 433F8C7AB53142E7BFD152A9 /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */; };
		BEC2031D4A0C45FA93CAD09E /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = AA560E0A347644ACBF5E48D3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp */; };
		BECDAAF68A45492193939DD2 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.hpp */ = {isa = PBXBuildFile; fileRef = DA6C2A3B3F9A49DC830CDCFF /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.hpp */; };
		BECDF86CDEED4167B204E7E5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/all.hpp */ = {isa = PBXBuildFile; fileRef = 89185BC4FE954623B6C15293 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/all.hpp */; };
		BEF9D36C4A4A432FB335D51A /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.hpp */ = {isa = PBXBuildFile; fileRef = 3C8BB98FF403459B8ACA4134 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.hpp */; };
		BF0D39CC780946DC88FC190C /* /Users/heiner/git/QuantLib/ql/termstructures/yield/discountcurve.hpp */ = {isa = PBXBuildFile; fileRef = 321FD7A254FF4C15A58895D7 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/discountcurve.hpp */; };
		BF0F4DD05A6448ECB856F619 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.hpp */ = {isa = PBXBuildFile; fileRef = E3EBC928E9B4467699AE4214 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.hpp */; };
		BF224C27B4794941920FF2CD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp */ = {isa = PBXBuildFile; fileRef = CC7EC90E51174E7B91304BFA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp */; };
		BF25940F015D4A42BC7A1179 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.hpp */ = {isa = PBXBuildFile; fileRef = 46AB81EE212341A99261B2EF /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.hpp */; };
		BF2ADA17A0BD405E83E3D331 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */ = {isa = PBXBuildFile; fileRef = 28061BBC010C4000BECA0604 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */; };
		BF3080F119D6480A98E4AF93 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.hpp */ = {isa = PBXBuildFile; fileRef = AC9EE13790B546268241AE36 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.hpp */; };
		BF4EA66CFF8D4BFDADA54D53 /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */ = {isa = PBXBuildFile; fileRef = 477C02FC26E4421FB6914DF4 /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */; };
		BF5197B6049F4BA6824E2399 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp */ = {isa = PBXBuildFile; fileRef = 1DD68E1ED46E4A01823AFB90 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp */; };
		BF5B0EA31DA742EC81A8EC17 /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.hpp */ = {isa = PBXBuildFile; fileRef = AAE0242B7312464A928E39AA /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.hpp */; };
		BF655634276D43D98C6DFC8F /* /Users/heiner/git/QuantLib/ql/time/schedule.hpp */ = {isa = PBXBuildFile; fileRef = 60527BF369D9414EB7D79D90 /* /Users/heiner/git/QuantLib/ql/time/schedule.hpp */; };
		BF6FD02CD3A54BF797C59455 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */ = {isa = PBXBuildFile; fileRef = C713E5D7B9AF485F8DA983F0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */; };
		BF70520393554AAA848209C5 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.hpp */ = {isa = PBXBuildFile; fileRef = 22A5AE50CA8749B8926A5B59 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.hpp */; };
		BF707C9FCFA8437CA51DC7B5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp */ = {isa = PBXBuildFile; fileRef = 39C6DA8CFB854F7392297E3B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp */; };
		BF91FDE9C4DC46B3BDF30E65 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.hpp */ = {isa = PBXBuildFile; fileRef = A56E95CA204344BCA0244F2E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.hpp */; };
		BF9E46244AAB49D782B0F71B /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/quantoengine.hpp */ = {isa = PBXBuildFile; fileRef = C7736EB25DD74FDEA63B117F /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/quantoengine.hpp */; };
		BF9F7F43E86641EE90C85BCD /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */ = {isa = PBXBuildFile; fileRef = C8018946E6D343DB985B948E /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */; };
		BFA534655E044B95A47EDE40 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */ = {isa = PBXBuildFile; fileRef = CC3E1FA31FE24BCA834A6D06 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */; };
		BFAD80BD062C4B88806C85A1 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.hpp */ = {isa = PBXBuildFile; fileRef = 4B96FBD38BF94B3E81C1AB59 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.hpp */; };
		BFD5CDAB699947B297CB8141 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/ranluxuniformrng.hpp */ = {isa = PBXBuildFile; fileRef = 0B9C8A6395D64D7882797D53 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/ranluxuniformrng.hpp */; };
		BFDF7D5E8A19432A90CEF1E9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.hpp */ = {isa = PBXBuildFile; fileRef = AFB0955304B84A648412DDBB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.hpp */; };
		BFFFADBD29714A60B1ECC0B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.hpp */ = {isa = PBXBuildFile; fileRef = 1975C20376534AECBC609138 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.hpp */; };
		C003D2C5A1404B359ECE24FA /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.hpp */ = {isa = PBXBuildFile; fileRef = D863D4E05DCF471B8A2A3A20 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.hpp */; };
		C069D74B451E451E8A5750D6 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */ = {isa = PBXBuildFile; fileRef = 07F6E8FBCF474B898440EE22 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */; };
		C06A954D5A8F42B8AC337075 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/petroleumunitsofmeasure.hpp */ = {isa = PBXBuildFile; fileRef = B9F6501A28424F56B8ED5916 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/petroleumunitsofmeasure.hpp */; };
		C06BCF6C228549439D118837 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = 3B2B8DC6DD134B4093281724 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.hpp */; };
		C06DE994B95B4C568686EFAC /* /Users/heiner/git/QuantLib/ql/processes/g2process.hpp */ = {isa = PBXBuildFile; fileRef = A8AF68569ED9444DB3967852 /* /Users/heiner/git/QuantLib/ql/processes/g2process.hpp */; };
		C0711ED3D72A4CDC936C03D2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = AEB551E599E1488A83D16606 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */; };
		C072E7B77F974C698DD3C515 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.hpp */ = {isa = PBXBuildFile; fileRef = B6D41C232ED74412905FA95C /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.hpp */; };
		C073AC3819B4425C83CDCE5E /* /Users/heiner/git/QuantLib/Examples/CVAIRS/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = FE0F3D999E914043916940DD /* /Users/heiner/git/QuantLib/Examples/CVAIRS/CMakeLists.txt */; };
		C078C1AEC67E4A6195DFA228 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */ = {isa = PBXBuildFile; fileRef = 3E52C80D6BE74F1391577E25 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */; };
		C07BE5D0685B48AD97B38974 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */ = {isa = PBXBuildFile; fileRef = 3D93723565ED4FF9906D4EA5 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */; };
		C09AD645E2854B03A0F35BE2 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */ = {isa = PBXBuildFile; fileRef = 14DE4046273046329E80736E /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */; };
		C09C1FE975894ED9A20A6B63 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */ = {isa = PBXBuildFile; fileRef = 2160E63A107D4750BA5549B0 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */; };
		C0AF35B8871A47B8B3CF0158 /* /Users/heiner/git/QuantLib/ql/instruments/forward.hpp */ = {isa = PBXBuildFile; fileRef = EDE059763CA8402A8CE53061 /* /Users/heiner/git/QuantLib/ql/instruments/forward.hpp */; };
		C0C0845CBEBA4A3192700636 /* /Users/heiner/git/QuantLib/ql/utilities/observablevalue.hpp */ = {isa = PBXBuildFile; fileRef = 4D3A4B4114DA46C483670A67 /* /Users/heiner/git/QuantLib/ql/utilities/observablevalue.hpp */; };
		C0DA93610C7748589F09495E /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */ = {isa = PBXBuildFile; fileRef = BEEC6B8611DE454BA3F5EF5E /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */; };
		C0DE39C5679446D5A50D0F31 /* /Users/heiner/git/QuantLib/ql/qldefines.hpp */ = {isa = PBXBuildFile; fileRef = C66A1771BACD4D6B85DAAEAC /* /Users/heiner/git/QuantLib/ql/qldefines.hpp */; };
		C0FE422F1C1547E6B4D1069B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/all.hpp */ = {isa = PBXBuildFile; fileRef = D8CA54AE1BFF47769CC67834 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/all.hpp */; };
		C10CF98590594C17B559F27F /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */ = {isa = PBXBuildFile; fileRef = 1D7ECB7CB22B4E778D6325F9 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */; };
		C10F620741C04E73B46F30C5 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.hpp */ = {isa = PBXBuildFile; fileRef = BF771D37C5184BED8B273BA6 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.hpp */; };
		C120F8CE9AF94704809DE99A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.hpp */ = {isa = PBXBuildFile; fileRef = EAFAF8DB56704A39B8DA9C19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.hpp */; };
		C12C6058CECE418E9D597E97 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.hpp */ = {isa = PBXBuildFile; fileRef = 6581E1B851E9439B98432123 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.hpp */; };
		C142BDC7F7904350B5114F5D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = CE4710B912D74594BDC4AD35 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.hpp */; };
		C1447DE5B9534C34AF61166C /* /Users/heiner/git/QuantLib/ql/default.hpp */ = {isa = PBXBuildFile; fileRef = 7C6562E7E6E64AF28B1ABD6E /* /Users/heiner/git/QuantLib/ql/default.hpp */; };
		C1524A3B8A4F4AE7AB2A78D4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.hpp */ = {isa = PBXBuildFile; fileRef = EC16FB7FB0BC4085A72FB966 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.hpp */; };
		C163FA3541044A2896DF4E5E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/capletvariancecurve.hpp */ = {isa = PBXBuildFile; fileRef = 56529BFE0FB046549E1896D2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/capletvariancecurve.hpp */; };
		C17B096159D74F6BBD2FD7CA /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */ = {isa = PBXBuildFile; fileRef = D0FAF608770B4B0DB942FD66 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */; };
		C17C5F31EDB145E9ACAF2905 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */ = {isa = PBXBuildFile; fileRef = 4B3B0BA7CBFA4946BD8582CB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */; };
		C18E5A2EDA2441519C9B5C1E /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */ = {isa = PBXBuildFile; fileRef = 1F72B642EC364E9E9FFA45AB /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */; };
		C19D6D9DD97D4F288EBF23C3 /* /Users/heiner/git/QuantLib/ql/compounding.hpp */ = {isa = PBXBuildFile; fileRef = 92E3347D50A74C0FB8C02F75 /* /Users/heiner/git/QuantLib/ql/compounding.hpp */; };
		C1AA46B40EFA466F95731704 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/g2swaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = F121792F6D814CA9BEF6A4DE /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/g2swaptionengine.hpp */; };
		C1BE78A2C555419DAB288B9D /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */ = {isa = PBXBuildFile; fileRef = 4C82A3DBBBAF4DECBE6E8908 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */; };
		C1CD6F0EBBD5412B8AE8C37D /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.hpp */ = {isa = PBXBuildFile; fileRef = 5C59A2DBBD1141EA909CB21A /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.hpp */; };
		C1D8C94D5951410EB4F19C09 /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.hpp */ = {isa = PBXBuildFile; fileRef = D37938D108BA4FED92F25680 /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.hpp */; };
		C1DA8BD0201748ABAE536520 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */ = {isa = PBXBuildFile; fileRef = 6DFAC83B0D744F5DBC95794E /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */; };
		C1DCA4F8469E4EF0941C2A5A /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */ = {isa = PBXBuildFile; fileRef = C1EC63722FA5417986E7BAEC /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */; };
		C1F10DBA7FCE4CF5A03E075B /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.hpp */ = {isa = PBXBuildFile; fileRef = DC0BEDD53D3F42AE804B5ABE /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.hpp */; };
		C1FC809C15A74172A9753F22 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = F15C2D8F2B874F88AFF0CF68 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.hpp */; };
		C2124F08B4F1444B97ECB1D7 /* /Users/heiner/git/QuantLib/test-suite/piecewisezerospreadedtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 5C3F682324884FF0B069FAC9 /* /Users/heiner/git/QuantLib/test-suite/piecewisezerospreadedtermstructure.hpp */; };
		C2180AD3D44F471BA0062E47 /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */ = {isa = PBXBuildFile; fileRef = 866CAD1AF3B341A486739123 /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */; };
		C22DD9F372874129AF5BB8F3 /* /Users/heiner/git/QuantLib/ql/time/calendars/target.hpp */ = {isa = PBXBuildFile; fileRef = 35025D6A7888401CB966E80F /* /Users/heiner/git/QuantLib/ql/time/calendars/target.hpp */; };
		C2389EE634CB4A5FB3B6BF2E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 90053E9FCC374D58A7856D1E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */; };
		C2454EFA17964095996FBB72 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = AA0A6E6D81FB43E7AE4D2D84 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp */; };
		C24A97D1D7984E48941D5E86 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */ = {isa = PBXBuildFile; fileRef = 33E6DC9520FA4C70A159BD40 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */; };
		C24BC3A30F7B4BF8BCCB3257 /* /Users/heiner/git/QuantLib/ql/experimental/processes/all.hpp */ = {isa = PBXBuildFile; fileRef = 381955D85B6E41FDA848292A /* /Users/heiner/git/QuantLib/ql/experimental/processes/all.hpp */; };
		C25B9021D7EB4241BD41EF4C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 981B6E8C481F4DFA810239B0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp */; };
		C25BF4457DD34004AC6FF3FF /* /Users/heiner/git/QuantLib/ql/models/volatility/simplelocalestimator.hpp */ = {isa = PBXBuildFile; fileRef = 6DCAD1C959894E998BAB9CAE /* /Users/heiner/git/QuantLib/ql/models/volatility/simplelocalestimator.hpp */; };
		C26337B0B484418B8162BB4E /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.hpp */ = {isa = PBXBuildFile; fileRef = 793753CDE1004CD1A1F0D471 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.hpp */; };
		C279F0765549464895BCF1CB /* /Users/heiner/git/QuantLib/Examples/CVAIRS/CVAIRS.cpp */ = {isa = PBXBuildFile; fileRef = D462DAC79A9341E885C3773A /* /Users/heiner/git/QuantLib/Examples/CVAIRS/CVAIRS.cpp */; };
		C27A406996B34C0392250BFE /* /Users/heiner/git/QuantLib/test-suite/doublebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = CA6F6593373F44A1A9CC091B /* /Users/heiner/git/QuantLib/test-suite/doublebarrieroption.cpp */; };
		C2934ED45D7F46D083281D1E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp */ = {isa = PBXBuildFile; fileRef = 23CD614C13754219B0F00705 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp */; };
		C296680A73984EA390043DF0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */ = {isa = PBXBuildFile; fileRef = D8A5E1A9B33149A08350AFDE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */; };
		C2B9877407CD465BAD992296 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */ = {isa = PBXBuildFile; fileRef = 8A15250AD4EE41F293F78DBC /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */; };
		C2BBB9052E5740EB9A56E64E /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */ = {isa = PBXBuildFile; fileRef = 0320CE17247F4BA78CEAFC88 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */; };
		C2C9F87BB6B34BB9BDE59E08 /* /Users/heiner/git/QuantLib/ql/experimental/credit/homogeneouspooldef.hpp */ = {isa = PBXBuildFile; fileRef = 25BEAE356EA749E1A4C94018 /* /Users/heiner/git/QuantLib/ql/experimental/credit/homogeneouspooldef.hpp */; };
		C2CE6B4A09BF4F25B0542F5F /* /Users/heiner/git/QuantLib/ql/experimental/volatility/all.hpp */ = {isa = PBXBuildFile; fileRef = 0446B269363E42DAAC811BB9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/all.hpp */; };
		C2D802A326864F15B612F681 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.hpp */ = {isa = PBXBuildFile; fileRef = B5515232A2384692B8DD0C34 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.hpp */; };
		C2DECB0233A54E849AB9A312 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = D86FE1CE5975487585FB7798 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolation.hpp */; };
		C2F3C26EB05846388551C78A /* /Users/heiner/git/QuantLib/ql/termstructures/yield/drifttermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 41D5D66E62AC475D8B832358 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/drifttermstructure.hpp */; };
		C2FB2E3001CD4B718FC8ADB7 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */ = {isa = PBXBuildFile; fileRef = C2971CA90B3F41569759AE31 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */; };
		C30866D486A34751B4BCA580 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.hpp */ = {isa = PBXBuildFile; fileRef = 3DA6C46B93FC44D881D1783C /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.hpp */; };
		C34638E99EB646ADA40F89DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.hpp */ = {isa = PBXBuildFile; fileRef = B2D2BD85532D4C669EF331D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.hpp */; };
		C354694E4DDB44ADAACA89DC /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */ = {isa = PBXBuildFile; fileRef = 6FA51EAD482E4E2DA0807A56 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */; };
		C354B431A3BF48A1A35B75EB /* /Users/heiner/git/QuantLib/ql/models/equity/all.hpp */ = {isa = PBXBuildFile; fileRef = EACA292749AD436296F2C3E1 /* /Users/heiner/git/QuantLib/ql/models/equity/all.hpp */; };
		C35A6FA6D06042739DD86696 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.hpp */ = {isa = PBXBuildFile; fileRef = 4E12719D9E2545EFB280624B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.hpp */; };
		C36AA6CF8513408A8F16E2BE /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathgenerator.hpp */ = {isa = PBXBuildFile; fileRef = C55BAE076F3D4669B1FB0A97 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathgenerator.hpp */; };
		C3710E9E353346C7AB8AFA07 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */ = {isa = PBXBuildFile; fileRef = C9F8D012E56745BBA9B12232 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */; };
		C382E87A896343F6B311EDB4 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual360.hpp */ = {isa = PBXBuildFile; fileRef = 97E141527687463891252911 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual360.hpp */; };
		C391F1B88DDE457C81FCD4A4 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */ = {isa = PBXBuildFile; fileRef = 7F6B70C176654D5BB9FFB0B8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */; };
		C39389310DF444439C805674 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/all.hpp */ = {isa = PBXBuildFile; fileRef = 32562E7D91E140959EF785D4 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/all.hpp */; };
		C39760CDED924EE5BAE60FFA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = 1D3FCE773825470183471F67 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */; };
		C3B2F181DBC64105AAEB2293 /* /Users/heiner/git/QuantLib/ql/experimental/all.hpp */ = {isa = PBXBuildFile; fileRef = FABAD9319263451D80CF919F /* /Users/heiner/git/QuantLib/ql/experimental/all.hpp */; };
		C3DA47BFB8C44AD5A9BF37F4 /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */ = {isa = PBXBuildFile; fileRef = 77A12951415D42D5AA999C63 /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */; };
		C3DDFD0402E947BA87B642AB /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.hpp */ = {isa = PBXBuildFile; fileRef = A72066BCD80F433687A8B311 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.hpp */; };
		C3ED45E4FA4944A28786BD4E /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */ = {isa = PBXBuildFile; fileRef = C3E4AE3437B94B0CA133D498 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */; };
		C402742A7A40401CA6658827 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.hpp */ = {isa = PBXBuildFile; fileRef = 64C0A60F5C4B4E42BA303236 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.hpp */; };
		C40A93AA26174DD682FC8343 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = FD4D1198DC3B41FDA89F92F2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */; };
		C41DB7AC27A14F3D834C98E4 /* /Users/heiner/git/QuantLib/ql/position.cpp */ = {isa = PBXBuildFile; fileRef = D023E37495314B43903E1FA5 /* /Users/heiner/git/QuantLib/ql/position.cpp */; };
		C42143E2CC134AEBBA45DED1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.hpp */ = {isa = PBXBuildFile; fileRef = E64E626EA40540E7B391B013 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.hpp */; };
		C422467F0BC34B5A8DA6BB81 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */ = {isa = PBXBuildFile; fileRef = 12AC43D33C4048D387E5CBA4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */; };
		C43F5C8596BC40AE9177014A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/all.hpp */ = {isa = PBXBuildFile; fileRef = 5810EA125C2845618E449F35 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/all.hpp */; };
		C4410E8C846746538F6E13D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp */ = {isa = PBXBuildFile; fileRef = 286B95DFC87F4522BFE44B1B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp */; };
		C44CDCCC50D647B4B87752BF /* /Users/heiner/git/QuantLib/test-suite/tqreigendecomposition.cpp */ = {isa = PBXBuildFile; fileRef = FAEB7026FBBF4D26A02EEEBA /* /Users/heiner/git/QuantLib/test-suite/tqreigendecomposition.cpp */; };
		C450EAFB1E1B4451B45BCCFC /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.hpp */ = {isa = PBXBuildFile; fileRef = F354500820EF4BF59E595148 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.hpp */; };
		C4816C85097C4F6DA54DF7DC /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.hpp */ = {isa = PBXBuildFile; fileRef = 790562E63F694154AD1B6F08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.hpp */; };
		C48D8C39B3BA4EC6B6931B67 /* /Users/heiner/git/QuantLib/test-suite/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 6752D2C468694FCC8E2CF575 /* /Users/heiner/git/QuantLib/test-suite/CMakeLists.txt */; };
		C4977EDFBFA44D8A9F3D1890 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.hpp */ = {isa = PBXBuildFile; fileRef = D1303ABFEEEF430696B73E74 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.hpp */; };
		C4A72378CB3E4234A3CF1198 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.hpp */ = {isa = PBXBuildFile; fileRef = 27CBA35F8F4A4EB798185030 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.hpp */; };
		C4AC1A25FD16404FB6817AB2 /* /Users/heiner/git/QuantLib/test-suite/varianceoption.cpp */ = {isa = PBXBuildFile; fileRef = B3C098C0F4A749778909A285 /* /Users/heiner/git/QuantLib/test-suite/varianceoption.cpp */; };
		C4AFB79C7402487A9ECC78EF /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */ = {isa = PBXBuildFile; fileRef = CCC69D69AE014E81AC2991F7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */; };
		C4D0BE87A52C4126ABBAD735 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */ = {isa = PBXBuildFile; fileRef = EE4707822FA34D02BD35155B /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */; };
		C4D128C73D144A17A1133B7D /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */ = {isa = PBXBuildFile; fileRef = 6A22C7687CC041A08816E110 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */; };
		C4D3D76DFACE4A1A9A3D9973 /* /Users/heiner/git/QuantLib/test-suite/bermudanswaption.cpp */ = {isa = PBXBuildFile; fileRef = 10FF76C76BF049E385E79E6F /* /Users/heiner/git/QuantLib/test-suite/bermudanswaption.cpp */; };
		C4D74E05A4FD4B76B3BF111B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */ = {isa = PBXBuildFile; fileRef = 823A0EEF7454467CB82E6D2B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */; };
		C4E1B66610B740BBB780BF74 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = EDFA2154E72E4809AC3B9446 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.hpp */; };
		C4E4D1FB201546478E674ACA /* /Users/heiner/git/QuantLib/Examples/BasketLosses/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 571A7C094CDC46D7B87AFC27 /* /Users/heiner/git/QuantLib/Examples/BasketLosses/CMakeLists.txt */; };
		C4F4E4F6759648498793A9E1 /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.hpp */ = {isa = PBXBuildFile; fileRef = FEF562EAD37443E2A5E9A41A /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.hpp */; };
		C4FAA72382B9490BBD641126 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */ = {isa = PBXBuildFile; fileRef = 2CB89884CE5647CDBBB5C41B /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */; };
		C50C6271F5F445DBA92AEBED /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */ = {isa = PBXBuildFile; fileRef = 729977EFF13F499A82BCECA8 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */; };
		C53BFE0BA8E74898B0779AD1 /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */ = {isa = PBXBuildFile; fileRef = 5055D3CD0DE9498E8289731E /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */; };
		C546710DEF754C03B91182AB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dminus.hpp */ = {isa = PBXBuildFile; fileRef = A71208A62A0842699BC31D6A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dminus.hpp */; };
		C56C04A5774B4DC685F08736 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */ = {isa = PBXBuildFile; fileRef = 10900BEE14B9499891D4B24A /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */; };
		C56C90ACAA24421E9BAE84CC /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.hpp */ = {isa = PBXBuildFile; fileRef = 10C0F0403E774A51870140B0 /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.hpp */; };
		C57B8984E59B4A128537E1FA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */ = {isa = PBXBuildFile; fileRef = EBB8F1C2841A472F9EBF4ECB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */; };
		C58D08DD138D4926A229F11F /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */ = {isa = PBXBuildFile; fileRef = CFFBF04C146D4E039CD710E1 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */; };
		C5B08D88DF6447DC9C4119F4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */ = {isa = PBXBuildFile; fileRef = D17E2B23AE244CFAA1F8D7C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */; };
		C5C1FE13D0624F66AD6A65B3 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/path.hpp */ = {isa = PBXBuildFile; fileRef = 819A57E3D578457998B6467E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/path.hpp */; };
		C5CDE364519342599E98E0CD /* /Users/heiner/git/QuantLib/ql/quantlib.hpp */ = {isa = PBXBuildFile; fileRef = B4D7DF7E99B54A5995A169EB /* /Users/heiner/git/QuantLib/ql/quantlib.hpp */; };
		C5D96011EF664A029BC65B4D /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.hpp */ = {isa = PBXBuildFile; fileRef = A59AB75B44274F6CA620E584 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.hpp */; };
		C5EEF5FE7DD44CA49D2F0F1E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */ = {isa = PBXBuildFile; fileRef = B67ED76395F248D7942DCF2E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */; };
		C5F473035C2D414A82FBACCB /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */ = {isa = PBXBuildFile; fileRef = 516BE923CA254B938811C1A7 /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */; };
		C5F4A554BD2449DDB8305212 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp */ = {isa = PBXBuildFile; fileRef = FB5F28398C534509947B1543 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp */; };
		C606915B61B944F08CB6C2B8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 23519C8081EC4D3184F705C8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp */; };
		C60C827B05424FE1AEEFC061 /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.hpp */ = {isa = PBXBuildFile; fileRef = 34792596485E4AC0B69940E0 /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.hpp */; };
		C6157CD1A08F40D2BFEE1C03 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */ = {isa = PBXBuildFile; fileRef = D3B9FF9308DD4A6D8E533DA2 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */; };
		C61F0E86358B4AC88201D047 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.hpp */ = {isa = PBXBuildFile; fileRef = 81364E6A24A448799033D6D2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.hpp */; };
		C630AA5B7894423A9BADFCB9 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.hpp */ = {isa = PBXBuildFile; fileRef = 8F1067F6FBD2415DAE0BF144 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.hpp */; };
		C63C62E347AD4958BE2039F7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp */ = {isa = PBXBuildFile; fileRef = 705E0614A6FE4EA8A568F065 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp */; };
		C63F44968C184AB59D5C7B19 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.hpp */ = {isa = PBXBuildFile; fileRef = BA3C208E278544028C47F758 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.hpp */; };
		C6490E8454A74112A3BE808A /* /Users/heiner/git/QuantLib/test-suite/swaptionvolstructuresutilities.hpp */ = {isa = PBXBuildFile; fileRef = 6D6A0B263154425ABF5CD1E6 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolstructuresutilities.hpp */; };
		C660B839AB6D40C6BA05B938 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp */ = {isa = PBXBuildFile; fileRef = 6ACFDC835DA745579901523A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp */; };
		C67005EC98C3490AB789D539 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */ = {isa = PBXBuildFile; fileRef = E57741C875934FD6A55B2CC3 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */; };
		C6982757C162464DBE982F3C /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */ = {isa = PBXBuildFile; fileRef = 4E6A8EFCEB2E40138980FD2E /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */; };
		C698BA04A5E84565B9DC9079 /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */ = {isa = PBXBuildFile; fileRef = D96C2A0BD99E45D39227DE9B /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */; };
		C699EC353A05464EABFBC27B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.hpp */ = {isa = PBXBuildFile; fileRef = D124E5D036F6404DAD963BB5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.hpp */; };
		C6A59129A9E5427F83824EFD /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativerng.hpp */ = {isa = PBXBuildFile; fileRef = 61AC54D378AC4803A9A910CD /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativerng.hpp */; };
		C6B462CE31C04E21BF04BDEE /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */ = {isa = PBXBuildFile; fileRef = 8C2D7A73D5B042FAA47F15E2 /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */; };
		C6C60BF34E914D8E9AE667EA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.hpp */ = {isa = PBXBuildFile; fileRef = C97C8CA22CD149F688285DED /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.hpp */; };
		C6C754CD38B54C5B93DDF40C /* /Users/heiner/git/QuantLib/ql/patterns/composite.hpp */ = {isa = PBXBuildFile; fileRef = A172580C67494F4B8C3F8893 /* /Users/heiner/git/QuantLib/ql/patterns/composite.hpp */; };
		C6D1DE782D2A49BEB867DFC5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */ = {isa = PBXBuildFile; fileRef = F0A013C221C247CABB97945B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */; };
		C6D92E04AEEF49D9AB29F7EF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.hpp */ = {isa = PBXBuildFile; fileRef = 55D4AAB70B87440D8C0DC9D5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.hpp */; };
		C6DA4F2648A34D77938B1990 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */ = {isa = PBXBuildFile; fileRef = 1E9BB421E42547BBB71F0CFB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */; };
		C6E04D4FE12D4E7FAF39670A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */ = {isa = PBXBuildFile; fileRef = 04F710B49695408F903702F4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */; };
		C6EE26D4551E44729BF4C922 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */ = {isa = PBXBuildFile; fileRef = F855D574860140CB8FA1E33B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */; };
		C6F29706BDC74728AB23869C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */ = {isa = PBXBuildFile; fileRef = 001832636A454B63BBD2F2C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */; };
		C703938DC4F848289BF73A04 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.hpp */ = {isa = PBXBuildFile; fileRef = 9339F61F804B401BBF125B6C /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.hpp */; };
		C708719B01C7488ABFF8BC42 /* /Users/heiner/git/QuantLib/test-suite/calendars.hpp */ = {isa = PBXBuildFile; fileRef = A8297B6B92C141A19433D83A /* /Users/heiner/git/QuantLib/test-suite/calendars.hpp */; };
		C70AD3D05DC24162B6C7787B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */ = {isa = PBXBuildFile; fileRef = DA1DBC66D4C14EB792918C12 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */; };
		C72B6CD12861495D8356D4B3 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.hpp */ = {isa = PBXBuildFile; fileRef = 2FA8F747779649409865E5B8 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.hpp */; };
		C73CE0BDAF614DA998C2ED58 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 8525BC400D234FCC94ACAB25 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */; };
		C742CB74BD0B4B159610C019 /* /Users/heiner/git/QuantLib/test-suite/everestoption.hpp */ = {isa = PBXBuildFile; fileRef = FB65257584B84FBE8BF744BE /* /Users/heiner/git/QuantLib/test-suite/everestoption.hpp */; };
		C745A739979C4B2ABA20BB75 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp */ = {isa = PBXBuildFile; fileRef = BD31A73E8D36443D947188A3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp */; };
		C77296D95BF04F84BCD6AEB7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 06B4E89817ED4CB785934B23 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */; };
		C77A06F0638C4661A15BFAB1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = ED76C85ADA1242C09D2EB59E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp */; };
		C77F30F83DB643B0A48D6F07 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */ = {isa = PBXBuildFile; fileRef = 6AB42753D3F64E3C86CB5F8B /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */; };
		C783BF385DA64DBE8B1B699D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdebsm.hpp */ = {isa = PBXBuildFile; fileRef = D4618719AB6B497CBA3DC875 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdebsm.hpp */; };
		C785AA7338084032B5901E77 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomizedlds.hpp */ = {isa = PBXBuildFile; fileRef = CEBF3278B17A48C6B1F20E4B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomizedlds.hpp */; };
		C78F8F3A752C4F44A521863C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */ = {isa = PBXBuildFile; fileRef = 6C999F6B76274A4C9E66E1E2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */; };
		C79B0CC45E4749E28C38BB3C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */ = {isa = PBXBuildFile; fileRef = 45D7089533694A378A6AD18D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */; };
		C7AAC5C34A87414D80D38C6D /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.hpp */ = {isa = PBXBuildFile; fileRef = 6AD428D8FC774159912BF14E /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.hpp */; };
		C7B091CB38344D68BB2B84EA /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = EB5E303C3C3A4F9AAF86D621 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */; };
		C7C62C81BC994E7AA34B5C0A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp */ = {isa = PBXBuildFile; fileRef = 64E79E4E3D7E4443956C2FA4 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp */; };
		C7E3D8E9ED534D17AF2C535E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */ = {isa = PBXBuildFile; fileRef = 889D2E3724124F40A77EB2AE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */; };
		C7E576BBACCB41C49FB3F2E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolcurve.hpp */ = {isa = PBXBuildFile; fileRef = 05E88395DD174CA98A0BD970 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolcurve.hpp */; };
		C7E853E1BEAF428D911835E2 /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */ = {isa = PBXBuildFile; fileRef = 0B4A8B75F3254E17B8A722F2 /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */; };
		C807A10CE34B4564AF3943C3 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.hpp */ = {isa = PBXBuildFile; fileRef = 5EEC90F5A54F434E89945CCA /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.hpp */; };
		C80F99D492814D4EAE85078A /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.hpp */ = {isa = PBXBuildFile; fileRef = 10EED7CC6AE24340BA856261 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.hpp */; };
		C810A33F0921407FBD8AFDA8 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.hpp */ = {isa = PBXBuildFile; fileRef = 53EBA2D65115428D87DBD525 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.hpp */; };
		C812621E36A348FA9F62E568 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */ = {isa = PBXBuildFile; fileRef = 3DA49374890B4A94B92D7A20 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */; };
		C81AABA33E5A4CC0B8AF223B /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.hpp */ = {isa = PBXBuildFile; fileRef = 25290A78FFB24C45825E3FBD /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.hpp */; };
		C83474C790B5474392C59096 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */ = {isa = PBXBuildFile; fileRef = 7C55A9C4A5F549D29B59EE93 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */; };
		C83C235B5CB34A5FB3FC430F /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.hpp */ = {isa = PBXBuildFile; fileRef = FDE1E8DEBF484F6182E9547F /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.hpp */; };
		C85BBE172E1C413EB31B1CC7 /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */ = {isa = PBXBuildFile; fileRef = 776C25E9F425478A958A273E /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */; };
		C85F6099FB7A470FAF27F110 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalforwardratesanalysis.hpp */ = {isa = PBXBuildFile; fileRef = 6D0749C204144F808341DE4B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalforwardratesanalysis.hpp */; };
		C86CDD2EA64345F88649DEEC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */ = {isa = PBXBuildFile; fileRef = D19023D40BC3472FBA428ED6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */; };
		C8B160D25F314C0CAB855234 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = A728FF149C0C4F2787F21B76 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp */; };
		C8B635F248CC466790BD910F /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp */ = {isa = PBXBuildFile; fileRef = 1A67E08D71414F5EBB28C941 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp */; };
		C8B853BA1667413DBD58819A /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */ = {isa = PBXBuildFile; fileRef = 69D3EBF4FF484C4AB9D01B8A /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */; };
		C8B85C0D7D2C4C188862EA46 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */ = {isa = PBXBuildFile; fileRef = F2E848EC864C40E8B58C4B4C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */; };
		C8C020F9B4824672B7E9347E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */ = {isa = PBXBuildFile; fileRef = BE1EE072DE9142FA92D63552 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */; };
		C8C03E757C264CE9907C3811 /* /Users/heiner/git/QuantLib/ql/settings.hpp */ = {isa = PBXBuildFile; fileRef = CAB554D605B442B79CA2C483 /* /Users/heiner/git/QuantLib/ql/settings.hpp */; };
		C8C3DBF6D4494B41B9E41D45 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.hpp */ = {isa = PBXBuildFile; fileRef = 4C6A4C2CC92B4861A2761DE5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.hpp */; };
		C8C6E79863A647108E7E1FE6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/all.hpp */ = {isa = PBXBuildFile; fileRef = 5BA4D725CFC3474BA8847F98 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/all.hpp */; };
		C8CBE9421F6D414CB919259A /* /Users/heiner/git/QuantLib/ql/math/integrals/trapezoidintegral.hpp */ = {isa = PBXBuildFile; fileRef = 67763852F4454BC89353AA74 /* /Users/heiner/git/QuantLib/ql/math/integrals/trapezoidintegral.hpp */; };
		C8D99EDD73104C3EBC22397E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */ = {isa = PBXBuildFile; fileRef = 389516E2FD0B4F38905E9A81 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */; };
		C8DBE308988242E79401C368 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.hpp */ = {isa = PBXBuildFile; fileRef = CF60C117A2FD4021A316694D /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.hpp */; };
		C8F7D1D3480042AB828D2AB7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = D0D457BADED04EC396308F35 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.hpp */; };
		C8F87D646205420095C8E773 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.hpp */ = {isa = PBXBuildFile; fileRef = D4DE54F583E548C493925866 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.hpp */; };
		C910F3F62BE4459AB4C859CE /* /Users/heiner/git/QuantLib/ql/experimental/lattices/all.hpp */ = {isa = PBXBuildFile; fileRef = 3E3E54BCF39D4F30A9D67611 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/all.hpp */; };
		C91B8D7A537A4B02B2F9FF7B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.hpp */ = {isa = PBXBuildFile; fileRef = 433C7BC2A9C9415D8914F522 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.hpp */; };
		C93AE3DA5D0D4D0AB4A78CEE /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */ = {isa = PBXBuildFile; fileRef = BD7DC57E56E94B0388C406F8 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */; };
		C9716E88433A494EB81AF526 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.hpp */ = {isa = PBXBuildFile; fileRef = F683CE03DE7B4E8EB78C50B5 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.hpp */; };
		C97A63788EB941D4883529C3 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.hpp */ = {isa = PBXBuildFile; fileRef = 541AA9FEF8384FBBA0EB963B /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.hpp */; };
		C97E01B743804411A6CB7EE6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */ = {isa = PBXBuildFile; fileRef = 04BA6F6F888F47DA8E4DBFC4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */; };
		C9837E2C3F5B4AB0B7C175A6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = BE1B9FB2EA6F4876882BAEF2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */; };
		C98E1D8F0C274B58995E40D7 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatlinearinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 068BFAE0042B4C0EAC099B9D /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatlinearinterpolation.hpp */; };
		C99519C4A52B40378F850CC4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */ = {isa = PBXBuildFile; fileRef = B2469D8C38A64B84BCC1FCF0 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */; };
		C99C9911AF364463972225C8 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.hpp */ = {isa = PBXBuildFile; fileRef = 787E7362BDD4439D81E7C4B3 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.hpp */; };
		C9A1B74028FD4349A06E221D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/all.hpp */ = {isa = PBXBuildFile; fileRef = DAA5330878B94246B43B4519 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/all.hpp */; };
		C9A852B543A2497D81747959 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */ = {isa = PBXBuildFile; fileRef = 61B4066B70C64891BEF64906 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */; };
		C9B6A661C7864C199C8A3D5C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.hpp */ = {isa = PBXBuildFile; fileRef = 01E2693384B8469B8D3822B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.hpp */; };
		C9B9B3EE29304189A2033834 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.hpp */ = {isa = PBXBuildFile; fileRef = 988FE36311814D35973657BB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.hpp */; };
		C9C22042EAA0494699770A45 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = 96B984B5B3604CC99F1AAADC /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.hpp */; };
		C9D968C761D84078A2D4B795 /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */ = {isa = PBXBuildFile; fileRef = A090A57F7B014F61932829CA /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */; };
		C9E119B0097F48C682676C19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */ = {isa = PBXBuildFile; fileRef = 00A189201A8549ACB518A239 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */; };
		C9F1EA2FE41B4A0CBB42EFB2 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 6813103A8D4C4FA4819087C1 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.hpp */; };
		C9F61633B44044C28CC6D3A5 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */ = {isa = PBXBuildFile; fileRef = A1951730C3B64000ACBB2214 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */; };
		CA0D24294FCB4C39BD3AB150 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */ = {isa = PBXBuildFile; fileRef = 201EF1A36BA9471F9050352A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */; };
		CA14A1679FE645C6ACA86222 /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.hpp */ = {isa = PBXBuildFile; fileRef = 7088029D239B45E6910A777B /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.hpp */; };
		CA343B09E36A478B9D95300C /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.hpp */ = {isa = PBXBuildFile; fileRef = EB869A8586C54C219FF2DA86 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.hpp */; };
		CA4F22A87941469BB58BD5EE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp */ = {isa = PBXBuildFile; fileRef = 366FAA87CDB74F3D8AA25199 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp */; };
		CA712F798EAD48DAAC1C8B6F /* /Users/heiner/git/QuantLib/test-suite/money.hpp */ = {isa = PBXBuildFile; fileRef = 74A212F966904791BBC770BD /* /Users/heiner/git/QuantLib/test-suite/money.hpp */; };
		CA7CFDE82C674A23A6ABD8BB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */ = {isa = PBXBuildFile; fileRef = 029446D7DF064D98A205B808 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */; };
		CA8D9F75A24240BA97AE5B0D /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */ = {isa = PBXBuildFile; fileRef = D7F1CA80AACD4742ABA604F0 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */; };
		CA8DC394285C451B95FB3F6E /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.hpp */ = {isa = PBXBuildFile; fileRef = EC7EF43F5E744F189F08A4C4 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.hpp */; };
		CA97D3796DCF4837B9BC9A49 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.hpp */ = {isa = PBXBuildFile; fileRef = 73C02D0D3E2F4FCA875CA298 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.hpp */; };
		CA9C0E6E511247B8A54E4199 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spotlosslatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = 883DB8AD91554285B3DD1FAB /* /Users/heiner/git/QuantLib/ql/experimental/credit/spotlosslatentmodel.hpp */; };
		CAA4B83A725B4C609F85CFB6 /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */ = {isa = PBXBuildFile; fileRef = A7A0BEC8143C4256B0DFACA3 /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */; };
		CAAE1BE619CC4E219B918D61 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 8DD6F43D14034E7FB19D2921 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.hpp */; };
		CAB138B5A97E4677ADD451BB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */ = {isa = PBXBuildFile; fileRef = D96928523E134F7D854C5EA9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */; };
		CAC5C55F76BD439A9573A88A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */ = {isa = PBXBuildFile; fileRef = 4D39F4A687FE47609DCC3E19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */; };
		CAD57217BB524E60AC745F30 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = 9F1A2629BEBD4571ADEC4FED /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */; };
		CAEF2FA6CAF44BE3ABF13216 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */ = {isa = PBXBuildFile; fileRef = 59B9439D3254417F97525078 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */; };
		CB0E7F4B2FED4DBE8E394290 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */ = {isa = PBXBuildFile; fileRef = 8C21E88230F7435C8DAF9E64 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */; };
		CB0E9B05618B4FD49A1F686A /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.hpp */ = {isa = PBXBuildFile; fileRef = 62DBD5822F244D52A62D92AF /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.hpp */; };
		CB219CE0C61840C885715E2C /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.hpp */ = {isa = PBXBuildFile; fileRef = 4646FE4CF61D48DFA2A80485 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.hpp */; };
		CB3A4933FC0F4509B350ECAE /* /Users/heiner/git/QuantLib/ql/compounding.hpp */ = {isa = PBXBuildFile; fileRef = C6F7EA625F5140B5A4DA3B73 /* /Users/heiner/git/QuantLib/ql/compounding.hpp */; };
		CB40A7FA02BC4186A95BDCFC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */ = {isa = PBXBuildFile; fileRef = B7A27999278A45E5AA52599E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */; };
		CB4658D1CC6343068B6C12C6 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */ = {isa = PBXBuildFile; fileRef = 817D3B695BA644C4951C9ED5 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */; };
		CB49B649A38B4DA6BE49054F /* /Users/heiner/git/QuantLib/ql/models/model.cpp */ = {isa = PBXBuildFile; fileRef = 5F5AA48BC9C348089C0F1EB7 /* /Users/heiner/git/QuantLib/ql/models/model.cpp */; };
		CB506DCE362F426899F19705 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.hpp */ = {isa = PBXBuildFile; fileRef = 08C545FD49E149B7B728925C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.hpp */; };
		CB71DE0DD2F74E4D91981C5C /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp */ = {isa = PBXBuildFile; fileRef = 3C717C6BA2FD4013A0CF6FE8 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp */; };
		CB86728F7A9646A1AD365BEA /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = AD57A6B34B3B4A93B9DE38EE /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.hpp */; };
		CB86F9BC7FCC4502B0ACA4E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */ = {isa = PBXBuildFile; fileRef = 81C90519404F4C178D0C74C9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */; };
		CB9B48094E44417A941EF595 /* /Users/heiner/git/QuantLib/ql/models/volatility/garmanklass.hpp */ = {isa = PBXBuildFile; fileRef = 9A16BBFB74D143849DAADD4A /* /Users/heiner/git/QuantLib/ql/models/volatility/garmanklass.hpp */; };
		CBA94A9B4511407CBAA8AC1B /* /Users/heiner/git/QuantLib/test-suite/marketmodel.hpp */ = {isa = PBXBuildFile; fileRef = 8113CF82F34F47A4B2FAD220 /* /Users/heiner/git/QuantLib/test-suite/marketmodel.hpp */; };
		CBC4B66230054FAFB4E122D1 /* /Users/heiner/git/QuantLib/ql/auto_link.hpp */ = {isa = PBXBuildFile; fileRef = 9751FD15A4714E01A42F687D /* /Users/heiner/git/QuantLib/ql/auto_link.hpp */; };
		CBCE4BD3400145AAA5ED5FC8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = 0E83DE28319D4C85A06D6EDB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */; };
		CBD555346F2F46F7BD581D5B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = B1B134E4DEEA41A1B0BE8466 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp */; };
		CBF0AFD5EDE54DF6AE22D91D /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp */ = {isa = PBXBuildFile; fileRef = B1CA308F0E82491DBD0BF23C /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp */; };
		CC0CB582CA9742BC8DCDD349 /* /Users/heiner/git/QuantLib/test-suite/marketmodel.cpp */ = {isa = PBXBuildFile; fileRef = 83B989E82FB64DB6829058D2 /* /Users/heiner/git/QuantLib/test-suite/marketmodel.cpp */; };
		CC101D9F617A45DE94ACF6FB /* /Users/heiner/git/QuantLib/ql/experimental/commodities/all.hpp */ = {isa = PBXBuildFile; fileRef = D4B3F2E3255C48238CF2CC9F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/all.hpp */; };
		CC154B8674F9485A97BF68B5 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzdlibor.hpp */ = {isa = PBXBuildFile; fileRef = ED3927D25BDF435E9795FBD9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzdlibor.hpp */; };
		CC1B7E7812C244568B663AEE /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */ = {isa = PBXBuildFile; fileRef = 5D4A8A2E7E5340539DE50056 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */; };
		CC1C79015E4C4EA785500504 /* /Users/heiner/git/QuantLib/test-suite/riskneutraldensitycalculator.cpp */ = {isa = PBXBuildFile; fileRef = F0940DCE8C764052BBF7E2CC /* /Users/heiner/git/QuantLib/test-suite/riskneutraldensitycalculator.cpp */; };
		CC2416CE227440539AD959D9 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp */ = {isa = PBXBuildFile; fileRef = 70C34D46817D4B3C8A7C4778 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp */; };
		CC43EFF462094001B290C6EE /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.hpp */ = {isa = PBXBuildFile; fileRef = E4228FE1168148B98923E2B7 /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.hpp */; };
		CC4F8F0CC44548A68EA4098E /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = B6F8167157244EFAAC44DFBF /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */; };
		CC5FBA0339344E06897C7A96 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */ = {isa = PBXBuildFile; fileRef = 2B2D2B1EC4B141258677E553 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */; };
		CC68C8C9A6E546F8B5ECAF32 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.hpp */ = {isa = PBXBuildFile; fileRef = B5BDAAD00174427BAB192CBE /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.hpp */; };
		CC6E34B741D04CFB9286741F /* /Users/heiner/git/QuantLib/test-suite/inflationcapflooredcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 28DA75DCE748450F89535B3D /* /Users/heiner/git/QuantLib/test-suite/inflationcapflooredcoupon.hpp */; };
		CC72271C919240BFB1793AE5 /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */ = {isa = PBXBuildFile; fileRef = F8D93BD52840473284B88CF7 /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */; };
		CC749BC183C543BEA0BB1996 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/all.hpp */ = {isa = PBXBuildFile; fileRef = AB439C4599E24EC1A0C24FFA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/all.hpp */; };
		CC773002551346E48336A7BD /* /Users/heiner/git/QuantLib/Examples/FittedBondCurve/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 5A891BDB6325481FAA954E17 /* /Users/heiner/git/QuantLib/Examples/FittedBondCurve/CMakeLists.txt */; };
		CC7E85A780B14F1ABA10029E /* /Users/heiner/git/QuantLib/Examples/MarketModels/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = AEFD4115335B45CA9C9016D9 /* /Users/heiner/git/QuantLib/Examples/MarketModels/CMakeLists.txt */; };
		CC7FF8E5662B45D9BD12556F /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */ = {isa = PBXBuildFile; fileRef = 19D68918C04B42C08861E8A7 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */; };
		CCBE128ECF2B402490CD1DBC /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */ = {isa = PBXBuildFile; fileRef = 9CA2CD4F9B4D4520BB50D2BD /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */; };
		CCD551B4934544D1A4A2854E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */ = {isa = PBXBuildFile; fileRef = 895BEA3DA8C94670ACF4E741 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */; };
		CD08FE2F0D2742BFAC9B9163 /* /Users/heiner/git/QuantLib/Examples/CDS/CDS.cpp */ = {isa = PBXBuildFile; fileRef = 9C8C739C528D491DB47C5A3A /* /Users/heiner/git/QuantLib/Examples/CDS/CDS.cpp */; };
		CD20B519245D453D90AD15CD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp */ = {isa = PBXBuildFile; fileRef = 0DF02A582A1A4A8FAC176D13 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp */; };
		CD32B518A20D425587E89872 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */ = {isa = PBXBuildFile; fileRef = A285437ABB9B48BB9564BEAC /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */; };
		CD3DF5F54A0146238C860096 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */ = {isa = PBXBuildFile; fileRef = 9328E0C2F57848F29C5C02A7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */; };
		CD3E98025161452BAEF614C2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmesher.hpp */ = {isa = PBXBuildFile; fileRef = 63A3308F068F4873B7BDBFF8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmesher.hpp */; };
		CD449B939C46401DA5893CDC /* /Users/heiner/git/QuantLib/ql/quotes/all.hpp */ = {isa = PBXBuildFile; fileRef = 84D47A93E4904F31A43DF1A9 /* /Users/heiner/git/QuantLib/ql/quotes/all.hpp */; };
		CD4544789A434319826E36F6 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.hpp */ = {isa = PBXBuildFile; fileRef = B518FF65101142B0A898F30D /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.hpp */; };
		CD46604A20824D669DBFEBF0 /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.hpp */ = {isa = PBXBuildFile; fileRef = 9CC50ED1175147199505142C /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.hpp */; };
		CD7177765E484AE2B2D779E6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 30EE80BB552D40E3B4BC7C8C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp */; };
		CD78F4B153944600B0F544B2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/all.hpp */ = {isa = PBXBuildFile; fileRef = 3A0DA117B7AA475D91099651 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/all.hpp */; };
		CD8B565D140A46C994D6B356 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp */ = {isa = PBXBuildFile; fileRef = A920686D070C4467AC3C4411 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp */; };
		CD938578042D4CA4B44EF22D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */ = {isa = PBXBuildFile; fileRef = E9B86027B9404CD7A6B82736 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */; };
		CD955746454A4674B8D5A3DB /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */ = {isa = PBXBuildFile; fileRef = 14CA17CB86384BA2B997FB04 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */; };
		CDA776850235414BA57354B4 /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */ = {isa = PBXBuildFile; fileRef = 323543943FFD4AED989914E2 /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */; };
		CDA7A5E14BC3434BA4212AA4 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.hpp */ = {isa = PBXBuildFile; fileRef = FFE5C8DEBD9E4B868CE9658F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.hpp */; };
		CDB5A63C3E984A589914E64F /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.hpp */ = {isa = PBXBuildFile; fileRef = C619A7F417284EC4B49D6C14 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.hpp */; };
		CDB87CC2FDFC4988ADE5D112 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.hpp */ = {isa = PBXBuildFile; fileRef = A811EBF298164CF595D420DD /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.hpp */; };
		CDBEC137B8CA4EB289E0E4CD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */ = {isa = PBXBuildFile; fileRef = 7824B6A13450419FB31C70EE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */; };
		CDBFB43D83DB43FFA99FCF10 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp */ = {isa = PBXBuildFile; fileRef = 0BDCB7E89A314F6C8F9DA123 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp */; };
		CDC3E5EEF98249F79F151ABA /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.hpp */ = {isa = PBXBuildFile; fileRef = 14064CE679C94CB2BD0247DA /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.hpp */; };
		CDC8271F42224152BC17FFEA /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.hpp */ = {isa = PBXBuildFile; fileRef = 32A12C15A68145BAA3818E3D /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.hpp */; };
		CDE103CB96314E66B3F84B4C /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.hpp */ = {isa = PBXBuildFile; fileRef = 9590C5BFB21A415292927B84 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.hpp */; };
		CDE410041BF74C138785683B /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */ = {isa = PBXBuildFile; fileRef = ED794940AEF64EB4AA356227 /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */; };
		CE04C1E2BD7A4577A60ECBCD /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgainterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 201EC0FF396A4A4FABD39133 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgainterpolation.hpp */; };
		CE0525E8CE6B4ED68ED4A79F /* /Users/heiner/git/QuantLib/ql/experimental/models/all.hpp */ = {isa = PBXBuildFile; fileRef = ECDB4D852EF24D20B7CC150E /* /Users/heiner/git/QuantLib/ql/experimental/models/all.hpp */; };
		CE17960F3D0E46B58FAC5F03 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.hpp */ = {isa = PBXBuildFile; fileRef = 39D623A76C60465DBF92B7FE /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.hpp */; };
		CE20C5C995CD4B7AB8052022 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp */ = {isa = PBXBuildFile; fileRef = 6FAF2DE888DE448BB465F99C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp */; };
		CE37718C3524485BA1EEBE86 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */ = {isa = PBXBuildFile; fileRef = DA332EF10F6C4E9286EA05D3 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */; };
		CE3DED8C52884C26B919EBC1 /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.hpp */ = {isa = PBXBuildFile; fileRef = 6BEF5E494217466C81DD3F94 /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.hpp */; };
		CE5FB71BA8DC44DAB97D3DDC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 78A4D06C74454085BAF98955 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */; };
		CE651108778842EF9C0E7A2D /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/all.hpp */ = {isa = PBXBuildFile; fileRef = DB33C9F418A0473283A1B1BC /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/all.hpp */; };
		CE76AAD4FBF44DF99D0630AA /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */ = {isa = PBXBuildFile; fileRef = 69FEDAFF921A41289D415ACB /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */; };
		CE7AD6B8608D4E8294351F62 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.hpp */ = {isa = PBXBuildFile; fileRef = BAB2C7FB650C4E3E8BA1FE85 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.hpp */; };
		CE926A7348E84404AE55BF71 /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.hpp */ = {isa = PBXBuildFile; fileRef = E2F8CBE72FBE436683A35463 /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.hpp */; };
		CEAF4A3839AE441C904D992E /* /Users/heiner/git/QuantLib/ql/time/calendars/india.hpp */ = {isa = PBXBuildFile; fileRef = A658EC709DC24FD2BD6AEB37 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.hpp */; };
		CEBE2AFB08E84EC5A8C3264D /* /Users/heiner/git/QuantLib/ql/math/solvers1d/ridder.hpp */ = {isa = PBXBuildFile; fileRef = 6C1E3A452CD04BC6A75CFB3E /* /Users/heiner/git/QuantLib/ql/math/solvers1d/ridder.hpp */; };
		CEC84A49AC93452FAC163AE1 /* /Users/heiner/git/QuantLib/test-suite/extendedtrees.cpp */ = {isa = PBXBuildFile; fileRef = 93BCA84B75F148029271B420 /* /Users/heiner/git/QuantLib/test-suite/extendedtrees.cpp */; };
		CED1D475311D4731AA344D3D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 95CB3D0961A941DE82AFF000 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp */; };
		CEDAAD2DD8934F19A96EED26 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */ = {isa = PBXBuildFile; fileRef = A4D47BCCC35040F588ED3939 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */; };
		CEEDC1CA2BF948FDA649EA40 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 1E3010B5276145A798C1204F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp */; };
		CEF593AA9AEC46ACA5E678E8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */ = {isa = PBXBuildFile; fileRef = 42E0F02B3B0543179CD7D6F1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */; };
		CEFC1B4B66A84A01A57F22DF /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */ = {isa = PBXBuildFile; fileRef = FC0256F1C0F448EC8DFB92A5 /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */; };
		CF0D7D813A2F401787F3C34A /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.hpp */ = {isa = PBXBuildFile; fileRef = 13DCE690D9AA4E109F79DA79 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.hpp */; };
		CF14B90C3652461394952595 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */ = {isa = PBXBuildFile; fileRef = EE9593FFE4EA442B93C31AC3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */; };
		CF16BC726C5745FAA1AE8F3B /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */ = {isa = PBXBuildFile; fileRef = 64BEF61C70694B778E18AC25 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */; };
		CF227693795D4E41B2B1DE2B /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.hpp */ = {isa = PBXBuildFile; fileRef = 2B631FC5321749549BEB5742 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.hpp */; };
		CF4576C6FC1B441E87749CEA /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.hpp */ = {isa = PBXBuildFile; fileRef = 6FF0FA0809E747E3994EE111 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.hpp */; };
		CF6A85402AAF415FAE42A144 /* /Users/heiner/git/QuantLib/ql/patterns/singleton.hpp */ = {isa = PBXBuildFile; fileRef = B83F9E4575B54E839AD8F901 /* /Users/heiner/git/QuantLib/ql/patterns/singleton.hpp */; };
		CF7A57ADEAA7496B9C2FAB1E /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.hpp */ = {isa = PBXBuildFile; fileRef = 401E42171B4C4FB9BB58C46C /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.hpp */; };
		CF8418F015E14FA395114E09 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/all.hpp */ = {isa = PBXBuildFile; fileRef = AAF1A377759C42D2A195840F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/all.hpp */; };
		CF87C9A8E63A435CA9E444E8 /* /Users/heiner/git/QuantLib/ql/pricingengines/mcsimulation.hpp */ = {isa = PBXBuildFile; fileRef = CE8CDF7276C444A2AAF39BEE /* /Users/heiner/git/QuantLib/ql/pricingengines/mcsimulation.hpp */; };
		CFA90F972ACC45DA8656281F /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */ = {isa = PBXBuildFile; fileRef = 98370F31630F489596093537 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */; };
		CFAB75A534974F2DA38A2309 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */ = {isa = PBXBuildFile; fileRef = 3463DE9023954FC1A93D8E9A /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */; };
		CFC6F743A0424EF6BC1DD129 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */ = {isa = PBXBuildFile; fileRef = 91164443AFCB48DE93A0F404 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */; };
		CFC8B947087745B2BEC6FDB9 /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */ = {isa = PBXBuildFile; fileRef = E2185C48DFEC49189634A5D9 /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */; };
		CFDAE111A82B4CC2BD51F714 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */ = {isa = PBXBuildFile; fileRef = D549D76E86634A28B8E33C45 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */; };
		CFDC1BE89BB5446EBD483365 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.hpp */ = {isa = PBXBuildFile; fileRef = 95B169DC3B254A7BA91106D4 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.hpp */; };
		CFE72251055B4CD6B9F0BEF8 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.hpp */ = {isa = PBXBuildFile; fileRef = E6CC0652D1A74FFFB1D51B7E /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.hpp */; };
		CFECB22CC82849C8B5A3FBC4 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.hpp */ = {isa = PBXBuildFile; fileRef = 4719068AF3C1408C9087FB46 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.hpp */; };
		CFF77C8A761242858DCE2E4C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp */ = {isa = PBXBuildFile; fileRef = EEA4392F5B2F4093810BC56E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp */; };
		D00341DCB8D44FB5988FB3BE /* /Users/heiner/git/QuantLib/test-suite/doublebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = EF1A8F52199E4373AFA0718B /* /Users/heiner/git/QuantLib/test-suite/doublebarrieroption.hpp */; };
		D004B6A425F0494BAE597B00 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/all.hpp */ = {isa = PBXBuildFile; fileRef = 540B514D47F54C899E8277CC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/all.hpp */; };
		D009DCF2ACA744C5B4AA62EE /* /Users/heiner/git/QuantLib/ql/time/calendars/nullcalendar.hpp */ = {isa = PBXBuildFile; fileRef = AFB4A1B73C5A413DB010D706 /* /Users/heiner/git/QuantLib/ql/time/calendars/nullcalendar.hpp */; };
		D01A3D53922548A7BB923008 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.hpp */ = {isa = PBXBuildFile; fileRef = DBCC48078638440BBE4CE73D /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.hpp */; };
		D02A700FD909421EAFB225AD /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.hpp */ = {isa = PBXBuildFile; fileRef = 53C09F574DF94AAABB579519 /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.hpp */; };
		D02B67DFC307477593136B89 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.hpp */ = {isa = PBXBuildFile; fileRef = E8FBA8AA37334AE28A71BFAE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.hpp */; };
		D03E8D24082044E39FA71D10 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.hpp */ = {isa = PBXBuildFile; fileRef = 1614CC1E6C2E4194AEAF596B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.hpp */; };
		D03F6BC252C0412BAEA3DA53 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */ = {isa = PBXBuildFile; fileRef = 73E0D51F26D34DC89A786F25 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */; };
		D0515E289C23421CA34D9BC5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */ = {isa = PBXBuildFile; fileRef = 8B672CC4B3334664975BB96E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */; };
		D07AF26D673846FB92DF4CA3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = AA606CED7BF048F7B89CCFFD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.hpp */; };
		D087F59E302A4BD5B95133CE /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.hpp */ = {isa = PBXBuildFile; fileRef = 7BBE59DE58CD48E3BC6C7147 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.hpp */; };
		D0882B4254FC4C3B81184B3A /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.hpp */ = {isa = PBXBuildFile; fileRef = D9778A0D95814E9A8685EF7F /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.hpp */; };
		D0B67E266FFB4A3286F3122B /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */ = {isa = PBXBuildFile; fileRef = 3B7F3B1A30684D17AA90841D /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */; };
		D0B9D23499C5487ABE1C1515 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.hpp */ = {isa = PBXBuildFile; fileRef = 03FB7B9C2FC8493283EE496F /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.hpp */; };
		D0D6DA8AA4E346F38702D46C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.hpp */ = {isa = PBXBuildFile; fileRef = 2BB7824C884D4E66A05733DA /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.hpp */; };
		D124EB4BFC33429EABD79B0F /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */ = {isa = PBXBuildFile; fileRef = D15FE05F4A7D49FB8F5FAF9D /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */; };
		D14280689E014376A03FB306 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.hpp */ = {isa = PBXBuildFile; fileRef = 6ADCE3CE07674FE3A0A27949 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.hpp */; };
		D1446CFA02FD4A6FBEF31659 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.hpp */ = {isa = PBXBuildFile; fileRef = 38DF819012F3471CB17EBFF9 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.hpp */; };
		D14935F8E2CB48ABB24CB6F1 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */ = {isa = PBXBuildFile; fileRef = CFD2C51036DF430198E45C97 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */; };
		D15E84AB1F304DE19D68213F /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */ = {isa = PBXBuildFile; fileRef = A9A2843DFF314AA58BEB6DBD /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */; };
		D18FEEA6EDF447F785B20AC6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.hpp */ = {isa = PBXBuildFile; fileRef = E35F82CB868145A296C15F32 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.hpp */; };
		D1A120B767A34AD581F1C625 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.hpp */ = {isa = PBXBuildFile; fileRef = 11977EFA932D47F283F93703 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.hpp */; };
		D1A524B08C8A4F50A2848F58 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */ = {isa = PBXBuildFile; fileRef = C718F55022BC41CA9C2D582A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */; };
		D1A68E6F18B746E4B04186AA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */ = {isa = PBXBuildFile; fileRef = E03169157B38462D966A9860 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */; };
		D1AE78D1CD5C4046A7E84426 /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */ = {isa = PBXBuildFile; fileRef = 02E79F9F0B324FF4A1B5B6CE /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */; };
		D1BBA7144AD94BA495CD1016 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = FAB551B1B25D4039BCF44819 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.hpp */; };
		D1F17798AFFA462DA990D60D /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.hpp */ = {isa = PBXBuildFile; fileRef = 856C08DE39204F079F717F7F /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.hpp */; };
		D20D9BC29BCC41069898B418 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.hpp */ = {isa = PBXBuildFile; fileRef = F2713AB6A31640F48E6EFF57 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.hpp */; };
		D21105178DD24FF5827CDF82 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */ = {isa = PBXBuildFile; fileRef = 2D19CBC528E649899412625E /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */; };
		D22AC0478E8A48B8A9EBB474 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.hpp */ = {isa = PBXBuildFile; fileRef = F188DE7D37894F48B1FEAE0B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.hpp */; };
		D22EC938D3B84AF4A0CB2934 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */ = {isa = PBXBuildFile; fileRef = 9C4870A58E5644F4B792DC3E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */; };
		D22FCD64660C4048A53736FB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp */ = {isa = PBXBuildFile; fileRef = EBCA0FB195E14C64929E37ED /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp */; };
		D2358C352B214B04B3F44952 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultlatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = 4EDD4F64EB554C8EA8B1B5E3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultlatentmodel.hpp */; };
		D235FAE4C7CC41E1AF195B8A /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.hpp */ = {isa = PBXBuildFile; fileRef = 2FC847CAEA83476188B1A1F7 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.hpp */; };
		D23D68D2A1C347D5AC02902B /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */ = {isa = PBXBuildFile; fileRef = F216636F5A274CB891C26697 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */; };
		D24423C3D6EB49978649DA7D /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */ = {isa = PBXBuildFile; fileRef = 52DF7956B7EA4F799D2CF962 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */; };
		D26B22FC22604B4E885444DB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendeuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = 158ADE4F9CAF48788D312BFA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendeuropeanengine.hpp */; };
		D281AF6070A74E3EAE679C71 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */ = {isa = PBXBuildFile; fileRef = 3134812E73EF48BAB071AD9C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */; };
		D2AAEC7CD54147EC9CDAD0CB /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/all.hpp */ = {isa = PBXBuildFile; fileRef = 69C1FBBE447B498AAEBE56F1 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/all.hpp */; };
		D2AF04AEB44F4D21B477D85A /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.hpp */ = {isa = PBXBuildFile; fileRef = A03A0A3EFE9047F7904439E3 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.hpp */; };
		D2E09617DE97442FB8C21183 /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */ = {isa = PBXBuildFile; fileRef = 9CAC6BD8B5A0448D99DA7F45 /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */; };
		D2E88627D9AA4231BB589305 /* /Users/heiner/git/QuantLib/test-suite/businessdayconventions.hpp */ = {isa = PBXBuildFile; fileRef = 4F0AB8517E7A4E4780827457 /* /Users/heiner/git/QuantLib/test-suite/businessdayconventions.hpp */; };
		D2EF30AF60A34A25A581E12C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = F2ABDCF1A9D34BB9B1F8FCB2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.hpp */; };
		D2FE5BE3AF10418085A7BC2C /* /Users/heiner/git/QuantLib/test-suite/inflationcpibond.hpp */ = {isa = PBXBuildFile; fileRef = 6990A6FABBE547A59574AAA2 /* /Users/heiner/git/QuantLib/test-suite/inflationcpibond.hpp */; };
		D3246C5644D941E9B055EACE /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.hpp */ = {isa = PBXBuildFile; fileRef = 8CF51587C72144C9B6CBC9D9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.hpp */; };
		D3273EDA0F5A490CAAB55CA6 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */ = {isa = PBXBuildFile; fileRef = F55764BC14FB467B95D3629D /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */; };
		D340D0D142344DFDB100015A /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */ = {isa = PBXBuildFile; fileRef = 7F6898DBCCAB45A7BF4167C8 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */; };
		D35740AB9F7C430F8458A0C2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultlatentmodel.hpp */ = {isa = PBXBuildFile; fileRef = 23C7EC90B29C43029F30281E /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultlatentmodel.hpp */; };
		D3591DA150AC480ABFE18C47 /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */ = {isa = PBXBuildFile; fileRef = 4A52FD566BAB444B867701AC /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */; };
		D36439381B4E480598B86156 /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.hpp */ = {isa = PBXBuildFile; fileRef = 97DAA14898584B8492AEF36B /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.hpp */; };
		D383FD01B12E45509EEA5B75 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.hpp */ = {isa = PBXBuildFile; fileRef = F46A3A2085A7486FA1EFF410 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.hpp */; };
		D3890A19A04B4B2B903E0356 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/longstaffschwartzpathpricer.hpp */ = {isa = PBXBuildFile; fileRef = 542C9022D93A4B68A37F1F8E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/longstaffschwartzpathpricer.hpp */; };
		D38D1B99A4A94B39A6A48341 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */ = {isa = PBXBuildFile; fileRef = A6A9B9BF942C4475935C6CA2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */; };
		D39598D17F2A4B00A0F986CA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = C8CBABBB3C7B4E4DA1EAEF59 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */; };
		D3A843BEB3DC43FF91D959A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.hpp */ = {isa = PBXBuildFile; fileRef = C7C5FF51EDC04F23A5720E39 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.hpp */; };
		D3AFB98CE36C44B0AEF36433 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.hpp */ = {isa = PBXBuildFile; fileRef = 0D7B2FA7A47C4FEEB7F15536 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.hpp */; };
		D3C58F4572D1483EB4456558 /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */ = {isa = PBXBuildFile; fileRef = 20F589863BDB4AD6A351C08B /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */; };
		D3C8D066A4C446BA847B3FA8 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */ = {isa = PBXBuildFile; fileRef = 1EE7FA22A92D4D0DAF184542 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */; };
		D3D79B7AEE674079BC1033FC /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */ = {isa = PBXBuildFile; fileRef = 88C26617E4B94A3A87D3CFDC /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */; };
		D3DC2EB01D1F48F0B3661EB0 /* /Users/heiner/git/QuantLib/ql/math/statistics/sequencestatistics.hpp */ = {isa = PBXBuildFile; fileRef = 29DF9147E11140D49921BD35 /* /Users/heiner/git/QuantLib/ql/math/statistics/sequencestatistics.hpp */; };
		D3E8562E92144852B863D8E0 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */ = {isa = PBXBuildFile; fileRef = 5FADAA9184164ED5B932F823 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */; };
		D40B5CF7CA414D73A88823FE /* /Users/heiner/git/QuantLib/ql/cashflows/duration.hpp */ = {isa = PBXBuildFile; fileRef = 83650C01A5104B3593B9B526 /* /Users/heiner/git/QuantLib/ql/cashflows/duration.hpp */; };
		D41874F9C90D40759AC3391A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.hpp */ = {isa = PBXBuildFile; fileRef = B83A182C7D0E4547A37F37C7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.hpp */; };
		D4357B9450DE4566B90D5638 /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */ = {isa = PBXBuildFile; fileRef = 0FE7569CBCEC464FAADEAB78 /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */; };
		D43C834FAB3A4DCD9EB002D9 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */ = {isa = PBXBuildFile; fileRef = AA8E4C58DABB4F5AB53E787B /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */; };
		D44C302901C042BFA158E17B /* /Users/heiner/git/QuantLib/ql/time/calendar.hpp */ = {isa = PBXBuildFile; fileRef = F649D97EC38D4FA9A3F380A1 /* /Users/heiner/git/QuantLib/ql/time/calendar.hpp */; };
		D44ED4FED4504EECA7BC0486 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.hpp */ = {isa = PBXBuildFile; fileRef = FD0C6CA4A50C40AE9DEE841B /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.hpp */; };
		D4525068ACE64AA9BC94E1B9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/predefined1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = A883256218F74EE488485066 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/predefined1dmesher.hpp */; };
		D454D6C9698745559663CA4A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparsematrix.hpp */ = {isa = PBXBuildFile; fileRef = 7BAC186CC9B64A86935EF2D1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparsematrix.hpp */; };
		D4558C132E254269807666A1 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.hpp */ = {isa = PBXBuildFile; fileRef = A3A222CEEB314B4DB6FF626D /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.hpp */; };
		D45DE250447A4C1C8DFD2625 /* /Users/heiner/git/QuantLib/ql/models/all.hpp */ = {isa = PBXBuildFile; fileRef = 1A21B1DFE313488F9CE5544A /* /Users/heiner/git/QuantLib/ql/models/all.hpp */; };
		D46B459DB9F74C75865EC02B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp */ = {isa = PBXBuildFile; fileRef = 77EF39FA294C498AB66F850F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp */; };
		D46EDA72605B49139B2F3DD9 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.hpp */ = {isa = PBXBuildFile; fileRef = C1D4365D1BC84F8A9BC30160 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.hpp */; };
		D4A95E638CF9495A92F19ACE /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */ = {isa = PBXBuildFile; fileRef = 7D437E92BF0F4A9781831D8C /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */; };
		D4AFBCD34D634A79AAC9B287 /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */ = {isa = PBXBuildFile; fileRef = A8CD6EB3A501477781110FDA /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */; };
		D4B582DBC376480A8EBEBE38 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */ = {isa = PBXBuildFile; fileRef = 5BFA406AE5104229931BA6B8 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */; };
		D4BE3D6589C9419BA1E936AC /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.hpp */ = {isa = PBXBuildFile; fileRef = 805489C88BFF49C28E5AAB0C /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.hpp */; };
		D4C02424A0304DA09A85CEA2 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.hpp */ = {isa = PBXBuildFile; fileRef = 321A58ACB9434346B3B9E0A8 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.hpp */; };
		D4C77C36DD5E4F5AAA812008 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.hpp */ = {isa = PBXBuildFile; fileRef = F11FE76728E04190801C982D /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.hpp */; };
		D4D64B73F48843C0B4137B2D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.hpp */ = {isa = PBXBuildFile; fileRef = 1978CBAF1682451BA6B2012A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.hpp */; };
		D4F6C0D7E70F475C88776026 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 9400E0E69178461D87D46201 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */; };
		D51E2BF056B141D9AE2FD874 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = DF0590D31B6A4F54A1D23BD4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.hpp */; };
		D52213E92DC74E5FA96183D9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */ = {isa = PBXBuildFile; fileRef = AB0A16D068634D4DBB527701 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */; };
		D528DC7F137644BE9FCF97CB /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.hpp */ = {isa = PBXBuildFile; fileRef = 10E6EC52D09C4787926CAAEF /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.hpp */; };
		D535655C78344B7DA33A107F /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.hpp */ = {isa = PBXBuildFile; fileRef = 5E84265E375B49C09CEDC1A0 /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.hpp */; };
		D53D267BD4864A69A73532B4 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.hpp */ = {isa = PBXBuildFile; fileRef = E8BA00E2F7214E41A12B2A78 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.hpp */; };
		D54B73E000614CB1AB8D90E3 /* /Users/heiner/git/QuantLib/ql/quotes/derivedquote.hpp */ = {isa = PBXBuildFile; fileRef = D302F1109A0840EFBE9F6AFE /* /Users/heiner/git/QuantLib/ql/quotes/derivedquote.hpp */; };
		D5529B25B6D044B79E331D11 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.hpp */ = {isa = PBXBuildFile; fileRef = D7E929FBCCFE49B7BDD17193 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.hpp */; };
		D55E36E2D0804B12801D51D4 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.hpp */ = {isa = PBXBuildFile; fileRef = 641F0DE58B004D17B1C8591D /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.hpp */; };
		D568CB49CD464948B1F64E28 /* /Users/heiner/git/QuantLib/ql/currencies/all.hpp */ = {isa = PBXBuildFile; fileRef = 707DBE5921DB4882B2AE184C /* /Users/heiner/git/QuantLib/ql/currencies/all.hpp */; };
		D568DB6980A94DD4B9ADC4F7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */ = {isa = PBXBuildFile; fileRef = EDAB7EE2447142B1BCDEB4F1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */; };
		D58B39B74EF64F9D9E4BBC8E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */ = {isa = PBXBuildFile; fileRef = F04F28A3FB534DFBA2F37CBE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */; };
		D58DD240E0A646B98B75CA08 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/uscpi.hpp */ = {isa = PBXBuildFile; fileRef = 82ADD96DB55942419A5C4C1D /* /Users/heiner/git/QuantLib/ql/indexes/inflation/uscpi.hpp */; };
		D5A2D028309C46E4A99A0137 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */ = {isa = PBXBuildFile; fileRef = 59A7D868ACD04E37B3E375E3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */; };
		D5A97444012146B1AD1FB397 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube1.hpp */ = {isa = PBXBuildFile; fileRef = 557F8EAFB9A745C3A08CA891 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube1.hpp */; };
		D5B2D71AE158455EBF647E2C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */ = {isa = PBXBuildFile; fileRef = BE9664309BF5457AA70CF400 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */; };
		D5B62860CAE744D9A7558AE8 /* /Users/heiner/git/QuantLib/ql/pricingengines/all.hpp */ = {isa = PBXBuildFile; fileRef = EC26C8C88B8641D7AF1A85CA /* /Users/heiner/git/QuantLib/ql/pricingengines/all.hpp */; };
		D5D7944289AD41498F7E5B14 /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */ = {isa = PBXBuildFile; fileRef = CDF5C030FD834AD4A15959C2 /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */; };
		D5F5E3DA44B24DE1A6E2801F /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.hpp */ = {isa = PBXBuildFile; fileRef = CFF7BD1483054118A6F36A64 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.hpp */; };
		D6077877D3BC429DA2CD9D39 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 070EC5AE6CB34007A6AD5AF5 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp */; };
		D608667F609140EBB5D3F7A3 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/all.hpp */ = {isa = PBXBuildFile; fileRef = 4E16D9A029C845E6B26433B4 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/all.hpp */; };
		D61EBF334E6C458CA66E35B5 /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.hpp */ = {isa = PBXBuildFile; fileRef = 3EC6998B0733472C94D7901D /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.hpp */; };
		D62607FB0AE44AF6B16DAF6D /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 92B740E45D8A4C0D9E03D106 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.hpp */; };
		D674C2AE8F2D422DB9C77095 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 8727BDFB066046E090D97C5D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp */; };
		D67F05516F7C40C289BCF688 /* /Users/heiner/git/QuantLib/ql/experimental/credit/all.hpp */ = {isa = PBXBuildFile; fileRef = 0794BF79D18A47C29E8B15BA /* /Users/heiner/git/QuantLib/ql/experimental/credit/all.hpp */; };
		D68196930CFA4C0584D9C92E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/all.hpp */ = {isa = PBXBuildFile; fileRef = 83B6B660ADC2481D96029976 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/all.hpp */; };
		D6D02D90A1F0493ABFBFCF0C /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.hpp */ = {isa = PBXBuildFile; fileRef = 81BB97B8ADA34D56970F91DA /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.hpp */; };
		D6D5C18EF710406A9ED39B98 /* /Users/heiner/git/QuantLib/ql/math/statistics/statistics.hpp */ = {isa = PBXBuildFile; fileRef = 9C7AEA19164E44DF97488D31 /* /Users/heiner/git/QuantLib/ql/math/statistics/statistics.hpp */; };
		D7249FC686174FED8D907DF5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 30634B024CB84B18A4A9A682 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp */; };
		D72FBBBB64624F31AB5D24C2 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.hpp */ = {isa = PBXBuildFile; fileRef = E7ADC72FA8A5452189D476DD /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.hpp */; };
		D73116C5AE7C47F382BD9273 /* /Users/heiner/git/QuantLib/test-suite/gjrgarchmodel.cpp */ = {isa = PBXBuildFile; fileRef = B0C644BC651947709C1FA4E7 /* /Users/heiner/git/QuantLib/test-suite/gjrgarchmodel.cpp */; };
		D7329A21B02E4FEAA7822E8D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.hpp */ = {isa = PBXBuildFile; fileRef = 0B8232FF7E414011AF04ED55 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.hpp */; };
		D73571616B144AB190D4BA8D /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.hpp */ = {isa = PBXBuildFile; fileRef = CD441640113542B6964B7CA6 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.hpp */; };
		D7557C823B5D401C874785F1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */ = {isa = PBXBuildFile; fileRef = 83791D0520974A25B646BD99 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */; };
		D76880662BFC4587A1D68720 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.hpp */ = {isa = PBXBuildFile; fileRef = CA594C40E5F34478A7F6FFE9 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.hpp */; };
		D76B3E74C7DB4AB0BFC57691 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */ = {isa = PBXBuildFile; fileRef = B50F0A949E6E4C6893AF532D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */; };
		D7741A3319D4432C88753EC8 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.hpp */ = {isa = PBXBuildFile; fileRef = 5E32EBE78A744F91ADD359CB /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.hpp */; };
		D78B717428DF460D9F2AF92B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/all.hpp */ = {isa = PBXBuildFile; fileRef = 88D6086DBB1B4A3E801BD31A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/all.hpp */; };
		D7A5F76B748A4EACB1C74689 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newton.hpp */ = {isa = PBXBuildFile; fileRef = C5B7BBC829324F95BDD5F260 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newton.hpp */; };
		D7A9615A993446D59C6EDB81 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 1A1757F0F55445379F3A0A20 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */; };
		D7D8D32F79A54C7596E26576 /* /Users/heiner/git/QuantLib/ql/math/interpolations/linearinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 02C11D0B74F04273ADA64C6E /* /Users/heiner/git/QuantLib/ql/math/interpolations/linearinterpolation.hpp */; };
		D7F7AD914EBC464B976556AB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */ = {isa = PBXBuildFile; fileRef = A2117D6C947F4A1E8C059250 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */; };
		D80B438A56084EBDA2FC9BAD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */ = {isa = PBXBuildFile; fileRef = 2A186DB787574C7F9835647A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */; };
		D81089F526E743CBA115C504 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.hpp */ = {isa = PBXBuildFile; fileRef = 6EA2DA7F69A440DCA1DD08E3 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.hpp */; };
		D812D399D323417485B701D9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */ = {isa = PBXBuildFile; fileRef = 9A8368AE1BB94D29B3E9BB95 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */; };
		D81417AFD0884F5B9EEB4D60 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */ = {isa = PBXBuildFile; fileRef = 9A170075F05A42C4BCC17862 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */; };
		D82A5A55CD914B92AA0D8DC4 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp */ = {isa = PBXBuildFile; fileRef = D3DF01CE85524892A08E2417 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp */; };
		D83F83E04DEC44EC844A7697 /* /Users/heiner/git/QuantLib/ql/math/beta.hpp */ = {isa = PBXBuildFile; fileRef = F98C377F1C1A4BD997047298 /* /Users/heiner/git/QuantLib/ql/math/beta.hpp */; };
		D85A2907E397497FA7AA1582 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = A1C669B5633E4B58AE67B277 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.hpp */; };
		D85F7C1305B9485AB8EEB60E /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.hpp */ = {isa = PBXBuildFile; fileRef = 66B5117BE5C7442DA482423F /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.hpp */; };
		D86178B9E08E42D8B30586E6 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */ = {isa = PBXBuildFile; fileRef = A3E48068B6104E6B89B28B91 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */; };
		D86708635F6E470792B54B04 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/impliciteuler.hpp */ = {isa = PBXBuildFile; fileRef = 606F6F2982F5496394CE0840 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/impliciteuler.hpp */; };
		D879BA6F168245F883BBCCD9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/dkklibor.hpp */ = {isa = PBXBuildFile; fileRef = 52D56B6A8EB44D2EB0B870B8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/dkklibor.hpp */; };
		D894434E45354310987CAC50 /* /Users/heiner/git/QuantLib/ql/time/period.hpp */ = {isa = PBXBuildFile; fileRef = A6C8B53EF37B40D1B753A86C /* /Users/heiner/git/QuantLib/ql/time/period.hpp */; };
		D8A5121837DA4532A6EFC2CA /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionletstripper.hpp */ = {isa = PBXBuildFile; fileRef = 216265BB0BC243AD893DE583 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionletstripper.hpp */; };
		D8A86BB42C4A4C5691684AF8 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp */ = {isa = PBXBuildFile; fileRef = C7CA2F936EE8460FA187C1CD /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp */; };
		D8C21157A62D4743A1A1115F /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.hpp */ = {isa = PBXBuildFile; fileRef = 366108E302554080846CE9C9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.hpp */; };
		D8C7E37BF4F04617AC454027 /* /Users/heiner/git/QuantLib/ql/pricingengines/all.hpp */ = {isa = PBXBuildFile; fileRef = 886EADD8576B41D3BD3AABF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/all.hpp */; };
		D8D3942DD5B04860B3112301 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.hpp */ = {isa = PBXBuildFile; fileRef = BE8E695DB8D949519D355F04 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.hpp */; };
		D8E28E054125449EB8CE30B9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/inhomogeneouspooldef.hpp */ = {isa = PBXBuildFile; fileRef = 35C77CF0F68748FD9AE33AFE /* /Users/heiner/git/QuantLib/ql/experimental/credit/inhomogeneouspooldef.hpp */; };
		D8E2FAD2A0E34162971C2432 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.hpp */ = {isa = PBXBuildFile; fileRef = D503969D02524AFCBEEE6618 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.hpp */; };
		D8E86B22E17340C798B42517 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.hpp */ = {isa = PBXBuildFile; fileRef = 72257E21994D42788D10B25D /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.hpp */; };
		D8F68BADEBAF4887B5EA6B6E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */ = {isa = PBXBuildFile; fileRef = 97AD7CDD966D4C6084826AA4 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */; };
		D8FF1603497740E09F8CEFC0 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.hpp */ = {isa = PBXBuildFile; fileRef = 2B78A129179C4AC5B7C84DA7 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.hpp */; };
		D9065B50C7444D779BED7F58 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.hpp */ = {isa = PBXBuildFile; fileRef = A5B5295241564033998E55A1 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.hpp */; };
		D9153959981C4A798FE030C8 /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */ = {isa = PBXBuildFile; fileRef = FA44354E5DB94C0FA29746B0 /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */; };
		D9357BC05B91461789FA348A /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */ = {isa = PBXBuildFile; fileRef = 5311B34FC64840368EEFED1D /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */; };
		D938353E65894C9D8270C1EC /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.hpp */ = {isa = PBXBuildFile; fileRef = 3793FCC26C784272BE429665 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.hpp */; };
		D94207967F70452EBF4F31CB /* /Users/heiner/git/QuantLib/test-suite/lookbackoptions.cpp */ = {isa = PBXBuildFile; fileRef = 7E7FE031534349EFBE652FFB /* /Users/heiner/git/QuantLib/test-suite/lookbackoptions.cpp */; };
		D94AEBFA5AB84319ACB61075 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.hpp */ = {isa = PBXBuildFile; fileRef = 766558DF184446E6869994CD /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.hpp */; };
		D94D2D8877F249E2B43214D0 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomizedlds.hpp */ = {isa = PBXBuildFile; fileRef = DB2C904AB843420A92427478 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomizedlds.hpp */; };
		D94E3C8E30934FA29A73B9A4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.hpp */ = {isa = PBXBuildFile; fileRef = EE7BFF012F9B4D1A95435A0B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.hpp */; };
		D984612626E84CE5BDC24024 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */ = {isa = PBXBuildFile; fileRef = 4E5D39AE4F31409EA9278A27 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */; };
		D9A21D58D4D64459828D1FA6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */ = {isa = PBXBuildFile; fileRef = 0B1ABCF07751422688CFEF79 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */; };
		D9A3FC0F95FE4448B19A617D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 4C840355F82644308F63A42A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.hpp */; };
		D9BC649F406F4D0E8EECD125 /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.hpp */ = {isa = PBXBuildFile; fileRef = 547BF916F72E49DC8E2A0FCC /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.hpp */; };
		D9BE2601D6784131BDD3DAF7 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp */ = {isa = PBXBuildFile; fileRef = 16A5D5502D864A6595055134 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp */; };
		D9C5D5EC572C4ACB826F393D /* /Users/heiner/git/QuantLib/ql/types.hpp */ = {isa = PBXBuildFile; fileRef = 9D4D8A9AB2724FDC8D67A78E /* /Users/heiner/git/QuantLib/ql/types.hpp */; };
		D9EE35A77CA545A9A79AC61E /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */ = {isa = PBXBuildFile; fileRef = B0B9E62750494339A6AF7A34 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */; };
		D9F67E0889564BA985496D7D /* /Users/heiner/git/QuantLib/ql/math/beta.hpp */ = {isa = PBXBuildFile; fileRef = 03F1C99DF136489CAE671918 /* /Users/heiner/git/QuantLib/ql/math/beta.hpp */; };
		D9FF36EF848E4C408001311B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */ = {isa = PBXBuildFile; fileRef = 9CA804A326AB4048BFFA204B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */; };
		DA2B230DF9D9432BA9BE57D3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdstepconditionengine.hpp */ = {isa = PBXBuildFile; fileRef = ED4E597170964B3CA39BE7CF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdstepconditionengine.hpp */; };
		DA2B833DC353447D8C1B7EF5 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */ = {isa = PBXBuildFile; fileRef = 3B855AE6C3154037AED35293 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */; };
		DA2FAF37015649389FDB80AC /* /Users/heiner/git/QuantLib/test-suite/inflationcapfloor.cpp */ = {isa = PBXBuildFile; fileRef = 30005A0A32734CCB9C341C7A /* /Users/heiner/git/QuantLib/test-suite/inflationcapfloor.cpp */; };
		DA4E6C8699534160AC5CCDAE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */ = {isa = PBXBuildFile; fileRef = AB31C470613C444AA691C4DF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */; };
		DA5E2E8EC0AA442E98B0A0B9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp */ = {isa = PBXBuildFile; fileRef = 3B443E1EFBAA49FE97D0327C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp */; };
		DA6742196F0E432F9FB18D74 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice.hpp */ = {isa = PBXBuildFile; fileRef = 3293303391D0467C9F0CA1F5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice.hpp */; };
		DA67628CEA6F4A66AB2468C8 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/all.hpp */ = {isa = PBXBuildFile; fileRef = 043A0CB10D7A4AE6B6261A10 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/all.hpp */; };
		DA681215BF33459FA9112236 /* /Users/heiner/git/QuantLib/ql/math/interpolations/xabrinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = F7741A8C2F274835A2F9E182 /* /Users/heiner/git/QuantLib/ql/math/interpolations/xabrinterpolation.hpp */; };
		DA78B1ABCC0E4BCB9E25CD3E /* /Users/heiner/git/QuantLib/ql/interestrate.hpp */ = {isa = PBXBuildFile; fileRef = 2367CB9524234C598A7B2EA1 /* /Users/heiner/git/QuantLib/ql/interestrate.hpp */; };
		DA826BC5E7014AF09369470F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 3CBD39AE46844EBB8C425584 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.hpp */; };
		DA8E234EAE4444649F31298E /* /Users/heiner/git/QuantLib/test-suite/varianceswaps.hpp */ = {isa = PBXBuildFile; fileRef = E0A880CBAE9E4760BE186ADF /* /Users/heiner/git/QuantLib/test-suite/varianceswaps.hpp */; };
		DA92DC5EDCD846C8B70F8755 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */ = {isa = PBXBuildFile; fileRef = 4D70A715F750474BA93EDD67 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */; };
		DAAF0EE37E334E31A1500A46 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp */ = {isa = PBXBuildFile; fileRef = AB5DD6C6F2D7439BB911D268 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp */; };
		DAB256371D914CE896BEF143 /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */ = {isa = PBXBuildFile; fileRef = D573F4802EDF4F8384F1A9CC /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */; };
		DABEF55D55384DDB9E6928D5 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */ = {isa = PBXBuildFile; fileRef = BDB2FB2E81704944916F2A9E /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */; };
		DACCEE0057444CC8A35F8BD0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.hpp */ = {isa = PBXBuildFile; fileRef = 8A795306CF474603ADB0E6BD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.hpp */; };
		DAD8E902D364451286F91A0D /* /Users/heiner/git/QuantLib/ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp */ = {isa = PBXBuildFile; fileRef = B929152FDB514197B303D1E1 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp */; };
		DAE3450DE05149779FE8E4BF /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 4126751D8EE543A384FFFB6D /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.hpp */; };
		DAE7176550514A9F81EF0776 /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.hpp */ = {isa = PBXBuildFile; fileRef = D6ED6B1EBD104A398200424B /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.hpp */; };
		DAF266A1533F4E368745F3A8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.hpp */ = {isa = PBXBuildFile; fileRef = 60EADF64C4FC41A08BEC2FDA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.hpp */; };
		DAFBE6D6785B4CCDAE13EBA6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */ = {isa = PBXBuildFile; fileRef = 35767CE0ADD74950B6DDFC37 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */; };
		DB00641A26A7459D8B0C5EA8 /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */ = {isa = PBXBuildFile; fileRef = F3F0BCE8BF1C45609727CE90 /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */; };
		DB1269225F5C4C798C6F0066 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */ = {isa = PBXBuildFile; fileRef = 09C1A4D3775241CAB659BC44 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */; };
		DB14264188CC435393C3A0B5 /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */ = {isa = PBXBuildFile; fileRef = 8D2CA45FF0454C68BFFB336E /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */; };
		DB15D15D8E314E51973EC6DA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/all.hpp */ = {isa = PBXBuildFile; fileRef = CC4CCEC0AAF142F7A12DDAD7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/all.hpp */; };
		DB16567DC29C46E4B36B9E20 /* /Users/heiner/git/QuantLib/ql/models/parameter.hpp */ = {isa = PBXBuildFile; fileRef = 2AF5CC0002AC4553AC220633 /* /Users/heiner/git/QuantLib/ql/models/parameter.hpp */; };
		DB16C0FD5A19420EBA405295 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */ = {isa = PBXBuildFile; fileRef = 5F4577143E38406A8DF055F0 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */; };
		DB238D68D004407A90376C50 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = EAC34C86287E474396038A1B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */; };
		DB4324554F5547409C771DD9 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 3C4AA880C46D4928895FA593 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.hpp */; };
		DB43B89789A3419095329DFF /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.hpp */ = {isa = PBXBuildFile; fileRef = E8DC356654A14F9A8CD2BD89 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.hpp */; };
		DB44B54C12EE43B3B59657D3 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.hpp */ = {isa = PBXBuildFile; fileRef = 62E2FA9D2AF84604B5C61190 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.hpp */; };
		DB5B6E7DFEFE4EA1A5548BE2 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */ = {isa = PBXBuildFile; fileRef = D693F6F7863A4A2A8C597334 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */; };
		DB5FDF11301F4670870CD5AB /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */ = {isa = PBXBuildFile; fileRef = DC8E690C8A0146588924B5F8 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */; };
		DB729AC99D7F4FACA7296D60 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.hpp */ = {isa = PBXBuildFile; fileRef = 1013C7E317734859BB8A9336 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.hpp */; };
		DB7B5628F265424489870B8F /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */ = {isa = PBXBuildFile; fileRef = 5CEBB020DED345F38492B763 /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */; };
		DB7E7E6D540E4F60B1880EFC /* /Users/heiner/git/QuantLib/ql/experimental/credit/recursivelossmodel.hpp */ = {isa = PBXBuildFile; fileRef = B5B4630856FE4A87BFD5CA85 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recursivelossmodel.hpp */; };
		DB9ED484965B4D4C9CBA023F /* /Users/heiner/git/QuantLib/ql/models/volatility/simplelocalestimator.hpp */ = {isa = PBXBuildFile; fileRef = 50DA254E6CA846609F0056D1 /* /Users/heiner/git/QuantLib/ql/models/volatility/simplelocalestimator.hpp */; };
		DBA7D6568D9543C59E44077D /* /Users/heiner/git/QuantLib/test-suite/barrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 82C5CF7BE28A42EFAB3186D6 /* /Users/heiner/git/QuantLib/test-suite/barrieroption.hpp */; };
		DBA98BE11C3240F4B90175DC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp */ = {isa = PBXBuildFile; fileRef = 663012F08E124A7491C26FD3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp */; };
		DBAD287A8AFA4A96A21154E6 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.hpp */ = {isa = PBXBuildFile; fileRef = 1EFD1E8EF2A04B0BA23311D2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.hpp */; };
		DBC633D880884A1683D02AD4 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */ = {isa = PBXBuildFile; fileRef = A2DCABBC7B0B4F5BA28F336C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */; };
		DBCFCCDD929B499DAB3A6BD2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.hpp */ = {isa = PBXBuildFile; fileRef = 68B408BF78834453B1DFD2CB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.hpp */; };
		DBD1123B15E74420B23854D5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */ = {isa = PBXBuildFile; fileRef = F329D278676C4189AADAE52E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */; };
		DBD484244D0E46C5846C5EC0 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.hpp */ = {isa = PBXBuildFile; fileRef = 718AC22F0DA14BB7B392039F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.hpp */; };
		DBE0E9331BB04E7482F01293 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */ = {isa = PBXBuildFile; fileRef = 0D6F89096AF3458FAE89583F /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */; };
		DBE9D951D9B949ABA55455B1 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.hpp */ = {isa = PBXBuildFile; fileRef = C03C2F5E620542A5A96073FD /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.hpp */; };
		DBECD438ED834BAFB883C93D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localconstantvol.hpp */ = {isa = PBXBuildFile; fileRef = 6EB668C6165D40CF9E6B176F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localconstantvol.hpp */; };
		DC079ACDCE234A7991BD7525 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.hpp */ = {isa = PBXBuildFile; fileRef = F892B6DEE387486C966A0FA5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.hpp */; };
		DC322E14C812445085DBFE1D /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */ = {isa = PBXBuildFile; fileRef = D6D9128EBF084AD789947E78 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */; };
		DC38CE939AAF4DF3A9F2E764 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdmultiperiodengine.hpp */ = {isa = PBXBuildFile; fileRef = A317E3CCAACA4331A5718771 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdmultiperiodengine.hpp */; };
		DC483D873ED643919FAFA6F7 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */ = {isa = PBXBuildFile; fileRef = 3516A60BD4244806AA64E70E /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */; };
		DC659BBBE8CD48FCA6BFACEA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */ = {isa = PBXBuildFile; fileRef = 551682EA2171471BA652338B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */; };
		DC6C0BEFE05C4B90ABC18162 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */ = {isa = PBXBuildFile; fileRef = 18534303229D4CAE88C2496D /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */; };
		DC826B3E9B4A46FB82FFF5BA /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.hpp */ = {isa = PBXBuildFile; fileRef = B3C34178606D4800B9E4BD27 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.hpp */; };
		DC82A02486F446CA82555479 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.hpp */ = {isa = PBXBuildFile; fileRef = 9F98E9429DDD467BA5870AD5 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.hpp */; };
		DC8D239915DE4E0B83EF6BA1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */ = {isa = PBXBuildFile; fileRef = 56F7B4D2E5C5435BB2CB53F6 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */; };
		DC96C756FD29496B8177B0BD /* /Users/heiner/git/QuantLib/ql/indexes/ibor/usdlibor.hpp */ = {isa = PBXBuildFile; fileRef = 6BB3135B7B57464FA5258080 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/usdlibor.hpp */; };
		DCADCE61D8D4490AA8562670 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdshoutengine.hpp */ = {isa = PBXBuildFile; fileRef = FEDA3FEC565845518E6EEB8E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdshoutengine.hpp */; };
		DCDF6845201B447AA41099B0 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 9BADBE9AE41049FCA2E3F4C9 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.hpp */; };
		DD00C7D735B84199A54382B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */ = {isa = PBXBuildFile; fileRef = 6C4EEEFFD6284B11BB321E7E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */; };
		DD02D92C6FCE40FB8F25A2E1 /* /Users/heiner/git/QuantLib/ql/math/distributions/binomialdistribution.hpp */ = {isa = PBXBuildFile; fileRef = 790D60FC832A48B88AA59595 /* /Users/heiner/git/QuantLib/ql/math/distributions/binomialdistribution.hpp */; };
		DD10BACA7D3241CEBE75116C /* /Users/heiner/git/QuantLib/test-suite/americanoption.hpp */ = {isa = PBXBuildFile; fileRef = 747B680B4F6E4A75A15642E2 /* /Users/heiner/git/QuantLib/test-suite/americanoption.hpp */; };
		DD15E66EE1354D3483D73856 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/piecewisedefaultcurve.hpp */ = {isa = PBXBuildFile; fileRef = A84E09AA5DEE42449B9EC56F /* /Users/heiner/git/QuantLib/ql/termstructures/credit/piecewisedefaultcurve.hpp */; };
		DD1A6B6D25F0404EA403FE81 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */ = {isa = PBXBuildFile; fileRef = CB4CE852560546758E25D3F3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */; };
		DD248830D0F947489C6F1EF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */ = {isa = PBXBuildFile; fileRef = B0CD22AC6D93454CA9367F91 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */; };
		DD2D031908994994BCBF1646 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = BED6A15075EF477289405206 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */; };
		DD344A3D24A440BA868F1176 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */ = {isa = PBXBuildFile; fileRef = 3D555086A9D44CFCAE85C505 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */; };
		DD3DAF8F1ECD411CB57FA1B5 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.hpp */ = {isa = PBXBuildFile; fileRef = 42391BFAC3844BE596B01F53 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.hpp */; };
		DD5A17EB487D44A5A1DE335B /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.hpp */ = {isa = PBXBuildFile; fileRef = 50E6494157224173B723A50A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.hpp */; };
		DD5BECB92D1D400AB973F276 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp */ = {isa = PBXBuildFile; fileRef = 910ACB7AC18A42419D641106 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp */; };
		DD882928FEBA485DBF155AD4 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */ = {isa = PBXBuildFile; fileRef = AFE7C46721254F3A99E6A782 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */; };
		DD8C7FBF47674ABCA1261A65 /* /Users/heiner/git/QuantLib/ql/instruments/futures.hpp */ = {isa = PBXBuildFile; fileRef = 221520D1DF144E108326E190 /* /Users/heiner/git/QuantLib/ql/instruments/futures.hpp */; };
		DDA20B53C35B42D79E0811C1 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.hpp */ = {isa = PBXBuildFile; fileRef = 7DE1B6578B0440D496822331 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.hpp */; };
		DDAC69D6C1804D11BE35F5B7 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.hpp */ = {isa = PBXBuildFile; fileRef = 10D0F4E0B6FE4AC7A839D2AC /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.hpp */; };
		DDB68F8876AB4294B6A6E272 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */ = {isa = PBXBuildFile; fileRef = B52FA47BDA4040FC90E6B6B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */; };
		DDC4C0536A5F4967979CE1E4 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.hpp */ = {isa = PBXBuildFile; fileRef = 1FC621CBA9864E8494F139AF /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.hpp */; };
		DDC503B1F66244148C225040 /* /Users/heiner/git/QuantLib/test-suite/functions.cpp */ = {isa = PBXBuildFile; fileRef = A1E1DA51D42C4F178BE7CE50 /* /Users/heiner/git/QuantLib/test-suite/functions.cpp */; };
		DDD20D230A6148F4BC76D10B /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */ = {isa = PBXBuildFile; fileRef = 3FB293EE4DE54BE38F487893 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */; };
		DE0FCDCE0416470B963B1F93 /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.hpp */ = {isa = PBXBuildFile; fileRef = 61999BD4818E422F9C6DD86D /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.hpp */; };
		DE1B072096A44F7690F44A5F /* /Users/heiner/git/QuantLib/ql/math/interpolations/loginterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 52B222FC878E4E6A89F13C38 /* /Users/heiner/git/QuantLib/ql/math/interpolations/loginterpolation.hpp */; };
		DE206B9A33F84897A4F30FC3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */ = {isa = PBXBuildFile; fileRef = 9CBA834AAD134C4291C56526 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */; };
		DE28ACDCA5A343598776A2C0 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mcdiscreteasianengine.hpp */ = {isa = PBXBuildFile; fileRef = D14832EFF76F40C9A40E9EAD /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mcdiscreteasianengine.hpp */; };
		DE2D2803BE4A4C90BC3768F4 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */ = {isa = PBXBuildFile; fileRef = CA3CDA1778F7497B9EE8ED44 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */; };
		DE41EF645B1A4D45AACC6385 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.hpp */ = {isa = PBXBuildFile; fileRef = D4FB719D832241CD985032A0 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.hpp */; };
		DE46A5E1EDDA42CDACD372AA /* /Users/heiner/git/QuantLib/test-suite/money.cpp */ = {isa = PBXBuildFile; fileRef = 612BD4FF842C42B09D34D984 /* /Users/heiner/git/QuantLib/test-suite/money.cpp */; };
		DE4C4CCBC5A348CF963A6501 /* /Users/heiner/git/QuantLib/test-suite/cliquetoption.hpp */ = {isa = PBXBuildFile; fileRef = 41D0E2F792F440C89D4FE43B /* /Users/heiner/git/QuantLib/test-suite/cliquetoption.hpp */; };
		DE543A3D74EA47489945DCC5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.hpp */ = {isa = PBXBuildFile; fileRef = 0588FD18D9ED41F992938DE6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.hpp */; };
		DE572654149D441AB9A6AB82 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/all.hpp */ = {isa = PBXBuildFile; fileRef = 34A1CE9239B54918AFD926A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/all.hpp */; };
		DE5BA793D8F44006820CA340 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = E75FE7B431B841BC989AEF88 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */; };
		DE600F76968B4B83A1437225 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */ = {isa = PBXBuildFile; fileRef = CF9378513B5345EA8098F7CD /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */; };
		DE68CCF6B26A4034B921FA76 /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */ = {isa = PBXBuildFile; fileRef = 55CBE34A555344389797FF3A /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */; };
		DE7DE7FBFBF44B88B865A0C0 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.hpp */ = {isa = PBXBuildFile; fileRef = 53E481A0CC3049CC9A45F3B3 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.hpp */; };
		DE871C3A04A34BBB9C630FD2 /* /Users/heiner/git/QuantLib/test-suite/rounding.cpp */ = {isa = PBXBuildFile; fileRef = FC65B5C30B9141CDA8B5EB10 /* /Users/heiner/git/QuantLib/test-suite/rounding.cpp */; };
		DE8C3A44987E4B9EA90E45F5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp */ = {isa = PBXBuildFile; fileRef = B5B8A3A567E24273B290352D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp */; };
		DE90F3D5626F47958BD01B7A /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */ = {isa = PBXBuildFile; fileRef = DA0BD58CAFEA47CE9D24E73C /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */; };
		DEB4DF1B19C04B71811A0155 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = 28E3341DB513477394595B96 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.hpp */; };
		DEB869093DDF45F2B4AF4CAF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.hpp */ = {isa = PBXBuildFile; fileRef = 4C8E769131C741E3A738CBD9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.hpp */; };
		DECB3B00724C457B97BEDDAB /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.hpp */ = {isa = PBXBuildFile; fileRef = 9250DC8C8FBF4EE39CAC714D /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.hpp */; };
		DEFC91B8AAD044D2A430AAF8 /* /Users/heiner/git/QuantLib/test-suite/vpp.hpp */ = {isa = PBXBuildFile; fileRef = 59A78971C5274008B01F4D31 /* /Users/heiner/git/QuantLib/test-suite/vpp.hpp */; };
		DF10046A95B2472BB8C67F84 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardengine.hpp */ = {isa = PBXBuildFile; fileRef = DBB7028F940B4D368A45B0B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardengine.hpp */; };
		DF1C21A6C6DD4E8297C26DD8 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */ = {isa = PBXBuildFile; fileRef = C3A07511F3F744F89C11D69B /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */; };
		DF22EB5125C042F2AAEF7FED /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */ = {isa = PBXBuildFile; fileRef = FDE121172E504413B615E1E1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */; };
		DF3D305E6FD541FA9C05A098 /* /Users/heiner/git/QuantLib/ql/time/frequency.hpp */ = {isa = PBXBuildFile; fileRef = A39A6AA49FE54B91AF7206F9 /* /Users/heiner/git/QuantLib/ql/time/frequency.hpp */; };
		DF504D0B2E624FB387557555 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = A1A708BD6E0A4697910CE434 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */; };
		DF70903087A74D5C8201D8A4 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */ = {isa = PBXBuildFile; fileRef = 36F247AFD6544D94AB1FF5B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */; };
		DF8EAA0734914080BE07D467 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */ = {isa = PBXBuildFile; fileRef = D0D9EF1C20B940B7B1E3BBEA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */; };
		DF980B2225BD4EBD9AB74AA3 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/replicatingvarianceswapengine.hpp */ = {isa = PBXBuildFile; fileRef = 0C51BA99EE9C4A5D9BFA89DE /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/replicatingvarianceswapengine.hpp */; };
		DFA7CF4113D14DBE9620EF3B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.hpp */ = {isa = PBXBuildFile; fileRef = C12A317B5F2340699D3F3B31 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.hpp */; };
		DFB7CC00161E4762B5127A6C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/exercisevalue.hpp */ = {isa = PBXBuildFile; fileRef = EB90710828C64C55B0CB4821 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/exercisevalue.hpp */; };
		DFCD87A826F44FCCB19DFFF5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = C472443F95C14F87A35BAE8A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */; };
		DFD92A9C3C214A6A848F5CE2 /* /Users/heiner/git/QuantLib/test-suite/lazyobject.cpp */ = {isa = PBXBuildFile; fileRef = DCFB35CFE17B4C4FB7FA7048 /* /Users/heiner/git/QuantLib/test-suite/lazyobject.cpp */; };
		E01144BD5DEB46DEBE1B4F21 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */ = {isa = PBXBuildFile; fileRef = 1DE62CC0738C43D6ABEE2C7D /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */; };
		E02F2F85097C4A3A92ACC80F /* /Users/heiner/git/QuantLib/ql/experimental/risk/all.hpp */ = {isa = PBXBuildFile; fileRef = C3ABE427B30C406DA0A21909 /* /Users/heiner/git/QuantLib/ql/experimental/risk/all.hpp */; };
		E039C1D78E8946748F89C2AB /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */ = {isa = PBXBuildFile; fileRef = 2CD949F0F0E640C190A363DC /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */; };
		E0445FFCA54B45A7A5E27A3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp */ = {isa = PBXBuildFile; fileRef = BD044407708E40E581FC8176 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp */; };
		E06C4ACF7CD04E938AE09AA1 /* /Users/heiner/git/QuantLib/test-suite/spreadoption.cpp */ = {isa = PBXBuildFile; fileRef = 8B7BF05DE4DD416B93BC90D9 /* /Users/heiner/git/QuantLib/test-suite/spreadoption.cpp */; };
		E072305DB6DF456691CB7E55 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.hpp */ = {isa = PBXBuildFile; fileRef = 62D9C0D4BD714284A2FA5107 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.hpp */; };
		E07902D7D3CA4D3CA8EEDB84 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */ = {isa = PBXBuildFile; fileRef = 0208706D2D4B45C2AC5EB32F /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */; };
		E08F7A9CECF14AA1AE4FC9F0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.hpp */ = {isa = PBXBuildFile; fileRef = 8F4C1FFA957A4762BFAB1D8F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.hpp */; };
		E0B8D04FD29E4ABD8965AAB2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */ = {isa = PBXBuildFile; fileRef = 8D760B1A825C4E8D93035BFE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */; };
		E0C20B6431C949ADA6E33B38 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */ = {isa = PBXBuildFile; fileRef = 1954311327744B79B953D830 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */; };
		E0C53B55996E49C1BA0A4093 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */ = {isa = PBXBuildFile; fileRef = 4CAABD398C5A445093C29DCE /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */; };
		E0E971007110437987DE1AA8 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */ = {isa = PBXBuildFile; fileRef = 7C983C0375E24F66B15C87EF /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */; };
		E0FA415D5829416FA19C63EA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */ = {isa = PBXBuildFile; fileRef = CDFDD7CBCC7B45DAB65FF6B1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */; };
		E11D5C0D46F6447D9961352E /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.hpp */ = {isa = PBXBuildFile; fileRef = D718CCCF90974573B2E49F9B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.hpp */; };
		E122F43344904851849562CF /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.hpp */ = {isa = PBXBuildFile; fileRef = 6F606644D6D148FEB55FE05F /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.hpp */; };
		E122FCE4C4FF42649F1014C5 /* /Users/heiner/git/QuantLib/ql/experimental/math/polarstudenttrng.hpp */ = {isa = PBXBuildFile; fileRef = 7FB66F9DC2804907841B737D /* /Users/heiner/git/QuantLib/ql/experimental/math/polarstudenttrng.hpp */; };
		E12FAB0664494F2E9EA149E9 /* /Users/heiner/git/QuantLib/ql/time/schedule.hpp */ = {isa = PBXBuildFile; fileRef = 23BD5765BA67424C83CB0090 /* /Users/heiner/git/QuantLib/ql/time/schedule.hpp */; };
		E13E45C6874246A581AC9099 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */ = {isa = PBXBuildFile; fileRef = 511F0986157A4C66B9206276 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */; };
		E16808DA4FDB43FF84A02565 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */ = {isa = PBXBuildFile; fileRef = 74BC53FEC55B47C596EFB645 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */; };
		E1810F6A31DD4B90B179E387 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.hpp */ = {isa = PBXBuildFile; fileRef = 657814075AB2434D9A4DF019 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.hpp */; };
		E18C283AAEE149B596059F6B /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */ = {isa = PBXBuildFile; fileRef = 9A33ED317BFF40019193D257 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */; };
		E1901CB7A9434423802C41C9 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */ = {isa = PBXBuildFile; fileRef = 8EBDF6D82C6F4A4E89E24940 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */; };
		E19024A3C30D4CECBF679BA4 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 4FCCA9B9B33E4E8AB3867289 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */; };
		E1977D2EE88046A9A8CB87D9 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.hpp */ = {isa = PBXBuildFile; fileRef = 84156C187F794A57B3DDF033 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.hpp */; };
		E1ABFA8720224DA4A5404806 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */ = {isa = PBXBuildFile; fileRef = D0D95CF4A79F48DF8199A134 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */; };
		E1CE186DE1904233A6126613 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */ = {isa = PBXBuildFile; fileRef = 550ED4F4E1D341B38BCEFA4A /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */; };
		E1D03F1D02EE4D24BC84D8CD /* /Users/heiner/git/QuantLib/ql/currencies/europe.hpp */ = {isa = PBXBuildFile; fileRef = ADF442DB62D84267A393A32B /* /Users/heiner/git/QuantLib/ql/currencies/europe.hpp */; };
		E1DBB98EAD7D417FB9E2EE11 /* /Users/heiner/git/QuantLib/ql/indexes/region.hpp */ = {isa = PBXBuildFile; fileRef = 6EDD4C731E40497DB81EAC98 /* /Users/heiner/git/QuantLib/ql/indexes/region.hpp */; };
		E1FC3555FF6348AC95952CBD /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.hpp */ = {isa = PBXBuildFile; fileRef = 31430263931F44309BE91034 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.hpp */; };
		E23019541EBA468DAE2A0876 /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */ = {isa = PBXBuildFile; fileRef = 060427E58FF042F4A747B699 /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */; };
		E241C9309FB14EEDA1AEDA53 /* /Users/heiner/git/QuantLib/ql/math/optimization/costfunction.hpp */ = {isa = PBXBuildFile; fileRef = 075F5865D5A64AE8B250BAFE /* /Users/heiner/git/QuantLib/ql/math/optimization/costfunction.hpp */; };
		E2429D70265C47EC82D0204F /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */ = {isa = PBXBuildFile; fileRef = 5CEF619630A24B4390713249 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */; };
		E24E5B08E0374E64BA5C549A /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.hpp */ = {isa = PBXBuildFile; fileRef = 53EB17ABCDD84589988DDC0A /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.hpp */; };
		E25387C93A85438F86E916FD /* /Users/heiner/git/QuantLib/ql/math/integrals/all.hpp */ = {isa = PBXBuildFile; fileRef = 3495F0662A744AAB9911208C /* /Users/heiner/git/QuantLib/ql/math/integrals/all.hpp */; };
		E2570D1EC3474084B3AD6A4F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 31925C0F5E1C4886BAC78322 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.hpp */; };
		E2582A2B3646475BB8918112 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */ = {isa = PBXBuildFile; fileRef = DCCD1DBBB5F3487C95DE8911 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */; };
		E25B5F711E004FED9B4B7335 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */ = {isa = PBXBuildFile; fileRef = 264DE3704EB145CDBD664A60 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */; };
		E25B9BDAF54F4C6A9700D6B8 /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.hpp */ = {isa = PBXBuildFile; fileRef = 966CF29F69F54878B19CE43E /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.hpp */; };
		E25EABAAF5CF47FA86A13C9F /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.hpp */ = {isa = PBXBuildFile; fileRef = 9FDE3AA0CC814B54AABA36D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.hpp */; };
		E25EBDBDAF394DA6A9E3D536 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp */ = {isa = PBXBuildFile; fileRef = 92D9D433A29B4F3CB13ACE06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp */; };
		E2605F4839C74A6BAD3F4618 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */ = {isa = PBXBuildFile; fileRef = 3B470B7B2DCA4DF0A451A790 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */; };
		E27F7F7DBA0C413098E88C27 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */ = {isa = PBXBuildFile; fileRef = 8A774696C6FA4408A68CF520 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */; };
		E2997AF3236D4A979C46D7DC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */ = {isa = PBXBuildFile; fileRef = 3529B286458B4BB6AEC25EB6 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */; };
		E29FE6E057FC4F21A7DA6185 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.hpp */ = {isa = PBXBuildFile; fileRef = AEFD384D848B44FFB8F8F7EA /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.hpp */; };
		E2A80EBAD60648D382623288 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */ = {isa = PBXBuildFile; fileRef = 125C2B1CCA7F43D096E40ED5 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */; };
		E2AC8F0D8BD746B2B682D121 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */ = {isa = PBXBuildFile; fileRef = 11FB914FE907427E9768530C /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */; };
		E2CFFB88B0DF46D496CCB838 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/frhicp.hpp */ = {isa = PBXBuildFile; fileRef = 591EE9370F3B4193BCA917E8 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/frhicp.hpp */; };
		E2EADD1648AF434A8C121DF7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/predefined1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = A95854D2A2324C7FB32FBBFF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/predefined1dmesher.hpp */; };
		E2FF45DB1A9E4E6D8F48AF56 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp */ = {isa = PBXBuildFile; fileRef = 3CCD738FA2AA4E0BB5D6D10A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp */; };
		E3231713A74C41C880788994 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */ = {isa = PBXBuildFile; fileRef = B8E8B099D48247ABA220A1D0 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */; };
		E33E5DC5885443129C1B66CD /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.hpp */ = {isa = PBXBuildFile; fileRef = 8DA5DDA144684793A5301851 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.hpp */; };
		E345899D35AD4465B987EEB2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp */ = {isa = PBXBuildFile; fileRef = 7D3979D33CD44BA4A7841F2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp */; };
		E34B997BFAE147ED835C5E51 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.hpp */ = {isa = PBXBuildFile; fileRef = 3F5AF2385E8745DD9164E051 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.hpp */; };
		E3511289CEDF47BBA57997EA /* /Users/heiner/git/QuantLib/ql/prices.hpp */ = {isa = PBXBuildFile; fileRef = 9F4A5A047E634345A99F9D8C /* /Users/heiner/git/QuantLib/ql/prices.hpp */; };
		E3634C2C21FB475CA87B4241 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.hpp */ = {isa = PBXBuildFile; fileRef = 78EDEFF8706F43DCACD1D7C5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.hpp */; };
		E365019F6581427394489C2C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp */ = {isa = PBXBuildFile; fileRef = F37A69B285DF4C0BAC842F04 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp */; };
		E367D77372A3402B83EADF34 /* /Users/heiner/git/QuantLib/ql/math/optimization/problem.hpp */ = {isa = PBXBuildFile; fileRef = B764E97B95C24B75AE40A676 /* /Users/heiner/git/QuantLib/ql/math/optimization/problem.hpp */; };
		E36AF3ADEFF1496CA12F9B51 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.hpp */ = {isa = PBXBuildFile; fileRef = 9BD2EE5156E742ACB42F61E5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.hpp */; };
		E377794C7E1A4FFB83C9B348 /* /Users/heiner/git/QuantLib/test-suite/digitalcoupon.hpp */ = {isa = PBXBuildFile; fileRef = EEC985238EB84C1F899BD995 /* /Users/heiner/git/QuantLib/test-suite/digitalcoupon.hpp */; };
		E39D1D6D86594609A08DA0D2 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.hpp */ = {isa = PBXBuildFile; fileRef = 16780108D19F433B987B756B /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.hpp */; };
		E3A2A359C3D242BD924DEAF1 /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */ = {isa = PBXBuildFile; fileRef = 7194F5234DAA4AB9BC319AB5 /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */; };
		E3AB62E26BD54EC0B3A3BEDF /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.hpp */ = {isa = PBXBuildFile; fileRef = D33CB2BDAE3D4358931C3213 /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.hpp */; };
		E3B341EFBC674C40B44C75B1 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */ = {isa = PBXBuildFile; fileRef = 55D6AD34AAB24215830E2708 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */; };
		E3B8FB0416204838B3CD9288 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp */ = {isa = PBXBuildFile; fileRef = 92AF0E8F37D043FEBCF5D8CB /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp */; };
		E3C755172CDF466E9EF784A2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.hpp */ = {isa = PBXBuildFile; fileRef = D5C16FE44D96443F949F97F8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.hpp */; };
		E3DA502233B54BFC87E61819 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */ = {isa = PBXBuildFile; fileRef = C52DE0662ED54651A26357D4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */; };
		E3E22D5BEB85461C92436DE4 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */ = {isa = PBXBuildFile; fileRef = 2BDBC7E035444FE18C152B06 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */; };
		E3EF42261AB6431BA7785E9A /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 91B472D43C5F4DB59EEC49A2 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */; };
		E41EB9FD0F664B29A3879C78 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.hpp */ = {isa = PBXBuildFile; fileRef = 9ABC8BD57CBA447B8A4D2C2A /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.hpp */; };
		E421D48D288F4CC2AF3F4AA2 /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */ = {isa = PBXBuildFile; fileRef = 8091BD31E6604F4A91D15BDE /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */; };
		E438A637DBFF4CB98C0969B1 /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */ = {isa = PBXBuildFile; fileRef = 2C47CF0AE49B4E669F9FA173 /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */; };
		E44E053CD1CB4759ABCF89F1 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/all.hpp */ = {isa = PBXBuildFile; fileRef = 8D9420B56EAA48C3ACE84B69 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/all.hpp */; };
		E452F437E3584E5EA9D4B1B8 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */ = {isa = PBXBuildFile; fileRef = E99579EDBF4B4749BF8893ED /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */; };
		E45B5EE37BC04095B18262F1 /* /Users/heiner/git/QuantLib/test-suite/instruments.cpp */ = {isa = PBXBuildFile; fileRef = C7FA05A78AE646658F759F82 /* /Users/heiner/git/QuantLib/test-suite/instruments.cpp */; };
		E45CC3A32F26490F980A1F3B /* /Users/heiner/git/QuantLib/test-suite/daycounters.hpp */ = {isa = PBXBuildFile; fileRef = 5AB03163050B4FBAAFBACC08 /* /Users/heiner/git/QuantLib/test-suite/daycounters.hpp */; };
		E46D056BD5BD49DF8CE5F322 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = 4E08CEEA2048420AB8977843 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */; };
		E46E78C9B9E14282A2A25043 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.hpp */ = {isa = PBXBuildFile; fileRef = 8C0B81633D0C442EA4837E63 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.hpp */; };
		E476108D76D04AB7B91602DF /* /Users/heiner/git/QuantLib/test-suite/piecewiseyieldcurve.cpp */ = {isa = PBXBuildFile; fileRef = D62FAE78552C405A9581CA27 /* /Users/heiner/git/QuantLib/test-suite/piecewiseyieldcurve.cpp */; };
		E49184A2245C4393A2F3ADFC /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */ = {isa = PBXBuildFile; fileRef = 7EC9FA79344743B1893E25FB /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */; };
		E49AE294834F440C9AE00E55 /* /Users/heiner/git/QuantLib/ql/math/statistics/riskstatistics.hpp */ = {isa = PBXBuildFile; fileRef = 60B50F877AF546F6A8E137BC /* /Users/heiner/git/QuantLib/ql/math/statistics/riskstatistics.hpp */; };
		E4AABAA420ED452AAD55247A /* /Users/heiner/git/QuantLib/ql/experimental/commodities/pricingperiod.hpp */ = {isa = PBXBuildFile; fileRef = 5DA77F28EB074066B2D36DDE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/pricingperiod.hpp */; };
		E4C308BD52FB49EABB1E6F16 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newtonsafe.hpp */ = {isa = PBXBuildFile; fileRef = 89BD68E8AF5B4CE2A6215E4E /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newtonsafe.hpp */; };
		E4DE5FBE6223420FAD5504D4 /* /Users/heiner/git/QuantLib/test-suite/covariance.cpp */ = {isa = PBXBuildFile; fileRef = CF9AAAB9B5C34C998C2DE93B /* /Users/heiner/git/QuantLib/test-suite/covariance.cpp */; };
		E4F0D8BB0138408F9FEE3434 /* /Users/heiner/git/QuantLib/test-suite/gsr.hpp */ = {isa = PBXBuildFile; fileRef = 7746FEBE259C4FCC857B0E2A /* /Users/heiner/git/QuantLib/test-suite/gsr.hpp */; };
		E4F4228EC05A4C48AAE4F85A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.hpp */ = {isa = PBXBuildFile; fileRef = 88E7D3678404495C982E864B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.hpp */; };
		E4F545DF69F646D9921671ED /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.hpp */ = {isa = PBXBuildFile; fileRef = 413F3AFDF8E7469F90CD17AE /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.hpp */; };
		E4F7FA475BB444E7AD45F2FE /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = 1BDAB7D32A1E41C2BAFB0CFF /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.hpp */; };
		E4FBE4043DC44885B35DE1D8 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */ = {isa = PBXBuildFile; fileRef = 87C84CEF7AE4458FA0CFDF61 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */; };
		E50C7460B0B6415887C16702 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */ = {isa = PBXBuildFile; fileRef = BC3A95E90CDD4727B7119C37 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */; };
		E5292E6D0DA34B9C8DFACD3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/cranknicolson.hpp */ = {isa = PBXBuildFile; fileRef = 0B8C592F96C3425F85938A85 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/cranknicolson.hpp */; };
		E5307ECC073545F3874D5DC1 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */ = {isa = PBXBuildFile; fileRef = 0780C705C4154D8B975755E7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */; };
		E533AE081DD840F3AE67738C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */ = {isa = PBXBuildFile; fileRef = 6356D87B28E8404AB8CF479B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */; };
		E53833C4139C45FF9252662A /* /Users/heiner/git/QuantLib/ql/config.mingw.hpp */ = {isa = PBXBuildFile; fileRef = 3C188940BD2E4E90ADF34F18 /* /Users/heiner/git/QuantLib/ql/config.mingw.hpp */; };
		E54A8AB292AC4E2DB0A3FCF7 /* /Users/heiner/git/QuantLib/test-suite/transformedgrid.cpp */ = {isa = PBXBuildFile; fileRef = 04835652F2E14205A134A51E /* /Users/heiner/git/QuantLib/test-suite/transformedgrid.cpp */; };
		E5528AD471814876A738E403 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */ = {isa = PBXBuildFile; fileRef = F47AF65474A94AB0981A41C4 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */; };
		E555A2D7BE5C4FB29CB9E97D /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.hpp */ = {isa = PBXBuildFile; fileRef = F0E277F634574B469BAE10FE /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.hpp */; };
		E558424468644210B60F98CC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp */ = {isa = PBXBuildFile; fileRef = 7E827C498238405384CC8BBD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp */; };
		E560D4009C99429CAB66A15E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = ABBFA905E9BB4B9F9F1C8B98 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */; };
		E5638235D4BA4C2A9AEF8B81 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.hpp */ = {isa = PBXBuildFile; fileRef = 40FAF780C8174D9FA0810F11 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.hpp */; };
		E564E274FA5245ED928E178F /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */ = {isa = PBXBuildFile; fileRef = 6B83ADB9CDB5435C905E8B6D /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */; };
		E56A19EDDA644B00995E4F58 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */ = {isa = PBXBuildFile; fileRef = D8D73301E8F6476E8BC1D3C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */; };
		E572A62210A74354B5BC0B56 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/all.hpp */ = {isa = PBXBuildFile; fileRef = E17A1ADB508846B49C4D3AFB /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/all.hpp */; };
		E59533B1797C4CFC9C6B0468 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */ = {isa = PBXBuildFile; fileRef = 07CBC9CDBD0D4542A412C608 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */; };
		E597B83484304483AD821089 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */ = {isa = PBXBuildFile; fileRef = FE60A17DA7B64E06A5F8FA29 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */; };
		E5AE84D553F44EA48AB6F397 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/all.hpp */ = {isa = PBXBuildFile; fileRef = D290AEF05BD24F11B4DDC6EB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/all.hpp */; };
		E5B314068C8B420BA04A116E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */ = {isa = PBXBuildFile; fileRef = D8B6143BC89C4C3D82777E90 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */; };
		E5C4FFEEEFD74CE3A3135C45 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.hpp */ = {isa = PBXBuildFile; fileRef = F2B9B07DBD1548409F2B1533 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.hpp */; };
		E5E15A54CCD145AA806F4B1E /* /Users/heiner/git/QuantLib/test-suite/lookbackoptions.hpp */ = {isa = PBXBuildFile; fileRef = 2874A45AAF6B448E9067AA35 /* /Users/heiner/git/QuantLib/test-suite/lookbackoptions.hpp */; };
		E5EC305EF31342C68009C210 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = 2CECD4ED9BF24260876A2B88 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */; };
		E63232BFDAB04D88B44E244C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */ = {isa = PBXBuildFile; fileRef = F7E54AD333FF481AB555F8C2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */; };
		E6793EF385804DB281A4D8A5 /* /Users/heiner/git/QuantLib/ql/quotes/derivedquote.hpp */ = {isa = PBXBuildFile; fileRef = C000305B6D38444E8F25E926 /* /Users/heiner/git/QuantLib/ql/quotes/derivedquote.hpp */; };
		E67C7DB88CE742FEBE1B0B17 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = 586D55DF025C4040B875960B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.hpp */; };
		E68ACA4971434AFDBBC5AF88 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */ = {isa = PBXBuildFile; fileRef = DF35DCBD7496457280F56411 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */; };
		E6929DA4B0A3411CB80F3108 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */ = {isa = PBXBuildFile; fileRef = 0B5768E505214AC5B2BDA628 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */; };
		E69673B7CD974EE59E6EF00E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */ = {isa = PBXBuildFile; fileRef = 49D2D15606A04E4AB31C3A64 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */; };
		E69F3262808C4C5C9F576C4E /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.hpp */ = {isa = PBXBuildFile; fileRef = EFFF9ED5DA064D26A3E83AAF /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.hpp */; };
		E6A6317F5A464616BDA7F837 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = AAC6A260398F41959098B861 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp */; };
		E6D54582F5214C24A4365FB1 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.hpp */ = {isa = PBXBuildFile; fileRef = 7E161495F1D843E48C982107 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.hpp */; };
		E6E11D7B96E2402D8A7653D8 /* /Users/heiner/git/QuantLib/ql/experimental/math/laplaceinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = F68C2DF5213F411FAD4A4A5C /* /Users/heiner/git/QuantLib/ql/experimental/math/laplaceinterpolation.hpp */; };
		E700CD615B3A4D4EAA8C4C70 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = C071F05007D44D1F916A25DF /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */; };
		E7094BD1E3194B62B39FC372 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.hpp */ = {isa = PBXBuildFile; fileRef = E58AF359CCF84C8F991C766F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.hpp */; };
		E70A9F3234404B46AE848153 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */ = {isa = PBXBuildFile; fileRef = EBC0FD7C062A4B9DA4755E7A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */; };
		E7104ACB575C4025B61F48E5 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.hpp */ = {isa = PBXBuildFile; fileRef = 99BCC8A0559F4D32B89641F0 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.hpp */; };
		E72009BD811B4905B5A42D6E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/petroleumunitsofmeasure.hpp */ = {isa = PBXBuildFile; fileRef = EBBBBD5A96AB4A328A5BCC30 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/petroleumunitsofmeasure.hpp */; };
		E739F1C52CFD454B85A50A6E /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */ = {isa = PBXBuildFile; fileRef = 098181AA005E468BA725BA06 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */; };
		E739FF5F781746B1A9835512 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp */ = {isa = PBXBuildFile; fileRef = BC2E20DC79E24ED597227BC1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp */; };
		E73F4043B269498B9D82CE45 /* /Users/heiner/git/QuantLib/test-suite/himalayaoption.hpp */ = {isa = PBXBuildFile; fileRef = AFE0AD37258D4AF98FB61E2C /* /Users/heiner/git/QuantLib/test-suite/himalayaoption.hpp */; };
		E7418B64301446C4821D591F /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.hpp */ = {isa = PBXBuildFile; fileRef = 2E52F2A203D04ED7BD8A05EB /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.hpp */; };
		E7425A73201A4D209E465CAF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp */ = {isa = PBXBuildFile; fileRef = CCA2F79442154547B1F7DB31 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp */; };
		E74AB5FAAA3D4E9882CC13F3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.hpp */ = {isa = PBXBuildFile; fileRef = CF6D8FB3F75D4377887547A5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.hpp */; };
		E74CB7C5C1094E9F965F3DF0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */ = {isa = PBXBuildFile; fileRef = 4C99148780C04CDD81D0E05B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */; };
		E75334220D254493BD7981BF /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */ = {isa = PBXBuildFile; fileRef = DC4B3936C0434087A2F43764 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */; };
		E756DC22BB6045C8B57ACBFC /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = 68C841EE4FBC4DF3916FF4B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp */; };
		E7829781FC1844F49F8AA681 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */ = {isa = PBXBuildFile; fileRef = 052B85109AC740EBB08262E3 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */; };
		E78B89F74530457981D6369D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */ = {isa = PBXBuildFile; fileRef = 71AD06EA63AD48F7878CE848 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */; };
		E790D338DF174203B2224C28 /* /Users/heiner/git/QuantLib/test-suite/inflationcpicapfloor.cpp */ = {isa = PBXBuildFile; fileRef = FCBCEF86AC3341B98BEC6C7C /* /Users/heiner/git/QuantLib/test-suite/inflationcpicapfloor.cpp */; };
		E7911A0EA6694CB196FD253A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.hpp */ = {isa = PBXBuildFile; fileRef = E2C7D4444DB14BC087D60F12 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.hpp */; };
		E7920610C9E64E1398D1303F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.hpp */ = {isa = PBXBuildFile; fileRef = 73609021CAAF4E7DA01E20E1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.hpp */; };
		E79B44C28B304F15951A6552 /* /Users/heiner/git/QuantLib/Examples/EquityOption/EquityOption.cpp */ = {isa = PBXBuildFile; fileRef = 5DC595DEB52B4106A60C0634 /* /Users/heiner/git/QuantLib/Examples/EquityOption/EquityOption.cpp */; };
		E7A4BBD5DC6D4A4286C09F14 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.hpp */ = {isa = PBXBuildFile; fileRef = 7B2A70952E4D4C3BBD5D35EA /* /Users/heiner/git/QuantLib/ql/math/primenumbers.hpp */; };
		E7D4590E23A44E74A360782B /* /Users/heiner/git/QuantLib/ql/math/fastfouriertransform.hpp */ = {isa = PBXBuildFile; fileRef = 88CFD5B6E13340B9BC044AE8 /* /Users/heiner/git/QuantLib/ql/math/fastfouriertransform.hpp */; };
		E7EEE30A9B424A5F823FB54E /* /Users/heiner/git/QuantLib/ql/time/daycounters/all.hpp */ = {isa = PBXBuildFile; fileRef = F73D239006734A41AC271111 /* /Users/heiner/git/QuantLib/ql/time/daycounters/all.hpp */; };
		E80A8F99E1DF47FFBE925789 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */ = {isa = PBXBuildFile; fileRef = F0EE71A275434CF29A7322B2 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */; };
		E80B95B76F1C44F4A5401CEA /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */ = {isa = PBXBuildFile; fileRef = 8BF37D2B96C44A608462C8E6 /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */; };
		E80D681DCACE4CB4BBC2A846 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.hpp */ = {isa = PBXBuildFile; fileRef = F1B3AD8D544E4EA1A5F68B70 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.hpp */; };
		E82609F9349C40478637D515 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = C559C41117724AC098D3B3C7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.hpp */; };
		E83005D5BFB04707ABAB0290 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/all.hpp */ = {isa = PBXBuildFile; fileRef = F6C6E7140E954349BA71E47C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/all.hpp */; };
		E835FE4143264A869B82343F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp */ = {isa = PBXBuildFile; fileRef = AD68BD7F5C9646DB97CCDC3B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp */; };
		E86946908C3340DA98422C05 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp */ = {isa = PBXBuildFile; fileRef = 8D4CE2E93AE84AB5A87ABC4A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp */; };
		E876F27440244E8384AE6A1F /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */ = {isa = PBXBuildFile; fileRef = 35B3BC62425944408EBFBDCE /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */; };
		E87AFF19341847FBBDF0E21C /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */ = {isa = PBXBuildFile; fileRef = D9B7FCEF70F14971982EAD3C /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */; };
		E89AD1A0E4994D44A77A959E /* /Users/heiner/git/QuantLib/test-suite/array.cpp */ = {isa = PBXBuildFile; fileRef = 51C5BAD1823543748532644A /* /Users/heiner/git/QuantLib/test-suite/array.cpp */; };
		E89CDC2CB4B24F2292AD6100 /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.hpp */ = {isa = PBXBuildFile; fileRef = A7F30E8E8338454C9B0E19D3 /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.hpp */; };
		E89D17431FAF4693BC9FDD95 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/zerocondition.hpp */ = {isa = PBXBuildFile; fileRef = E265CE40B2DE4D9DB240C7B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/zerocondition.hpp */; };
		E8B1CBC91EDF4ADC9F456F2A /* /Users/heiner/git/QuantLib/test-suite/squarerootclvmodel.hpp */ = {isa = PBXBuildFile; fileRef = AC24350F433A4BD093FDA1B1 /* /Users/heiner/git/QuantLib/test-suite/squarerootclvmodel.hpp */; };
		E8D4DF03039B4433AA12D2DE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.hpp */ = {isa = PBXBuildFile; fileRef = 1C606E38E4E24EDD9378D4C9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.hpp */; };
		E8DCEBBFE3D0470099C4BBBE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 3E4A3A789CC746BCAEE8E589 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */; };
		E8EB2B74F4994AF994BAC748 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */ = {isa = PBXBuildFile; fileRef = 80DF6D4BDF174110B10BF039 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */; };
		E8F42DAB8E364543B4ABED3A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbermudanengine.hpp */ = {isa = PBXBuildFile; fileRef = 2B00B4D927AD4694A821B855 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbermudanengine.hpp */; };
		E8FCB05BD5CB4770873BF109 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolcurve.hpp */ = {isa = PBXBuildFile; fileRef = 117AD74D91F44300998C38FA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolcurve.hpp */; };
		E8FCFB673AF549B682718FF0 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */ = {isa = PBXBuildFile; fileRef = 1B5F0366FA8E4A69A9165A0F /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */; };
		E900BA17903E452FAA7F6331 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodel.hpp */ = {isa = PBXBuildFile; fileRef = D663142D32D644068C1440C6 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodel.hpp */; };
		E900BA93842C4EFA94D8A383 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */ = {isa = PBXBuildFile; fileRef = 2864E8E3E0BE427D8FE4660F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */; };
		E90FFBDC69CB434ABC0760B3 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/all.hpp */ = {isa = PBXBuildFile; fileRef = 5509E21B1C674D40AA52EC10 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/all.hpp */; };
		E9174E81E86F4A7ABB3F2C41 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */ = {isa = PBXBuildFile; fileRef = 3C2F814670D54BB6B2C86348 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */; };
		E9372C2D9A3F4DD4992AEC66 /* /Users/heiner/git/QuantLib/ql/patterns/singleton.hpp */ = {isa = PBXBuildFile; fileRef = 02DC1D5F54FC4572AC6C9D32 /* /Users/heiner/git/QuantLib/ql/patterns/singleton.hpp */; };
		E9483E7370B94E62BDFC130D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */ = {isa = PBXBuildFile; fileRef = A810F4E06127499B9B73D78D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */; };
		E951C5F5153242D4A810FC1A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */ = {isa = PBXBuildFile; fileRef = 19C8B97FE70F4926A6B62CC2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */; };
		E96F5CD1F27F4190835BEF35 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */ = {isa = PBXBuildFile; fileRef = B507DEF8AB55475E93A6FA5E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */; };
		E9810777B7194CE7B2D6ED42 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */ = {isa = PBXBuildFile; fileRef = 1A9C7D16A6AB4192B5A4EDBA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */; };
		E98686523CC4427DBDBC3F91 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/all.hpp */ = {isa = PBXBuildFile; fileRef = BE543F179BC646AD9FE846F8 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/all.hpp */; };
		E98B61F43F0C4FADB7B396B4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 2E8534832DCD416DBCCF7660 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.hpp */; };
		E9AD5CDB6DCE428ABD680258 /* /Users/heiner/git/QuantLib/test-suite/optionletstripper.cpp */ = {isa = PBXBuildFile; fileRef = B4F3873B0F314FB19A675CEB /* /Users/heiner/git/QuantLib/test-suite/optionletstripper.cpp */; };
		E9B1453907AD48E09554DA90 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.hpp */ = {isa = PBXBuildFile; fileRef = 96D198B715BF4BD29C806AE5 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.hpp */; };
		E9D03D203D764DD9B3CAD6F6 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.hpp */ = {isa = PBXBuildFile; fileRef = 836367A2C3DD4774BDC5154F /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.hpp */; };
		E9D96E0F5D104E7F8320936D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */ = {isa = PBXBuildFile; fileRef = 5F775DE97E3E427D989D6C76 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */; };
		E9E700B149874CF8BB2F8266 /* /Users/heiner/git/QuantLib/test-suite/inflationcpibond.cpp */ = {isa = PBXBuildFile; fileRef = 60BE1324DB754C1B863F3A71 /* /Users/heiner/git/QuantLib/test-suite/inflationcpibond.cpp */; };
		E9E8A49A0039435A8E5DC518 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */ = {isa = PBXBuildFile; fileRef = 8CF69F97693A46CC9E005EEA /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */; };
		E9EC4E0123744366A42EFC95 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */ = {isa = PBXBuildFile; fileRef = 854D8941C1FF4BEE96484AEA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */; };
		E9F19BE9EEC949058D6CD4A1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelparametricexercise.hpp */ = {isa = PBXBuildFile; fileRef = EB25C422FFDF4196A76828F2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelparametricexercise.hpp */; };
		E9F8704BA78D432283A96B73 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */ = {isa = PBXBuildFile; fileRef = 1ED907AFBA5C4053A4CC633C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */; };
		EA0D4EF6965E4A07B13FBEFB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatortraits.hpp */ = {isa = PBXBuildFile; fileRef = A0EA6B4A02A34F149CA05D4F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatortraits.hpp */; };
		EA18EA24F3014B9DB6430B99 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = B27D796D12524EA8AF12D8A9 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */; };
		EA1E72543B294ACAB143E7DC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp */ = {isa = PBXBuildFile; fileRef = 38256CE2DF054452946EC5F1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp */; };
		EA22F7922372408894B453CD /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */ = {isa = PBXBuildFile; fileRef = 15A9E7611463410A82FC0A6A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */; };
		EA29FD0C858A429C8CEC21B0 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = CFBE5E80243146B6BE365402 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.hpp */; };
		EA31B5C72A974B1C8F67A0CD /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */ = {isa = PBXBuildFile; fileRef = 87EADCE3432F41619F758F9C /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */; };
		EA445A167C074C2687A87570 /* /Users/heiner/git/QuantLib/ql/time/imm.hpp */ = {isa = PBXBuildFile; fileRef = 30842CBA6EC0495BADF9BA3F /* /Users/heiner/git/QuantLib/ql/time/imm.hpp */; };
		EA48F560B2E84E10B8A55EF2 /* /Users/heiner/git/QuantLib/Examples/CDS/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = A3A7028AA7B5414DA097844D /* /Users/heiner/git/QuantLib/Examples/CDS/CMakeLists.txt */; };
		EA4F0A365C1144EFB05FB36E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/interpolatedsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = EC7E18E6E0604F94984B94A3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/interpolatedsmilesection.hpp */; };
		EA5AE102BFD04AD29EE163FD /* /Users/heiner/git/QuantLib/ql/instruments/vanillastorageoption.hpp */ = {isa = PBXBuildFile; fileRef = 0F68E79BF8904A93A0FA3AF5 /* /Users/heiner/git/QuantLib/ql/instruments/vanillastorageoption.hpp */; };
		EA6119964905445E8C7E164D /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.hpp */ = {isa = PBXBuildFile; fileRef = C3CFFA922F6447F1BE6B65B6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.hpp */; };
		EA6D05F82DDB4693A27C7147 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.hpp */ = {isa = PBXBuildFile; fileRef = FD44CCF03BD246FEA6127860 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.hpp */; };
		EA7C21C444514C77983C14BE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */ = {isa = PBXBuildFile; fileRef = 3AE91B2E7F8542E29EDF390F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */; };
		EA7C8DAF3A574B9F90B46CFA /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.hpp */ = {isa = PBXBuildFile; fileRef = 3E312C00B1994B34B1760577 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.hpp */; };
		EA909752A0504682A7CE5029 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.hpp */ = {isa = PBXBuildFile; fileRef = D6C70C6312B94AB9B85677F3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.hpp */; };
		EA9EA6137FFA4308B85D1E8D /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.hpp */ = {isa = PBXBuildFile; fileRef = 013319BDE39B4B1FACF201E5 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.hpp */; };
		EAA30EE84DD641D099A65034 /* /Users/heiner/git/QuantLib/ql/math/interpolations/interpolation2d.hpp */ = {isa = PBXBuildFile; fileRef = 827293512FA0489194B78197 /* /Users/heiner/git/QuantLib/ql/math/interpolations/interpolation2d.hpp */; };
		EAAF3D78C49C4DA9B21AD768 /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */ = {isa = PBXBuildFile; fileRef = EDC5447BD7B34E29B0631E7B /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */; };
		EAAFC777A61D43A894E0D96A /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = F3BAAE10D8C14E4AB5B274A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.hpp */; };
		EAB7561C3E334B31AAB5B533 /* /Users/heiner/git/QuantLib/test-suite/quantooption.hpp */ = {isa = PBXBuildFile; fileRef = B25834502FB54970BA2CA2EF /* /Users/heiner/git/QuantLib/test-suite/quantooption.hpp */; };
		EABBECE1C428434DB0EC9462 /* /Users/heiner/git/QuantLib/ql/event.hpp */ = {isa = PBXBuildFile; fileRef = 6FDFA8FB45224EFAAADFE701 /* /Users/heiner/git/QuantLib/ql/event.hpp */; };
		EACDCC8F3E634CF0B44D6CD1 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */ = {isa = PBXBuildFile; fileRef = 5DB243779A7F4B158153D2DC /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */; };
		EACE07C1E4B24DF4AD503912 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.hpp */ = {isa = PBXBuildFile; fileRef = A2409672F5474E29A3F1BBD5 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.hpp */; };
		EADBB3D63DA24D59B1A3F68A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp */ = {isa = PBXBuildFile; fileRef = 6082AB03DB834B7AA54765AC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp */; };
		EAEB352C0FF04DAFBE0A2A78 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */ = {isa = PBXBuildFile; fileRef = 2C949D9E86244E26B3BEE639 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */; };
		EB01CB62D3E04FDA8CD86DE0 /* /Users/heiner/git/QuantLib/ql/index.hpp */ = {isa = PBXBuildFile; fileRef = 9AD372ABC4104C188904DCA3 /* /Users/heiner/git/QuantLib/ql/index.hpp */; };
		EB076E5E9BB349CF97447989 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.hpp */ = {isa = PBXBuildFile; fileRef = 82B35A7CE8314E21BE5BDA78 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.hpp */; };
		EB123D1EA57B46299D06BBD4 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.hpp */ = {isa = PBXBuildFile; fileRef = 92D7A82D36E34266866E9656 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.hpp */; };
		EB2F35F7715543519FF9BADA /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */ = {isa = PBXBuildFile; fileRef = CEA1646CF24F4E6CAEBE5ECB /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */; };
		EB334A7020B844A8977E3D56 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pde.hpp */ = {isa = PBXBuildFile; fileRef = 953D8434973047B68F743040 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pde.hpp */; };
		EB3D59FD81604176AB416FA2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 5F1B9FB9DF5C494B967304FF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */; };
		EB536BB8A95344868E639965 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */ = {isa = PBXBuildFile; fileRef = EF74202677CB485AAA3F87D8 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */; };
		EB5F784D1D9C4535900585DF /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 7C3F66813A4E4F92B54F5632 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */; };
		EB671A7A145E47FBACF9F7C5 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = AA5BDB2134204204ADC8EA3E /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.hpp */; };
		EB840677C2B84374A0C38283 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.hpp */ = {isa = PBXBuildFile; fileRef = 11E8AC8BD4814D3D86C68B76 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.hpp */; };
		EB9CED29CC7D44CD99677073 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.hpp */ = {isa = PBXBuildFile; fileRef = 8B889276A0C948B5B0736157 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.hpp */; };
		EBA27426264A44E09D0C309F /* /Users/heiner/git/QuantLib/ql/math/solvers1d/falseposition.hpp */ = {isa = PBXBuildFile; fileRef = FDD8FBEA0AA14774A70493AB /* /Users/heiner/git/QuantLib/ql/math/solvers1d/falseposition.hpp */; };
		EBB503B71CDE4DF7BF198480 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp */ = {isa = PBXBuildFile; fileRef = 2F7D9BE9B66C4D5E97706E58 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp */; };
		EBB9566364914DED8A5F023B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.hpp */ = {isa = PBXBuildFile; fileRef = 3ACB40A9D1904163B85D879D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.hpp */; };
		EBC9AE4506274A34A56F876D /* /Users/heiner/git/QuantLib/ql/experimental/math/laplaceinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = C6A5E436D8144E3390111B2A /* /Users/heiner/git/QuantLib/ql/experimental/math/laplaceinterpolation.hpp */; };
		EBD85EB40D7D408DBBE0E5DE /* /Users/heiner/git/QuantLib/test-suite/fdheston.hpp */ = {isa = PBXBuildFile; fileRef = FFCDB3FCF279426FAEAFF5C5 /* /Users/heiner/git/QuantLib/test-suite/fdheston.hpp */; };
		EBE7840D9B3348AD828E9DD5 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */ = {isa = PBXBuildFile; fileRef = 39CBF08A44B944F894EB4984 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */; };
		EBF50227426642C6AC4BDB24 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */ = {isa = PBXBuildFile; fileRef = 1FE462BAB2954AD494E79A49 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */; };
		EBF737DA32A34BE28089DCAB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp */ = {isa = PBXBuildFile; fileRef = 5F00E3C6844141D693229D21 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp */; };
		EBF88B4B9E514485BCBC4BFF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.hpp */ = {isa = PBXBuildFile; fileRef = 3B766BB500FD411C95F2D63E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.hpp */; };
		EC00A71F66744445B88A8622 /* /Users/heiner/git/QuantLib/test-suite/inflation.hpp */ = {isa = PBXBuildFile; fileRef = 1D1A3610707348B79A355F8F /* /Users/heiner/git/QuantLib/test-suite/inflation.hpp */; };
		EC0CDD6197994D90BFF9F7EB /* /Users/heiner/git/QuantLib/ql/exercise.cpp */ = {isa = PBXBuildFile; fileRef = 997D2DA2C5A042B4A45A9DB5 /* /Users/heiner/git/QuantLib/ql/exercise.cpp */; };
		EC2AA902038E45D8AAABD914 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp */ = {isa = PBXBuildFile; fileRef = 9BBCBD62B1CD44B389B2CB24 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp */; };
		EC36A4BB2F694C4791450AD7 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */ = {isa = PBXBuildFile; fileRef = F914BCE660F94695AEEED284 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */; };
		EC46B460A4FC4282BE57DACA /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */ = {isa = PBXBuildFile; fileRef = 4D8605EB1D664FC890D50976 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */; };
		EC4BC23622A74851A7128E1C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 51D4AD4A35A345D4803E1A4A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp */; };
		EC55FD081C124FCA916B7DE1 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathpricer.hpp */ = {isa = PBXBuildFile; fileRef = 8DBDD6B4167B4CEC95EACE8F /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathpricer.hpp */; };
		EC568EB1FF6C4399A813CC2C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/expliciteuler.hpp */ = {isa = PBXBuildFile; fileRef = 930C5B2096D141B39B7B299E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/expliciteuler.hpp */; };
		EC5AFC59F9514B28951459DB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.hpp */ = {isa = PBXBuildFile; fileRef = 9B0BBAA5ABA845CC885B2D90 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.hpp */; };
		EC7C1C74F9334A2193EC1863 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationlossmodel.hpp */ = {isa = PBXBuildFile; fileRef = 256E4CA523D54ED6BE9D6F12 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationlossmodel.hpp */; };
		EC8E9DA380F14D0195A1F539 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = 26C1759FBC6D4AB79A4DF4BF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.hpp */; };
		ECD648C75817499293060B8D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewiseyieldcurve.hpp */ = {isa = PBXBuildFile; fileRef = FDEB4D504FE64A64BD0456AB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewiseyieldcurve.hpp */; };
		ECD7507E55F44F90BFF7045C /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.hpp */ = {isa = PBXBuildFile; fileRef = E41F708C299A449E8BC4C52A /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.hpp */; };
		ECD9767C49E440EAB7F898A7 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.hpp */ = {isa = PBXBuildFile; fileRef = 940D8049597040E9A4382AB1 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.hpp */; };
		ECDE00B41B714C0BBE2F7EE2 /* /Users/heiner/git/QuantLib/ql/time/date.hpp */ = {isa = PBXBuildFile; fileRef = 1F4715E73C0F496DB25A59E0 /* /Users/heiner/git/QuantLib/ql/time/date.hpp */; };
		ECE1444E8BB34FA495B89D6F /* /Users/heiner/git/QuantLib/ql/pricingengines/latticeshortratemodelengine.hpp */ = {isa = PBXBuildFile; fileRef = F6BF241FB63949F0AE12DC6D /* /Users/heiner/git/QuantLib/ql/pricingengines/latticeshortratemodelengine.hpp */; };
		ECEAD53E588642388C795F53 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.hpp */ = {isa = PBXBuildFile; fileRef = BADC273A84444B8BA5F88B01 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.hpp */; };
		ED05C089FCE14019907EFDF3 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */ = {isa = PBXBuildFile; fileRef = AB99DBC145114F0EA9BE4535 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */; };
		ED147B06A27F412DA14996E7 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.hpp */ = {isa = PBXBuildFile; fileRef = 10D8F4106BFD4DEC85276ECD /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.hpp */; };
		ED15A9DFF9A34A03B7C5280E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.hpp */ = {isa = PBXBuildFile; fileRef = 7292ADD5956848609CDBE431 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.hpp */; };
		ED22A521186E4F50B479CD64 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.hpp */ = {isa = PBXBuildFile; fileRef = 21151E69394048DB938289BA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.hpp */; };
		ED2BC5EB5E8B4BA6A5E9BC90 /* /Users/heiner/git/QuantLib/ql/pricingengines/genericmodelengine.hpp */ = {isa = PBXBuildFile; fileRef = 4EB6371652D64B5ABB72905E /* /Users/heiner/git/QuantLib/ql/pricingengines/genericmodelengine.hpp */; };
		ED35F19B6FB54F73803E0A7D /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp */ = {isa = PBXBuildFile; fileRef = E1C197A64DFC4D9684B3762E /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp */; };
		ED4774F6D7FD41BCB36734CC /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp */ = {isa = PBXBuildFile; fileRef = 019CB5C4839F4393B9867340 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp */; };
		ED59F139240848B78325D7A4 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.hpp */ = {isa = PBXBuildFile; fileRef = 94228A9C624D4E4BA898948D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.hpp */; };
		ED5DDB3062234C6FBB7CED86 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */ = {isa = PBXBuildFile; fileRef = 8FA224EFA70E411BA88684E8 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */; };
		ED5FD09C684C4420A07B1083 /* /Users/heiner/git/QuantLib/test-suite/mclongstaffschwartzengine.hpp */ = {isa = PBXBuildFile; fileRef = 9E00C1D21C4F422AAC0714EF /* /Users/heiner/git/QuantLib/test-suite/mclongstaffschwartzengine.hpp */; };
		ED622CF3263B4A66A48F209D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = D0B14E4BEC3E4B37BE838525 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */; };
		ED62881941074F7F8988018C /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.hpp */ = {isa = PBXBuildFile; fileRef = 2663B1315565475D9EB12D23 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.hpp */; };
		ED6D040FC392442FAA0B0C26 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.hpp */ = {isa = PBXBuildFile; fileRef = 93B69819C8C94D6388A04A0E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.hpp */; };
		ED6F3E8CE29C42C4801889DB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendshoutengine.hpp */ = {isa = PBXBuildFile; fileRef = E473C9A088484E028ED4DD1C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendshoutengine.hpp */; };
		ED790E779FFC4EEE9B6981BD /* /Users/heiner/git/QuantLib/test-suite/cms.cpp */ = {isa = PBXBuildFile; fileRef = 4ECFC630634746E2A9340112 /* /Users/heiner/git/QuantLib/test-suite/cms.cpp */; };
		ED8C14C768A746EDB27EE9C0 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp */ = {isa = PBXBuildFile; fileRef = 7DE6B4AA3D5348DEB7DB61E5 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp */; };
		EDC81C1E7AC34A61B5CFB801 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.hpp */ = {isa = PBXBuildFile; fileRef = B1AF77D0E5244261B58D8472 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.hpp */; };
		EDD349511EB14C819440785F /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.hpp */ = {isa = PBXBuildFile; fileRef = A487F336C4834DA7A6C2D204 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.hpp */; };
		EDD8F2799153422687A09A89 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */ = {isa = PBXBuildFile; fileRef = 4CE24196FAD64F9FA47E7BB4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */; };
		EDE5AA3098A241C9994ADE63 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.hpp */ = {isa = PBXBuildFile; fileRef = 2326DE770EDC49568069AF3D /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.hpp */; };
		EDED70359D1D4146ADD5FA89 /* /Users/heiner/git/QuantLib/ql/math/integrals/twodimensionalintegral.hpp */ = {isa = PBXBuildFile; fileRef = D83BF42162724DF68D66243B /* /Users/heiner/git/QuantLib/ql/math/integrals/twodimensionalintegral.hpp */; };
		EDF4423181DB4B1B96563C4C /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.hpp */ = {isa = PBXBuildFile; fileRef = A84862D9D8A74EC7AE18F526 /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.hpp */; };
		EDFDF0B6D12D4B69B904E7D4 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.hpp */ = {isa = PBXBuildFile; fileRef = F9CE014162BB4CE1B6ADB5E4 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.hpp */; };
		EE22E351D96442E1897DD469 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.hpp */ = {isa = PBXBuildFile; fileRef = F55299F0B0434F78AB56D786 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.hpp */; };
		EE2698FC5A614B5A8AEE152C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = A37AFD5352714F13A047D061 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */; };
		EE49B3FEAEFA47159AACA694 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.hpp */ = {isa = PBXBuildFile; fileRef = 7776B0B5D3B149C19B13FEE7 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.hpp */; };
		EE4DB85BB34048DC9DB28FC0 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */ = {isa = PBXBuildFile; fileRef = 565F6E68DBC140C687FE69D0 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */; };
		EE6DCB8978BB451695465899 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.hpp */ = {isa = PBXBuildFile; fileRef = EB459487FBA74F13937F3B65 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.hpp */; };
		EE848F713D0A41E5AFF2375B /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */ = {isa = PBXBuildFile; fileRef = 769558F5B6904581BBB219DF /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */; };
		EE981AB3DC974D928D37CF1D /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */ = {isa = PBXBuildFile; fileRef = 264EE11F98CA450ABF4A7E2F /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */; };
		EEA1CF0508E34BB5A11334B6 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */ = {isa = PBXBuildFile; fileRef = 8171A0E76DDD486F9A132F54 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */; };
		EEABAD55A5FD45CBABAC5A28 /* /Users/heiner/git/QuantLib/test-suite/interestrates.hpp */ = {isa = PBXBuildFile; fileRef = 99E1815C50924F14A3BCF917 /* /Users/heiner/git/QuantLib/test-suite/interestrates.hpp */; };
		EED328DFD29E4363B01E3070 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = FC286D05F8A84E8E98025498 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */; };
		EEEEAE1764D64A41889777AB /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.hpp */ = {isa = PBXBuildFile; fileRef = AF19DC99E4814EFAA773E6F9 /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.hpp */; };
		EEF1F90AC5CC4B4BBAB190A2 /* /Users/heiner/git/QuantLib/ql/utilities/steppingiterator.hpp */ = {isa = PBXBuildFile; fileRef = 8AD3F09FF3E64A23A077874D /* /Users/heiner/git/QuantLib/ql/utilities/steppingiterator.hpp */; };
		EEFC45770D54401B96AC7750 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */ = {isa = PBXBuildFile; fileRef = 22E6C5FED8A34A83BC4DDF4C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */; };
		EEFDA9459B81460F80EC396B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */ = {isa = PBXBuildFile; fileRef = D9A0F8FEF32F473FB36D4E8F /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */; };
		EF077F3F8C344B4AB535FDB1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 0D1D82219B37460EB48B6B67 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */; };
		EF19E3F39268421E87C52BD7 /* /Users/heiner/git/QuantLib/ql/interestrate.hpp */ = {isa = PBXBuildFile; fileRef = F8F67CDE08A541B0A29ADCD9 /* /Users/heiner/git/QuantLib/ql/interestrate.hpp */; };
		EF202037341F4FE8936086A2 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp */ = {isa = PBXBuildFile; fileRef = 008A2B92306145AFA78C4993 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp */; };
		EF2941BEE33B4EEDA1C4D9AE /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.hpp */ = {isa = PBXBuildFile; fileRef = EC1A83D17BE64BC9930CA2E5 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.hpp */; };
		EF2E8516A39346B08DBCD590 /* /Users/heiner/git/QuantLib/test-suite/hestonslvmodel.hpp */ = {isa = PBXBuildFile; fileRef = 41657FB60E1845508CB6EE02 /* /Users/heiner/git/QuantLib/test-suite/hestonslvmodel.hpp */; };
		EF2EC37066334EFD92D12779 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanhestonengine.hpp */ = {isa = PBXBuildFile; fileRef = F09CE2270CF84F878050A664 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanhestonengine.hpp */; };
		EF43A196DFE1426EA5835E71 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */ = {isa = PBXBuildFile; fileRef = 95E3B98CDD3A410D82970934 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */; };
		EF4505B257344E27B92BB7DC /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */ = {isa = PBXBuildFile; fileRef = C8DA599B389F42B3A43D89FB /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */; };
		EF4B42F6A02C4F16B480D8F3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */ = {isa = PBXBuildFile; fileRef = BE39102C3F1B4D848AFA34DF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */; };
		EF53C30871314B6AA219DD02 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */ = {isa = PBXBuildFile; fileRef = FE50154D20BB418E9EDDF377 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */; };
		EF5BC10DE90C4E8D80286164 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.hpp */ = {isa = PBXBuildFile; fileRef = D57733A156A64FA4B1C128B1 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.hpp */; };
		EFA2A17DDC694457A0FA6EBF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */ = {isa = PBXBuildFile; fileRef = 690B365001954D9E9BA0483E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */; };
		EFAAF2D80D514E36B5CA4063 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/impliedtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 15EEACFCF0394E6BBF26A970 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/impliedtermstructure.hpp */; };
		EFCE2913D84545B095EA02FB /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.hpp */ = {isa = PBXBuildFile; fileRef = 39714402DECF440AA901D88D /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.hpp */; };
		EFED04C24972461F8710DBA0 /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.hpp */ = {isa = PBXBuildFile; fileRef = 0CC6EBC81A844D5AB29BC7CD /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.hpp */; };
		F0021C96FB044391B73B25FA /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */ = {isa = PBXBuildFile; fileRef = 244EF717F23046E985037C36 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */; };
		F0086493B6D54C0C94E94E2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */ = {isa = PBXBuildFile; fileRef = BB76CBFD97784899B8121F75 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */; };
		F009616817104F90842CF7FC /* /Users/heiner/git/QuantLib/test-suite/integrals.cpp */ = {isa = PBXBuildFile; fileRef = 24B3BB65C6E342058B6EA0B7 /* /Users/heiner/git/QuantLib/test-suite/integrals.cpp */; };
		F00CE8E320E4449C953D6295 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */ = {isa = PBXBuildFile; fileRef = 5CC9392378DF4EEAAB0AFB0A /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */; };
		F016CEFEE5DB455DB3179CDA /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.hpp */ = {isa = PBXBuildFile; fileRef = B82D339477284700B1B9D197 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.hpp */; };
		F0223CD472624F2592836707 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp */ = {isa = PBXBuildFile; fileRef = 2FA74099041C4BF2887352AF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp */; };
		F0414DEBC72746848521D6F0 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.hpp */ = {isa = PBXBuildFile; fileRef = BDB0118783E34978A2DB9525 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.hpp */; };
		F046DA4E45D947749812F1C3 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = 861EFD82C0DC439EA96B0CA7 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */; };
		F04AC7F3F0F34731BB7325A6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/onefactoroperator.hpp */ = {isa = PBXBuildFile; fileRef = 301F4821F40941E3933A7D79 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/onefactoroperator.hpp */; };
		F04E44F4799E4CF685FB9D43 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = F3FC0FBC30244AE8A1AE64D9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */; };
		F06D18A0F20349BA9F4B0FE1 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */ = {isa = PBXBuildFile; fileRef = 268A09F440CC4D7296F4D242 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */; };
		F078769D5762434488C5C841 /* /Users/heiner/git/QuantLib/ql/math/array.hpp */ = {isa = PBXBuildFile; fileRef = 459502309D38469A8447CDF4 /* /Users/heiner/git/QuantLib/ql/math/array.hpp */; };
		F0807B6E4DB84295A1D41EAF /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.hpp */ = {isa = PBXBuildFile; fileRef = 156A7F1AEBD0409EB58D2F54 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.hpp */; };
		F08D9D1D05164741B159DBE8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */ = {isa = PBXBuildFile; fileRef = 7774ACEE12E94F40A79CA9BE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */; };
		F0D340EE511841949D287994 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/all.hpp */ = {isa = PBXBuildFile; fileRef = A892E61901734B248B6DF7F6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/all.hpp */; };
		F0DCD998C8AD4538969FD4D9 /* /Users/heiner/git/QuantLib/ql/indexes/all.hpp */ = {isa = PBXBuildFile; fileRef = 9D4E176933164C1EA783B3BA /* /Users/heiner/git/QuantLib/ql/indexes/all.hpp */; };
		F0E328A12651481FB84EAEA3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionletstripper.hpp */ = {isa = PBXBuildFile; fileRef = 39381CF1DD6D4491BC8AE297 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionletstripper.hpp */; };
		F0E5A9C21082494A8FC5881A /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */ = {isa = PBXBuildFile; fileRef = 2DCA98889C1047038D7DF578 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */; };
		F0FB50224E014876A9D2B7C9 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.hpp */ = {isa = PBXBuildFile; fileRef = EDF7E6CFEC7145B4A0ED08FC /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.hpp */; };
		F11C4A2294704362A41E2F3A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 1775F0462F6C47ED8FA5B96A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */; };
		F1434FD2A3454215ABAFEC52 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */ = {isa = PBXBuildFile; fileRef = 1C70F66A5E824AEC8B7633BC /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */; };
		F15E7FB2D174437AAC56E28A /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.hpp */ = {isa = PBXBuildFile; fileRef = 5D5005AF88244A96B80C1DBF /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.hpp */; };
		F1708A4DA08C4EC28E0FBF9F /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */ = {isa = PBXBuildFile; fileRef = CC46F4AA6D3D4DAAAD1C31D2 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */; };
		F1855E553B36437D993EBAA5 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */ = {isa = PBXBuildFile; fileRef = 341C37D76FB14D41803CB2DE /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */; };
		F18D3DB9D6FB49518ACE5F88 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */ = {isa = PBXBuildFile; fileRef = E249943D39D24C21956DFD9C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */; };
		F1A8A5E2B63142A08BE49CEA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */ = {isa = PBXBuildFile; fileRef = 2E4399ABE6F4493F80C75307 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */; };
		F1B98AE50C534B4A9D29AF66 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp */ = {isa = PBXBuildFile; fileRef = 2DBD74D064B3475F920B549E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp */; };
		F1BA3957E2614DC0AC57F032 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp */ = {isa = PBXBuildFile; fileRef = 741E7BEBE33D49B3B8BF7DD7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp */; };
		F1BD14C0EE614DF2A1ABE3C9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp */ = {isa = PBXBuildFile; fileRef = 7C1ED98A15284BE18E9626DB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp */; };
		F1DF290A8E70484198C1D677 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */ = {isa = PBXBuildFile; fileRef = CB9BC82B5CCB44258462D7A4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */; };
		F1E56FC50C8F4E529B879F35 /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.hpp */ = {isa = PBXBuildFile; fileRef = C42FF2D43B394C1B84CCF88A /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.hpp */; };
		F1E9DD949EF7404AB3ABC49D /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.hpp */ = {isa = PBXBuildFile; fileRef = 107C9665122E48798120A3C7 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.hpp */; };
		F1FCEBA211E24987A6D8C4BF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/all.hpp */ = {isa = PBXBuildFile; fileRef = 47640667A2C642619A75A505 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/all.hpp */; };
		F200F05A53334748A7551B47 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */ = {isa = PBXBuildFile; fileRef = 290E9953E31B4339804B9D54 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */; };
		F212DA6D48794A02AEDA8A17 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/sample.hpp */ = {isa = PBXBuildFile; fileRef = 4676D63CA14845429F358622 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/sample.hpp */; };
		F2175918CF64412F9012125A /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/all.hpp */ = {isa = PBXBuildFile; fileRef = 99872BF8025B400F9A0F909C /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/all.hpp */; };
		F2522B6E34AD41BCAAE15D05 /* /Users/heiner/git/QuantLib/test-suite/quotes.cpp */ = {isa = PBXBuildFile; fileRef = FB46F928BCE44457BF26FD4F /* /Users/heiner/git/QuantLib/test-suite/quotes.cpp */; };
		F26AA18B6343441BBD73FC01 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */ = {isa = PBXBuildFile; fileRef = 935418338A7E423B98652767 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */; };
		F26F51848F464321A44199B2 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */ = {isa = PBXBuildFile; fileRef = E2D00CDB292A4DB6936E5784 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */; };
		F27981AD4990472B848DA7A8 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.hpp */ = {isa = PBXBuildFile; fileRef = 18C0F9D3546A4C98A8774F59 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.hpp */; };
		F298844289C04B69A60F8F66 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */ = {isa = PBXBuildFile; fileRef = 6AF100BF99DB4093B3639580 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */; };
		F29C1D846D984943B71058CA /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */ = {isa = PBXBuildFile; fileRef = F8BF5D5810A3467C80E456E5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */; };
		F2ABDDC1697E4D41AA8DF23E /* /Users/heiner/git/QuantLib/ql/math/interpolations/mixedinterpolation.hpp */ = {isa = PBXBuildFile; fileRef = 5886C521F99C46B99CD22522 /* /Users/heiner/git/QuantLib/ql/math/interpolations/mixedinterpolation.hpp */; };
		F2B6161441D54E94B187E7FB /* /Users/heiner/git/QuantLib/ql/termstructures/credit/piecewisedefaultcurve.hpp */ = {isa = PBXBuildFile; fileRef = DBD8B1060C0F49B7BE901F83 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/piecewisedefaultcurve.hpp */; };
		F2B817C0367942138C670EC2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */ = {isa = PBXBuildFile; fileRef = DE8BAB7C832A4CF994D16C65 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */; };
		F2C586FD3338438EA9A8ED27 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = D204326B81A34D219C398CA3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */; };
		F2D7C03846B543C0B4D93CFE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp */ = {isa = PBXBuildFile; fileRef = 440061824118437C868D00B6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp */; };
		F2F184E1938B4C91AEF17DAB /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */ = {isa = PBXBuildFile; fileRef = ABD331CB8A6E431AA6E347E4 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */; };
		F2F3F915DAF1432794A56C12 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.hpp */ = {isa = PBXBuildFile; fileRef = BD9E52F5234046C7B89822D1 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.hpp */; };
		F2F56B5AB6844A63ADD9F494 /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */ = {isa = PBXBuildFile; fileRef = FFCA88E7579C46F2885C490E /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */; };
		F2FC14DE01E0480AA82F57F6 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = 6203E1294CA548D18FA93803 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */; };
		F30245FCF32C48DE9A0CAB55 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/all.hpp */ = {isa = PBXBuildFile; fileRef = 89E8A03418334F53B2F7A193 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/all.hpp */; };
		F3194E38C71E41A78301A6B8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.hpp */ = {isa = PBXBuildFile; fileRef = AAD3F2A51CAA43DA878B5D96 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.hpp */; };
		F31C0652BCCC4A4BB426065A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.hpp */ = {isa = PBXBuildFile; fileRef = 254DF62BE22D40E784C04291 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.hpp */; };
		F329EAD04BCF4B648EF8AFC3 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */ = {isa = PBXBuildFile; fileRef = D4CF0A6E8B564D4BA60EADA9 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */; };
		F3313ACC292847EBBF3833B8 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.hpp */ = {isa = PBXBuildFile; fileRef = A75E9FB37B5942C69DF28B88 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.hpp */; };
		F3534809F15D46F08785860D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.hpp */ = {isa = PBXBuildFile; fileRef = E368865D428B482A9A471936 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.hpp */; };
		F356C17F12534407A2F91DFD /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */ = {isa = PBXBuildFile; fileRef = 53B3C32552254BAF9405AEA9 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */; };
		F35ABD399A0E4F7F9FFFF228 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */ = {isa = PBXBuildFile; fileRef = 80F18FDD5E884A69AA172B7C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */; };
		F35C7A4D345E44EE8795D5BD /* /Users/heiner/git/QuantLib/ql/indexes/inflation/frhicp.hpp */ = {isa = PBXBuildFile; fileRef = B67160DEB6E849F792649E3F /* /Users/heiner/git/QuantLib/ql/indexes/inflation/frhicp.hpp */; };
		F36A2D93868C4547B345DA2D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */ = {isa = PBXBuildFile; fileRef = C9147513FD5F4CD68488253C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */; };
		F3805F18DF6A45ACB33FD757 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */ = {isa = PBXBuildFile; fileRef = 8ECB6FBE9DD148D59B69E568 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */; };
		F3889A127E294CC390431D14 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */ = {isa = PBXBuildFile; fileRef = 1981B665750040349029E465 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */; };
		F391DE9E516D48069EE1463C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.hpp */ = {isa = PBXBuildFile; fileRef = 7E189848DA6A442DBCC40FCD /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.hpp */; };
		F396C86A5464475EA749F724 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */ = {isa = PBXBuildFile; fileRef = 992CC12C43284CE0BC98ABB2 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */; };
		F3A1CB5CBA42456AB841ED16 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */ = {isa = PBXBuildFile; fileRef = 7470AE3772F548E592B7DE2D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */; };
		F3A5E828441B40CCBAB7654D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */ = {isa = PBXBuildFile; fileRef = 4AC533178AD546FD9B665B69 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */; };
		F3ABFDD7DD674204B359A547 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */ = {isa = PBXBuildFile; fileRef = F19FFEAC8BEC4605B3093B9F /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */; };
		F3B12E3D0A8F4B58BD0D560D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatorfactory.hpp */ = {isa = PBXBuildFile; fileRef = D979EF3114B44EF19CE6FE42 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatorfactory.hpp */; };
		F3F2639DF1A1404DB10BC1B7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp */ = {isa = PBXBuildFile; fileRef = 62A9B7B87147479A86287A20 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp */; };
		F4244BBFCBBB4E869DCC72E0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = C88930A8DFFA4636A584AB40 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.hpp */; };
		F46A91468CFB4B35B77EEABA /* /Users/heiner/git/QuantLib/test-suite/autocovariances.cpp */ = {isa = PBXBuildFile; fileRef = F4BE630AD0404AC1ACFF4DD4 /* /Users/heiner/git/QuantLib/test-suite/autocovariances.cpp */; };
		F49760DE0B204D7E861D0855 /* /Users/heiner/git/QuantLib/test-suite/blackformula.hpp */ = {isa = PBXBuildFile; fileRef = B7469D596DA94D15907DB0CC /* /Users/heiner/git/QuantLib/test-suite/blackformula.hpp */; };
		F49AB2A6A08B40CEB0BADCC4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */ = {isa = PBXBuildFile; fileRef = DC3F9AF3BAAE48B6B438BC1A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */; };
		F49C510712C74DDFA9A2C38D /* /Users/heiner/git/QuantLib/ql/experimental/fx/all.hpp */ = {isa = PBXBuildFile; fileRef = 17D7123A0D1E4D8D9A795DD9 /* /Users/heiner/git/QuantLib/ql/experimental/fx/all.hpp */; };
		F49CC3291F7F4BA0B7346522 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation2d.hpp */ = {isa = PBXBuildFile; fileRef = B9446841FBB347DFBA158509 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation2d.hpp */; };
		F4A0A73B400248F3927A9BFD /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.hpp */ = {isa = PBXBuildFile; fileRef = 13851899441A49CBAAF7759F /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.hpp */; };
		F4AA7038A4F44F71985F6ADC /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */ = {isa = PBXBuildFile; fileRef = AC1B0ABE0D274772A00AE5DE /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */; };
		F4AE472146774021835C355D /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/multicurvesensitivities.hpp */ = {isa = PBXBuildFile; fileRef = 777070E00B274590A89C0F29 /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/multicurvesensitivities.hpp */; };
		F4DC81AC6D8E4847B279FA29 /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.hpp */ = {isa = PBXBuildFile; fileRef = 151A3FE7DFBC40779CC22FA8 /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.hpp */; };
		F4DE4A8FE6DF44049443CBAB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */ = {isa = PBXBuildFile; fileRef = B890A813252E4597B1D208E4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */; };
		F4E4A4E598A94115A968DCCC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp */ = {isa = PBXBuildFile; fileRef = B449EAD48BCD45D2ABCBA530 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp */; };
		F5010412646E44A6B1B70C7F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.hpp */ = {isa = PBXBuildFile; fileRef = 29D024E53F594D8490FDDAA6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.hpp */; };
		F507E863D7594A73AD86E90E /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.hpp */ = {isa = PBXBuildFile; fileRef = 41E56A80128C41AAA4E454DF /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.hpp */; };
		F5122DCDA271415AADF5230E /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */ = {isa = PBXBuildFile; fileRef = 039361B88E9643A99E6EC34B /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */; };
		F5271006B4EA43F1971D9724 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.hpp */ = {isa = PBXBuildFile; fileRef = 2FC8CFBCC82041AEB209457A /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.hpp */; };
		F52F313DF84540D5B8B08EE2 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */ = {isa = PBXBuildFile; fileRef = 1B3578F4B5ED4BA8A4772839 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */; };
		F53A3B95663E4973865BD157 /* /Users/heiner/git/QuantLib/ql/utilities/clone.hpp */ = {isa = PBXBuildFile; fileRef = 19FDC357BBDD48E7BB76B4BF /* /Users/heiner/git/QuantLib/ql/utilities/clone.hpp */; };
		F5452C2DC23A4499ACD95900 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 0CFA683DC7E64243B713A954 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.hpp */; };
		F548D3C333AF46A1BD4A1727 /* /Users/heiner/git/QuantLib/ql/methods/lattices/bsmlattice.hpp */ = {isa = PBXBuildFile; fileRef = AD2EFD1A9B9F4913B2A64BC2 /* /Users/heiner/git/QuantLib/ql/methods/lattices/bsmlattice.hpp */; };
		F555F1421C84456A892108E9 /* /Users/heiner/git/QuantLib/Examples/FRA/FRA.cpp */ = {isa = PBXBuildFile; fileRef = A1E834AE3270412386B0EDD1 /* /Users/heiner/git/QuantLib/Examples/FRA/FRA.cpp */; };
		F5640DDCFD20413484B2096E /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.hpp */ = {isa = PBXBuildFile; fileRef = E69E4ADC2BBF4C72AA58016D /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.hpp */; };
		F5702A89FBF64775A250209C /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */ = {isa = PBXBuildFile; fileRef = 5F5EDA73668A4BBAA19666B7 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */; };
		F59AC056E8D14C0AB68BC483 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/all.hpp */ = {isa = PBXBuildFile; fileRef = EB742ECD46C64B81852ACDF6 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/all.hpp */; };
		F5A61FE0DB34469F88F44D95 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.hpp */ = {isa = PBXBuildFile; fileRef = 712393366E9842F4B9449536 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.hpp */; };
		F5A916E90CDE45AABEB19650 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */ = {isa = PBXBuildFile; fileRef = 9A027960828D4FE8A7F8E5B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */; };
		F5C09764DA2E4DFF9AB4B373 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedconstraint.hpp */ = {isa = PBXBuildFile; fileRef = 6DC31F8C71C64161896B9DF4 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedconstraint.hpp */; };
		F60C5F030A2A427DB23F0FAE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */ = {isa = PBXBuildFile; fileRef = 0150720842D742A9B5A07011 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */; };
		F61A05CA9224467786661ED6 /* /Users/heiner/git/QuantLib/ql/indexes/region.hpp */ = {isa = PBXBuildFile; fileRef = F00B78A25C05442FA4176FFB /* /Users/heiner/git/QuantLib/ql/indexes/region.hpp */; };
		F6282E2104B747A7A233E05B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/all.hpp */ = {isa = PBXBuildFile; fileRef = 2EE65F3899484069A84F4EAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/all.hpp */; };
		F63DABFE1B66496695F617C4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/all.hpp */ = {isa = PBXBuildFile; fileRef = 4A72D3D007724164BA4AF484 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/all.hpp */; };
		F6578E75374F4004A5856C3A /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.hpp */ = {isa = PBXBuildFile; fileRef = 6D922CB38627436CB301C1E4 /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.hpp */; };
		F657D8B9D70346AA97F0C78D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdamericanengine.hpp */ = {isa = PBXBuildFile; fileRef = 689CEF58ADBA4135A2CE2B91 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdamericanengine.hpp */; };
		F6608EB2C5D74C0CBB6769BD /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */ = {isa = PBXBuildFile; fileRef = 54372C807C224F2BAF342042 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */; };
		F6628FED8121426985293BAD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalforwardratesanalysis.hpp */ = {isa = PBXBuildFile; fileRef = BEE758B59CFD4CA38B80338B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalforwardratesanalysis.hpp */; };
		F663D5CE654E4FC29CDF7FE6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */ = {isa = PBXBuildFile; fileRef = 2D3B8D2A79D34591BE4BBCD9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */; };
		F665CCEBC3EE40899A0A3357 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = C53CF7ED1B02425F94F3A2F4 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */; };
		F66B49D39C664DA2B09C3616 /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.hpp */ = {isa = PBXBuildFile; fileRef = 035D29554185434AA9C1F336 /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.hpp */; };
		F6802CD8312B4E0B866570F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp */ = {isa = PBXBuildFile; fileRef = 1E8D6F40892E41F59FD3AAE6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp */; };
		F6BB8DCE4AD54CEAA892F578 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */ = {isa = PBXBuildFile; fileRef = FC5BB6F2783B453092DB0B8C /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */; };
		F6C580FECE9D4B3CB1A97118 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.hpp */ = {isa = PBXBuildFile; fileRef = DD523F0D69F9417D9986B916 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.hpp */; };
		F6CC314AF96046BB9FE7F680 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */ = {isa = PBXBuildFile; fileRef = 683C9C8ADF8C49AB94468A46 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */; };
		F6D67A47DEA74399850FEA1F /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */ = {isa = PBXBuildFile; fileRef = BEF1F65FCD744B5F89BB3E7D /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */; };
		F6E65A72F6BE401DAD5904C7 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.hpp */ = {isa = PBXBuildFile; fileRef = 06325119384F4EC6B78A6391 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.hpp */; };
		F6E7BA0E151244F8BD7E4013 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */ = {isa = PBXBuildFile; fileRef = E95854AD9A4C4918B6A452A7 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */; };
		F6EDCC15946842D5A0A68A80 /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.hpp */ = {isa = PBXBuildFile; fileRef = 70AB38DD3DE64DE88FC8525B /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.hpp */; };
		F6F7536FE87346AAADC30722 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */ = {isa = PBXBuildFile; fileRef = BD16C9D39F074C03AB0AA7D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */; };
		F6F81B07C07D41AFB3F0D23F /* /Users/heiner/git/QuantLib/test-suite/distributions.hpp */ = {isa = PBXBuildFile; fileRef = 65EE30F297CB467BAA2768BA /* /Users/heiner/git/QuantLib/test-suite/distributions.hpp */; };
		F6FE54B2EC0A41CD939DE9FC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */ = {isa = PBXBuildFile; fileRef = A89550D0560C4A5C95A8DED0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */; };
		F703D89332FB44339391C027 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */ = {isa = PBXBuildFile; fileRef = A50B603A16A747BA987D9CE3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */; };
		F70AA68A58AE4EC1B2390E37 /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */ = {isa = PBXBuildFile; fileRef = 9D94C891D0CA488EA7D2C061 /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */; };
		F70C03CCB71F44DAAE611E39 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp */ = {isa = PBXBuildFile; fileRef = A80D038FC5ED4AB4AD5CD69A /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp */; };
		F721F3A5442F4A06A4AE1E89 /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */ = {isa = PBXBuildFile; fileRef = 5D07777CA402454399AA7C1D /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */; };
		F73068050E2140358B6B40AE /* /Users/heiner/git/QuantLib/ql/math/statistics/convergencestatistics.hpp */ = {isa = PBXBuildFile; fileRef = BBC5E341961644DE8449D7EB /* /Users/heiner/git/QuantLib/ql/math/statistics/convergencestatistics.hpp */; };
		F745D401BB0A4AD099C89750 /* /Users/heiner/git/QuantLib/test-suite/defaultprobabilitycurves.hpp */ = {isa = PBXBuildFile; fileRef = CF335E9A03E54255A0B112FB /* /Users/heiner/git/QuantLib/test-suite/defaultprobabilitycurves.hpp */; };
		F74CBE4D75CE4711949D44AA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */ = {isa = PBXBuildFile; fileRef = D0C8F1C0E3D64D42A47C7DDF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */; };
		F766363994CF49E5939683F4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp */ = {isa = PBXBuildFile; fileRef = AC4C51D4DF97405B813D9D35 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp */; };
		F76689AFFA644E1E90B60D80 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.hpp */ = {isa = PBXBuildFile; fileRef = 11B313BAD750440EA7876F07 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.hpp */; };
		F789B3097C934FDD9502A08E /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = CA486A2BA9C6470497FB48F5 /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */; };
		F78F3111F4F84803943F4D4D /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */ = {isa = PBXBuildFile; fileRef = CE6D7B7214E44C1DB9E87A7B /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */; };
		F7A4DFC911BF4A12A8AE20D4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */ = {isa = PBXBuildFile; fileRef = CB96AC31C0C148A6BB6CAEC5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */; };
		F7AAB0E930A449449B2B6EEF /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.hpp */ = {isa = PBXBuildFile; fileRef = 31860A377AFE4B24955525C7 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.hpp */; };
		F7AAB1EE4CDD4974B67EBECC /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.hpp */ = {isa = PBXBuildFile; fileRef = C51BCD2ED7EF4AD28423011F /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.hpp */; };
		F7ABC32A6B2F4380BF3B6B60 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */ = {isa = PBXBuildFile; fileRef = BD10D5D43F9D40A49168E833 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */; };
		F7AC0717CD544C349DB77C83 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */ = {isa = PBXBuildFile; fileRef = B579729F2E774E319B0C64E1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */; };
		F7C0807C45914AB784927538 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */ = {isa = PBXBuildFile; fileRef = 529474EB292F423F848FB2B5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */; };
		F7C27962BE7C4454B468E1CC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/mixedscheme.hpp */ = {isa = PBXBuildFile; fileRef = 4E5BA1A846BC40C29126983A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/mixedscheme.hpp */; };
		F7E7360699664B9ABF467F87 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */ = {isa = PBXBuildFile; fileRef = 32A7F0EBA573450382FCC9B9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */; };
		F7EA9512FA154D3C97414F40 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */ = {isa = PBXBuildFile; fileRef = 5DBAA28AA6BC4D80BE2281DA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */; };
		F7EB9C4B7E5045F8AF315D04 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */ = {isa = PBXBuildFile; fileRef = A9F7AEDDE30C41388CBA79E3 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */; };
		F7ED6BBF63E6489A9D44E6B3 /* /Users/heiner/git/QuantLib/ql/volatilitymodel.hpp */ = {isa = PBXBuildFile; fileRef = 34C3FC0D76794BAD865FAD69 /* /Users/heiner/git/QuantLib/ql/volatilitymodel.hpp */; };
		F7F0DA64650C488F92A3CA44 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */ = {isa = PBXBuildFile; fileRef = 678AD79378B94A54941F317B /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */; };
		F8016BC226964BFB87DFABC3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp */ = {isa = PBXBuildFile; fileRef = AAC2FB8599094C8FB6C2E78E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp */; };
		F81A5C42B1E4460E84F1D161 /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */ = {isa = PBXBuildFile; fileRef = 68786BF15B9F41DEAF0C592A /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */; };
		F82351C01C8346CC864ECA26 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */ = {isa = PBXBuildFile; fileRef = 1C1A0C18203745E7B04A4A56 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */; };
		F835F56285404161BEE9F8BA /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.hpp */ = {isa = PBXBuildFile; fileRef = 384528CC394141AABD3A8DF3 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.hpp */; };
		F83DCB702140488BADA9AC94 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/finitedifferencenewtonsafe.hpp */ = {isa = PBXBuildFile; fileRef = 618B27B739404B1FA08D48FD /* /Users/heiner/git/QuantLib/ql/math/solvers1d/finitedifferencenewtonsafe.hpp */; };
		F8474BB4BF014DCC8EB23573 /* /Users/heiner/git/QuantLib/test-suite/assetswap.cpp */ = {isa = PBXBuildFile; fileRef = CE14ABBCC12C48D0B222E5B6 /* /Users/heiner/git/QuantLib/test-suite/assetswap.cpp */; };
		F84DCB485CC546F49471DF87 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = 20B34A404CC84F299016886C /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.hpp */; };
		F85B9EAEB63743518CB4B585 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.hpp */ = {isa = PBXBuildFile; fileRef = BDE2CAF99F0A4A84814BC376 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.hpp */; };
		F861A14729CC468CA8726742 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */ = {isa = PBXBuildFile; fileRef = C7BE89C8852D40BE84C8FA3A /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */; };
		F8691A6D3801416B994D8E62 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/bisection.hpp */ = {isa = PBXBuildFile; fileRef = 52BF3AB64F904E7B96972A01 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/bisection.hpp */; };
		F869A916518C42B3BC9C2E2A /* /Users/heiner/git/QuantLib/ql/instruments/swaption.hpp */ = {isa = PBXBuildFile; fileRef = 41228EC39CD34B76818FBE57 /* /Users/heiner/git/QuantLib/ql/instruments/swaption.hpp */; };
		F872A9BE76034462A6C3312E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */ = {isa = PBXBuildFile; fileRef = B41383F2843B447D80DB6C54 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */; };
		F872D5D899AD47C89F1B8B69 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/discountcurve.hpp */ = {isa = PBXBuildFile; fileRef = 721DA31CA95E4AABA58A2DF9 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/discountcurve.hpp */; };
		F873CE1E61DA4E3C8333A3D0 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerospreadedtermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 2DD6B6F8B4B743ECB743F7D9 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerospreadedtermstructure.hpp */; };
		F8A99AFDA00149C09117D42D /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */ = {isa = PBXBuildFile; fileRef = D105D3C4E87045A29A8BD2BA /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */; };
		F8C5AB85F06D46A1AE2E3A08 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */ = {isa = PBXBuildFile; fileRef = 24239CAB329A47DB91AE3F8B /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */; };
		F8D514D984ED45F7A1A89884 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.hpp */ = {isa = PBXBuildFile; fileRef = A9C79FC1702D4D4C9245B1A9 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.hpp */; };
		F8F147543F7D4451913C0A31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */ = {isa = PBXBuildFile; fileRef = 2CC39F89AD7E4131B977F3B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */; };
		F8F383A4CAE9405D915F5B52 /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.hpp */ = {isa = PBXBuildFile; fileRef = 99CC978BF1AD4EBFBF03A7B7 /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.hpp */; };
		F8FE1FEFADC440138B81D632 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */ = {isa = PBXBuildFile; fileRef = B153E1B565DD475185AF28A5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */; };
		F910C00EA51C462990DEFB5D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */ = {isa = PBXBuildFile; fileRef = D6D42984924547DA80B36056 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */; };
		F91FC3D859AE4A86AD9398E1 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */ = {isa = PBXBuildFile; fileRef = 92D414D882C1474B96505CBF /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */; };
		F9346AD1A0E1403BB7ED660D /* /Users/heiner/git/QuantLib/test-suite/noarbsabr.hpp */ = {isa = PBXBuildFile; fileRef = 143738CC071A4991A5D4AED9 /* /Users/heiner/git/QuantLib/test-suite/noarbsabr.hpp */; };
		F9360BF06B974840A830BEBF /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.hpp */ = {isa = PBXBuildFile; fileRef = B40CB3E2AC8D42B886165202 /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.hpp */; };
		F942C0835A95491BA2B8D657 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */ = {isa = PBXBuildFile; fileRef = EF55112ED172471BACFF0D50 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */; };
		F9507D2EB960433C92F587B6 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */ = {isa = PBXBuildFile; fileRef = DE068E04466E494BA8A612D8 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */; };
		F956AC389A0746229B856EBA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */ = {isa = PBXBuildFile; fileRef = AC5D69BFB3BB457199322B33 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */; };
		F95FFE124B734EB7BA8E6A7C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */ = {isa = PBXBuildFile; fileRef = 43D9149D9A7E4B85B8A5E6F1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */; };
		F965E1DA540C49A2A0D298FC /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 4F503FB20E8E493EBABCA406 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */; };
		F96FCAFC65774A3692F3423E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp */ = {isa = PBXBuildFile; fileRef = BBB4FA942D1D49A293E3C14E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp */; };
		F98440006973498C86C5D243 /* /Users/heiner/git/QuantLib/test-suite/businessdayconventions.cpp */ = {isa = PBXBuildFile; fileRef = A74BDAE166BE4F6B98652C69 /* /Users/heiner/git/QuantLib/test-suite/businessdayconventions.cpp */; };
		F98B3FEBE7E84BF2B902E637 /* /Users/heiner/git/QuantLib/test-suite/rangeaccrual.cpp */ = {isa = PBXBuildFile; fileRef = E169E53EE83B418FAB4D65EE /* /Users/heiner/git/QuantLib/test-suite/rangeaccrual.cpp */; };
		F992F3FF92D64052A6CD471B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */ = {isa = PBXBuildFile; fileRef = 085094E55D624C628FA19FEE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */; };
		F9C6D7840C8F4D9598C6812A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp */ = {isa = PBXBuildFile; fileRef = EB47D97533C94136BCF33061 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp */; };
		F9DFA21A3621422A9A2B15AC /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.hpp */ = {isa = PBXBuildFile; fileRef = C92EF899ECBD43E9A530B983 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.hpp */; };
		F9F84EA6C968497498DECA16 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */ = {isa = PBXBuildFile; fileRef = D18A5CCCBFA44763B44A2841 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */; };
		FA03DF5BE1A94A96A02D32FA /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipathgenerator.hpp */ = {isa = PBXBuildFile; fileRef = 6C3C1D6EBD414F85AB64140C /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipathgenerator.hpp */; };
		FA09D9BCDAAB40E985C4D6B6 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newton.hpp */ = {isa = PBXBuildFile; fileRef = A4F3CFD905654C9EB4ED49D3 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newton.hpp */; };
		FA45A89B585349AAA4615477 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/mcvarianceswapengine.hpp */ = {isa = PBXBuildFile; fileRef = DC271D524B664F07B09B56A8 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/mcvarianceswapengine.hpp */; };
		FA654E0378B941F9903723A0 /* /Users/heiner/git/QuantLib/test-suite/numericaldifferentiation.cpp */ = {isa = PBXBuildFile; fileRef = A9A9D121A69B43E8A2584E10 /* /Users/heiner/git/QuantLib/test-suite/numericaldifferentiation.cpp */; };
		FA6C246AE4134886ADF4F19F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */ = {isa = PBXBuildFile; fileRef = CF8B78E0AEC14E90989E9938 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */; };
		FA8806B1735C4905AF4859C4 /* /Users/heiner/git/QuantLib/ql/auto_link.hpp */ = {isa = PBXBuildFile; fileRef = 13A4B015E76E4BAE83559E92 /* /Users/heiner/git/QuantLib/ql/auto_link.hpp */; };
		FA884DBADF4A4B6BBA791B4F /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.hpp */ = {isa = PBXBuildFile; fileRef = 925B98FF185B49C5A5D1DE0E /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.hpp */; };
		FA8AF6148B9941CCA3BC6E31 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */ = {isa = PBXBuildFile; fileRef = 275A87BA04B54733B026FE5C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */; };
		FA8C3E9EF85D400AAC5DE426 /* /Users/heiner/git/QuantLib/ql/experimental/math/frankcopularng.hpp */ = {isa = PBXBuildFile; fileRef = 2E77C6DF58C54E3B8E716E5E /* /Users/heiner/git/QuantLib/ql/experimental/math/frankcopularng.hpp */; };
		FA8FB824CA7349B993F5D7AF /* /Users/heiner/git/QuantLib/ql/indexes/ibor/tibor.hpp */ = {isa = PBXBuildFile; fileRef = 1A5C5D3D80074019A0283F1E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/tibor.hpp */; };
		FA97AF1E011E443AA1B67A46 /* /Users/heiner/git/QuantLib/test-suite/bermudanswaption.hpp */ = {isa = PBXBuildFile; fileRef = 628A64C10DE94B699FED49A7 /* /Users/heiner/git/QuantLib/test-suite/bermudanswaption.hpp */; };
		FAA35B5329324C25BA04ED72 /* /Users/heiner/git/QuantLib/test-suite/distributions.cpp */ = {isa = PBXBuildFile; fileRef = 78B8B59617564341922ED15E /* /Users/heiner/git/QuantLib/test-suite/distributions.cpp */; };
		FAABEBD4861446D28E560C41 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */ = {isa = PBXBuildFile; fileRef = F047A8FF02A34B8895964FD6 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */; };
		FAB2E9E2680243F4A0C5F839 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp */ = {isa = PBXBuildFile; fileRef = 19657A3F208E4DDAB24B503F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp */; };
		FABA6B1C13DF474AB674F74A /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.hpp */ = {isa = PBXBuildFile; fileRef = 32E7705A5BBF497EA52D8B2B /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.hpp */; };
		FAD3D36F875F46A2A996D576 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.hpp */ = {isa = PBXBuildFile; fileRef = 7FA37CDA71374F799176D071 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.hpp */; };
		FAD7E80721344F1AAEBED5E6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendamericanengine.hpp */ = {isa = PBXBuildFile; fileRef = B2699E71D7984632B4752A53 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendamericanengine.hpp */; };
		FADA730491064AD6A8E2C7EF /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */ = {isa = PBXBuildFile; fileRef = 92077EEB369D49CFB255CF87 /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */; };
		FADB07BD19514460808D808F /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.hpp */ = {isa = PBXBuildFile; fileRef = 0D9F68C687014638ABD628D1 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.hpp */; };
		FAE838A6EA5B4527B27067ED /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */ = {isa = PBXBuildFile; fileRef = 8777A492548E460F953EC574 /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */; };
		FAF65FE9FF864C1AB6B13A55 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */ = {isa = PBXBuildFile; fileRef = 1ADAA3E4DCE74AA0AAC0ADC5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */; };
		FB0DC76A722F44609DB9CC86 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */ = {isa = PBXBuildFile; fileRef = A1E5BDFDB633471895FBB756 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */; };
		FB0FB2D5AAD34DE7BC87CB25 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.hpp */ = {isa = PBXBuildFile; fileRef = 53EA0BCC5D034711A0634E92 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.hpp */; };
		FB216705CA954D87AD35CDAD /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/all.hpp */ = {isa = PBXBuildFile; fileRef = 21A8ED205B0E430EA0A65759 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/all.hpp */; };
		FB2BF946C1C3483B9D0BFEB5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */ = {isa = PBXBuildFile; fileRef = 2BDA717EA9184F459AF59B14 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */; };
		FB2C19FDC74B465D9BBD1C3C /* /Users/heiner/git/QuantLib/ql/money.cpp */ = {isa = PBXBuildFile; fileRef = CB015412DCEB4AA69CFA2BC8 /* /Users/heiner/git/QuantLib/ql/money.cpp */; };
		FB34CBE93C0447FABEA713D2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.hpp */ = {isa = PBXBuildFile; fileRef = 4B2D47F9A103482DA1CE4383 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.hpp */; };
		FB898030AFAC45C2B52CF5A6 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */ = {isa = PBXBuildFile; fileRef = 9686DB0DCF7C4A25A10F0DE9 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */; };
		FB8AD6B077A9496BA2C44469 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */ = {isa = PBXBuildFile; fileRef = 1C43974429DA43849C3128B7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */; };
		FB90F4811C404CDCB383F276 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.hpp */ = {isa = PBXBuildFile; fileRef = 30694997B8584B10A0826275 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.hpp */; };
		FBB78F207D1249AFA8448FE7 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.hpp */ = {isa = PBXBuildFile; fileRef = 159C7E99B5BE4C84B798C84B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.hpp */; };
		FBBE4B34E98D4B43AEE61511 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.hpp */ = {isa = PBXBuildFile; fileRef = 1AB18D26606743AC988D5564 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.hpp */; };
		FBC8AE618B0B4F3D96112088 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */ = {isa = PBXBuildFile; fileRef = F22770BBB863495193073781 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */; };
		FBC977D5693E40188B0C2DC9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.hpp */ = {isa = PBXBuildFile; fileRef = 7A129B9AF7A04478AA492F66 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.hpp */; };
		FBDAB64D61A6454A95D45458 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.hpp */ = {isa = PBXBuildFile; fileRef = BF1BFAC58CE643D5B42E58C2 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.hpp */; };
		FBEB06FC1C6345CE8BD205D5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */ = {isa = PBXBuildFile; fileRef = C9D9B2417902475A8820BB29 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */; };
		FBFD8B68C7154C78945CE6E4 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */ = {isa = PBXBuildFile; fileRef = 5C243736D0234EDBAC523B1C /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */; };
		FC066DA1B90F41A9AC1B3CF1 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp */ = {isa = PBXBuildFile; fileRef = F42C832CB31B4D7784EA9733 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp */; };
		FC1CBEC909F04663A4F7C3A8 /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */ = {isa = PBXBuildFile; fileRef = E8919E3BEDE34578BA58CAAB /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */; };
		FC2774A9E3B543D4851195CB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */ = {isa = PBXBuildFile; fileRef = C4F7AAA03BF845AEAEA4D893 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */; };
		FC2D659D800640A4A09FE79E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */ = {isa = PBXBuildFile; fileRef = A8555848783F4DB682782DA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */; };
		FC3B90630F694C2789EB7356 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */ = {isa = PBXBuildFile; fileRef = 491832E91E00470FBAD54AB9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */; };
		FC4C1A04283949DBBBC8DA95 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.hpp */ = {isa = PBXBuildFile; fileRef = AFCBD89783DC457BA71F90CF /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.hpp */; };
		FC5342CD287349ACA26D798B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */ = {isa = PBXBuildFile; fileRef = 7FBBE74535EE40D6A650E716 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */; };
		FC7C81F7041E4F96A7EFC06D /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */ = {isa = PBXBuildFile; fileRef = A0DC4A9D54594918AF4BEA33 /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */; };
		FC8544A1DD4447F6A69B7F2B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.hpp */ = {isa = PBXBuildFile; fileRef = 758F4CCA0C8841DDBC262157 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.hpp */; };
		FCA98212FD964D9DA248E8D7 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.hpp */ = {isa = PBXBuildFile; fileRef = A6506E37EE2E4C3791903FD7 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.hpp */; };
		FCB9A28C753D47F78040923A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/cranknicolson.hpp */ = {isa = PBXBuildFile; fileRef = B8165DC968D345A0A97679D8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/cranknicolson.hpp */; };
		FCC03AC657714341BECEF983 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/all.hpp */ = {isa = PBXBuildFile; fileRef = 5DE96E90EB46415C85457C83 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/all.hpp */; };
		FCCACAEE962E4CE99B1AD71B /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */ = {isa = PBXBuildFile; fileRef = A488C07979F24EB6885B955B /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */; };
		FCE56D82F3264D57BDD9EE2B /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.hpp */ = {isa = PBXBuildFile; fileRef = 5D70AF727AA347EAA1B9316A /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.hpp */; };
		FCF69206C27846E7ABF772C8 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.hpp */ = {isa = PBXBuildFile; fileRef = FC47A9C47B634FC4956C301B /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.hpp */; };
		FCFA0850C8774E8298994F1C /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */ = {isa = PBXBuildFile; fileRef = 71D5F26AA632458899ECA764 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */; };
		FD0C146F239E487A9BE3BBCD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp */ = {isa = PBXBuildFile; fileRef = 0327A1C740E54D04B67318E3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp */; };
		FD154EAD627D45B6A3329024 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */ = {isa = PBXBuildFile; fileRef = 101F5CC4F80A4E28BE9EFC03 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */; };
		FD17C469069D4054820A3DD8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.hpp */ = {isa = PBXBuildFile; fileRef = 91F3AF24FEC0401AA42667BD /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.hpp */; };
		FD209A518C4E47BEA0F77B89 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/zibor.hpp */ = {isa = PBXBuildFile; fileRef = D30926903E444A8C8E9F47E5 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/zibor.hpp */; };
		FD22B38CEFF74EEDB5E95033 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.hpp */ = {isa = PBXBuildFile; fileRef = D0809A1639DA4D92913A6F5E /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.hpp */; };
		FD3054F8F61940069BA20374 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */ = {isa = PBXBuildFile; fileRef = 1A4EF03D9F864A3E9995AD7F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */; };
		FD3CF8E16F5041A1963C7DF5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.hpp */ = {isa = PBXBuildFile; fileRef = 2C5DC17ACCBD4E0CA8BAA21E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.hpp */; };
		FD461C9675934C1B8A83916A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */ = {isa = PBXBuildFile; fileRef = 03C980338CBB40AFAF41FB5D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */; };
		FD57C6589FA7449C86005D4C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.hpp */ = {isa = PBXBuildFile; fileRef = C48BDCAC95814A1887C3CC62 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.hpp */; };
		FD5CB11F24C143F9A1D0B38B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.hpp */ = {isa = PBXBuildFile; fileRef = F3B7B3D71C1C45CC9F9DE6A8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.hpp */; };
		FD6109A4C4B14648BBD3DD84 /* /Users/heiner/git/QuantLib/ql/instruments/claim.hpp */ = {isa = PBXBuildFile; fileRef = 75EA0CEAECC2441A95984E04 /* /Users/heiner/git/QuantLib/ql/instruments/claim.hpp */; };
		FD7BEF8F94954DCC94B7FD46 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */ = {isa = PBXBuildFile; fileRef = 02AA9D7C386C41F3A6D7F7C4 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */; };
		FD806596BFE345D2962F69E9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bkbm.hpp */ = {isa = PBXBuildFile; fileRef = FFFE4659475342278E17AE0D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bkbm.hpp */; };
		FD81AE4B0C8546C2AB4BC5EC /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.hpp */ = {isa = PBXBuildFile; fileRef = D6F7B9B50ECA44E180A5D39D /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.hpp */; };
		FD88E9A95AE3455B90A8519C /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.hpp */ = {isa = PBXBuildFile; fileRef = 75A2D7552CD34D18946DE297 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.hpp */; };
		FD8A3E18517B4CA18418DB5D /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */ = {isa = PBXBuildFile; fileRef = B98CEBA7C17040B39FDB6450 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */; };
		FD8D967F5FE3473D951357EC /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.hpp */ = {isa = PBXBuildFile; fileRef = 8E2BF47EDE494D8A9C30F8CB /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.hpp */; };
		FD9EDC56FBA843F592BFA848 /* /Users/heiner/git/QuantLib/test-suite/volatilitymodels.hpp */ = {isa = PBXBuildFile; fileRef = E8D0257D5AB140A49E2E810B /* /Users/heiner/git/QuantLib/test-suite/volatilitymodels.hpp */; };
		FDA3943F70DC45E4B3620A48 /* /Users/heiner/git/QuantLib/ql/models/volatility/garmanklass.hpp */ = {isa = PBXBuildFile; fileRef = 277ECCA020CE41FA9E6EA0DF /* /Users/heiner/git/QuantLib/ql/models/volatility/garmanklass.hpp */; };
		FDBC13AF81074BC3AF4D0E4B /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */ = {isa = PBXBuildFile; fileRef = 52A08718EC0D42F8AA0B746E /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */; };
		FDC5189F958E4BE4B1A16BE3 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */ = {isa = PBXBuildFile; fileRef = 61AF95DB2AE74D1FB1440017 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */; };
		FDD1FEF7D6D24FFFB8DD57C2 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodel.cpp */ = {isa = PBXBuildFile; fileRef = ABB298C2236846E4AF5C70FB /* /Users/heiner/git/QuantLib/test-suite/libormarketmodel.cpp */; };
		FDE54C16455140D491B60C6B /* /Users/heiner/git/QuantLib/ql/termstructure.hpp */ = {isa = PBXBuildFile; fileRef = 4C14482791F24ABA918E0EAF /* /Users/heiner/git/QuantLib/ql/termstructure.hpp */; };
		FDE7067095B144DEAE6C7C8C /* /Users/heiner/git/QuantLib/ql/termstructures/credit/all.hpp */ = {isa = PBXBuildFile; fileRef = D98A6F2B9DF84350A704F909 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/all.hpp */; };
		FE01DF99DDD842EF8FFA134B /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */ = {isa = PBXBuildFile; fileRef = 1F9155F4907449CDBA87134C /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */; };
		FE0F36F994324CFD82A50E46 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/capletvariancecurve.hpp */ = {isa = PBXBuildFile; fileRef = 1C744A4A270249ED82E68D67 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/capletvariancecurve.hpp */; };
		FE17DCD753B24EEFBFBC4BDC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */ = {isa = PBXBuildFile; fileRef = C372715858074CCE84AE46E7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */; };
		FE24CC8F9FF3430CB87267A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */ = {isa = PBXBuildFile; fileRef = 7AFFDDCEF2134162BBA81855 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */; };
		FE277CAAAAE245F5B49F08A2 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.hpp */ = {isa = PBXBuildFile; fileRef = C566B9295FE6458CA2CB4230 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.hpp */; };
		FE2959A2D6B44052814AC19D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */ = {isa = PBXBuildFile; fileRef = CDF10DFA56C543E4A729FD60 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */; };
		FE306E42312641F985968593 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nodedataprovider.hpp */ = {isa = PBXBuildFile; fileRef = F2AD7E7DF7F9462583C33015 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nodedataprovider.hpp */; };
		FE35C8F2AD2843969C96CA6B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.hpp */ = {isa = PBXBuildFile; fileRef = 44BD92BE473E49C185A53AF0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.hpp */; };
		FE4D4335A0C547FC901F226B /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.hpp */ = {isa = PBXBuildFile; fileRef = 0B1E73007DBB435DA63EEA77 /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.hpp */; };
		FE506572416044F0AA6F7E1B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.hpp */ = {isa = PBXBuildFile; fileRef = 685B8ECA80974B049D1DFFA6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.hpp */; };
		FE5B6DD99E024722A096BCE8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */ = {isa = PBXBuildFile; fileRef = 6CBA4ABC1A1E4E57BD7A505D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */; };
		FE5BB0F6288B40268CE453CF /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */ = {isa = PBXBuildFile; fileRef = 8BDBB00D46C147E6BEC74554 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */; };
		FE7570AA85AC49D7A76F40FE /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */ = {isa = PBXBuildFile; fileRef = 3CBAAB266D6E402A9E9305EB /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */; };
		FE7EAD7BAAA64A82A100F49A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */ = {isa = PBXBuildFile; fileRef = D6A667E2C79F4EBFAED5DA63 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */; };
		FE86CB8CAA6D44C2A204D878 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.hpp */ = {isa = PBXBuildFile; fileRef = 0AF665EBAFED4D5EB22BD83C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.hpp */; };
		FE8CDAC3BCF0486D92666D97 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */ = {isa = PBXBuildFile; fileRef = CBB3DDCEC0E14B9FBB85A060 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */; };
		FEA2FB872A2D4A5B9AD56818 /* /Users/heiner/git/QuantLib/ql/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 7BD81B0F8F31412EA04A5301 /* /Users/heiner/git/QuantLib/ql/CMakeLists.txt */; };
		FEB0E193381A4BDB98511728 /* /Users/heiner/git/QuantLib/ql/indexes/all.hpp */ = {isa = PBXBuildFile; fileRef = 5478EEF131044C7FA53E9E44 /* /Users/heiner/git/QuantLib/ql/indexes/all.hpp */; };
		FEB34C76042A4C9B8C2D94B1 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */ = {isa = PBXBuildFile; fileRef = 54445E883F314317B7972C39 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */; };
		FEDD2DF90CB84B51AFDC0E92 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dminus.hpp */ = {isa = PBXBuildFile; fileRef = C85FAF3B38A14EE5A7B6CF2F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dminus.hpp */; };
		FEF5F9EF0F6947789D74037E /* /Users/heiner/git/QuantLib/test-suite/linearleastsquaresregression.cpp */ = {isa = PBXBuildFile; fileRef = 0104665CE523438ABFA2E108 /* /Users/heiner/git/QuantLib/test-suite/linearleastsquaresregression.cpp */; };
		FF001E68E448479A8272165C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */ = {isa = PBXBuildFile; fileRef = 4A8FB7F2632B437AACA38472 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */; };
		FF0A40F7571941D7BFFDA041 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.hpp */ = {isa = PBXBuildFile; fileRef = A997840100BD4B8280381BA5 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.hpp */; };
		FF0D5D86F12048D1A5EEE5F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp */ = {isa = PBXBuildFile; fileRef = 4F6F8023CFEB4976BD13F42D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp */; };
		FF129346AB6C457FAA2659A6 /* /Users/heiner/git/QuantLib/ql/userconfig.hpp */ = {isa = PBXBuildFile; fileRef = 9759567A631E4300B342BD46 /* /Users/heiner/git/QuantLib/ql/userconfig.hpp */; };
		FF24DB1E4DCB4FEBA44D1D33 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */ = {isa = PBXBuildFile; fileRef = E84E389B7B284E0A87FCFE5A /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */; };
		FF25FA7A5A334EE88C86DF0D /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.hpp */ = {isa = PBXBuildFile; fileRef = 9DC749499BE440A1B0817E1E /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.hpp */; };
		FF2EA670501947A1BFD16C1B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */ = {isa = PBXBuildFile; fileRef = 527455819DB04A349B975173 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */; };
		FF43CCBCBCB04921B7181708 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */ = {isa = PBXBuildFile; fileRef = C9B4D205A50D4BD6B504AA9E /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */; };
		FF47A17A029641E19E1EE270 /* /Users/heiner/git/QuantLib/ql/math/matrix.hpp */ = {isa = PBXBuildFile; fileRef = A11505D8E9D94B929FF3419A /* /Users/heiner/git/QuantLib/ql/math/matrix.hpp */; };
		FF4BE1091C7748B38532B216 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/binomialdoublebarrierengine.hpp */ = {isa = PBXBuildFile; fileRef = E116586844C74D12994F8C1A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/binomialdoublebarrierengine.hpp */; };
		FF4F5A4465F642ECA95C40D4 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */ = {isa = PBXBuildFile; fileRef = 2B41C9E032714B64959295C0 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */; };
		FF530C1C176F490698AF14D2 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.hpp */ = {isa = PBXBuildFile; fileRef = DCC37ED588B74243B928B0F6 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.hpp */; };
		FF58FC2EEADC4E1A84F3F425 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.hpp */ = {isa = PBXBuildFile; fileRef = 34E470715B9C4D41A994220C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.hpp */; };
		FF763D207C61435395655D09 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp */ = {isa = PBXBuildFile; fileRef = AB5E69FC3F1847D98851AA65 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp */; };
		FF925C29F4C94A33AF4CFF7A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/finitedifferencemodel.hpp */ = {isa = PBXBuildFile; fileRef = 2F48AF0CF830432EAA1C3E91 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/finitedifferencemodel.hpp */; };
		FF9631A5A4404BF186C15BF0 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */ = {isa = PBXBuildFile; fileRef = 2B482D48F99B44D5A759DF52 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */; };
		FFA0767AD8B749A79D825311 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.hpp */ = {isa = PBXBuildFile; fileRef = 3C5698944C404549A7D5D72D /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.hpp */; };
		FFA132A2A97E4C18810BCE10 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */ = {isa = PBXBuildFile; fileRef = 6466D735E6C94B8FBCA5C94B /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */; };
		FFB1B84085F64ADE9369913D /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.hpp */ = {isa = PBXBuildFile; fileRef = E0FBD99787CA47D9AD0C9CBB /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.hpp */; };
		FFB3420FD4684357A9B695EA /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/all.hpp */ = {isa = PBXBuildFile; fileRef = 20395EDFDBC8496F9718FA51 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/all.hpp */; };
		FFC1C2B3DB8849309173F012 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp */ = {isa = PBXBuildFile; fileRef = C2DAA40E8B89452BA9E2662A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp */; };
		FFE8852BB97E4EC6BA07102D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */ = {isa = PBXBuildFile; fileRef = AFBE1C06B51B495D91F51B31 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */; };
		FFF4D7000F4B4CFD98F7D4A2 /* /Users/heiner/git/QuantLib/test-suite/blackdeltacalculator.hpp */ = {isa = PBXBuildFile; fileRef = A30D3464915143F1BD34190B /* /Users/heiner/git/QuantLib/test-suite/blackdeltacalculator.hpp */; };
		FFF5DBF90EF644FFBF78A303 /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */ = {isa = PBXBuildFile; fileRef = BF428DD412B148C6963CBDB2 /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXBuildStyle section */
		3741D7678EF94397B64DA3B0 /* Debug */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Debug;
		};
		3969390E7E794B23834B8A41 /* RelWithDebInfo */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = RelWithDebInfo;
		};
		7A9FD97D90314524BD38F1AD /* Release */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Release;
		};
		D8160443E1D243AA9F222595 /* MinSizeRel */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = MinSizeRel;
		};
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
		0B11A9D7CE144C229DAFCD16 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		0B3E7790E19C4CFA8682A112 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		196370ECCAA44BCB8E769243 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		1DCCFC551DD6479398B9A47C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		1DD181B6A1624DE2BAA83C50 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		1F6F269F9FFB4F3797B41748 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		29DDA7C6A79C4473930838ED /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		332392007BC14D99A850FCB2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		36185D43C3724F7AB4B7B1CC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		379DCD556F034357A29B1A60 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		42C8C6D5EA634D248F9C6972 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		45F2E356465B4F1AAA6392D9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A23D49611A124D1CA5228C1B;
			remoteInfo = Gaussian1dModels;
		};
		492E4F0C2ED44228B132FA15 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		4F077E614DCB497CA89FA85D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		4FCC7A6B24E84E059FC374C3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		50A545CFBE074654BBE375AC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F804B67AD84A4FFBB583CD51;
			remoteInfo = LatentModel;
		};
		50E26E59E1E6414484121D3C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		5255F00F06FC49B2A9CB05C6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		5298A457C4B349FF9349B453 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 4888015459454E4384BDC423;
			remoteInfo = "quantlib-benchmark";
		};
		5490566FDE38448BB2638102 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		55B88B4382C643C68D14A6D3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8A697A06B12241778436BE3C;
			remoteInfo = CDS;
		};
		5652571E3C4B4BE189C4EB8C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		56CBF669477947D285BA9B7D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7875808B72264DD598812031;
			remoteInfo = FittedBondCurve;
		};
		5A1BF78833EC431794C519D7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		5B37D817482D403899AB0515 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 686DDCCB5C6E440A8AA85EA3;
			remoteInfo = BasketLosses;
		};
		5B4D7FC86A524F77A93AB797 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A45914E1FCD646168C0B781A;
			remoteInfo = MultidimIntegral;
		};
		5C362454637340B0B6683D72 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		6121A44F1A1D4DF9A6C834AB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		664AE4FC6CC1411D8F042AF2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F0CC5B757E141178E1EB77E;
			remoteInfo = Bonds;
		};
		685FD22086A5465E842F2256 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		6A51BB87401846C89559B8A9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		799763442CF240CB914E9749 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7ECF9A7703E146DDB6F0C05B;
			remoteInfo = ConvertibleBonds;
		};
		8219E49CE8D54E2D91E16888 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		86FD7EEA99CF4448A1819018 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 039D30E15E9646F2AB9EEAB0;
			remoteInfo = MarketModels;
		};
		8B34F82F4EA8407FB55BE49E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		8F6586B5B6E24BD9B5523C2F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5DFE28F7D23A4238A26BC4CF;
			remoteInfo = Repo;
		};
		8FD715A2D9FA423892389FCE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		92CEFB15729F4CA69BB736B9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 638C310F39134A5883B2CCB4;
			remoteInfo = SwapValuation;
		};
		99497013AC5540CB9393265A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C15AE522686846B3A2B07B0F;
			remoteInfo = ALL_BUILD;
		};
		9EAB37B07E394F4F9553D1D4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		A0F93C5075814843B864D6DE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		A185ED83310B4C4F968069B7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		AC2DABD5C87649D6ACEB58DE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		B1BCC0F6320C4F62B35F1089 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		B85F4C55027C434EBB04DA84 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = EC96C97B456548F389E9E7E2;
			remoteInfo = CallableBonds;
		};
		BA1CF65B056848C5983E5004 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		BA288AD9565F44339BA35008 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		BCBE8006822A44DA8E12AABA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 31CA74D128534CEB9CB7D7D4;
			remoteInfo = GlobalOptimizer;
		};
		BEB8DA348EE64188AA86A997 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		C0B95D38831F40D199FDB0F6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F600A56CE9F14452BDDC4E50;
			remoteInfo = CVAIRS;
		};
		C42F280D433C47F6A0FB1AA7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		CB85B26B5E3F4A5F97D8F956 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A5B62B5515AF418DB5F53002;
			remoteInfo = DiscreteHedging;
		};
		CDA137021D0847ADB9874032 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 15AE9A6AF4394E4EB5C5E1FB;
			remoteInfo = Replication;
		};
		CE9ABE5F90E745A0973DDA9A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F1C5267109FA46D5BBEF98A6;
			remoteInfo = "quantlib-test-suite";
		};
		CF21B206BF444B289739E762 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		D23752D5FBFE48D1A8BA526B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		D3E9A5CBC6A94DC38F860616 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 831FCB09EAAE4BDFBB7B73EB;
			remoteInfo = BermudanSwaption;
		};
		D8579BBBEF9B4EA19A17D4E8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		DA37D5DC563D4789A9B8AE36 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		DA4A7035143243EEB7B71A08 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		DF8F6D3960554198BAA5704F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F2DA3F8A9C344C15AA5D1483;
			remoteInfo = FRA;
		};
		E1144B6E502045968544DB65 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		ECBC4597D8A44D17AF650A88 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291EB2A9319B41068117829A;
			remoteInfo = QuantLib;
		};
		EF50C9BFEFCD45ACAB2A28F6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		F1BF3616BEA5417B92D705F2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		F3700E116DF340618B15B086 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
		F62AA58CFD1848649DA620F4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0CB5DE52297446918CF640B5;
			remoteInfo = QuantLib_Static;
		};
		F9FD0A52E9094DA28FDE6B26 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1B00CC0138174C29ABB38652;
			remoteInfo = EquityOption;
		};
		FD80ED5F63434CC9890F0EC0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = C5D054430CDD44FA8526CE32 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28A7761A25745E1917416EC;
			remoteInfo = ZERO_CHECK;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		001832636A454B63BBD2F2C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lsstrategy.cpp; path = ql/models/marketmodels/callability/lsstrategy.cpp; sourceTree = SOURCE_ROOT; };
		00334B34DB41479180383473 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/cliquet/all.hpp; sourceTree = SOURCE_ROOT; };
		0050A765092448B69AE08D2E /* /Users/heiner/git/QuantLib/ql/currencies/europe.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = europe.hpp; path = ql/currencies/europe.hpp; sourceTree = SOURCE_ROOT; };
		006810E19C684AAE8DE854AB /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nthtodefault.cpp; path = ql/experimental/credit/nthtodefault.cpp; sourceTree = SOURCE_ROOT; };
		006C8EE694E14828A92DC965 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = klugeextouprocess.hpp; path = ql/experimental/processes/klugeextouprocess.hpp; sourceTree = SOURCE_ROOT; };
		006FAF95BFA04CE48594F2EC /* /Users/heiner/git/QuantLib/ql/experimental/math/claytoncopularng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = claytoncopularng.hpp; path = ql/experimental/math/claytoncopularng.hpp; sourceTree = SOURCE_ROOT; };
		007C22BAE76D473BB4BEDBE9 /* /Users/heiner/git/QuantLib/ql/instruments/bond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bond.hpp; path = ql/instruments/bond.hpp; sourceTree = SOURCE_ROOT; };
		0080F4068E9F481FBF7D1C7F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/centrallimitgaussianrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = centrallimitgaussianrng.hpp; path = ql/math/randomnumbers/centrallimitgaussianrng.hpp; sourceTree = SOURCE_ROOT; };
		00826A5C7EAC447391A548D6 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativersg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inversecumulativersg.hpp; path = ql/math/randomnumbers/inversecumulativersg.hpp; sourceTree = SOURCE_ROOT; };
		008A2B92306145AFA78C4993 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kinterpolatedyoyoptionletvolatilitysurface.hpp; path = ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp; sourceTree = SOURCE_ROOT; };
		009792FEB2A84C52A88D6879 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = errorfunction.cpp; path = ql/math/errorfunction.cpp; sourceTree = SOURCE_ROOT; };
		00A189201A8549ACB518A239 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = accountingengine.cpp; path = ql/models/marketmodels/accountingengine.cpp; sourceTree = SOURCE_ROOT; };
		00A7A34D38FE4F578229B0DB /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcamericanpathengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcamericanpathengine.hpp; path = ql/experimental/mcbasket/mcamericanpathengine.hpp; sourceTree = SOURCE_ROOT; };
		00B06501E25C4E5B9AC975B3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capfloortermvolatilitystructure.cpp; path = ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		00B0D8E028944B5AA7C720B5 /* /Users/heiner/git/QuantLib/test-suite/varianceoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = varianceoption.hpp; path = "test-suite/varianceoption.hpp"; sourceTree = SOURCE_ROOT; };
		00B14E38E6CD4277A5915B36 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = histogram.hpp; path = ql/math/statistics/histogram.hpp; sourceTree = SOURCE_ROOT; };
		00B1A01CA763483C8D8E9FEB /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = catrisk.cpp; path = ql/experimental/catbonds/catrisk.cpp; sourceTree = SOURCE_ROOT; };
		00B752E1938043DCAF286A33 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = payoffs.hpp; path = ql/instruments/payoffs.hpp; sourceTree = SOURCE_ROOT; };
		00F38AD869AB4C6DA51223FC /* /Users/heiner/git/QuantLib/ql/experimental/credit/binomiallossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomiallossmodel.hpp; path = ql/experimental/credit/binomiallossmodel.hpp; sourceTree = SOURCE_ROOT; };
		0100D27D15A747BFA72FF4FA /* /Users/heiner/git/QuantLib/test-suite/mclongstaffschwartzengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mclongstaffschwartzengine.cpp; path = "test-suite/mclongstaffschwartzengine.cpp"; sourceTree = SOURCE_ROOT; };
		0104665CE523438ABFA2E108 /* /Users/heiner/git/QuantLib/test-suite/linearleastsquaresregression.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = linearleastsquaresregression.cpp; path = "test-suite/linearleastsquaresregression.cpp"; sourceTree = SOURCE_ROOT; };
		011322B512404AFDAC3417F9 /* /Users/heiner/git/QuantLib/test-suite/nthtodefault.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nthtodefault.cpp; path = "test-suite/nthtodefault.cpp"; sourceTree = SOURCE_ROOT; };
		011C5D77E6BC4AA5A5477AF3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = recoveryratequote.hpp; path = ql/experimental/credit/recoveryratequote.hpp; sourceTree = SOURCE_ROOT; };
		011F055FB9DB4990951A427E /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackcalculator.cpp; path = ql/pricingengines/blackcalculator.cpp; sourceTree = SOURCE_ROOT; };
		0127E30E74F44F89A56EE996 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spotlosslatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spotlosslatentmodel.hpp; path = ql/experimental/credit/spotlosslatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		013319BDE39B4B1FACF201E5 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = subperiodcoupons.hpp; path = ql/experimental/coupons/subperiodcoupons.hpp; sourceTree = SOURCE_ROOT; };
		0142420D2C2C4DC4981861E9 /* /Users/heiner/git/QuantLib/ql/experimental/risk/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/risk/all.hpp; sourceTree = SOURCE_ROOT; };
		0150720842D742A9B5A07011 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = spreadedsmilesection.cpp; path = ql/termstructures/volatility/spreadedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		0157FD42DDB641A2A70A3DB9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capletcoterminalswaptioncalibration.cpp; path = ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp; sourceTree = SOURCE_ROOT; };
		0167FEE795424BEDA8BAEECD /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = asx.cpp; path = ql/time/asx.cpp; sourceTree = SOURCE_ROOT; };
		017CAADFB24D409893412585 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jamshidianswaptionengine.cpp; path = ql/pricingengines/swaption/jamshidianswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		018BEBAD744B431EBA6692EC /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lookbackoption.cpp; path = ql/instruments/lookbackoption.cpp; sourceTree = SOURCE_ROOT; };
		018EDDBF02C64B22B0608163 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/tflattice.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tflattice.hpp; path = ql/experimental/convertiblebonds/tflattice.hpp; sourceTree = SOURCE_ROOT; };
		019CB5C4839F4393B9867340 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedyoyinflationcurve.hpp; path = ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp; sourceTree = SOURCE_ROOT; };
		01A1AD65871644688181B1E4 /* MultidimIntegral */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = MultidimIntegral; sourceTree = BUILT_PRODUCTS_DIR; };
		01A895D7E1D9433991C052FA /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardrateagreement.hpp; path = ql/instruments/forwardrateagreement.hpp; sourceTree = SOURCE_ROOT; };
		01B5EBDE5C124A8C8C47387E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonhullwhitesolver.hpp; path = ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp; sourceTree = SOURCE_ROOT; };
		01C90914257542609C54B588 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = utilities.hpp; path = ql/models/marketmodels/utilities.hpp; sourceTree = SOURCE_ROOT; };
		01CF112A59544192B5E2166C /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = independentcopula.cpp; path = ql/math/copulas/independentcopula.cpp; sourceTree = SOURCE_ROOT; };
		01D2EA71E695453B9560B539 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplechooseroption.hpp; path = ql/experimental/exoticoptions/simplechooseroption.hpp; sourceTree = SOURCE_ROOT; };
		01DC8364D0BE4FCCB85BD926 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = concentrating1dmesher.cpp; path = ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp; sourceTree = SOURCE_ROOT; };
		01E2693384B8469B8D3822B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jumpdiffusionengine.hpp; path = ql/pricingengines/vanilla/jumpdiffusionengine.hpp; sourceTree = SOURCE_ROOT; };
		01E7517357694EE797DE9655 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewisefunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisefunction.hpp; path = ql/experimental/math/piecewisefunction.hpp; sourceTree = SOURCE_ROOT; };
		01ECB4FEF26F4D8087314AC7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/all.hpp; sourceTree = SOURCE_ROOT; };
		01EF93EB813748CA928ED54D /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bivariatestudenttdistribution.hpp; path = ql/math/distributions/bivariatestudenttdistribution.hpp; sourceTree = SOURCE_ROOT; };
		01FA571CD9DF4A69BC507EBF /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonmodel.hpp; path = ql/models/equity/hestonmodel.hpp; sourceTree = SOURCE_ROOT; };
		0201CFFC789F4048A0E44B75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pseudorootfacade.cpp; path = ql/models/marketmodels/models/pseudorootfacade.cpp; sourceTree = SOURCE_ROOT; };
		0208706D2D4B45C2AC5EB32F /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedblackvariancesurface.cpp; path = ql/experimental/volatility/extendedblackvariancesurface.cpp; sourceTree = SOURCE_ROOT; };
		0254FA2168844B21AABBD645 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multiproductonestep.cpp; path = ql/models/marketmodels/products/multiproductonestep.cpp; sourceTree = SOURCE_ROOT; };
		0266E8B4F2A1402189F18E7C /* /Users/heiner/git/QuantLib/ql/experimental/credit/constantlosslatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantlosslatentmodel.hpp; path = ql/experimental/credit/constantlosslatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		029322324E834A8BA6CB84A9 /* /Users/heiner/git/QuantLib/ql/termstructures/interpolatedcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedcurve.hpp; path = ql/termstructures/interpolatedcurve.hpp; sourceTree = SOURCE_ROOT; };
		029446D7DF064D98A205B808 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmfixedvolmodel.cpp; path = ql/legacy/libormarketmodels/lmfixedvolmodel.cpp; sourceTree = SOURCE_ROOT; };
		02AA9D7C386C41F3A6D7F7C4 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = euribor.cpp; path = ql/indexes/ibor/euribor.cpp; sourceTree = SOURCE_ROOT; };
		02BFF3F762194489B8569D6B /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bespokecalendar.hpp; path = ql/time/calendars/bespokecalendar.hpp; sourceTree = SOURCE_ROOT; };
		02C11D0B74F04273ADA64C6E /* /Users/heiner/git/QuantLib/ql/math/interpolations/linearinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = linearinterpolation.hpp; path = ql/math/interpolations/linearinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		02CD75A20FE7408A87CE393C /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = rangeaccrual.cpp; path = ql/cashflows/rangeaccrual.cpp; sourceTree = SOURCE_ROOT; };
		02D3B8C3FA4A426181027961 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = voltermstructure.cpp; path = ql/termstructures/voltermstructure.cpp; sourceTree = SOURCE_ROOT; };
		02DC1D5F54FC4572AC6C9D32 /* /Users/heiner/git/QuantLib/ql/patterns/singleton.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = singleton.hpp; path = ql/patterns/singleton.hpp; sourceTree = SOURCE_ROOT; };
		02E79F9F0B324FF4A1B5B6CE /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = germany.cpp; path = ql/time/calendars/germany.cpp; sourceTree = SOURCE_ROOT; };
		02FC4F64941F42CE9FE61F74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onestepforwards.cpp; path = ql/models/marketmodels/products/onestep/onestepforwards.cpp; sourceTree = SOURCE_ROOT; };
		031C3BE23E964707B0CD4DA8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = triggeredswapexercise.cpp; path = ql/models/marketmodels/callability/triggeredswapexercise.cpp; sourceTree = SOURCE_ROOT; };
		0320CE17247F4BA78CEAFC88 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardvaluequote.cpp; path = ql/quotes/forwardvaluequote.cpp; sourceTree = SOURCE_ROOT; };
		0327A1C740E54D04B67318E3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bumpinstrumentjacobian.hpp; path = ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp; sourceTree = SOURCE_ROOT; };
		03380EC7A0D14CDCAECE08C2 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vannavolgabarrierengine.hpp; path = ql/experimental/barrieroption/vannavolgabarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		03397A7102BE47DEBADE4A66 /* /Users/heiner/git/QuantLib/ql/time/asx.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = asx.hpp; path = ql/time/asx.hpp; sourceTree = SOURCE_ROOT; };
		03398F762C3B49F5B5E0B3E9 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/aucpi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = aucpi.hpp; path = ql/indexes/inflation/aucpi.hpp; sourceTree = SOURCE_ROOT; };
		0345122C87FA4731BCF51B63 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dynprogvppintrinsicvalueengine.hpp; path = ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp; sourceTree = SOURCE_ROOT; };
		035B4B5B5F564DBBA83624FA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mchimalayaengine.cpp; path = ql/experimental/exoticoptions/mchimalayaengine.cpp; sourceTree = SOURCE_ROOT; };
		035D29554185434AA9C1F336 /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = saudiarabia.hpp; path = ql/time/calendars/saudiarabia.hpp; sourceTree = SOURCE_ROOT; };
		037316B2F76446F79C536EF7 /* /Users/heiner/git/QuantLib/test-suite/exchangerate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exchangerate.hpp; path = "test-suite/exchangerate.hpp"; sourceTree = SOURCE_ROOT; };
		039361B88E9643A99E6EC34B /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = incompletegamma.cpp; path = ql/math/incompletegamma.cpp; sourceTree = SOURCE_ROOT; };
		0394ED4891F04551B5805BD1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductswap.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp; sourceTree = SOURCE_ROOT; };
		039CFC60DD73416C97D4072A /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = amortizingfixedratebond.cpp; path = ql/experimental/amortizingbonds/amortizingfixedratebond.cpp; sourceTree = SOURCE_ROOT; };
		03BD90E3E48143CBAE3FF9ED /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swap.cpp; path = ql/instruments/swap.cpp; sourceTree = SOURCE_ROOT; };
		03C441E6308146ADACF9B57F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmdirichletboundary.cpp; path = ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp; sourceTree = SOURCE_ROOT; };
		03C980338CBB40AFAF41FB5D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cashrebate.cpp; path = ql/models/marketmodels/products/multistep/cashrebate.cpp; sourceTree = SOURCE_ROOT; };
		03CC19D3964D47EBABDCCF60 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dataformatters.cpp; path = ql/utilities/dataformatters.cpp; sourceTree = SOURCE_ROOT; };
		03CE1B3B3E5C48ED8C9F2185 /* /Users/heiner/git/QuantLib/ql/experimental/math/isotropicrandomwalk.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = isotropicrandomwalk.hpp; path = ql/experimental/math/isotropicrandomwalk.hpp; sourceTree = SOURCE_ROOT; };
		03E1A5AC46B84F1289CCA625 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jibar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jibar.hpp; path = ql/indexes/ibor/jibar.hpp; sourceTree = SOURCE_ROOT; };
		03F1C99DF136489CAE671918 /* /Users/heiner/git/QuantLib/ql/math/beta.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = beta.hpp; path = ql/math/beta.hpp; sourceTree = SOURCE_ROOT; };
		03FB7B9C2FC8493283EE496F /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = convertiblebond.hpp; path = ql/experimental/convertiblebonds/convertiblebond.hpp; sourceTree = SOURCE_ROOT; };
		040FD6D4C3744F0E841849E9 /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makevanillaswap.hpp; path = ql/instruments/makevanillaswap.hpp; sourceTree = SOURCE_ROOT; };
		042CD602A8B0479D958B4AAC /* /Users/heiner/git/QuantLib/ql/processes/merton76process.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = merton76process.hpp; path = ql/processes/merton76process.hpp; sourceTree = SOURCE_ROOT; };
		043A0CB10D7A4AE6B6261A10 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/convertiblebonds/all.hpp; sourceTree = SOURCE_ROOT; };
		0446B269363E42DAAC811BB9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/volatility/all.hpp; sourceTree = SOURCE_ROOT; };
		04783D774A0E42048A110437 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticpartialtimebarrieroptionengine.hpp; path = ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp; sourceTree = SOURCE_ROOT; };
		04835652F2E14205A134A51E /* /Users/heiner/git/QuantLib/test-suite/transformedgrid.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = transformedgrid.cpp; path = "test-suite/transformedgrid.cpp"; sourceTree = SOURCE_ROOT; };
		0495BDB1EA124B008351A2DF /* /Users/heiner/git/QuantLib/test-suite/inflationcpiswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcpiswap.hpp; path = "test-suite/inflationcpiswap.hpp"; sourceTree = SOURCE_ROOT; };
		04BA6F6F888F47DA8E4DBFC4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticeuropeanengine.cpp; path = ql/pricingengines/vanilla/analyticeuropeanengine.cpp; sourceTree = SOURCE_ROOT; };
		04CF43BB5C1F42598FB38CB3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = singleproductcomposite.hpp; path = ql/models/marketmodels/products/singleproductcomposite.hpp; sourceTree = SOURCE_ROOT; };
		04EDB76CDEF5409690F69623 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bondhelpers.cpp; path = ql/termstructures/yield/bondhelpers.cpp; sourceTree = SOURCE_ROOT; };
		04F710B49695408F903702F4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmmcurvestate.cpp; path = ql/models/marketmodels/curvestates/lmmcurvestate.cpp; sourceTree = SOURCE_ROOT; };
		04FED45B7EA14746BC9473F6 /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lookbackoption.hpp; path = ql/instruments/lookbackoption.hpp; sourceTree = SOURCE_ROOT; };
		0503E56FDE4D45ADB947A6B1 /* /Users/heiner/git/QuantLib/ql/methods/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/all.hpp; sourceTree = SOURCE_ROOT; };
		05142878BB81459399FCDC00 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = arithmeticoisratehelper.hpp; path = ql/experimental/averageois/arithmeticoisratehelper.hpp; sourceTree = SOURCE_ROOT; };
		052B85109AC740EBB08262E3 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yearonyearinflationswap.cpp; path = ql/instruments/yearonyearinflationswap.cpp; sourceTree = SOURCE_ROOT; };
		052CC5E16CC44A2B9D77F243 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepcoinitialswaps.cpp; path = ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp; sourceTree = SOURCE_ROOT; };
		055CDFCCF6F044FAB50EC8E7 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcperformanceengine.hpp; path = ql/pricingengines/cliquet/mcperformanceengine.hpp; sourceTree = SOURCE_ROOT; };
		0566777D376C4E4ABC6AF94D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yoyinflationoptionletvolatilitystructure.cpp; path = ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		05743A103E9942F7BA398F23 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholesmesher.hpp; path = ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp; sourceTree = SOURCE_ROOT; };
		0588FD18D9ED41F992938DE6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackvariancesurface.hpp; path = ql/termstructures/volatility/equityfx/blackvariancesurface.hpp; sourceTree = SOURCE_ROOT; };
		05AF6A462CAF422989673DE4 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = syntheticcdo.cpp; path = ql/experimental/credit/syntheticcdo.cpp; sourceTree = SOURCE_ROOT; };
		05BD3C652CE8416A89E60018 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = catbond.cpp; path = ql/experimental/catbonds/catbond.cpp; sourceTree = SOURCE_ROOT; };
		05D3718B74564A868E1BD249 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = voltermstructure.hpp; path = ql/termstructures/voltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		05E88395DD174CA98A0BD970 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localvolcurve.hpp; path = ql/termstructures/volatility/equityfx/localvolcurve.hpp; sourceTree = SOURCE_ROOT; };
		05F0A7A85C054AA59ACA74C6 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaultprobabilityhelpers.cpp; path = ql/termstructures/credit/defaultprobabilityhelpers.cpp; sourceTree = SOURCE_ROOT; };
		060427E58FF042F4A747B699 /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = imm.cpp; path = ql/time/imm.cpp; sourceTree = SOURCE_ROOT; };
		0616FBD49EA949E482DC68D6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = concentrating1dmesher.cpp; path = ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp; sourceTree = SOURCE_ROOT; };
		0617D32EE45941B5B65F3080 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = garch.hpp; path = ql/models/volatility/garch.hpp; sourceTree = SOURCE_ROOT; };
		062BFB7F77964D49A1A7DDDF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaform.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = alphaform.hpp; path = ql/models/marketmodels/models/alphaform.hpp; sourceTree = SOURCE_ROOT; };
		06325119384F4EC6B78A6391 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = switzerland.hpp; path = ql/time/calendars/switzerland.hpp; sourceTree = SOURCE_ROOT; };
		06404A9BC4104A2EBFE15F74 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = seedgenerator.hpp; path = ql/math/randomnumbers/seedgenerator.hpp; sourceTree = SOURCE_ROOT; };
		064305AA105D49D5A252FE01 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonhullwhiteop.cpp; path = ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp; sourceTree = SOURCE_ROOT; };
		064344D9864B4AB9BE166F45 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = spherecylinder.cpp; path = ql/math/optimization/spherecylinder.cpp; sourceTree = SOURCE_ROOT; };
		0668D6E1069E4E77A37AEAC3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmindicesonboundary.cpp; path = ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp; sourceTree = SOURCE_ROOT; };
		068BFAE0042B4C0EAC099B9D /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatlinearinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = backwardflatlinearinterpolation.hpp; path = ql/math/interpolations/backwardflatlinearinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		06A09C2A8F8C4731B6D94FB7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = secondordermixedderivativeop.cpp; path = ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp; sourceTree = SOURCE_ROOT; };
		06A8EB4BF2E84EBC8022D1CB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonhullwhitesolver.hpp; path = ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp; sourceTree = SOURCE_ROOT; };
		06AA987CD3E24FDB939655DE /* /Users/heiner/git/QuantLib/ql/patterns/curiouslyrecurring.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = curiouslyrecurring.hpp; path = ql/patterns/curiouslyrecurring.hpp; sourceTree = SOURCE_ROOT; };
		06B4E89817ED4CB785934B23 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdornsteinuhlenbeckvanillaengine.cpp; path = ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		06D9309E0D8546779BACBBC0 /* /Users/heiner/git/QuantLib/ql/models/model.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = model.hpp; path = ql/models/model.hpp; sourceTree = SOURCE_ROOT; };
		06DD25C0F160441784D20DC7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = spreadedswaptionvol.cpp; path = ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp; sourceTree = SOURCE_ROOT; };
		06E2911E3AE3493897F318B7 /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = newzealand.cpp; path = ql/time/calendars/newzealand.cpp; sourceTree = SOURCE_ROOT; };
		070486F6D0C647C5BA75A86C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapbasissystem.hpp; path = ql/models/marketmodels/callability/swapbasissystem.hpp; sourceTree = SOURCE_ROOT; };
		070EC5AE6CB34007A6AD5AF5 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fd2dblackscholesvanillaengine.hpp; path = ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		0723B6F0F1BA4BBDA7BD4A13 /* /Users/heiner/git/QuantLib/ql/experimental/credit/binomiallossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomiallossmodel.hpp; path = ql/experimental/credit/binomiallossmodel.hpp; sourceTree = SOURCE_ROOT; };
		072485EAF284432C817B7E9F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitalcmsspreadcoupon.hpp; path = ql/experimental/coupons/digitalcmsspreadcoupon.hpp; sourceTree = SOURCE_ROOT; };
		072A5694A1C04E8D94ACF486 /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = canada.hpp; path = ql/time/calendars/canada.hpp; sourceTree = SOURCE_ROOT; };
		075210B1D0D8466492AC4153 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = modifiedcraigsneydscheme.cpp; path = ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp; sourceTree = SOURCE_ROOT; };
		0756F26BB323497A9296F5E1 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = linesearchbasedmethod.cpp; path = ql/math/optimization/linesearchbasedmethod.cpp; sourceTree = SOURCE_ROOT; };
		075F5865D5A64AE8B250BAFE /* /Users/heiner/git/QuantLib/ql/math/optimization/costfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = costfunction.hpp; path = ql/math/optimization/costfunction.hpp; sourceTree = SOURCE_ROOT; };
		0767A8D0CC8C4E22B862A887 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = isdacdsengine.hpp; path = ql/pricingengines/credit/isdacdsengine.hpp; sourceTree = SOURCE_ROOT; };
		07730F327D2148778E27BC64 /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sweden.hpp; path = ql/time/calendars/sweden.hpp; sourceTree = SOURCE_ROOT; };
		0780C705C4154D8B975755E7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = margrabeoption.cpp; path = ql/experimental/exoticoptions/margrabeoption.cpp; sourceTree = SOURCE_ROOT; };
		0784532EE54F4E428990514E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmmeshercomposite.hpp; path = ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp; sourceTree = SOURCE_ROOT; };
		0786A405ADB444D9BA31E377 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = couponpricer.hpp; path = ql/cashflows/couponpricer.hpp; sourceTree = SOURCE_ROOT; };
		078A5871E0A8463C859B9717 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bacheliercapfloorengine.cpp; path = ql/pricingengines/capfloor/bacheliercapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		0794BF79D18A47C29E8B15BA /* /Users/heiner/git/QuantLib/ql/experimental/credit/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/credit/all.hpp; sourceTree = SOURCE_ROOT; };
		07BBD3825CFA45FFAA808FA4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonsolver.hpp; path = ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp; sourceTree = SOURCE_ROOT; };
		07CBC9CDBD0D4542A412C608 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = convertiblebond.cpp; path = ql/experimental/convertiblebonds/convertiblebond.cpp; sourceTree = SOURCE_ROOT; };
		07CCE326764443B8B3337E3E /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcontinuousfixedlookback.cpp; path = ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp; sourceTree = SOURCE_ROOT; };
		07DBDE33DEEB435492C923AB /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultlossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultlossmodel.hpp; path = ql/experimental/credit/defaultlossmodel.hpp; sourceTree = SOURCE_ROOT; };
		07F535B02BB64DF9B371B0D3 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lastfixingquote.cpp; path = ql/quotes/lastfixingquote.cpp; sourceTree = SOURCE_ROOT; };
		07F6E8FBCF474B898440EE22 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmcovarparam.cpp; path = ql/legacy/libormarketmodels/lfmcovarparam.cpp; sourceTree = SOURCE_ROOT; };
		080615EED59847D9BA7C42C6 /* /Users/heiner/git/QuantLib/ql/time/calendar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = calendar.hpp; path = ql/time/calendar.hpp; sourceTree = SOURCE_ROOT; };
		0809DE844AB9438593ED61E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = boundaryconditionschemehelper.hpp; path = ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp; sourceTree = SOURCE_ROOT; };
		0818AFBE71E04218B747C960 /* /Users/heiner/git/QuantLib/ql/utilities/disposable.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = disposable.hpp; path = ql/utilities/disposable.hpp; sourceTree = SOURCE_ROOT; };
		081B5F1116444E1083BB000F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commodityindex.hpp; path = ql/experimental/commodities/commodityindex.hpp; sourceTree = SOURCE_ROOT; };
		0834105CF56A4B5995089625 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimple2dbssolver.hpp; path = ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp; sourceTree = SOURCE_ROOT; };
		08465B3A61104898BFF1F546 /* /Users/heiner/git/QuantLib/test-suite/transformedgrid.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = transformedgrid.hpp; path = "test-suite/transformedgrid.hpp"; sourceTree = SOURCE_ROOT; };
		0849D80400744B9597DFBC62 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdcalibration.hpp; path = ql/termstructures/volatility/abcdcalibration.hpp; sourceTree = SOURCE_ROOT; };
		085094E55D624C628FA19FEE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodeldifferences.cpp; path = ql/models/marketmodels/marketmodeldifferences.cpp; sourceTree = SOURCE_ROOT; };
		088B5C3322654F3AA004B027 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optionletvolatilitystructure.hpp; path = ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		08C545FD49E149B7B728925C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolstructure.hpp; path = ql/termstructures/volatility/swaption/swaptionvolstructure.hpp; sourceTree = SOURCE_ROOT; };
		08E4E04FC3234542A10EB9D9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = utilities.cpp; path = ql/models/marketmodels/utilities.cpp; sourceTree = SOURCE_ROOT; };
		08FFE35FF76D4743AD557FF6 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = maxcopula.hpp; path = ql/math/copulas/maxcopula.hpp; sourceTree = SOURCE_ROOT; };
		0901712FDDD84CEFAEE50BDD /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = seasonality.hpp; path = ql/termstructures/inflation/seasonality.hpp; sourceTree = SOURCE_ROOT; };
		090A4288756F46168CED9EEA /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eurlibor.cpp; path = ql/indexes/ibor/eurlibor.cpp; sourceTree = SOURCE_ROOT; };
		09161D2503254CAE8829ED4D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/solvers/all.hpp; sourceTree = SOURCE_ROOT; };
		0924B62B361D4CDBAC25BCAB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackconstantvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackconstantvol.hpp; path = ql/termstructures/volatility/equityfx/blackconstantvol.hpp; sourceTree = SOURCE_ROOT; };
		0932EBCA936042468BBD7335 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = romania.cpp; path = ql/time/calendars/romania.cpp; sourceTree = SOURCE_ROOT; };
		0945595E4EC4462491A9DA9D /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dataformatters.cpp; path = ql/utilities/dataformatters.cpp; sourceTree = SOURCE_ROOT; };
		094B9001F01F4D16AD23EF1C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twoassetbarrieroption.hpp; path = ql/experimental/exoticoptions/twoassetbarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		0952B3D02E44401E9165C1E1 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = turkey.cpp; path = ql/time/calendars/turkey.cpp; sourceTree = SOURCE_ROOT; };
		095E2B99D9544EB7BD15ACB0 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicapfloortermpricesurface.hpp; path = ql/experimental/inflation/cpicapfloortermpricesurface.hpp; sourceTree = SOURCE_ROOT; };
		097A87976881441A9D0F20BC /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noarbsabrsmilesection.hpp; path = ql/experimental/volatility/noarbsabrsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		098181AA005E468BA725BA06 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = linesearch.cpp; path = ql/math/optimization/linesearch.cpp; sourceTree = SOURCE_ROOT; };
		09A43A9AB6124C5B80B57731 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardswapquote.hpp; path = ql/quotes/forwardswapquote.hpp; sourceTree = SOURCE_ROOT; };
		09B82104E6C7408587F09B29 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makeois.hpp; path = ql/instruments/makeois.hpp; sourceTree = SOURCE_ROOT; };
		09C1A4D3775241CAB659BC44 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcontinuouspartialfixedlookback.cpp; path = ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp; sourceTree = SOURCE_ROOT; };
		09C9025E5E9F4A3FB4F61DE1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceuropeanengine.hpp; path = ql/pricingengines/vanilla/mceuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		0A0D5CCE44B54D52B6BFCA83 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateiballand.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp; sourceTree = SOURCE_ROOT; };
		0A28AE6FB6F74A5182471786 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = leastsquare.cpp; path = ql/math/optimization/leastsquare.cpp; sourceTree = SOURCE_ROOT; };
		0A415A55DFC74A39BE9D8922 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmaffinemodelswapinnervalue.cpp; path = ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp; sourceTree = SOURCE_ROOT; };
		0A4E35FF75C74F888AA200B9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = coterminalswapcurvestate.cpp; path = ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp; sourceTree = SOURCE_ROOT; };
		0A597142A99E4B0383CA3FDF /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitylatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultprobabilitylatentmodel.hpp; path = ql/experimental/credit/defaultprobabilitylatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		0A8186B7507F479DBE125A43 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = batesprocess.hpp; path = ql/processes/batesprocess.hpp; sourceTree = SOURCE_ROOT; };
		0A8D7C0046994E869F50FB16 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = incrementalstatistics.hpp; path = ql/math/statistics/incrementalstatistics.hpp; sourceTree = SOURCE_ROOT; };
		0AF665EBAFED4D5EB22BD83C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tridiagonaloperator.hpp; path = ql/methods/finitedifferences/tridiagonaloperator.hpp; sourceTree = SOURCE_ROOT; };
		0AFAD612DA8A4006B0EA11F9 /* /Users/heiner/git/QuantLib/ql/math/interpolations/multicubicspline.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multicubicspline.hpp; path = ql/math/interpolations/multicubicspline.hpp; sourceTree = SOURCE_ROOT; };
		0B0E71A5D00941D6A5BFEE7F /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = endcriteria.hpp; path = ql/math/optimization/endcriteria.hpp; sourceTree = SOURCE_ROOT; };
		0B1ABCF07751422688CFEF79 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = simplechooseroption.cpp; path = ql/experimental/exoticoptions/simplechooseroption.cpp; sourceTree = SOURCE_ROOT; };
		0B1DA786A0124B178A1BC820 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/products/onestep/all.hpp; sourceTree = SOURCE_ROOT; };
		0B1E73007DBB435DA63EEA77 /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gbpliborswap.hpp; path = ql/indexes/swap/gbpliborswap.hpp; sourceTree = SOURCE_ROOT; };
		0B241459270B49C494310B0B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constantcpivolatility.cpp; path = ql/termstructures/volatility/inflation/constantcpivolatility.cpp; sourceTree = SOURCE_ROOT; };
		0B36E78B96DC4FD8A3C4D1D0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytictwoassetcorrelationengine.hpp; path = ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp; sourceTree = SOURCE_ROOT; };
		0B38904A51854BF392CA017E /* /Users/heiner/git/QuantLib/test-suite/inflation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflation.cpp; path = "test-suite/inflation.cpp"; sourceTree = SOURCE_ROOT; };
		0B3B4B839BF74819AF49C080 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = recoveryratemodel.hpp; path = ql/experimental/credit/recoveryratemodel.hpp; sourceTree = SOURCE_ROOT; };
		0B43CD524F8442079C9CAD88 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noarbsabr.hpp; path = ql/experimental/volatility/noarbsabr.hpp; sourceTree = SOURCE_ROOT; };
		0B4A8B75F3254E17B8A722F2 /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = averagetype.cpp; path = ql/instruments/averagetype.cpp; sourceTree = SOURCE_ROOT; };
		0B5520CD96674784A12BE108 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = amortizingcmsratebond.hpp; path = ql/experimental/amortizingbonds/amortizingcmsratebond.hpp; sourceTree = SOURCE_ROOT; };
		0B56E5A839B04F1684C113F4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optionletstripper.hpp; path = ql/termstructures/volatility/optionlet/optionletstripper.hpp; sourceTree = SOURCE_ROOT; };
		0B5768E505214AC5B2BDA628 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = simpledaycounter.cpp; path = ql/time/daycounters/simpledaycounter.cpp; sourceTree = SOURCE_ROOT; };
		0B8232FF7E414011AF04ED55 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energycommodity.hpp; path = ql/experimental/commodities/energycommodity.hpp; sourceTree = SOURCE_ROOT; };
		0B87F05A5B0F41458DC8913F /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makevanillaswap.cpp; path = ql/instruments/makevanillaswap.cpp; sourceTree = SOURCE_ROOT; };
		0B8C592F96C3425F85938A85 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/cranknicolson.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cranknicolson.hpp; path = ql/methods/finitedifferences/cranknicolson.hpp; sourceTree = SOURCE_ROOT; };
		0B8E6AA990A640C2AB484639 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stochasticprocess.hpp; path = ql/stochasticprocess.hpp; sourceTree = SOURCE_ROOT; };
		0B9C8A6395D64D7882797D53 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/ranluxuniformrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ranluxuniformrng.hpp; path = ql/math/randomnumbers/ranluxuniformrng.hpp; sourceTree = SOURCE_ROOT; };
		0B9FD75191694AD48DA07B5E /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/mcvarianceswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcvarianceswapengine.hpp; path = ql/pricingengines/forward/mcvarianceswapengine.hpp; sourceTree = SOURCE_ROOT; };
		0BA1F903974F4ABAB91DC565 /* /Users/heiner/git/QuantLib/test-suite/compoundoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = compoundoption.cpp; path = "test-suite/compoundoption.cpp"; sourceTree = SOURCE_ROOT; };
		0BAC7654FC9F42BF8D42CE8D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = strippedoptionletadapter.cpp; path = ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp; sourceTree = SOURCE_ROOT; };
		0BB78A7024814A4C86DC5BE9 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = caphelper.cpp; path = ql/models/shortrate/calibrationhelpers/caphelper.cpp; sourceTree = SOURCE_ROOT; };
		0BC2285720CE438FB14CA5F1 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = varianceswap.hpp; path = ql/instruments/varianceswap.hpp; sourceTree = SOURCE_ROOT; };
		0BC55D4778804A9DBDE49FFC /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = richardsonextrapolation.cpp; path = ql/math/richardsonextrapolation.cpp; sourceTree = SOURCE_ROOT; };
		0BCA5A974F994F999CF59744 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmvppstartlimitstepcondition.hpp; path = ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp; sourceTree = SOURCE_ROOT; };
		0BDCB7E89A314F6C8F9DA123 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmspreadpayoffinnervalue.hpp; path = ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp; sourceTree = SOURCE_ROOT; };
		0C11052526E34B78B3516537 /* /Users/heiner/git/QuantLib/test-suite/normalclvmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = normalclvmodel.hpp; path = "test-suite/normalclvmodel.hpp"; sourceTree = SOURCE_ROOT; };
		0C311916C72E4B5FAF9E1EA7 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = oisratehelper.cpp; path = ql/termstructures/yield/oisratehelper.cpp; sourceTree = SOURCE_ROOT; };
		0C51BA99EE9C4A5D9BFA89DE /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/replicatingvarianceswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = replicatingvarianceswapengine.hpp; path = ql/pricingengines/forward/replicatingvarianceswapengine.hpp; sourceTree = SOURCE_ROOT; };
		0C68ADDFC226480E98B5AA7B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceuropeanbasketengine.hpp; path = ql/pricingengines/basket/mceuropeanbasketengine.hpp; sourceTree = SOURCE_ROOT; };
		0C737ED440644A7A8B751896 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compoundoption.hpp; path = ql/experimental/exoticoptions/compoundoption.hpp; sourceTree = SOURCE_ROOT; };
		0C9B86B7519C4DB599E25897 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestonhullwhitevanillaengine.hpp; path = ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		0CC6EBC81A844D5AB29BC7CD /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jointcalendar.hpp; path = ql/time/calendars/jointcalendar.hpp; sourceTree = SOURCE_ROOT; };
		0CCA23C629CE489F846F523B /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = canada.hpp; path = ql/time/calendars/canada.hpp; sourceTree = SOURCE_ROOT; };
		0CD50E376C6346DA861A0ED3 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = everestoption.hpp; path = ql/experimental/exoticoptions/everestoption.hpp; sourceTree = SOURCE_ROOT; };
		0CE0BD47C381447EA0F6BDA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multiproductmultistep.cpp; path = ql/models/marketmodels/products/multiproductmultistep.cpp; sourceTree = SOURCE_ROOT; };
		0CEE15A5370943B79135BB3F /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = conjugategradient.hpp; path = ql/math/optimization/conjugategradient.hpp; sourceTree = SOURCE_ROOT; };
		0CFA683DC7E64243B713A954 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = treeswaptionengine.hpp; path = ql/pricingengines/swaption/treeswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		0D1D82219B37460EB48B6B67 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdornsteinuhlenbeckvanillaengine.cpp; path = ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		0D3A1E7F3BB64EBF821B5662 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = termstructure.cpp; path = ql/termstructure.cpp; sourceTree = SOURCE_ROOT; };
		0D3ABC142DE84BF0AF338EC4 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capfloor.hpp; path = ql/instruments/capfloor.hpp; sourceTree = SOURCE_ROOT; };
		0D3C430D6AF64E00961CDFD3 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energyswap.hpp; path = ql/experimental/commodities/energyswap.hpp; sourceTree = SOURCE_ROOT; };
		0D4B578939444EA4A653A148 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonslvmcmodel.cpp; path = ql/experimental/models/hestonslvmcmodel.cpp; sourceTree = SOURCE_ROOT; };
		0D53F7091D864E9FAB11327C /* /Users/heiner/git/QuantLib/ql/index.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = index.hpp; path = ql/index.hpp; sourceTree = SOURCE_ROOT; };
		0D54B06B028243A1958719B5 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gjrgarchmodel.cpp; path = ql/models/equity/gjrgarchmodel.cpp; sourceTree = SOURCE_ROOT; };
		0D559E8C96C84DEE8A590B46 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolmatrix.hpp; path = ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp; sourceTree = SOURCE_ROOT; };
		0D56D70D60754A319A00FBC8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillavppoption.hpp; path = ql/experimental/finitedifferences/vanillavppoption.hpp; sourceTree = SOURCE_ROOT; };
		0D6F89096AF3458FAE89583F /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = klugeextouprocess.cpp; path = ql/experimental/processes/klugeextouprocess.cpp; sourceTree = SOURCE_ROOT; };
		0D734930A7AA449CBBB97063 /* /Users/heiner/git/QuantLib/test-suite/hybridhestonhullwhiteprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hybridhestonhullwhiteprocess.hpp; path = "test-suite/hybridhestonhullwhiteprocess.hpp"; sourceTree = SOURCE_ROOT; };
		0D7B2FA7A47C4FEEB7F15536 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mchimalayaengine.hpp; path = ql/experimental/exoticoptions/mchimalayaengine.hpp; sourceTree = SOURCE_ROOT; };
		0D86200326D840D6B39CBDFC /* /Users/heiner/git/QuantLib/ql/errors.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = errors.hpp; path = ql/errors.hpp; sourceTree = SOURCE_ROOT; };
		0D9A6AE8813449FABB739DD7 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = primenumbers.hpp; path = ql/math/primenumbers.hpp; sourceTree = SOURCE_ROOT; };
		0D9F68C687014638ABD628D1 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discrepancystatistics.hpp; path = ql/math/statistics/discrepancystatistics.hpp; sourceTree = SOURCE_ROOT; };
		0DC260C4B6E24F5DA70A8BB6 /* /Users/heiner/git/QuantLib/test-suite/optimizers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optimizers.cpp; path = "test-suite/optimizers.cpp"; sourceTree = SOURCE_ROOT; };
		0DCBB79888E7447AB09E4BD4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepratchet.cpp; path = ql/models/marketmodels/products/multistep/multistepratchet.cpp; sourceTree = SOURCE_ROOT; };
		0DCF4F24BC5C4C2C8CEFB94D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localconstantvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localconstantvol.hpp; path = ql/termstructures/volatility/equityfx/localconstantvol.hpp; sourceTree = SOURCE_ROOT; };
		0DDE33648ABB41B69878C076 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = seasonality.cpp; path = ql/termstructures/inflation/seasonality.cpp; sourceTree = SOURCE_ROOT; };
		0DDEDC65B9094E9E9BA65C20 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yearonyearinflationswap.cpp; path = ql/instruments/yearonyearinflationswap.cpp; sourceTree = SOURCE_ROOT; };
		0DE4581CBCC648D9884BD33E /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sobolbrownianbridgersg.hpp; path = ql/math/randomnumbers/sobolbrownianbridgersg.hpp; sourceTree = SOURCE_ROOT; };
		0DE9B2C329594356B78EA506 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sobolrsg.cpp; path = ql/math/randomnumbers/sobolrsg.cpp; sourceTree = SOURCE_ROOT; };
		0DEB4AAC33A2451B82077D57 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepratchet.hpp; path = ql/models/marketmodels/products/multistep/multistepratchet.hpp; sourceTree = SOURCE_ROOT; };
		0DF02A582A1A4A8FAC176D13 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsquarerootfwdop.hpp; path = ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp; sourceTree = SOURCE_ROOT; };
		0DF3D3B6875A4BC09C950C86 /* /Users/heiner/git/QuantLib/ql/quotes/simplequote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplequote.hpp; path = ql/quotes/simplequote.hpp; sourceTree = SOURCE_ROOT; };
		0E0117E822FD4586B2801816 /* /Users/heiner/git/QuantLib/ql/position.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = position.cpp; path = ql/position.cpp; sourceTree = SOURCE_ROOT; };
		0E01B903773242A29C90A980 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optionletstripper2.cpp; path = ql/termstructures/volatility/optionlet/optionletstripper2.cpp; sourceTree = SOURCE_ROOT; };
		0E1091FD26EB4169BFD25E2B /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = g2.hpp; path = ql/models/shortrate/twofactormodels/g2.hpp; sourceTree = SOURCE_ROOT; };
		0E34226B688145C9A39405FB /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dateinterval.hpp; path = ql/experimental/commodities/dateinterval.hpp; sourceTree = SOURCE_ROOT; };
		0E52370557A241AB91792912 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ctsmmcapletcalibration.cpp; path = ql/models/marketmodels/models/ctsmmcapletcalibration.cpp; sourceTree = SOURCE_ROOT; };
		0E6A1F76AF29438EA60838CA /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = klugeextouprocess.hpp; path = ql/experimental/processes/klugeextouprocess.hpp; sourceTree = SOURCE_ROOT; };
		0E703DA19A354A11ADB74C14 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticdoublebarrierengine.hpp; path = ql/experimental/barrieroption/analyticdoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		0E83DE28319D4C85A06D6EDB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fixedlocalvolsurface.cpp; path = ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		0EAE97D90582498688FDFD42 /* /Users/heiner/git/QuantLib/ql/instruments/futures.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = futures.hpp; path = ql/instruments/futures.hpp; sourceTree = SOURCE_ROOT; };
		0EB2606CBF524D20875730A4 /* /Users/heiner/git/QuantLib/ql/time/imm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = imm.hpp; path = ql/time/imm.hpp; sourceTree = SOURCE_ROOT; };
		0EB4D104FE7E4A10B5D50B63 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dynprogvppintrinsicvalueengine.cpp; path = ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp; sourceTree = SOURCE_ROOT; };
		0EB97ADDA08544648488B97D /* /Users/heiner/git/QuantLib/ql/patterns/observable.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = observable.hpp; path = ql/patterns/observable.hpp; sourceTree = SOURCE_ROOT; };
		0EC7BBD61B374E9C8550DD60 /* Repo */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Repo; sourceTree = BUILT_PRODUCTS_DIR; };
		0EF4C3E522CE421BB2502AF7 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basisincompleteordered.hpp; path = ql/math/matrixutilities/basisincompleteordered.hpp; sourceTree = SOURCE_ROOT; };
		0F0BB933E576441C85CC13E1 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yoyinflationcoupon.cpp; path = ql/cashflows/yoyinflationcoupon.cpp; sourceTree = SOURCE_ROOT; };
		0F611F1F7A0D43F4869E1A46 /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makevanillaswap.hpp; path = ql/instruments/makevanillaswap.hpp; sourceTree = SOURCE_ROOT; };
		0F68E79BF8904A93A0FA3AF5 /* /Users/heiner/git/QuantLib/ql/instruments/vanillastorageoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillastorageoption.hpp; path = ql/instruments/vanillastorageoption.hpp; sourceTree = SOURCE_ROOT; };
		0F7768C46B0740B4AAADBD14 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = thirty360.hpp; path = ql/time/daycounters/thirty360.hpp; sourceTree = SOURCE_ROOT; };
		0F7A5A9C3C844158B3F24B4C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackkarasinski.cpp; path = ql/models/shortrate/onefactormodels/blackkarasinski.cpp; sourceTree = SOURCE_ROOT; };
		0F96D724ADB548258F962AC8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sonia.cpp; path = ql/indexes/ibor/sonia.cpp; sourceTree = SOURCE_ROOT; };
		0F9760EC5A5544DEAA28A468 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cadlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cadlibor.hpp; path = ql/indexes/ibor/cadlibor.hpp; sourceTree = SOURCE_ROOT; };
		0FABA5A857DE4893BC4D418E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exponentialjump1dmesher.cpp; path = ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp; sourceTree = SOURCE_ROOT; };
		0FC09BF9F69940C598DDF43A /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/callablebonds/all.hpp; sourceTree = SOURCE_ROOT; };
		0FCD59D751F04AB09DABF0B1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmextendedornsteinuhlenbeckop.hpp; path = ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp; sourceTree = SOURCE_ROOT; };
		0FD51DE83918413184860933 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = smmdriftcalculator.hpp; path = ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp; sourceTree = SOURCE_ROOT; };
		0FE60105CCD945E88AD25D54 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = smilesection.cpp; path = ql/termstructures/volatility/smilesection.cpp; sourceTree = SOURCE_ROOT; };
		0FE7569CBCEC464FAADEAB78 /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hongkong.cpp; path = ql/time/calendars/hongkong.cpp; sourceTree = SOURCE_ROOT; };
		0FE812DDC0B24BAD8C9917DC /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = australia.hpp; path = ql/time/calendars/australia.hpp; sourceTree = SOURCE_ROOT; };
		0FEE10B599A0497088B3DC80 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmvppstepconditionfactory.hpp; path = ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp; sourceTree = SOURCE_ROOT; };
		0FFB6FE244D847E5A1DCA07E /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = latticersg.hpp; path = ql/math/randomnumbers/latticersg.hpp; sourceTree = SOURCE_ROOT; };
		1007DC5F9CB84630ABAEC512 /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = conundrumpricer.cpp; path = ql/cashflows/conundrumpricer.cpp; sourceTree = SOURCE_ROOT; };
		100BCEB7CFFB4FB6BD28FFDD /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = averageoiscouponpricer.hpp; path = ql/experimental/averageois/averageoiscouponpricer.hpp; sourceTree = SOURCE_ROOT; };
		1013C7E317734859BB8A9336 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yearonyearinflationswap.hpp; path = ql/instruments/yearonyearinflationswap.hpp; sourceTree = SOURCE_ROOT; };
		1018D9A472C8403C84491747 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makecds.cpp; path = ql/instruments/makecds.cpp; sourceTree = SOURCE_ROOT; };
		101F5CC4F80A4E28BE9EFC03 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmaffinemodeltermstructure.cpp; path = ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp; sourceTree = SOURCE_ROOT; };
		1022D930840E44E09E238081 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsmarket.hpp; path = ql/termstructures/volatility/swaption/cmsmarket.hpp; sourceTree = SOURCE_ROOT; };
		104F7F8ADB9A4777AC7B2ED3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadedswaptionvol.hpp; path = ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp; sourceTree = SOURCE_ROOT; };
		1058A906F8C640D1A5E507CA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomsequencegenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomsequencegenerator.hpp; path = ql/math/randomnumbers/randomsequencegenerator.hpp; sourceTree = SOURCE_ROOT; };
		107C9665122E48798120A3C7 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callablebondvolstructure.hpp; path = ql/experimental/callablebonds/callablebondvolstructure.hpp; sourceTree = SOURCE_ROOT; };
		1083C30C476D48ED960D18C6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = syntheticcdo.hpp; path = ql/experimental/credit/syntheticcdo.hpp; sourceTree = SOURCE_ROOT; };
		10885A55AC88450D8CE95C7E /* /Users/heiner/git/QuantLib/ql/math/comparison.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = comparison.hpp; path = ql/math/comparison.hpp; sourceTree = SOURCE_ROOT; };
		108A2A65E9ED47F4A65F6A48 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackatmvolcurve.hpp; path = ql/experimental/volatility/blackatmvolcurve.hpp; sourceTree = SOURCE_ROOT; };
		10900BEE14B9499891D4B24A /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = turkey.cpp; path = ql/time/calendars/turkey.cpp; sourceTree = SOURCE_ROOT; };
		109850102CA64FBFBD85E65E /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sobolrsg.cpp; path = ql/math/randomnumbers/sobolrsg.cpp; sourceTree = SOURCE_ROOT; };
		109E365924504EDE9A2BD960 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/all.hpp; sourceTree = SOURCE_ROOT; };
		10A18BA1029C44858437A128 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticperformanceengine.hpp; path = ql/pricingengines/cliquet/analyticperformanceengine.hpp; sourceTree = SOURCE_ROOT; };
		10A5D5BDF21B4BDC8211B9B2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = juquadraticengine.hpp; path = ql/pricingengines/vanilla/juquadraticengine.hpp; sourceTree = SOURCE_ROOT; };
		10B745FC436B4A3BBA70CD15 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticgjrgarchengine.cpp; path = ql/pricingengines/vanilla/analyticgjrgarchengine.cpp; sourceTree = SOURCE_ROOT; };
		10C0F0403E774A51870140B0 /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marshallolkincopula.hpp; path = ql/math/copulas/marshallolkincopula.hpp; sourceTree = SOURCE_ROOT; };
		10D0F4E0B6FE4AC7A839D2AC /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bernsteinpolynomial.hpp; path = ql/math/bernsteinpolynomial.hpp; sourceTree = SOURCE_ROOT; };
		10D8F4106BFD4DEC85276ECD /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cashflowvectors.hpp; path = ql/cashflows/cashflowvectors.hpp; sourceTree = SOURCE_ROOT; };
		10E0A8A58DCB44D2B35624AA /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = perturbativebarrieroptionengine.hpp; path = ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp; sourceTree = SOURCE_ROOT; };
		10E6EC52D09C4787926CAAEF /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eurodollarfuturesquote.hpp; path = ql/quotes/eurodollarfuturesquote.hpp; sourceTree = SOURCE_ROOT; };
		10EC6AB739944192A78B58E6 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = futuresconvadjustmentquote.cpp; path = ql/quotes/futuresconvadjustmentquote.cpp; sourceTree = SOURCE_ROOT; };
		10EED7CC6AE24340BA856261 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillaswingoption.hpp; path = ql/instruments/vanillaswingoption.hpp; sourceTree = SOURCE_ROOT; };
		10FF76C76BF049E385E79E6F /* /Users/heiner/git/QuantLib/test-suite/bermudanswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bermudanswaption.cpp; path = "test-suite/bermudanswaption.cpp"; sourceTree = SOURCE_ROOT; };
		110382DA1E5C4309B10482D6 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = arithmeticoisratehelper.cpp; path = ql/experimental/averageois/arithmeticoisratehelper.cpp; sourceTree = SOURCE_ROOT; };
		110A7389A2634C0A93E98014 /* /Users/heiner/git/QuantLib/ql/methods/lattices/bsmlattice.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bsmlattice.hpp; path = ql/methods/lattices/bsmlattice.hpp; sourceTree = SOURCE_ROOT; };
		1120617299F04DC0B087FD09 /* /Users/heiner/git/QuantLib/test-suite/piecewiseyieldcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseyieldcurve.hpp; path = "test-suite/piecewiseyieldcurve.hpp"; sourceTree = SOURCE_ROOT; };
		1121774CC51D48F0AF557FA0 /* /Users/heiner/git/QuantLib/ql/option.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = option.hpp; path = ql/option.hpp; sourceTree = SOURCE_ROOT; };
		1139314DC80749069F15BEC1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantity.cpp; path = ql/experimental/commodities/quantity.cpp; sourceTree = SOURCE_ROOT; };
		113CCB0442864053A2CE5AD6 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mc_discr_arith_av_strike.hpp; path = ql/pricingengines/asian/mc_discr_arith_av_strike.hpp; sourceTree = SOURCE_ROOT; };
		1153CF3298AD42D48B83BF52 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/lookback/all.hpp; sourceTree = SOURCE_ROOT; };
		117AD74D91F44300998C38FA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localvolcurve.hpp; path = ql/termstructures/volatility/equityfx/localvolcurve.hpp; sourceTree = SOURCE_ROOT; };
		118E19C667294262BC94DE75 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditytype.cpp; path = ql/experimental/commodities/commoditytype.cpp; sourceTree = SOURCE_ROOT; };
		1190AF169B8347B5A1726B36 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcontinuouspartialfixedlookback.hpp; path = ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp; sourceTree = SOURCE_ROOT; };
		11977EFA932D47F283F93703 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolcube2.hpp; path = ql/termstructures/volatility/swaption/swaptionvolcube2.hpp; sourceTree = SOURCE_ROOT; };
		119AC39C518B464FB8485DE1 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultdensitystructure.hpp; path = ql/termstructures/credit/defaultdensitystructure.hpp; sourceTree = SOURCE_ROOT; };
		119AFE72218846AB97555986 /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaption.cpp; path = ql/instruments/swaption.cpp; sourceTree = SOURCE_ROOT; };
		11A01B4F11324BE2B680849A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmextlinexpvolmodel.hpp; path = ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp; sourceTree = SOURCE_ROOT; };
		11B313BAD750440EA7876F07 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticsimplechooserengine.hpp; path = ql/experimental/exoticoptions/analyticsimplechooserengine.hpp; sourceTree = SOURCE_ROOT; };
		11C5203317DF489DB3B9C53F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/curvestates/all.hpp; sourceTree = SOURCE_ROOT; };
		11CFCF3CD34C428F989215AD /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaultprobabilitykey.cpp; path = ql/experimental/credit/defaultprobabilitykey.cpp; sourceTree = SOURCE_ROOT; };
		11D74FA58A5D4375AA3ECA71 /* /Users/heiner/git/QuantLib/ql/math/functional.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = functional.hpp; path = ql/math/functional.hpp; sourceTree = SOURCE_ROOT; };
		11DBB270489D4AF2B60A1602 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewiseintegral.cpp; path = ql/experimental/math/piecewiseintegral.cpp; sourceTree = SOURCE_ROOT; };
		11E8AC8BD4814D3D86C68B76 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitofmeasureconversionmanager.hpp; path = ql/experimental/commodities/unitofmeasureconversionmanager.hpp; sourceTree = SOURCE_ROOT; };
		11E925DEC5FF40FA84ADACF8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energybasisswap.cpp; path = ql/experimental/commodities/energybasisswap.cpp; sourceTree = SOURCE_ROOT; };
		11F1CA81C2344AFE8ADF93E4 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantocouponpricer.cpp; path = ql/experimental/coupons/quantocouponpricer.cpp; sourceTree = SOURCE_ROOT; };
		11FB914FE907427E9768530C /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcamericanbasketengine.cpp; path = ql/pricingengines/basket/mcamericanbasketengine.cpp; sourceTree = SOURCE_ROOT; };
		11FFC12638AE41F6A1B76CD7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = boundarycondition.hpp; path = ql/methods/finitedifferences/boundarycondition.hpp; sourceTree = SOURCE_ROOT; };
		12088FD5A8D04785ACE4D6D7 /* /Users/heiner/git/QuantLib/ql/timeseries.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timeseries.hpp; path = ql/timeseries.hpp; sourceTree = SOURCE_ROOT; };
		12142095DFC74786BA8B8655 /* /Users/heiner/git/QuantLib/ql/math/integrals/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/integrals/all.hpp; sourceTree = SOURCE_ROOT; };
		1214530940EB4D3DA1F59689 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/piecewiseconstantcorrelation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseconstantcorrelation.hpp; path = ql/models/marketmodels/piecewiseconstantcorrelation.hpp; sourceTree = SOURCE_ROOT; };
		12343F58A246433D9607866F /* /Users/heiner/git/QuantLib/ql/instruments/forward.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forward.hpp; path = ql/instruments/forward.hpp; sourceTree = SOURCE_ROOT; };
		1240B4E5DE5A406D81F5BE4F /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcouponpricer.cpp; path = ql/cashflows/inflationcouponpricer.cpp; sourceTree = SOURCE_ROOT; };
		125C2B1CCA7F43D096E40ED5 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energyswap.cpp; path = ql/experimental/commodities/energyswap.cpp; sourceTree = SOURCE_ROOT; };
		126D943E44CD4EDE95074DDA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		127FA85D2B91494287E32ACD /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = saudiarabia.cpp; path = ql/time/calendars/saudiarabia.cpp; sourceTree = SOURCE_ROOT; };
		1291203F53D54AD7B75A8077 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = actualactual.cpp; path = ql/time/daycounters/actualactual.cpp; sourceTree = SOURCE_ROOT; };
		129F6FBB7C8A4EF3865E8EC8 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseintegral.hpp; path = ql/experimental/math/piecewiseintegral.hpp; sourceTree = SOURCE_ROOT; };
		12A30C4E7F2441DA83D2E508 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = btp.cpp; path = ql/instruments/bonds/btp.cpp; sourceTree = SOURCE_ROOT; };
		12AC43D33C4048D387E5CBA4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmbackwardsolver.cpp; path = ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp; sourceTree = SOURCE_ROOT; };
		12B95B5E099A46B28ABA5B43 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/rngtraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rngtraits.hpp; path = ql/math/randomnumbers/rngtraits.hpp; sourceTree = SOURCE_ROOT; };
		13123F6F512545E69B11BFA2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmextendedornsteinuhlenbeckop.cpp; path = ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp; sourceTree = SOURCE_ROOT; };
		13287E20AAA745D2A4ABD803 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedbarrieroption.hpp; path = ql/pricingengines/barrier/discretizedbarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		1329F958C1A449489285EAD9 /* /Users/heiner/git/QuantLib/ql/math/interpolations/multicubicspline.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multicubicspline.hpp; path = ql/math/interpolations/multicubicspline.hpp; sourceTree = SOURCE_ROOT; };
		1351B8912C9047ED83BFBEB3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = smilesectionutils.hpp; path = ql/termstructures/volatility/smilesectionutils.hpp; sourceTree = SOURCE_ROOT; };
		1359BFEB792E45E78DD569E1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = svddfwdratepc.hpp; path = ql/models/marketmodels/evolvers/svddfwdratepc.hpp; sourceTree = SOURCE_ROOT; };
		136E0A55BC8F4330852DEB33 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multisteptarn.cpp; path = ql/models/marketmodels/products/multistep/multisteptarn.cpp; sourceTree = SOURCE_ROOT; };
		13808582745F4261AC4D2AAC /* /Users/heiner/git/QuantLib/test-suite/overnightindexedswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = overnightindexedswap.hpp; path = "test-suite/overnightindexedswap.hpp"; sourceTree = SOURCE_ROOT; };
		13851899441A49CBAAF7759F /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskynotional.hpp; path = ql/experimental/catbonds/riskynotional.hpp; sourceTree = SOURCE_ROOT; };
		13870DD916B747EAA6075EE4 /* /Users/heiner/git/QuantLib/ql/utilities/null.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = null.hpp; path = ql/utilities/null.hpp; sourceTree = SOURCE_ROOT; };
		138BC69F6A3548E1A5954B38 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = averageoiscouponpricer.cpp; path = ql/experimental/averageois/averageoiscouponpricer.cpp; sourceTree = SOURCE_ROOT; };
		13952153B03843B195D20032 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fftengine.cpp; path = ql/experimental/variancegamma/fftengine.cpp; sourceTree = SOURCE_ROOT; };
		13A4B015E76E4BAE83559E92 /* /Users/heiner/git/QuantLib/ql/auto_link.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = auto_link.hpp; path = ql/auto_link.hpp; sourceTree = SOURCE_ROOT; };
		13B9EE14F4434EDCB17BAC92 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmtimedepdirichletboundary.hpp; path = ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp; sourceTree = SOURCE_ROOT; };
		13C5BC892C8D4E628EF34B60 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = interestratevolsurface.cpp; path = ql/experimental/volatility/interestratevolsurface.cpp; sourceTree = SOURCE_ROOT; };
		13C7C991FF444877A348F89E /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flathazardrate.cpp; path = ql/termstructures/credit/flathazardrate.cpp; sourceTree = SOURCE_ROOT; };
		13D0C8B3AF0D43AF9671C16B /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = huslerreisscopula.hpp; path = ql/math/copulas/huslerreisscopula.hpp; sourceTree = SOURCE_ROOT; };
		13DCE690D9AA4E109F79DA79 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bfgs.hpp; path = ql/math/optimization/bfgs.hpp; sourceTree = SOURCE_ROOT; };
		13EE32FFB362484496A310BD /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = secondordermixedderivativeop.hpp; path = ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp; sourceTree = SOURCE_ROOT; };
		13F13E57DEF14286B1F1EC84 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/mixedscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mixedscheme.hpp; path = ql/methods/finitedifferences/mixedscheme.hpp; sourceTree = SOURCE_ROOT; };
		13F396BEC80744C482B96E9F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsspreadcoupon.cpp; path = ql/experimental/coupons/cmsspreadcoupon.cpp; sourceTree = SOURCE_ROOT; };
		14064CE679C94CB2BD0247DA /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callablebondvolstructure.hpp; path = ql/experimental/callablebonds/callablebondvolstructure.hpp; sourceTree = SOURCE_ROOT; };
		141305CEC70349C3801E082E /* /Users/heiner/git/QuantLib/ql/termstructures/localbootstrap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localbootstrap.hpp; path = ql/termstructures/localbootstrap.hpp; sourceTree = SOURCE_ROOT; };
		1423A11185884818A52B7E63 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flathazardrate.cpp; path = ql/termstructures/credit/flathazardrate.cpp; sourceTree = SOURCE_ROOT; };
		142C7D13FD074E5B8CE3E2DA /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicapfloor.cpp; path = ql/instruments/cpicapfloor.cpp; sourceTree = SOURCE_ROOT; };
		142E991C042C473E8E46CCFB /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stochasticprocessarray.cpp; path = ql/processes/stochasticprocessarray.cpp; sourceTree = SOURCE_ROOT; };
		143738CC071A4991A5D4AED9 /* /Users/heiner/git/QuantLib/test-suite/noarbsabr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noarbsabr.hpp; path = "test-suite/noarbsabr.hpp"; sourceTree = SOURCE_ROOT; };
		1457043D9D424A64A89F8615 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussianquadratures.cpp; path = ql/math/integrals/gaussianquadratures.cpp; sourceTree = SOURCE_ROOT; };
		146C48D7C331467487A77D84 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm2dblackscholesop.hpp; path = ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp; sourceTree = SOURCE_ROOT; };
		146C6198770F445591F70908 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisetimedependenthestonmodel.hpp; path = ql/models/equity/piecewisetimedependenthestonmodel.hpp; sourceTree = SOURCE_ROOT; };
		1487797027684F86BEEDAF89 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonslvmcmodel.cpp; path = ql/experimental/models/hestonslvmcmodel.cpp; sourceTree = SOURCE_ROOT; };
		14923D3BE2F34757AC005788 /* /Users/heiner/git/QuantLib/ql/time/daycounter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = daycounter.hpp; path = ql/time/daycounter.hpp; sourceTree = SOURCE_ROOT; };
		149E40C0F2544AF892287577 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = switzerland.cpp; path = ql/time/calendars/switzerland.cpp; sourceTree = SOURCE_ROOT; };
		14BEFCD8E78745BCA8825985 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateeuler.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp; sourceTree = SOURCE_ROOT; };
		14BFF57B924F4195A9813837 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = batesmodel.cpp; path = ql/models/equity/batesmodel.cpp; sourceTree = SOURCE_ROOT; };
		14C72B60AEEB4A88AA1D9576 /* /Users/heiner/git/QuantLib/ql/termstructures/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/all.hpp; sourceTree = SOURCE_ROOT; };
		14CA17CB86384BA2B997FB04 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = numericaldifferentiation.cpp; path = ql/experimental/math/numericaldifferentiation.cpp; sourceTree = SOURCE_ROOT; };
		14DA7CE5BE43450FBCB7C372 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = trinomialtree.cpp; path = ql/methods/lattices/trinomialtree.cpp; sourceTree = SOURCE_ROOT; };
		14DC0241079B4702B15EA8AE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardforwardmappings.cpp; path = ql/models/marketmodels/forwardforwardmappings.cpp; sourceTree = SOURCE_ROOT; };
		14DE4046273046329E80736E /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basketgeneratingengine.cpp; path = ql/pricingengines/swaption/basketgeneratingengine.cpp; sourceTree = SOURCE_ROOT; };
		14E49C007F2041E0B7419A3A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = volcube.cpp; path = ql/experimental/volatility/volcube.cpp; sourceTree = SOURCE_ROOT; };
		151A3FE7DFBC40779CC22FA8 /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantestimator.hpp; path = ql/models/volatility/constantestimator.hpp; sourceTree = SOURCE_ROOT; };
		1521AD3C70DC4F1992235C1C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmprocess.cpp; path = ql/legacy/libormarketmodels/lfmprocess.cpp; sourceTree = SOURCE_ROOT; };
		152989448E59484E90F8D4B3 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = seedgenerator.cpp; path = ql/math/randomnumbers/seedgenerator.cpp; sourceTree = SOURCE_ROOT; };
		152C9BA82B1B4792B6BC2518 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = smmdriftcalculator.hpp; path = ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp; sourceTree = SOURCE_ROOT; };
		15329A73D9F9420BB4E6E549 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsolverdesc.hpp; path = ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp; sourceTree = SOURCE_ROOT; };
		1536005108314D03BDA2ADF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdsimplebsswingengine.hpp; path = ql/pricingengines/vanilla/fdsimplebsswingengine.hpp; sourceTree = SOURCE_ROOT; };
		153C20F3B7DB4C0D991A6B88 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmg2op.hpp; path = ql/methods/finitedifferences/operators/fdmg2op.hpp; sourceTree = SOURCE_ROOT; };
		155A0235D76149B2978C044D /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaultdensitystructure.cpp; path = ql/termstructures/credit/defaultdensitystructure.cpp; sourceTree = SOURCE_ROOT; };
		156A7F1AEBD0409EB58D2F54 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lossdistribution.hpp; path = ql/experimental/credit/lossdistribution.hpp; sourceTree = SOURCE_ROOT; };
		15724A3E51B940D380FB42DF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonvariancemesher.hpp; path = ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp; sourceTree = SOURCE_ROOT; };
		1575D82E3F8E43ADA64DB162 /* /Users/heiner/git/QuantLib/test-suite/catbonds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = catbonds.cpp; path = "test-suite/catbonds.cpp"; sourceTree = SOURCE_ROOT; };
		157DCCDBF1524E4C9CA51DF1 /* SwapValuation */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = SwapValuation; sourceTree = BUILT_PRODUCTS_DIR; };
		158ADE4F9CAF48788D312BFA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendeuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fddividendeuropeanengine.hpp; path = ql/pricingengines/vanilla/fddividendeuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		158F3A69FAB641BFA7DFF26A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolcube2.cpp; path = ql/termstructures/volatility/swaption/swaptionvolcube2.cpp; sourceTree = SOURCE_ROOT; };
		159C7E99B5BE4C84B798C84B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmfixedvolmodel.hpp; path = ql/legacy/libormarketmodels/lmfixedvolmodel.hpp; sourceTree = SOURCE_ROOT; };
		15A9E7611463410A82FC0A6A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sparseilupreconditioner.cpp; path = ql/math/matrixutilities/sparseilupreconditioner.cpp; sourceTree = SOURCE_ROOT; };
		15AA8550DB314587A42A47AB /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makevanillaswap.cpp; path = ql/instruments/makevanillaswap.cpp; sourceTree = SOURCE_ROOT; };
		15D77F067E7E409D8CC5FD47 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdeuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdeuropeanengine.hpp; path = ql/pricingengines/vanilla/fdeuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		15DE8E0A718D432FAD035F9A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = expcorrelations.cpp; path = ql/models/marketmodels/correlations/expcorrelations.cpp; sourceTree = SOURCE_ROOT; };
		15EEACFCF0394E6BBF26A970 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/impliedtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliedtermstructure.hpp; path = ql/termstructures/yield/impliedtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		1614CC1E6C2E4194AEAF596B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolcube.hpp; path = ql/termstructures/volatility/swaption/swaptionvolcube.hpp; sourceTree = SOURCE_ROOT; };
		161E094255E545F88C51940E /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = finland.cpp; path = ql/time/calendars/finland.cpp; sourceTree = SOURCE_ROOT; };
		162F402629504B21A9C17BBE /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jamshidianswaptionengine.hpp; path = ql/pricingengines/swaption/jamshidianswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		16339DFDD45F4E70A6936F80 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcdatmvolcurve.cpp; path = ql/experimental/volatility/abcdatmvolcurve.cpp; sourceTree = SOURCE_ROOT; };
		1641BAD74A2644C28B872679 /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = huslerreisscopula.cpp; path = ql/math/copulas/huslerreisscopula.cpp; sourceTree = SOURCE_ROOT; };
		1649C7A2FDED408AA90658BC /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/exercisestrategy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exercisestrategy.hpp; path = ql/methods/montecarlo/exercisestrategy.hpp; sourceTree = SOURCE_ROOT; };
		1651CF6FACA04E7CA940BEAD /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interestratevolsurface.hpp; path = ql/experimental/volatility/interestratevolsurface.hpp; sourceTree = SOURCE_ROOT; };
		1668962CA0C842FA894A0C7B /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interestrateindex.hpp; path = ql/indexes/interestrateindex.hpp; sourceTree = SOURCE_ROOT; };
		16780108D19F433B987B756B /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = actualactual.hpp; path = ql/time/daycounters/actualactual.hpp; sourceTree = SOURCE_ROOT; };
		16A5D5502D864A6595055134 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionhelper.hpp; path = ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp; sourceTree = SOURCE_ROOT; };
		16A957CDC16942E4A1D34686 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = catrisk.hpp; path = ql/experimental/catbonds/catrisk.hpp; sourceTree = SOURCE_ROOT; };
		16CCF55507B54010A7EC164B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bacheliercapfloorengine.cpp; path = ql/pricingengines/capfloor/bacheliercapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		16D14B892577481D9B6DFCD0 /* /Users/heiner/git/QuantLib/test-suite/array.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = array.hpp; path = "test-suite/array.hpp"; sourceTree = SOURCE_ROOT; };
		16D3827E275144CF98D5E884 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/polynomial2Dspline.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = polynomial2Dspline.hpp; path = ql/experimental/inflation/polynomial2Dspline.hpp; sourceTree = SOURCE_ROOT; };
		16DADCB2CB1A400DB75AD79F /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/multicurvesensitivities.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multicurvesensitivities.hpp; path = ql/experimental/termstructures/multicurvesensitivities.hpp; sourceTree = SOURCE_ROOT; };
		16E4154BB1D94AA495D6BA54 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmtermoperator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bsmtermoperator.hpp; path = ql/methods/finitedifferences/bsmtermoperator.hpp; sourceTree = SOURCE_ROOT; };
		16F6BE11AEBF45BD89EE5A48 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationindex.hpp; path = ql/indexes/inflationindex.hpp; sourceTree = SOURCE_ROOT; };
		1709618965664D998933B047 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapforwardbasissystem.hpp; path = ql/models/marketmodels/callability/swapforwardbasissystem.hpp; sourceTree = SOURCE_ROOT; };
		1721036ED6284EDB8690A2B6 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/varianceoption/all.hpp; sourceTree = SOURCE_ROOT; };
		1724491C804C413B863A8616 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basisincompleteordered.hpp; path = ql/math/matrixutilities/basisincompleteordered.hpp; sourceTree = SOURCE_ROOT; };
		1724DC4450A649B49577032C /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = doublebarriertype.hpp; path = ql/experimental/barrieroption/doublebarriertype.hpp; sourceTree = SOURCE_ROOT; };
		172AFFA3A0044ECB97D0ED76 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basecorrelationstructure.hpp; path = ql/experimental/credit/basecorrelationstructure.hpp; sourceTree = SOURCE_ROOT; };
		176DD3244D2D40008A131940 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardrateagreement.hpp; path = ql/instruments/forwardrateagreement.hpp; sourceTree = SOURCE_ROOT; };
		1775F0462F6C47ED8FA5B96A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sviinterpolatedsmilesection.cpp; path = ql/experimental/volatility/sviinterpolatedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		17BD6BB578C24F07852F92DA /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationhelpers.hpp; path = ql/termstructures/inflation/inflationhelpers.hpp; sourceTree = SOURCE_ROOT; };
		17BF0DEAF2DB4F3099965BF1 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = btp.cpp; path = ql/instruments/bonds/btp.cpp; sourceTree = SOURCE_ROOT; };
		17CD99BF1C4A4C5A967DCA9B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = oisratehelper.cpp; path = ql/termstructures/yield/oisratehelper.cpp; sourceTree = SOURCE_ROOT; };
		17D622A8777E4C12946C0D1C /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/basket/all.hpp; sourceTree = SOURCE_ROOT; };
		17D7123A0D1E4D8D9A795DD9 /* /Users/heiner/git/QuantLib/ql/experimental/fx/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/fx/all.hpp; sourceTree = SOURCE_ROOT; };
		17DDB17CE2334A26A5FD8ADA /* /Users/heiner/git/QuantLib/test-suite/observable.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = observable.hpp; path = "test-suite/observable.hpp"; sourceTree = SOURCE_ROOT; };
		17EFC9C98C32447DA93A4242 /* /Users/heiner/git/QuantLib/ql/timeseries.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timeseries.hpp; path = ql/timeseries.hpp; sourceTree = SOURCE_ROOT; };
		181157B800E84F2A94C83698 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdsimpleextoustorageengine.hpp; path = ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp; sourceTree = SOURCE_ROOT; };
		182B129400F849BB93BB6811 /* /Users/heiner/git/QuantLib/ql/math/curve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = curve.hpp; path = ql/math/curve.hpp; sourceTree = SOURCE_ROOT; };
		1845593132A047438A614777 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmmesher.hpp; path = ql/methods/finitedifferences/meshers/fdmmesher.hpp; sourceTree = SOURCE_ROOT; };
		184742B8090B474C81E9AB9C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmextlinexpvolmodel.hpp; path = ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp; sourceTree = SOURCE_ROOT; };
		18534303229D4CAE88C2496D /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = russia.cpp; path = ql/time/calendars/russia.cpp; sourceTree = SOURCE_ROOT; };
		186593E18F9140898E951B7C /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackscholescalculator.hpp; path = ql/pricingengines/blackscholescalculator.hpp; sourceTree = SOURCE_ROOT; };
		18ADD40DAC0E471691A600C9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactorgaussiancopula.hpp; path = ql/experimental/credit/onefactorgaussiancopula.hpp; sourceTree = SOURCE_ROOT; };
		18C0F9D3546A4C98A8774F59 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = taiwan.hpp; path = ql/time/calendars/taiwan.hpp; sourceTree = SOURCE_ROOT; };
		18ECB99B98A14F08826E72E5 /* /Users/heiner/git/QuantLib/ql/math/integrals/trapezoidintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = trapezoidintegral.hpp; path = ql/math/integrals/trapezoidintegral.hpp; sourceTree = SOURCE_ROOT; };
		18F46997B4F644A8AFF9AEF8 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytic_discr_geom_av_strike.cpp; path = ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp; sourceTree = SOURCE_ROOT; };
		18FEF8DC8E924F5981EE9D3B /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = modifiedbessel.hpp; path = ql/math/modifiedbessel.hpp; sourceTree = SOURCE_ROOT; };
		18FF6560275A4BCC8FD006F3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/products/pathwise/all.hpp; sourceTree = SOURCE_ROOT; };
		19160BE3533C43E0A579CC1C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdextoujumpvanillaengine.cpp; path = ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		1920739A6DC542709B4014ED /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = romania.hpp; path = ql/time/calendars/romania.hpp; sourceTree = SOURCE_ROOT; };
		194748692F7241F39417B7AD /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fddividendengine.hpp; path = ql/pricingengines/vanilla/fddividendengine.hpp; sourceTree = SOURCE_ROOT; };
		194903EBB6864508A1CB2666 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = brownianbridge.hpp; path = ql/methods/montecarlo/brownianbridge.hpp; sourceTree = SOURCE_ROOT; };
		1951B2665DA04087BAA558E9 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = overnightindexedswap.hpp; path = ql/instruments/overnightindexedswap.hpp; sourceTree = SOURCE_ROOT; };
		1954311327744B79B953D830 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmmcurvestate.cpp; path = ql/models/marketmodels/curvestates/lmmcurvestate.cpp; sourceTree = SOURCE_ROOT; };
		19587614D6CD4CA8BD8D6111 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonfwdop.hpp; path = ql/experimental/finitedifferences/fdmhestonfwdop.hpp; sourceTree = SOURCE_ROOT; };
		19657A3F208E4DDAB24B503F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliedvoltermstructure.hpp; path = ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		1975C20376534AECBC609138 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cvaswapengine.hpp; path = ql/pricingengines/swap/cvaswapengine.hpp; sourceTree = SOURCE_ROOT; };
		1978CBAF1682451BA6B2012A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = utilities.hpp; path = ql/models/marketmodels/utilities.hpp; sourceTree = SOURCE_ROOT; };
		1981B665750040349029E465 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskstats.cpp; path = "test-suite/riskstats.cpp"; sourceTree = SOURCE_ROOT; };
		19AC0DD4FE5642E48976431E /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bmaindex.cpp; path = ql/indexes/bmaindex.cpp; sourceTree = SOURCE_ROOT; };
		19B262F5F59D4A43B6833A58 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitofmeasureconversion.cpp; path = ql/experimental/commodities/unitofmeasureconversion.cpp; sourceTree = SOURCE_ROOT; };
		19B563BF08174D92B3276739 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bespokecalendar.cpp; path = ql/time/calendars/bespokecalendar.cpp; sourceTree = SOURCE_ROOT; };
		19C8B97FE70F4926A6B62CC2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionpseudojacobian.cpp; path = ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp; sourceTree = SOURCE_ROOT; };
		19D68918C04B42C08861E8A7 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = errorfunction.cpp; path = ql/math/errorfunction.cpp; sourceTree = SOURCE_ROOT; };
		19FDC357BBDD48E7BB76B4BF /* /Users/heiner/git/QuantLib/ql/utilities/clone.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = clone.hpp; path = ql/utilities/clone.hpp; sourceTree = SOURCE_ROOT; };
		1A07E11F100B44789C0A9BCA /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fd2dblackscholesvanillaengine.cpp; path = ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		1A12974C2FCB4EE783F348CD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapforwardbasissystem.hpp; path = ql/models/marketmodels/callability/swapforwardbasissystem.hpp; sourceTree = SOURCE_ROOT; };
		1A1757F0F55445379F3A0A20 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdblackscholesvanillaengine.cpp; path = ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		1A1EC931FD1E45B1AA74E5D4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = douglasscheme.hpp; path = ql/methods/finitedifferences/schemes/douglasscheme.hpp; sourceTree = SOURCE_ROOT; };
		1A21B1DFE313488F9CE5544A /* /Users/heiner/git/QuantLib/ql/models/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/all.hpp; sourceTree = SOURCE_ROOT; };
		1A33D205ABE948DCA5C21324 /* /Users/heiner/git/QuantLib/test-suite/fdmlinearop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlinearop.hpp; path = "test-suite/fdmlinearop.hpp"; sourceTree = SOURCE_ROOT; };
		1A40E55E974A49AC8381DA82 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmklugeextouop.hpp; path = ql/experimental/finitedifferences/fdmklugeextouop.hpp; sourceTree = SOURCE_ROOT; };
		1A4EF03D9F864A3E9995AD7F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onestepforwards.cpp; path = ql/models/marketmodels/products/onestep/onestepforwards.cpp; sourceTree = SOURCE_ROOT; };
		1A5C5D3D80074019A0283F1E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/tibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tibor.hpp; path = ql/indexes/ibor/tibor.hpp; sourceTree = SOURCE_ROOT; };
		1A67E08D71414F5EBB28C941 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = longstaffschwartzmultipathpricer.hpp; path = ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp; sourceTree = SOURCE_ROOT; };
		1A861E701A8E426CADEB7AB4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/americancondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = americancondition.hpp; path = ql/methods/finitedifferences/americancondition.hpp; sourceTree = SOURCE_ROOT; };
		1A87694894B049EE9393128F /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantodoublebarrieroption.cpp; path = ql/experimental/barrieroption/quantodoublebarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		1A8AA1E5FDF743299D668A5E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = smilesection.cpp; path = ql/termstructures/volatility/smilesection.cpp; sourceTree = SOURCE_ROOT; };
		1A8E7004FFBA41EF8B8600BE /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = getcovariance.cpp; path = ql/math/matrixutilities/getcovariance.cpp; sourceTree = SOURCE_ROOT; };
		1A9C7D16A6AB4192B5A4EDBA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdminnervaluecalculator.cpp; path = ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp; sourceTree = SOURCE_ROOT; };
		1AA6336CCCC64DF7A605C1D6 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kronrodintegral.hpp; path = ql/math/integrals/kronrodintegral.hpp; sourceTree = SOURCE_ROOT; };
		1AB18D26606743AC988D5564 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stochasticprocess.hpp; path = ql/stochasticprocess.hpp; sourceTree = SOURCE_ROOT; };
		1AC4302F3C5A4AC383EF6198 /* /Users/heiner/git/QuantLib/test-suite/cms.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cms.hpp; path = "test-suite/cms.hpp"; sourceTree = SOURCE_ROOT; };
		1AD26686352D4ECDA52DC02B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/gbplibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gbplibor.hpp; path = ql/indexes/ibor/gbplibor.hpp; sourceTree = SOURCE_ROOT; };
		1ADAA3E4DCE74AA0AAC0ADC5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackvariancecurve.cpp; path = ql/termstructures/volatility/equityfx/blackvariancecurve.cpp; sourceTree = SOURCE_ROOT; };
		1AE30CB7FEDE4F9694CA99A0 /* /Users/heiner/git/QuantLib/test-suite/timeseries.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timeseries.hpp; path = "test-suite/timeseries.hpp"; sourceTree = SOURCE_ROOT; };
		1AEDD3BE752449AB812CDF97 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = steepestdescent.hpp; path = ql/math/optimization/steepestdescent.hpp; sourceTree = SOURCE_ROOT; };
		1AEF620F8CA44A08BB3AD202 /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eurliborswap.cpp; path = ql/indexes/swap/eurliborswap.cpp; sourceTree = SOURCE_ROOT; };
		1B13EF42B3AA494D98EC83A4 /* /Users/heiner/git/QuantLib/ql/pricingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pricingengine.hpp; path = ql/pricingengine.hpp; sourceTree = SOURCE_ROOT; };
		1B16C83B956B441092A55FF9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cdor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cdor.hpp; path = ql/indexes/ibor/cdor.hpp; sourceTree = SOURCE_ROOT; };
		1B28043E50704478BE655A71 /* /Users/heiner/git/QuantLib/Examples/Bonds/Bonds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Bonds.cpp; path = Examples/Bonds/Bonds.cpp; sourceTree = SOURCE_ROOT; };
		1B33A2D63FEF4F8A8DCDDA96 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholesop.cpp; path = ql/methods/finitedifferences/operators/fdmblackscholesop.cpp; sourceTree = SOURCE_ROOT; };
		1B3578F4B5ED4BA8A4772839 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cashflow.cpp; path = ql/cashflow.cpp; sourceTree = SOURCE_ROOT; };
		1B3C0DBC7CEB4FF79E8CA230 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fwdtocotswapadapter.hpp; path = ql/models/marketmodels/models/fwdtocotswapadapter.hpp; sourceTree = SOURCE_ROOT; };
		1B4A14A73796486A83DCC559 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditycashflow.cpp; path = ql/experimental/commodities/commoditycashflow.cpp; sourceTree = SOURCE_ROOT; };
		1B5F0366FA8E4A69A9165A0F /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gsrprocesscore.cpp; path = ql/processes/gsrprocesscore.cpp; sourceTree = SOURCE_ROOT; };
		1B71C9EDDA0C4916A977B694 /* /Users/heiner/git/QuantLib/ql/utilities/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/utilities/all.hpp; sourceTree = SOURCE_ROOT; };
		1B7A3C41B6F84E7185C18FB1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimpleswingcondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp; sourceTree = SOURCE_ROOT; };
		1B941B942908450E8021C1C7 /* /Users/heiner/git/QuantLib/ql/patterns/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/patterns/all.hpp; sourceTree = SOURCE_ROOT; };
		1BD4360619AE4EB1931F3242 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepinversefloater.cpp; path = ql/models/marketmodels/products/multistep/multistepinversefloater.cpp; sourceTree = SOURCE_ROOT; };
		1BD92979AB5147C08B8FCCE4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmornsteinuhlenbeckop.cpp; path = ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp; sourceTree = SOURCE_ROOT; };
		1BDAB7D32A1E41C2BAFB0CFF /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcbarrierengine.hpp; path = ql/pricingengines/barrier/mcbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		1BE4E779798847A5BB9D7819 /* /Users/heiner/git/QuantLib/test-suite/stats.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stats.cpp; path = "test-suite/stats.cpp"; sourceTree = SOURCE_ROOT; };
		1BF2CB93CC6B49D693E5A1D7 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = plackettcopula.cpp; path = ql/math/copulas/plackettcopula.cpp; sourceTree = SOURCE_ROOT; };
		1BF88BE5FC6D4D6588C432F7 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackcalculator.hpp; path = ql/pricingengines/blackcalculator.hpp; sourceTree = SOURCE_ROOT; };
		1C119F1F3F4848D78CC596D1 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dividendbarrieroption.hpp; path = ql/instruments/dividendbarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		1C120649325F40E18415BCA1 /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = businessdayconvention.cpp; path = ql/time/businessdayconvention.cpp; sourceTree = SOURCE_ROOT; };
		1C1A0C18203745E7B04A4A56 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gsrprocess.cpp; path = ql/processes/gsrprocess.cpp; sourceTree = SOURCE_ROOT; };
		1C2893E3A57F4F939985DD3A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube1.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolcube1.hpp; path = ql/termstructures/volatility/swaption/swaptionvolcube1.hpp; sourceTree = SOURCE_ROOT; };
		1C3503A24C434D5EB23BB785 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantodoublebarrieroption.cpp; path = ql/experimental/barrieroption/quantodoublebarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		1C383D9C00D54D6F8875C591 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gridmodellocalvolsurface.hpp; path = ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		1C43974429DA43849C3128B7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = partialtimebarrieroption.cpp; path = ql/experimental/exoticoptions/partialtimebarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		1C606E38E4E24EDD9378D4C9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticgjrgarchengine.hpp; path = ql/pricingengines/vanilla/analyticgjrgarchengine.hpp; sourceTree = SOURCE_ROOT; };
		1C6B7D16662F4B5B94509D9A /* /Users/heiner/git/QuantLib/ql/experimental/inflation/genericindexes.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = genericindexes.hpp; path = ql/experimental/inflation/genericindexes.hpp; sourceTree = SOURCE_ROOT; };
		1C6FF658A1ED4D6F999651D5 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditytype.hpp; path = ql/experimental/commodities/commoditytype.hpp; sourceTree = SOURCE_ROOT; };
		1C70F66A5E824AEC8B7633BC /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multidimquadrature.cpp; path = ql/experimental/math/multidimquadrature.cpp; sourceTree = SOURCE_ROOT; };
		1C744A4A270249ED82E68D67 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/capletvariancecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletvariancecurve.hpp; path = ql/termstructures/volatility/optionlet/capletvariancecurve.hpp; sourceTree = SOURCE_ROOT; };
		1C749647296F4548B80EAC15 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = russia.cpp; path = ql/time/calendars/russia.cpp; sourceTree = SOURCE_ROOT; };
		1C924446EB7A4DD2B3E41CD0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiproductmultistep.hpp; path = ql/models/marketmodels/products/multiproductmultistep.hpp; sourceTree = SOURCE_ROOT; };
		1CAB32A5924A4167ACF6FD4C /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = weekendsonly.hpp; path = ql/time/calendars/weekendsonly.hpp; sourceTree = SOURCE_ROOT; };
		1CB044D59F944794AE923AAE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = writerextensibleoption.hpp; path = ql/experimental/exoticoptions/writerextensibleoption.hpp; sourceTree = SOURCE_ROOT; };
		1CC906549B0D4C19B541ED74 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = batesmodel.hpp; path = ql/models/equity/batesmodel.hpp; sourceTree = SOURCE_ROOT; };
		1CCB5C0EA2F44CEB8316D56F /* /Users/heiner/git/QuantLib/test-suite/digitaloption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitaloption.hpp; path = "test-suite/digitaloption.hpp"; sourceTree = SOURCE_ROOT; };
		1CD3C7624EAA43409448C3B4 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonslvfdmmodel.cpp; path = ql/experimental/models/hestonslvfdmmodel.cpp; sourceTree = SOURCE_ROOT; };
		1CF9FFFE20E841748D28A606 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = genericlsregression.cpp; path = ql/methods/montecarlo/genericlsregression.cpp; sourceTree = SOURCE_ROOT; };
		1CFB43F3B7C34A2D8BD905B1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskneutraldensitycalculator.hpp; path = ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp; sourceTree = SOURCE_ROOT; };
		1D1A3610707348B79A355F8F /* /Users/heiner/git/QuantLib/test-suite/inflation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflation.hpp; path = "test-suite/inflation.hpp"; sourceTree = SOURCE_ROOT; };
		1D1D81699A5142269728CA2B /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = endcriteria.cpp; path = ql/math/optimization/endcriteria.cpp; sourceTree = SOURCE_ROOT; };
		1D3FCE773825470183471F67 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = twoassetbarrieroption.cpp; path = ql/experimental/exoticoptions/twoassetbarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		1D4F761281EC458EBA3FC188 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/probabilitytraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = probabilitytraits.hpp; path = ql/termstructures/credit/probabilitytraits.hpp; sourceTree = SOURCE_ROOT; };
		1D525C511B45433983560971 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcamericanbasketengine.hpp; path = ql/pricingengines/basket/mcamericanbasketengine.hpp; sourceTree = SOURCE_ROOT; };
		1D59932B7FB04E54B9A0865B /* /Users/heiner/git/QuantLib/ql/patterns/visitor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = visitor.hpp; path = ql/patterns/visitor.hpp; sourceTree = SOURCE_ROOT; };
		1D6021D98B044D19953117AA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmindicesonboundary.cpp; path = ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp; sourceTree = SOURCE_ROOT; };
		1D7D8BC474B34CB683A28638 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/meshers/all.hpp; sourceTree = SOURCE_ROOT; };
		1D7ECB7CB22B4E778D6325F9 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = isdacdsengine.cpp; path = ql/pricingengines/credit/isdacdsengine.cpp; sourceTree = SOURCE_ROOT; };
		1DA430D7CA3D4B6A918183C2 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fixedratecoupon.cpp; path = ql/cashflows/fixedratecoupon.cpp; sourceTree = SOURCE_ROOT; };
		1DACE8C2FD224B1B8E032182 /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bspline.cpp; path = ql/math/bspline.cpp; sourceTree = SOURCE_ROOT; };
		1DB45B81F9C942F98FC1EDB9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = noarbsabrinterpolatedsmilesection.cpp; path = ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		1DBFC0DBAD384C548C4FCBE2 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativerng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inversecumulativerng.hpp; path = ql/math/randomnumbers/inversecumulativerng.hpp; sourceTree = SOURCE_ROOT; };
		1DC7706AD6E54A669463789E /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletalphacalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel_smmcapletalphacalibration.cpp; path = "test-suite/marketmodel_smmcapletalphacalibration.cpp"; sourceTree = SOURCE_ROOT; };
		1DC9FF7F4B824C1FBF26AEEE /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedconvertible.hpp; path = ql/experimental/convertiblebonds/discretizedconvertible.hpp; sourceTree = SOURCE_ROOT; };
		1DCB4F45348647D687AC1849 /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dividendoption.cpp; path = "test-suite/dividendoption.cpp"; sourceTree = SOURCE_ROOT; };
		1DCD7400E2A34549AFAA934B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapforwardmappings.cpp; path = ql/models/marketmodels/swapforwardmappings.cpp; sourceTree = SOURCE_ROOT; };
		1DD68E1ED46E4A01823AFB90 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmvppstepconditionfactory.hpp; path = ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp; sourceTree = SOURCE_ROOT; };
		1DE62CC0738C43D6ABEE2C7D /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zerocouponinflationswap.cpp; path = ql/instruments/zerocouponinflationswap.cpp; sourceTree = SOURCE_ROOT; };
		1DEE2B4127294CA693A310C4 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmcorrmodel.hpp; path = ql/legacy/libormarketmodels/lmcorrmodel.hpp; sourceTree = SOURCE_ROOT; };
		1DF2B180629C4B1C9F331082 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = expm.cpp; path = ql/experimental/math/expm.cpp; sourceTree = SOURCE_ROOT; };
		1E01AAF71FF64AFFAFB067AF /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = correlationstructure.cpp; path = ql/experimental/credit/correlationstructure.cpp; sourceTree = SOURCE_ROOT; };
		1E0289D85DEC412789817356 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceuropeanbasketengine.hpp; path = ql/pricingengines/basket/mceuropeanbasketengine.hpp; sourceTree = SOURCE_ROOT; };
		1E028D9470A44375A0AA5C63 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energycommodity.cpp; path = ql/experimental/commodities/energycommodity.cpp; sourceTree = SOURCE_ROOT; };
		1E07CD15FCBC46BA8FD1D07C /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compositeinstrument.hpp; path = ql/instruments/compositeinstrument.hpp; sourceTree = SOURCE_ROOT; };
		1E12F05460AB44DC8655A8F1 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardcurve.hpp; path = ql/termstructures/yield/forwardcurve.hpp; sourceTree = SOURCE_ROOT; };
		1E13A09CD03A49F6891E0274 /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = chfliborswap.hpp; path = ql/indexes/swap/chfliborswap.hpp; sourceTree = SOURCE_ROOT; };
		1E21CB3C637A4405A77B537C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = coxingersollross.cpp; path = ql/models/shortrate/onefactormodels/coxingersollross.cpp; sourceTree = SOURCE_ROOT; };
		1E24CD04416E42919F0CEDDF /* /Users/heiner/git/QuantLib/test-suite/bonds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bonds.cpp; path = "test-suite/bonds.cpp"; sourceTree = SOURCE_ROOT; };
		1E3010B5276145A798C1204F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticpartialtimebarrieroptionengine.hpp; path = ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp; sourceTree = SOURCE_ROOT; };
		1E3B2BC36ABA4643AEFA124C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constantcapfloortermvol.cpp; path = ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp; sourceTree = SOURCE_ROOT; };
		1E3C2688CF5949799EBE49F0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateballand.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp; sourceTree = SOURCE_ROOT; };
		1E3CE28B098047EEBEA8BE98 /* /Users/heiner/git/QuantLib/ql/math/ode/adaptiverungekutta.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = adaptiverungekutta.hpp; path = ql/math/ode/adaptiverungekutta.hpp; sourceTree = SOURCE_ROOT; };
		1E3E152024CA4AB8B871AE91 /* /Users/heiner/git/QuantLib/test-suite/overnightindexedswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = overnightindexedswap.cpp; path = "test-suite/overnightindexedswap.cpp"; sourceTree = SOURCE_ROOT; };
		1E54CA6FF3D24941BAC92E2D /* /Users/heiner/git/QuantLib/ql/experimental/math/farliegumbelmorgensterncopularng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = farliegumbelmorgensterncopularng.hpp; path = ql/experimental/math/farliegumbelmorgensterncopularng.hpp; sourceTree = SOURCE_ROOT; };
		1E68853422EE41029A1871F9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dynprogvppintrinsicvalueengine.hpp; path = ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp; sourceTree = SOURCE_ROOT; };
		1E7D7267A6FB46FF886CC9D9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmtimedepdirichletboundary.hpp; path = ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp; sourceTree = SOURCE_ROOT; };
		1E7EFD06435B4E72AC3247B2 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapindex.cpp; path = ql/indexes/swapindex.cpp; sourceTree = SOURCE_ROOT; };
		1E8A3B0ABCF640939EEAB97A /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = linesearchbasedmethod.hpp; path = ql/math/optimization/linesearchbasedmethod.hpp; sourceTree = SOURCE_ROOT; };
		1E8D6F40892E41F59FD3AAE6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticbsmhullwhiteengine.hpp; path = ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp; sourceTree = SOURCE_ROOT; };
		1E92A33A962840EB97EFD6AB /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardmeasureprocess.hpp; path = ql/processes/forwardmeasureprocess.hpp; sourceTree = SOURCE_ROOT; };
		1E93FDC8DFBA435DA3F3EF23 /* /Users/heiner/git/QuantLib/ql/experimental/math/levyflightdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = levyflightdistribution.hpp; path = ql/experimental/math/levyflightdistribution.hpp; sourceTree = SOURCE_ROOT; };
		1E9683EF637C484790A01CC2 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bicgstab.cpp; path = ql/math/matrixutilities/bicgstab.cpp; sourceTree = SOURCE_ROOT; };
		1E9BB421E42547BBB71F0CFB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmmeshercomposite.cpp; path = ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp; sourceTree = SOURCE_ROOT; };
		1EC949EAC29B4D98BB23EF86 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodelprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = libormarketmodelprocess.hpp; path = "test-suite/libormarketmodelprocess.hpp"; sourceTree = SOURCE_ROOT; };
		1ED3CE680ACB4A9491F7E980 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sensitivityanalysis.hpp; path = ql/experimental/risk/sensitivityanalysis.hpp; sourceTree = SOURCE_ROOT; };
		1ED723E8F01B4537987B5E2A /* /Users/heiner/git/QuantLib/test-suite/quantlibtestsuite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantlibtestsuite.cpp; path = "test-suite/quantlibtestsuite.cpp"; sourceTree = SOURCE_ROOT; };
		1ED907AFBA5C4053A4CC633C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholesmesher.cpp; path = ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp; sourceTree = SOURCE_ROOT; };
		1EE7FA22A92D4D0DAF184542 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedblackscholesprocess.cpp; path = ql/experimental/processes/extendedblackscholesprocess.cpp; sourceTree = SOURCE_ROOT; };
		1EFD1E8EF2A04B0BA23311D2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mc_discr_arith_av_price.hpp; path = ql/pricingengines/asian/mc_discr_arith_av_price.hpp; sourceTree = SOURCE_ROOT; };
		1F1555B687124615BC0AB6FA /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = richardsonextrapolation.hpp; path = ql/math/richardsonextrapolation.hpp; sourceTree = SOURCE_ROOT; };
		1F349D6887154916A732CAD0 /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = galamboscopula.hpp; path = ql/math/copulas/galamboscopula.hpp; sourceTree = SOURCE_ROOT; };
		1F3E2AE3A6E0424E901FD9A6 /* /Users/heiner/git/QuantLib/ql/currencies/africa.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = africa.hpp; path = ql/currencies/africa.hpp; sourceTree = SOURCE_ROOT; };
		1F4715E73C0F496DB25A59E0 /* /Users/heiner/git/QuantLib/ql/time/date.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = date.hpp; path = ql/time/date.hpp; sourceTree = SOURCE_ROOT; };
		1F474EFC456F4223AD0FD03B /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hongkong.hpp; path = ql/time/calendars/hongkong.hpp; sourceTree = SOURCE_ROOT; };
		1F4822BED9944A068176C4FF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmornsteinuhlenbeckop.cpp; path = ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp; sourceTree = SOURCE_ROOT; };
		1F72B642EC364E9E9FFA45AB /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dividend.cpp; path = ql/cashflows/dividend.cpp; sourceTree = SOURCE_ROOT; };
		1F74BE886C1A4DC8ABE77346 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = genericlsregression.cpp; path = ql/methods/montecarlo/genericlsregression.cpp; sourceTree = SOURCE_ROOT; };
		1F77C0781D0A4B228E347217 /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gausslobattointegral.hpp; path = ql/math/integrals/gausslobattointegral.hpp; sourceTree = SOURCE_ROOT; };
		1F79811002E842678B1C2B82 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcpathbasketengine.cpp; path = ql/experimental/mcbasket/mcpathbasketengine.cpp; sourceTree = SOURCE_ROOT; };
		1F7982BBAA9444E0A2AF02C7 /* /Users/heiner/git/QuantLib/ql/instruments/claim.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = claim.hpp; path = ql/instruments/claim.hpp; sourceTree = SOURCE_ROOT; };
		1F9155F4907449CDBA87134C /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gbpliborswap.cpp; path = ql/indexes/swap/gbpliborswap.cpp; sourceTree = SOURCE_ROOT; };
		1FC621CBA9864E8494F139AF /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmcovarproxy.hpp; path = ql/legacy/libormarketmodels/lfmcovarproxy.hpp; sourceTree = SOURCE_ROOT; };
		1FCE8BF209694961959F9E19 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticamericanmargrabeengine.cpp; path = ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp; sourceTree = SOURCE_ROOT; };
		1FE1BF36E2CD488F99541970 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mincopula.cpp; path = ql/math/copulas/mincopula.cpp; sourceTree = SOURCE_ROOT; };
		1FE462BAB2954AD494E79A49 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestongreensfct.cpp; path = ql/experimental/finitedifferences/fdmhestongreensfct.cpp; sourceTree = SOURCE_ROOT; };
		1FEC683DF2054C419EC4B055 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cashflows.hpp; path = ql/cashflows/cashflows.hpp; sourceTree = SOURCE_ROOT; };
		1FF5A3C4514846B09C38EEC1 /* /Users/heiner/git/QuantLib/ql/cashflows/replication.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = replication.hpp; path = ql/cashflows/replication.hpp; sourceTree = SOURCE_ROOT; };
		201E4D7B7B784508BD2DA66A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceuropeangjrgarchengine.hpp; path = ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp; sourceTree = SOURCE_ROOT; };
		201EC0FF396A4A4FABD39133 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgainterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vannavolgainterpolation.hpp; path = ql/experimental/barrieroption/vannavolgainterpolation.hpp; sourceTree = SOURCE_ROOT; };
		201EF1A36BA9471F9050352A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hundsdorferscheme.cpp; path = ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp; sourceTree = SOURCE_ROOT; };
		2038E15E727748FCA8A0283B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sonia.hpp; path = ql/indexes/ibor/sonia.hpp; sourceTree = SOURCE_ROOT; };
		2039243F188F4FC08A05CC55 /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/termstructures/all.hpp; sourceTree = SOURCE_ROOT; };
		20395EDFDBC8496F9718FA51 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/barrieroption/all.hpp; sourceTree = SOURCE_ROOT; };
		203C32D6F15146728522BCEF /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyoptionlethelpers.hpp; path = ql/experimental/inflation/yoyoptionlethelpers.hpp; sourceTree = SOURCE_ROOT; };
		204B338E1ECD47728CD32B44 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmamericanstepcondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp; sourceTree = SOURCE_ROOT; };
		205906CF7C754A21BA7A99CB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendeuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fddividendeuropeanengine.hpp; path = ql/pricingengines/vanilla/fddividendeuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		20596AA7CA004127AFFEB12E /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gausslobattointegral.cpp; path = ql/math/integrals/gausslobattointegral.cpp; sourceTree = SOURCE_ROOT; };
		205A6B43FFE840D89369D561 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multidimintegrator.cpp; path = ql/experimental/math/multidimintegrator.cpp; sourceTree = SOURCE_ROOT; };
		2066ACE363E3491F8E56C1D5 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/ukrpi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ukrpi.hpp; path = ql/indexes/inflation/ukrpi.hpp; sourceTree = SOURCE_ROOT; };
		206DFDFE040546FAB071DD11 /* /Users/heiner/git/QuantLib/ql/math/interpolations/loginterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = loginterpolation.hpp; path = ql/math/interpolations/loginterpolation.hpp; sourceTree = SOURCE_ROOT; };
		206F4E5D4D0F476796A5DD4F /* /Users/heiner/git/QuantLib/ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedyoyoptionletstripper.hpp; path = ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp; sourceTree = SOURCE_ROOT; };
		208C250D4A57488B96B4C444 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = czechrepublic.hpp; path = ql/time/calendars/czechrepublic.hpp; sourceTree = SOURCE_ROOT; };
		209E2BC7E451428A9A65351B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcpagodaengine.cpp; path = ql/experimental/exoticoptions/mcpagodaengine.cpp; sourceTree = SOURCE_ROOT; };
		20B34A404CC84F299016886C /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = treeswaptionengine.hpp; path = ql/pricingengines/swaption/treeswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		20CDE4554835429A96A37409 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/secant.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = secant.hpp; path = ql/math/solvers1d/secant.hpp; sourceTree = SOURCE_ROOT; };
		20D1726C3E9641E59AA70FF4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capfloortermvolcurve.cpp; path = ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp; sourceTree = SOURCE_ROOT; };
		20E6E5FE51C7439EB8C1AA27 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedconvertible.cpp; path = ql/experimental/convertiblebonds/discretizedconvertible.cpp; sourceTree = SOURCE_ROOT; };
		20F589863BDB4AD6A351C08B /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = timeunit.cpp; path = ql/time/timeunit.cpp; sourceTree = SOURCE_ROOT; };
		20FB6CC959A5416EBD4B9D0C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantity.hpp; path = ql/experimental/commodities/quantity.hpp; sourceTree = SOURCE_ROOT; };
		21151765720D4ABBBE335ECC /* /Users/heiner/git/QuantLib/ql/config.ansi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = config.ansi.hpp; path = ql/config.ansi.hpp; sourceTree = SOURCE_ROOT; };
		21151E69394048DB938289BA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticpdfhestonengine.hpp; path = ql/experimental/exoticoptions/analyticpdfhestonengine.hpp; sourceTree = SOURCE_ROOT; };
		215C7BD962724D1E8385DF38 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = catbond.hpp; path = ql/experimental/catbonds/catbond.hpp; sourceTree = SOURCE_ROOT; };
		2160E63A107D4750BA5549B0 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zerocouponinflationswap.cpp; path = ql/instruments/zerocouponinflationswap.cpp; sourceTree = SOURCE_ROOT; };
		216265BB0BC243AD893DE583 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionletstripper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyoptionletstripper.hpp; path = ql/experimental/inflation/yoyoptionletstripper.hpp; sourceTree = SOURCE_ROOT; };
		216CA42761D34C4D9C74B6A4 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discrepancystatistics.cpp; path = ql/math/statistics/discrepancystatistics.cpp; sourceTree = SOURCE_ROOT; };
		21832C57373E47919CC254C4 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lowdiscrepancysequences.cpp; path = "test-suite/lowdiscrepancysequences.cpp"; sourceTree = SOURCE_ROOT; };
		21A7871A022447DEB7289D25 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = oneassetoption.cpp; path = ql/instruments/oneassetoption.cpp; sourceTree = SOURCE_ROOT; };
		21A8ED205B0E430EA0A65759 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/exoticoptions/all.hpp; sourceTree = SOURCE_ROOT; };
		21AA004B8DC0411399C64B67 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestonhullwhitevanillaengine.cpp; path = ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		21B7E6408AD6474BA3541236 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitalcmscoupon.hpp; path = ql/cashflows/digitalcmscoupon.hpp; sourceTree = SOURCE_ROOT; };
		21BCD6EC82EF4518BD6981E8 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewiseyieldcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseyieldcurve.hpp; path = ql/termstructures/yield/piecewiseyieldcurve.hpp; sourceTree = SOURCE_ROOT; };
		21C9C51C8F984A44B6BB055B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = writerextensibleoption.cpp; path = ql/experimental/exoticoptions/writerextensibleoption.cpp; sourceTree = SOURCE_ROOT; };
		21D92A1B167B44FEA012DF91 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel_cms.cpp; path = "test-suite/marketmodel_cms.cpp"; sourceTree = SOURCE_ROOT; };
		21EB3C45352A42D6ABF18BC9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestondoublebarrierengine.hpp; path = ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		21FD3A72E1E14D729338694B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capfloortermvolatilitystructure.hpp; path = ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		21FEA4399AF84481A1C4A3B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cotswaptofwdadapter.hpp; path = ql/models/marketmodels/models/cotswaptofwdadapter.hpp; sourceTree = SOURCE_ROOT; };
		220DC17D71F7457CB17F1130 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = timebasket.cpp; path = ql/cashflows/timebasket.cpp; sourceTree = SOURCE_ROOT; };
		2212C8576CB342128A3D107C /* /Users/heiner/git/QuantLib/ql/userconfig.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = userconfig.hpp; path = ql/userconfig.hpp; sourceTree = SOURCE_ROOT; };
		2213E0A77CC2405EA8C4F68A /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = southkorea.cpp; path = ql/time/calendars/southkorea.cpp; sourceTree = SOURCE_ROOT; };
		221520D1DF144E108326E190 /* /Users/heiner/git/QuantLib/ql/instruments/futures.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = futures.hpp; path = ql/instruments/futures.hpp; sourceTree = SOURCE_ROOT; };
		221EEDB4E4B34ADC9CD66E40 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = southkorea.cpp; path = ql/time/calendars/southkorea.cpp; sourceTree = SOURCE_ROOT; };
		222DCA80C2F442ACBF99E8DB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constantcapfloortermvol.cpp; path = ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp; sourceTree = SOURCE_ROOT; };
		2238AA619111419195214941 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = batesengine.cpp; path = ql/pricingengines/vanilla/batesengine.cpp; sourceTree = SOURCE_ROOT; };
		224606ECE466476DBC117080 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlinearopiterator.hpp; path = ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp; sourceTree = SOURCE_ROOT; };
		224B1A1C229742B5839CB0E0 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmfixedvolmodel.hpp; path = ql/legacy/libormarketmodels/lmfixedvolmodel.hpp; sourceTree = SOURCE_ROOT; };
		225FFAFBF783483DAE009DDC /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = endcriteria.cpp; path = ql/math/optimization/endcriteria.cpp; sourceTree = SOURCE_ROOT; };
		22883CA546E647978A4A1713 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mchestonhullwhiteengine.cpp; path = ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp; sourceTree = SOURCE_ROOT; };
		228FCAED1F154A399EE96223 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcdigitalengine.hpp; path = ql/pricingengines/vanilla/mcdigitalengine.hpp; sourceTree = SOURCE_ROOT; };
		22A5AE50CA8749B8926A5B59 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = svd.hpp; path = ql/math/matrixutilities/svd.hpp; sourceTree = SOURCE_ROOT; };
		22AD64ED941F4B9588D1016B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimple3dextoujumpsolver.hpp; path = ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp; sourceTree = SOURCE_ROOT; };
		22E6C5FED8A34A83BC4DDF4C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmvppstartlimitstepcondition.cpp; path = ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp; sourceTree = SOURCE_ROOT; };
		22F1E361F05046B08F44E089 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = squarerootprocess.cpp; path = ql/processes/squarerootprocess.cpp; sourceTree = SOURCE_ROOT; };
		22F2453C175A4240A89F18B5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = firstderivativeop.hpp; path = ql/methods/finitedifferences/operators/firstderivativeop.hpp; sourceTree = SOURCE_ROOT; };
		2301850E82B148AFA60CF415 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = treecallablebondengine.hpp; path = ql/experimental/callablebonds/treecallablebondengine.hpp; sourceTree = SOURCE_ROOT; };
		230A40475D004614B66C23EE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = historicalratesanalysis.cpp; path = ql/models/marketmodels/historicalratesanalysis.cpp; sourceTree = SOURCE_ROOT; };
		230F348CB25E46B8A62050D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/driftcomputation/all.hpp; sourceTree = SOURCE_ROOT; };
		2326DE770EDC49568069AF3D /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussianorthogonalpolynomial.hpp; path = ql/math/integrals/gaussianorthogonalpolynomial.hpp; sourceTree = SOURCE_ROOT; };
		2329E1E35608498A85280FC3 /* /Users/heiner/git/QuantLib/test-suite/binaryoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binaryoption.hpp; path = "test-suite/binaryoption.hpp"; sourceTree = SOURCE_ROOT; };
		2334D432AEF34F8889F44759 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onestepoptionlets.cpp; path = ql/models/marketmodels/products/onestep/onestepoptionlets.cpp; sourceTree = SOURCE_ROOT; };
		23519C8081EC4D3184F705C8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrinterpolatedsmilesection.hpp; path = ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		23638F6BEDED48C7A83A802C /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = futures.cpp; path = ql/instruments/futures.cpp; sourceTree = SOURCE_ROOT; };
		2367CB9524234C598A7B2EA1 /* /Users/heiner/git/QuantLib/ql/interestrate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interestrate.hpp; path = ql/interestrate.hpp; sourceTree = SOURCE_ROOT; };
		23809A6EAF1D41819DAEC4B3 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = varianceswap.cpp; path = ql/instruments/varianceswap.cpp; sourceTree = SOURCE_ROOT; };
		23B301A4F4D84EBE877834D2 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = europeanoption.hpp; path = ql/instruments/europeanoption.hpp; sourceTree = SOURCE_ROOT; };
		23BBEFD2CC334FCB9B1F705F /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = varianceoption.cpp; path = ql/experimental/varianceoption/varianceoption.cpp; sourceTree = SOURCE_ROOT; };
		23BD5765BA67424C83CB0090 /* /Users/heiner/git/QuantLib/ql/time/schedule.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = schedule.hpp; path = ql/time/schedule.hpp; sourceTree = SOURCE_ROOT; };
		23C1EB5408914FD2AF145CC6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiproductcomposite.hpp; path = ql/models/marketmodels/products/multiproductcomposite.hpp; sourceTree = SOURCE_ROOT; };
		23C7EC90B29C43029F30281E /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultlatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomdefaultlatentmodel.hpp; path = ql/experimental/credit/randomdefaultlatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		23C85294BAFA486987D90A1C /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dfloatfloatswaptionengine.hpp; path = ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		23CD614C13754219B0F00705 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm3dimsolver.hpp; path = ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp; sourceTree = SOURCE_ROOT; };
		23D3CABFC64B4A279ABB6736 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dcapfloorengine.cpp; path = ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		23EC16A20ADD4D5B942F129B /* /Users/heiner/git/QuantLib/ql/instruments/swap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swap.hpp; path = ql/instruments/swap.hpp; sourceTree = SOURCE_ROOT; };
		23F3BA69D6F445BFADF4B995 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = g2.cpp; path = ql/models/shortrate/twofactormodels/g2.cpp; sourceTree = SOURCE_ROOT; };
		23F82CCB7BA74F07A82739C2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mtbrowniangenerator.hpp; path = ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp; sourceTree = SOURCE_ROOT; };
		240A18DB50C042EA97B1A331 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussianlhplossmodel.cpp; path = ql/experimental/credit/gaussianlhplossmodel.cpp; sourceTree = SOURCE_ROOT; };
		24239CAB329A47DB91AE3F8B /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaultprobabilityhelpers.cpp; path = ql/termstructures/credit/defaultprobabilityhelpers.cpp; sourceTree = SOURCE_ROOT; };
		243E4C51F6B44C418AD912F7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackcdsoptionengine.cpp; path = ql/experimental/credit/blackcdsoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		244EF717F23046E985037C36 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cashflows.cpp; path = ql/cashflows/cashflows.cpp; sourceTree = SOURCE_ROOT; };
		2469D118A5A244C7AC45F9C7 /* /Users/heiner/git/QuantLib/test-suite/fastfouriertransform.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fastfouriertransform.cpp; path = "test-suite/fastfouriertransform.cpp"; sourceTree = SOURCE_ROOT; };
		2473C452BE6846048A32CB6C /* /Users/heiner/git/QuantLib/ql/experimental/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		2497324216C84867BAC286EB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gmres.hpp; path = ql/math/matrixutilities/gmres.hpp; sourceTree = SOURCE_ROOT; };
		249A298E5B7B4E19A5EB0669 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = asianoption.hpp; path = ql/instruments/asianoption.hpp; sourceTree = SOURCE_ROOT; };
		24B3BB65C6E342058B6EA0B7 /* /Users/heiner/git/QuantLib/test-suite/integrals.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integrals.cpp; path = "test-suite/integrals.cpp"; sourceTree = SOURCE_ROOT; };
		24BE04D2909D4DCC8D780F12 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makeois.cpp; path = ql/instruments/makeois.cpp; sourceTree = SOURCE_ROOT; };
		24C90E22B2074DF6969BA255 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/mctraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mctraits.hpp; path = ql/methods/montecarlo/mctraits.hpp; sourceTree = SOURCE_ROOT; };
		24D1E1B6642A449C8ABD6BEE /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fixedratebond.hpp; path = ql/instruments/bonds/fixedratebond.hpp; sourceTree = SOURCE_ROOT; };
		250D5E6F95C9412CB141C0A7 /* /Users/heiner/git/QuantLib/ql/experimental/math/claytoncopularng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = claytoncopularng.hpp; path = ql/experimental/math/claytoncopularng.hpp; sourceTree = SOURCE_ROOT; };
		250DDC4607094D9CABA50D07 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyinflationcoupon.hpp; path = ql/cashflows/yoyinflationcoupon.hpp; sourceTree = SOURCE_ROOT; };
		251405BD0CCB4950A3043BDD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cotswapfromfwdcorrelation.hpp; path = ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp; sourceTree = SOURCE_ROOT; };
		25290A78FFB24C45825E3FBD /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcapfloorengines.hpp; path = ql/pricingengines/inflation/inflationcapfloorengines.hpp; sourceTree = SOURCE_ROOT; };
		254DF62BE22D40E784C04291 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmcovarparam.hpp; path = ql/legacy/libormarketmodels/lfmcovarparam.hpp; sourceTree = SOURCE_ROOT; };
		25576BC27A694C1E8068848B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcamericanbasketengine.hpp; path = ql/pricingengines/basket/mcamericanbasketengine.hpp; sourceTree = SOURCE_ROOT; };
		25697767F46C4BFA9500A6E0 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackdeltacalculator.cpp; path = ql/experimental/fx/blackdeltacalculator.cpp; sourceTree = SOURCE_ROOT; };
		256E4CA523D54ED6BE9D6F12 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationlossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basecorrelationlossmodel.hpp; path = ql/experimental/credit/basecorrelationlossmodel.hpp; sourceTree = SOURCE_ROOT; };
		257227E68AB543F8AFF77237 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplus.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dplus.hpp; path = ql/methods/finitedifferences/dplus.hpp; sourceTree = SOURCE_ROOT; };
		257D8CB8A1ED48619BAAF816 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jointstochasticprocess.cpp; path = ql/processes/jointstochasticprocess.cpp; sourceTree = SOURCE_ROOT; };
		258F9622D6AD4983AF1BBD66 /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/quantoengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantoengine.hpp; path = ql/pricingengines/quanto/quantoengine.hpp; sourceTree = SOURCE_ROOT; };
		25BEAE356EA749E1A4C94018 /* /Users/heiner/git/QuantLib/ql/experimental/credit/homogeneouspooldef.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = homogeneouspooldef.hpp; path = ql/experimental/credit/homogeneouspooldef.hpp; sourceTree = SOURCE_ROOT; };
		25C8ACAE0E3448B0A28EF9B1 /* /Users/heiner/git/QuantLib/ql/experimental/math/levyflightdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = levyflightdistribution.hpp; path = ql/experimental/math/levyflightdistribution.hpp; sourceTree = SOURCE_ROOT; };
		25F3355794124E9B931EBBB6 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = amortizingfloatingratebond.cpp; path = ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp; sourceTree = SOURCE_ROOT; };
		25FAEDD96E1E4C298C4391D6 /* /Users/heiner/git/QuantLib/ql/instruments/swap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swap.hpp; path = ql/instruments/swap.hpp; sourceTree = SOURCE_ROOT; };
		2603CEA4AD744AAFB63CD2C6 /* /Users/heiner/git/QuantLib/ql/config.msvc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = config.msvc.hpp; path = ql/config.msvc.hpp; sourceTree = SOURCE_ROOT; };
		261CFCC7261F4D41B729502B /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = payoffs.cpp; path = ql/instruments/payoffs.cpp; sourceTree = SOURCE_ROOT; };
		264AF580F396441986FED7F8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmextoujumpmodelinnervalue.hpp; path = ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp; sourceTree = SOURCE_ROOT; };
		264DE3704EB145CDBD664A60 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = adaptedpathpayoff.cpp; path = ql/experimental/mcbasket/adaptedpathpayoff.cpp; sourceTree = SOURCE_ROOT; };
		264EE11F98CA450ABF4A7E2F /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = greeks.cpp; path = ql/pricingengines/greeks.cpp; sourceTree = SOURCE_ROOT; };
		2655BD5ED45F47EE8AAB4C0E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = boundarycondition.cpp; path = ql/methods/finitedifferences/boundarycondition.cpp; sourceTree = SOURCE_ROOT; };
		2663B1315565475D9EB12D23 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = indexmanager.hpp; path = ql/indexes/indexmanager.hpp; sourceTree = SOURCE_ROOT; };
		268A09F440CC4D7296F4D242 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bivariatenormaldistribution.cpp; path = ql/math/distributions/bivariatenormaldistribution.cpp; sourceTree = SOURCE_ROOT; };
		26C1759FBC6D4AB79A4DF4BF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdbatesvanillaengine.hpp; path = ql/pricingengines/vanilla/fdbatesvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		26C4A55DEF554FA8B2B96567 /* /Users/heiner/git/QuantLib/ql/utilities/null.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = null.hpp; path = ql/utilities/null.hpp; sourceTree = SOURCE_ROOT; };
		26D66FDD4C1C45B691C1DE91 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantodoublebarrieroption.hpp; path = ql/experimental/barrieroption/quantodoublebarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		2705463F5F8E48B1A23CED31 /* /Users/heiner/git/QuantLib/ql/quote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quote.hpp; path = ql/quote.hpp; sourceTree = SOURCE_ROOT; };
		27167E3BADF14D33B0201C81 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = symmetricschurdecomposition.hpp; path = ql/math/matrixutilities/symmetricschurdecomposition.hpp; sourceTree = SOURCE_ROOT; };
		27517EA43B9D4BE8971F89D9 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = longstaffschwartzmultipathpricer.cpp; path = ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp; sourceTree = SOURCE_ROOT; };
		275A87BA04B54733B026FE5C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalcotswapratepc.cpp; path = ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp; sourceTree = SOURCE_ROOT; };
		277A91DCD4A1443598FB7110 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmvppstepconditionfactory.cpp; path = ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp; sourceTree = SOURCE_ROOT; };
		277ECCA020CE41FA9E6EA0DF /* /Users/heiner/git/QuantLib/ql/models/volatility/garmanklass.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = garmanklass.hpp; path = ql/models/volatility/garmanklass.hpp; sourceTree = SOURCE_ROOT; };
		278CAE2936954AA49FA7DC58 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = latticerules.hpp; path = ql/math/randomnumbers/latticerules.hpp; sourceTree = SOURCE_ROOT; };
		2790FBBFA8424333A32C0904 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = concentrating1dmesher.hpp; path = ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		2793E3FFB99F437BB032896A /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyinflationcoupon.hpp; path = ql/cashflows/yoyinflationcoupon.hpp; sourceTree = SOURCE_ROOT; };
		27A875F176C14A3CB142FB3F /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticdoublebarrierengine.cpp; path = ql/experimental/barrieroption/analyticdoublebarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		27CBA35F8F4A4EB798185030 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = geometricbrownianprocess.hpp; path = ql/processes/geometricbrownianprocess.hpp; sourceTree = SOURCE_ROOT; };
		27D96FC5A5694F3FB7F45859 /* /Users/heiner/git/QuantLib/ql/experimental/math/latentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = latentmodel.hpp; path = ql/experimental/math/latentmodel.hpp; sourceTree = SOURCE_ROOT; };
		27E7258449C34545901D8A08 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optionletvolatilitystructure.hpp; path = ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		280410D92EB2445B9B1E68D1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedblackvariancesurface.hpp; path = ql/experimental/volatility/extendedblackvariancesurface.hpp; sourceTree = SOURCE_ROOT; };
		2804DC094E704B358B175DE5 /* /Users/heiner/git/QuantLib/ql/models/shortrate/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/shortrate/all.hpp; sourceTree = SOURCE_ROOT; };
		28061BBC010C4000BECA0604 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticperformanceengine.cpp; path = ql/pricingengines/cliquet/analyticperformanceengine.cpp; sourceTree = SOURCE_ROOT; };
		28297F5D7DA64BBB9324D963 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dfloatfloatswaptionengine.cpp; path = ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		28504A1421124447AC3428A3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ratehelpers.hpp; path = ql/termstructures/yield/ratehelpers.hpp; sourceTree = SOURCE_ROOT; };
		285875147BB14525B2B2D5FF /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = randomdefaultmodel.cpp; path = ql/experimental/credit/randomdefaultmodel.cpp; sourceTree = SOURCE_ROOT; };
		28649FA367B54E5BA3786DAB /* /Users/heiner/git/QuantLib/ql/indexes/inflation/ukrpi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ukrpi.hpp; path = ql/indexes/inflation/ukrpi.hpp; sourceTree = SOURCE_ROOT; };
		2864E8E3E0BE427D8FE4660F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = expcorrelations.cpp; path = ql/models/marketmodels/correlations/expcorrelations.cpp; sourceTree = SOURCE_ROOT; };
		286B95DFC87F4522BFE44B1B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductswap.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp; sourceTree = SOURCE_ROOT; };
		2873B7CD32184D4D974D7C13 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/trbdf2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = trbdf2.hpp; path = ql/methods/finitedifferences/trbdf2.hpp; sourceTree = SOURCE_ROOT; };
		2874A45AAF6B448E9067AA35 /* /Users/heiner/git/QuantLib/test-suite/lookbackoptions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lookbackoptions.hpp; path = "test-suite/lookbackoptions.hpp"; sourceTree = SOURCE_ROOT; };
		289C55D86CB64F19863ADC8B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = squarerootandersen.hpp; path = ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp; sourceTree = SOURCE_ROOT; };
		28A3D97E46D547B0816AF80A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fixedlocalvolsurface.hpp; path = ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		28B5B48DF57F4B468BD5CD8D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optionletstripper1.cpp; path = ql/termstructures/volatility/optionlet/optionletstripper1.cpp; sourceTree = SOURCE_ROOT; };
		28C2797A60704E0FA46516CB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = squarerootandersen.cpp; path = ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp; sourceTree = SOURCE_ROOT; };
		28DA75DCE748450F89535B3D /* /Users/heiner/git/QuantLib/test-suite/inflationcapflooredcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcapflooredcoupon.hpp; path = "test-suite/inflationcapflooredcoupon.hpp"; sourceTree = SOURCE_ROOT; };
		28E3341DB513477394595B96 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticeuropeanengine.hpp; path = ql/pricingengines/vanilla/analyticeuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		28EB960C9E2F4445872383D0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimple2dbssolver.hpp; path = ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp; sourceTree = SOURCE_ROOT; };
		28F4CC8AD45F4C3FBC5B9775 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = montecarlocatbondengine.cpp; path = ql/experimental/catbonds/montecarlocatbondengine.cpp; sourceTree = SOURCE_ROOT; };
		290B3C4BEF3347339C12C639 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = steepestdescent.cpp; path = ql/math/optimization/steepestdescent.cpp; sourceTree = SOURCE_ROOT; };
		290E9953E31B4339804B9D54 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = americanoption.cpp; path = "test-suite/americanoption.cpp"; sourceTree = SOURCE_ROOT; };
		29284C9337794CEBA1BCC4F2 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcaplethomocalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodel_smmcaplethomocalibration.hpp; path = "test-suite/marketmodel_smmcaplethomocalibration.hpp"; sourceTree = SOURCE_ROOT; };
		293628F995F348EA90BA2EE8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/impliciteuler.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliciteuler.hpp; path = ql/methods/finitedifferences/impliciteuler.hpp; sourceTree = SOURCE_ROOT; };
		294C595484E64289B2E75A70 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capfloor.hpp; path = ql/instruments/capfloor.hpp; sourceTree = SOURCE_ROOT; };
		29798D448C1E4FB48955B2D3 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = irregularswap.cpp; path = ql/experimental/swaptions/irregularswap.cpp; sourceTree = SOURCE_ROOT; };
		298CAE121A89431AAD8ED9B2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = distribution.cpp; path = ql/experimental/credit/distribution.cpp; sourceTree = SOURCE_ROOT; };
		299DAFD4AB154ECFB8F1604E /* /Users/heiner/git/QuantLib/ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedyoyoptionletstripper.hpp; path = ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp; sourceTree = SOURCE_ROOT; };
		29BC3518DC4C4036BEDAC897 /* /Users/heiner/git/QuantLib/test-suite/timeseries.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = timeseries.cpp; path = "test-suite/timeseries.cpp"; sourceTree = SOURCE_ROOT; };
		29D024E53F594D8490FDDAA6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralengine.hpp; path = ql/pricingengines/vanilla/integralengine.hpp; sourceTree = SOURCE_ROOT; };
		29DF9147E11140D49921BD35 /* /Users/heiner/git/QuantLib/ql/math/statistics/sequencestatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sequencestatistics.hpp; path = ql/math/statistics/sequencestatistics.hpp; sourceTree = SOURCE_ROOT; };
		29E1B776F59E416B863BFFEF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vegabumpcluster.cpp; path = ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp; sourceTree = SOURCE_ROOT; };
		29F69FCEF6A44545B636BDE3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicapfloorengines.cpp; path = ql/experimental/inflation/cpicapfloorengines.cpp; sourceTree = SOURCE_ROOT; };
		2A0627BAFC8D44DFA0974989 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mincopula.hpp; path = ql/math/copulas/mincopula.hpp; sourceTree = SOURCE_ROOT; };
		2A0978E9E95D4EE597E8E74F /* /Users/heiner/git/QuantLib/test-suite/dates.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dates.hpp; path = "test-suite/dates.hpp"; sourceTree = SOURCE_ROOT; };
		2A0D2287D94F424BAEF459C1 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceverestengine.hpp; path = ql/experimental/exoticoptions/mceverestengine.hpp; sourceTree = SOURCE_ROOT; };
		2A17EDF07386443CA1BAFB87 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonmodelhelper.cpp; path = ql/models/equity/hestonmodelhelper.cpp; sourceTree = SOURCE_ROOT; };
		2A186DB787574C7F9835647A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvoldiscrete.cpp; path = ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp; sourceTree = SOURCE_ROOT; };
		2A2E665656864386B2291DE8 /* /Users/heiner/git/QuantLib/test-suite/hybridhestonhullwhiteprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hybridhestonhullwhiteprocess.cpp; path = "test-suite/hybridhestonhullwhiteprocess.cpp"; sourceTree = SOURCE_ROOT; };
		2A313E29FB6A483284FCC5CC /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = brazil.cpp; path = ql/time/calendars/brazil.cpp; sourceTree = SOURCE_ROOT; };
		2A3C660D95484ABB94F2FD5C /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yearonyearinflationswap.hpp; path = ql/instruments/yearonyearinflationswap.hpp; sourceTree = SOURCE_ROOT; };
		2A49F523811646918D43CB5F /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedblackscholesprocess.hpp; path = ql/experimental/processes/extendedblackscholesprocess.hpp; sourceTree = SOURCE_ROOT; };
		2A5A0C5E2D5E428EBAA56988 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = doublebarriertype.hpp; path = ql/experimental/barrieroption/doublebarriertype.hpp; sourceTree = SOURCE_ROOT; };
		2A75425B5E8746AEB3C894BD /* /Users/heiner/git/QuantLib/ql/experimental/math/frankcopularng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = frankcopularng.hpp; path = ql/experimental/math/frankcopularng.hpp; sourceTree = SOURCE_ROOT; };
		2A765C0087854B41B28D0A0D /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jpyliborswap.cpp; path = ql/indexes/swap/jpyliborswap.cpp; sourceTree = SOURCE_ROOT; };
		2A775885FD0E44EA890C794B /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonmodel.cpp; path = "test-suite/hestonmodel.cpp"; sourceTree = SOURCE_ROOT; };
		2AA2FFE9612341359C2A51EA /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = southafrica.hpp; path = ql/time/calendars/southafrica.hpp; sourceTree = SOURCE_ROOT; };
		2AB5359DCEC04D65A930C71F /* /Users/heiner/git/QuantLib/ql/cashflows/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/cashflows/all.hpp; sourceTree = SOURCE_ROOT; };
		2AE13769D4F540BBAA6FEAC8 /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jpyliborswap.cpp; path = ql/indexes/swap/jpyliborswap.cpp; sourceTree = SOURCE_ROOT; };
		2AF354BB00BD488DAB66C467 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		2AF5CC0002AC4553AC220633 /* /Users/heiner/git/QuantLib/ql/models/parameter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = parameter.hpp; path = ql/models/parameter.hpp; sourceTree = SOURCE_ROOT; };
		2AF65ACE48114F80B41EED0B /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = chfliborswap.cpp; path = ql/indexes/swap/chfliborswap.cpp; sourceTree = SOURCE_ROOT; };
		2B00B4D927AD4694A821B855 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbermudanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdbermudanengine.hpp; path = ql/pricingengines/vanilla/fdbermudanengine.hpp; sourceTree = SOURCE_ROOT; };
		2B1EC6567163437988279F37 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = barriertype.hpp; path = ql/instruments/barriertype.hpp; sourceTree = SOURCE_ROOT; };
		2B2D2B1EC4B141258677E553 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = alphaformconcrete.cpp; path = ql/models/marketmodels/models/alphaformconcrete.cpp; sourceTree = SOURCE_ROOT; };
		2B41C9E032714B64959295C0 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = calendar.cpp; path = ql/time/calendar.cpp; sourceTree = SOURCE_ROOT; };
		2B482D48F99B44D5A759DF52 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcapfloorengine.cpp; path = ql/pricingengines/capfloor/analyticcapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		2B542FB132FF47558E7D9DD7 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/binomialconvertibleengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialconvertibleengine.hpp; path = ql/experimental/convertiblebonds/binomialconvertibleengine.hpp; sourceTree = SOURCE_ROOT; };
		2B631FC5321749549BEB5742 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spherecylinder.hpp; path = ql/math/optimization/spherecylinder.hpp; sourceTree = SOURCE_ROOT; };
		2B72E60B070C42D3846C589D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onestepforwards.hpp; path = ql/models/marketmodels/products/onestep/onestepforwards.hpp; sourceTree = SOURCE_ROOT; };
		2B78A129179C4AC5B7C84DA7 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcapfloor.hpp; path = ql/instruments/inflationcapfloor.hpp; sourceTree = SOURCE_ROOT; };
		2B7B943E4E4E44DB9E9E7664 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmquantohelper.cpp; path = ql/methods/finitedifferences/utilities/fdmquantohelper.cpp; sourceTree = SOURCE_ROOT; };
		2B993FF48EF04DF08687D1AA /* /Users/heiner/git/QuantLib/test-suite/cdsoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cdsoption.hpp; path = "test-suite/cdsoption.hpp"; sourceTree = SOURCE_ROOT; };
		2BAAC6B0FB2C4C0088D2D82B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm2dblackscholessolver.cpp; path = ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp; sourceTree = SOURCE_ROOT; };
		2BB7824C884D4E66A05733DA /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmexpcorrmodel.hpp; path = ql/legacy/libormarketmodels/lmexpcorrmodel.hpp; sourceTree = SOURCE_ROOT; };
		2BC21EFE9AF74D96A03697BE /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = euriborswap.cpp; path = ql/indexes/swap/euriborswap.cpp; sourceTree = SOURCE_ROOT; };
		2BC724D9E16847629A1D4F56 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stepcondition.hpp; path = ql/methods/finitedifferences/stepcondition.hpp; sourceTree = SOURCE_ROOT; };
		2BDA717EA9184F459AF59B14 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = volatilityinterpolationspecifierabcd.cpp; path = ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp; sourceTree = SOURCE_ROOT; };
		2BDBC7E035444FE18C152B06 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitalcoupon.cpp; path = ql/cashflows/digitalcoupon.cpp; sourceTree = SOURCE_ROOT; };
		2BF78E76A38C45C99E446A39 /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedasset.cpp; path = ql/discretizedasset.cpp; sourceTree = SOURCE_ROOT; };
		2C0630617C7D4C31892F9C16 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = secondderivativeop.cpp; path = ql/methods/finitedifferences/operators/secondderivativeop.cpp; sourceTree = SOURCE_ROOT; };
		2C18E01C93C94F019F60C760 /* /Users/heiner/git/QuantLib/test-suite/markovfunctional.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = markovfunctional.hpp; path = "test-suite/markovfunctional.hpp"; sourceTree = SOURCE_ROOT; };
		2C3A470DEFB247C3B9EA07B6 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatlinearinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = backwardflatlinearinterpolation.hpp; path = ql/math/interpolations/backwardflatlinearinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		2C47CF0AE49B4E669F9FA173 /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eurodollarfuturesquote.cpp; path = ql/quotes/eurodollarfuturesquote.cpp; sourceTree = SOURCE_ROOT; };
		2C4F4A202939469B90607B2E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepnothing.cpp; path = ql/models/marketmodels/products/multistep/multistepnothing.cpp; sourceTree = SOURCE_ROOT; };
		2C5D567B54C84E67A2B44C11 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yoyoptionlethelpers.cpp; path = ql/experimental/inflation/yoyoptionlethelpers.cpp; sourceTree = SOURCE_ROOT; };
		2C5DC17ACCBD4E0CA8BAA21E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestongreensfct.hpp; path = ql/experimental/finitedifferences/fdmhestongreensfct.hpp; sourceTree = SOURCE_ROOT; };
		2C64FB1EAACB444AAB24106A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/trbdf2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = trbdf2.hpp; path = ql/methods/finitedifferences/trbdf2.hpp; sourceTree = SOURCE_ROOT; };
		2C6D8E2E69D945F4983511A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductcaplet.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp; sourceTree = SOURCE_ROOT; };
		2C949D9E86244E26B3BEE639 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = americanpayoffatexpiry.cpp; path = ql/pricingengines/americanpayoffatexpiry.cpp; sourceTree = SOURCE_ROOT; };
		2CA31CD1BE1644D48A351AB3 /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = claytoncopula.cpp; path = ql/math/copulas/claytoncopula.cpp; sourceTree = SOURCE_ROOT; };
		2CAB410FBFEF43FEB0A34AA6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spreadedhazardratecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadedhazardratecurve.hpp; path = ql/experimental/credit/spreadedhazardratecurve.hpp; sourceTree = SOURCE_ROOT; };
		2CB0011778AF47C8AC4E7236 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flatsmilesection.hpp; path = ql/termstructures/volatility/flatsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		2CB1979224AB43BB9A15440E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytich1hwengine.cpp; path = ql/pricingengines/vanilla/analytich1hwengine.cpp; sourceTree = SOURCE_ROOT; };
		2CB89884CE5647CDBBB5C41B /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cashflowvectors.cpp; path = ql/cashflows/cashflowvectors.cpp; sourceTree = SOURCE_ROOT; };
		2CC129C24C8C4379B83B4605 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedconvertible.cpp; path = ql/experimental/convertiblebonds/discretizedconvertible.cpp; sourceTree = SOURCE_ROOT; };
		2CC39F89AD7E4131B977F3B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedvanillaoption.cpp; path = ql/pricingengines/vanilla/discretizedvanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		2CD949F0F0E640C190A363DC /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extouwithjumpsprocess.cpp; path = ql/experimental/processes/extouwithjumpsprocess.cpp; sourceTree = SOURCE_ROOT; };
		2CE567919C5648D7B5B4000D /* /Users/heiner/git/QuantLib/test-suite/cliquetoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cliquetoption.cpp; path = "test-suite/cliquetoption.cpp"; sourceTree = SOURCE_ROOT; };
		2CEBB858E5DD414EB77CFE06 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditysettings.cpp; path = ql/experimental/commodities/commoditysettings.cpp; sourceTree = SOURCE_ROOT; };
		2CECD4ED9BF24260876A2B88 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantoforwardvanillaoption.cpp; path = ql/instruments/quantoforwardvanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		2D1465D3E40B43DFAD567B67 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmconstwrappervolmodel.hpp; path = ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp; sourceTree = SOURCE_ROOT; };
		2D19CBC528E649899412625E /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = garch.cpp; path = ql/models/volatility/garch.cpp; sourceTree = SOURCE_ROOT; };
		2D279C45ECA54996BD36A80D /* /Users/heiner/git/QuantLib/ql/experimental/credit/inhomogeneouspooldef.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inhomogeneouspooldef.hpp; path = ql/experimental/credit/inhomogeneouspooldef.hpp; sourceTree = SOURCE_ROOT; };
		2D3B8D2A79D34591BE4BBCD9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmklugeextouop.cpp; path = ql/experimental/finitedifferences/fdmklugeextouop.cpp; sourceTree = SOURCE_ROOT; };
		2D4146F034C840F884307B79 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = varianceswap.hpp; path = ql/instruments/varianceswap.hpp; sourceTree = SOURCE_ROOT; };
		2D4D849160D74F6AA216BC36 /* /Users/heiner/git/QuantLib/test-suite/exchangerate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exchangerate.cpp; path = "test-suite/exchangerate.cpp"; sourceTree = SOURCE_ROOT; };
		2D66929F0BE04DECB6DDD604 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/bond/all.hpp; sourceTree = SOURCE_ROOT; };
		2D70FBB3C9A540DFB5BC398D /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathpricer.hpp; path = ql/methods/montecarlo/pathpricer.hpp; sourceTree = SOURCE_ROOT; };
		2D77C9714F814494976091BA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = secondderivativeop.hpp; path = ql/methods/finitedifferences/operators/secondderivativeop.hpp; sourceTree = SOURCE_ROOT; };
		2D8C1D6AA7F84B12B8A93031 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vanillaswap.cpp; path = ql/instruments/vanillaswap.cpp; sourceTree = SOURCE_ROOT; };
		2D98BCF330DD4D73A6AF708C /* /Users/heiner/git/QuantLib/test-suite/fastfouriertransform.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fastfouriertransform.hpp; path = "test-suite/fastfouriertransform.hpp"; sourceTree = SOURCE_ROOT; };
		2DA30B9775EE43E5ACC678D4 /* /Users/heiner/git/QuantLib/ql/settings.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = settings.cpp; path = ql/settings.cpp; sourceTree = SOURCE_ROOT; };
		2DBD74D064B3475F920B549E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletcoterminalswaptioncalibration.hpp; path = ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp; sourceTree = SOURCE_ROOT; };
		2DCA98889C1047038D7DF578 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lossdistribution.cpp; path = ql/experimental/credit/lossdistribution.cpp; sourceTree = SOURCE_ROOT; };
		2DD3A078E433410C9E526AD2 /* /Users/heiner/git/QuantLib/ql/exercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exercise.hpp; path = ql/exercise.hpp; sourceTree = SOURCE_ROOT; };
		2DD6B6F8B4B743ECB743F7D9 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerospreadedtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerospreadedtermstructure.hpp; path = ql/termstructures/yield/zerospreadedtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		2DDF18693D1249C7B9094312 /* /Users/heiner/git/QuantLib/ql/time/timeunit.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timeunit.hpp; path = ql/time/timeunit.hpp; sourceTree = SOURCE_ROOT; };
		2DDFFB6488BA4A3C841F36A3 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = polynomialmathfunction.cpp; path = ql/math/polynomialmathfunction.cpp; sourceTree = SOURCE_ROOT; };
		2DE966CC47E94DACAEB679F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestonrebateengine.hpp; path = ql/pricingengines/barrier/fdhestonrebateengine.hpp; sourceTree = SOURCE_ROOT; };
		2DF7ABA9933A4C60BB5AF453 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = twoassetcorrelationoption.cpp; path = ql/experimental/exoticoptions/twoassetcorrelationoption.cpp; sourceTree = SOURCE_ROOT; };
		2E017730D8FC434C8BDD62BB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = strippedoptionletadapter.hpp; path = ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp; sourceTree = SOURCE_ROOT; };
		2E32A8C06DB94A9F8BE67CFC /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eurodollarfuturesquote.hpp; path = ql/quotes/eurodollarfuturesquote.hpp; sourceTree = SOURCE_ROOT; };
		2E38D60664AD437F9602C9E6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/spreadoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadoption.hpp; path = ql/experimental/exoticoptions/spreadoption.hpp; sourceTree = SOURCE_ROOT; };
		2E4399ABE6F4493F80C75307 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcdcalibration.cpp; path = ql/termstructures/volatility/abcdcalibration.cpp; sourceTree = SOURCE_ROOT; };
		2E506FB19FFD4E53A60E51CF /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = treecapfloorengine.cpp; path = ql/pricingengines/capfloor/treecapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		2E52F2A203D04ED7BD8A05EB /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = frankcopula.hpp; path = ql/math/copulas/frankcopula.hpp; sourceTree = SOURCE_ROOT; };
		2E5DD76D4C334BE4B715CB3B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhullwhiteswaptionengine.hpp; path = ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		2E77C6DF58C54E3B8E716E5E /* /Users/heiner/git/QuantLib/ql/experimental/math/frankcopularng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = frankcopularng.hpp; path = ql/experimental/math/frankcopularng.hpp; sourceTree = SOURCE_ROOT; };
		2E7DC188EF5741DAB0FEFD07 /* /Users/heiner/git/QuantLib/test-suite/tracing.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tracing.cpp; path = "test-suite/tracing.cpp"; sourceTree = SOURCE_ROOT; };
		2E8534832DCD416DBCCF7660 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = atmadjustedsmilesection.hpp; path = ql/termstructures/volatility/atmadjustedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		2E876584A5A745F1AD1F086C /* /Users/heiner/git/QuantLib/ql/math/interpolations/flatextrapolation2d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flatextrapolation2d.hpp; path = ql/math/interpolations/flatextrapolation2d.hpp; sourceTree = SOURCE_ROOT; };
		2EA07D33AB9543EEB8B183F1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = svismilesection.cpp; path = ql/experimental/volatility/svismilesection.cpp; sourceTree = SOURCE_ROOT; };
		2EAB42F71E6B4945B455B25D /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = normalclvmodel.cpp; path = ql/experimental/models/normalclvmodel.cpp; sourceTree = SOURCE_ROOT; };
		2EAD7CED33FE43A6841A81C9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmextoujumpop.hpp; path = ql/experimental/finitedifferences/fdmextoujumpop.hpp; sourceTree = SOURCE_ROOT; };
		2EC1D0E2A2FD49169C7B96CB /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = squarerootprocess.hpp; path = ql/processes/squarerootprocess.hpp; sourceTree = SOURCE_ROOT; };
		2EC31C91FD6941B8BDD80C62 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdblackscholesbarrierengine.hpp; path = ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		2EE65F3899484069A84F4EAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/pathwisegreeks/all.hpp; sourceTree = SOURCE_ROOT; };
		2EEF8A9AE2584B009EDEC04F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = latticersg.cpp; path = ql/math/randomnumbers/latticersg.cpp; sourceTree = SOURCE_ROOT; };
		2EF664CCB9EE40118BF008F5 /* /Users/heiner/git/QuantLib/ql/time/period.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = period.cpp; path = ql/time/period.cpp; sourceTree = SOURCE_ROOT; };
		2EF6F3813DB74774B094D4D3 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = proxyibor.hpp; path = ql/experimental/coupons/proxyibor.hpp; sourceTree = SOURCE_ROOT; };
		2F0DC4312BE44C00B52162CB /* /Users/heiner/git/QuantLib/ql/experimental/math/polarstudenttrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = polarstudenttrng.hpp; path = ql/experimental/math/polarstudenttrng.hpp; sourceTree = SOURCE_ROOT; };
		2F18A92A41EA487681013380 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholesmultistrikemesher.cpp; path = ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp; sourceTree = SOURCE_ROOT; };
		2F48AF0CF830432EAA1C3E91 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/finitedifferencemodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = finitedifferencemodel.hpp; path = ql/methods/finitedifferences/finitedifferencemodel.hpp; sourceTree = SOURCE_ROOT; };
		2F5F52928DDF49A3B3781D7E /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/basket/all.hpp; sourceTree = SOURCE_ROOT; };
		2F749E89BBE74D8D860922E4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerospreadedtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerospreadedtermstructure.hpp; path = ql/termstructures/yield/zerospreadedtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		2F7D9BE9B66C4D5E97706E58 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepcoinitialswaps.hpp; path = ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp; sourceTree = SOURCE_ROOT; };
		2F8F7B972C9743E8AF1ECEF1 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dswaptionengine.cpp; path = ql/pricingengines/swaption/gaussian1dswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		2F9361180CE7496F9DDD2C89 /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = rounding.cpp; path = ql/math/rounding.cpp; sourceTree = SOURCE_ROOT; };
		2FA74099041C4BF2887352AF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlinearopiterator.hpp; path = ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp; sourceTree = SOURCE_ROOT; };
		2FA8804D7E834C57B96A0E29 /* /Users/heiner/git/QuantLib/ql/math/interpolations/convexmonotoneinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = convexmonotoneinterpolation.hpp; path = ql/math/interpolations/convexmonotoneinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		2FA8F747779649409865E5B8 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = merton76process.hpp; path = ql/processes/merton76process.hpp; sourceTree = SOURCE_ROOT; };
		2FB1F7BC14B14A00AD18DFFF /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = doublebarriertype.cpp; path = ql/experimental/barrieroption/doublebarriertype.cpp; sourceTree = SOURCE_ROOT; };
		2FBDAD82617B41D480840D40 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = latticerules.cpp; path = ql/math/randomnumbers/latticerules.cpp; sourceTree = SOURCE_ROOT; };
		2FC847CAEA83476188B1A1F7 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = amortizingfixedratebond.hpp; path = ql/experimental/amortizingbonds/amortizingfixedratebond.hpp; sourceTree = SOURCE_ROOT; };
		2FC8CFBCC82041AEB209457A /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = coupon.hpp; path = ql/cashflows/coupon.hpp; sourceTree = SOURCE_ROOT; };
		2FED7A83C26A480CBA8E37F3 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackcallablebondengine.cpp; path = ql/experimental/callablebonds/blackcallablebondengine.cpp; sourceTree = SOURCE_ROOT; };
		2FEF6F1835C6406BB065EBE8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantcapfloortermvol.hpp; path = ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp; sourceTree = SOURCE_ROOT; };
		2FF36C51D3EB49EB9EE8D5C7 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitalcoupon.cpp; path = ql/cashflows/digitalcoupon.cpp; sourceTree = SOURCE_ROOT; };
		2FF62E70E9204698BDD34AFD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = parametricexerciseadapter.cpp; path = ql/models/marketmodels/callability/parametricexerciseadapter.cpp; sourceTree = SOURCE_ROOT; };
		2FFED6DF933940E0982996E7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kirkspreadoptionengine.hpp; path = ql/experimental/exoticoptions/kirkspreadoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		30005A0A32734CCB9C341C7A /* /Users/heiner/git/QuantLib/test-suite/inflationcapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcapfloor.cpp; path = "test-suite/inflationcapfloor.cpp"; sourceTree = SOURCE_ROOT; };
		30081C57F5704809A4A9EAED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = expliciteulerscheme.hpp; path = ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp; sourceTree = SOURCE_ROOT; };
		3013F0F710A04E90B3A2F052 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = turkey.hpp; path = ql/time/calendars/turkey.hpp; sourceTree = SOURCE_ROOT; };
		301D4FE2F9AA40D8B5DB7130 /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = canada.cpp; path = ql/time/calendars/canada.cpp; sourceTree = SOURCE_ROOT; };
		301F4821F40941E3933A7D79 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/onefactoroperator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactoroperator.hpp; path = ql/methods/finitedifferences/onefactoroperator.hpp; sourceTree = SOURCE_ROOT; };
		302FF43FFA804F6CAA46AF9C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateiballand.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp; sourceTree = SOURCE_ROOT; };
		3051349920D54EF39B49DC09 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonslvmcmodel.hpp; path = ql/experimental/models/hestonslvmcmodel.hpp; sourceTree = SOURCE_ROOT; };
		305FE06F4F8644D5942B76D6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonsolver.cpp; path = ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp; sourceTree = SOURCE_ROOT; };
		30634B024CB84B18A4A9A682 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdornsteinuhlenbeckvanillaengine.hpp; path = ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		3065AC836D134B8C9C9DEC52 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholesop.hpp; path = ql/methods/finitedifferences/operators/fdmblackscholesop.hpp; sourceTree = SOURCE_ROOT; };
		30694997B8584B10A0826275 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = greeks.hpp; path = ql/pricingengines/greeks.hpp; sourceTree = SOURCE_ROOT; };
		306C694AB733471EAC699706 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticdoublebarrierbinaryengine.cpp; path = ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp; sourceTree = SOURCE_ROOT; };
		30837CF15FEC46B386E3B0DD /* /Users/heiner/git/QuantLib/ql/event.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = event.hpp; path = ql/event.hpp; sourceTree = SOURCE_ROOT; };
		30842CBA6EC0495BADF9BA3F /* /Users/heiner/git/QuantLib/ql/time/imm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = imm.hpp; path = ql/time/imm.hpp; sourceTree = SOURCE_ROOT; };
		30B07F96A6FF411D838643E4 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralntdengine.cpp; path = ql/experimental/credit/integralntdengine.cpp; sourceTree = SOURCE_ROOT; };
		30B7C88776F84AAEB4DC98F0 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fftvanillaengine.cpp; path = ql/experimental/variancegamma/fftvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		30C03CA191C8450A98E8C0D6 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussiancopulapolicy.cpp; path = ql/experimental/math/gaussiancopulapolicy.cpp; sourceTree = SOURCE_ROOT; };
		30C7D6E64FE744A5BF8399D2 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdblackscholesrebateengine.cpp; path = ql/pricingengines/barrier/fdblackscholesrebateengine.cpp; sourceTree = SOURCE_ROOT; };
		30EE80BB552D40E3B4BC7C8C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmaffinemodeltermstructure.hpp; path = ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		310472F71F20484BA6D61570 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = margrabeoption.hpp; path = ql/experimental/exoticoptions/margrabeoption.hpp; sourceTree = SOURCE_ROOT; };
		311D71C6FE4845DF84B5C627 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytic_discr_geom_av_price.hpp; path = ql/pricingengines/asian/analytic_discr_geom_av_price.hpp; sourceTree = SOURCE_ROOT; };
		311EDB16D5F54FF3AF1C9A72 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = actual365fixed.cpp; path = ql/time/daycounters/actual365fixed.cpp; sourceTree = SOURCE_ROOT; };
		3134812E73EF48BAB071AD9C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = expliciteulerscheme.cpp; path = ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp; sourceTree = SOURCE_ROOT; };
		3135B753C40F436290575C42 /* /Users/heiner/git/QuantLib/test-suite/twoassetcorrelationoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twoassetcorrelationoption.hpp; path = "test-suite/twoassetcorrelationoption.hpp"; sourceTree = SOURCE_ROOT; };
		313C78F6E718484CB8387A94 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ratepseudorootjacobian.cpp; path = ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp; sourceTree = SOURCE_ROOT; };
		31430263931F44309BE91034 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = brownianbridge.hpp; path = ql/methods/montecarlo/brownianbridge.hpp; sourceTree = SOURCE_ROOT; };
		317E7C15525542BAABC2613A /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = arithmeticaverageois.hpp; path = ql/experimental/averageois/arithmeticaverageois.hpp; sourceTree = SOURCE_ROOT; };
		31860A377AFE4B24955525C7 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantocouponpricer.hpp; path = ql/experimental/coupons/quantocouponpricer.hpp; sourceTree = SOURCE_ROOT; };
		318664DD40EC4DB4B67467C0 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = perturbativebarrieroptionengine.cpp; path = ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp; sourceTree = SOURCE_ROOT; };
		318A5175B91C47779AD83751 /* /Users/heiner/git/QuantLib/ql/option.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = option.hpp; path = ql/option.hpp; sourceTree = SOURCE_ROOT; };
		31925C0F5E1C4886BAC78322 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = strippedcapflooredcoupon.hpp; path = ql/experimental/coupons/strippedcapflooredcoupon.hpp; sourceTree = SOURCE_ROOT; };
		319278978150425E8E1C2DAF /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/montecarlo/all.hpp; sourceTree = SOURCE_ROOT; };
		319C4FC84D344AD4976745C4 /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bmaindex.hpp; path = ql/indexes/bmaindex.hpp; sourceTree = SOURCE_ROOT; };
		31A5F82FDA0F4A7391BA38AB /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = richardsonextrapolation.hpp; path = ql/math/richardsonextrapolation.hpp; sourceTree = SOURCE_ROOT; };
		31E8F6FF4B8E43F9BD9FB233 /* /Users/heiner/git/QuantLib/test-suite/operators.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = operators.cpp; path = "test-suite/operators.cpp"; sourceTree = SOURCE_ROOT; };
		31EDD0A102DF45BAA27676CC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitofmeasureconversion.hpp; path = ql/experimental/commodities/unitofmeasureconversion.hpp; sourceTree = SOURCE_ROOT; };
		31F05562E2F649A2B10A1447 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = treeswapengine.hpp; path = ql/pricingengines/swap/treeswapengine.hpp; sourceTree = SOURCE_ROOT; };
		31F6DCE43C73415096DC517E /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dataparsers.cpp; path = ql/utilities/dataparsers.cpp; sourceTree = SOURCE_ROOT; };
		31F99ECC18464B1393CFE054 /* /Users/heiner/git/QuantLib/test-suite/main.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = main.cpp; path = "test-suite/main.cpp"; sourceTree = SOURCE_ROOT; };
		31FB1E06604F499885CA4017 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eonia.hpp; path = ql/indexes/ibor/eonia.hpp; sourceTree = SOURCE_ROOT; };
		31FFBB9472BA4E4F806C644B /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hullwhiteprocess.cpp; path = ql/processes/hullwhiteprocess.cpp; sourceTree = SOURCE_ROOT; };
		321A58ACB9434346B3B9E0A8 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lecuyeruniformrng.hpp; path = ql/math/randomnumbers/lecuyeruniformrng.hpp; sourceTree = SOURCE_ROOT; };
		321FD7A254FF4C15A58895D7 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/discountcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discountcurve.hpp; path = ql/termstructures/yield/discountcurve.hpp; sourceTree = SOURCE_ROOT; };
		3225080C851E4E409FF1E7C3 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fireflyalgorithm.hpp; path = ql/experimental/math/fireflyalgorithm.hpp; sourceTree = SOURCE_ROOT; };
		32273276621F485DABD12671 /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marshallolkincopula.cpp; path = ql/math/copulas/marshallolkincopula.cpp; sourceTree = SOURCE_ROOT; };
		323543943FFD4AED989914E2 /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = modifiedbessel.cpp; path = ql/math/modifiedbessel.cpp; sourceTree = SOURCE_ROOT; };
		3241491B824B400B99A1D69C /* /Users/heiner/git/QuantLib/ql/math/interpolations/extrapolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extrapolation.hpp; path = ql/math/interpolations/extrapolation.hpp; sourceTree = SOURCE_ROOT; };
		324A8496505F463EB070BCD0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nothingexercisevalue.cpp; path = ql/models/marketmodels/callability/nothingexercisevalue.cpp; sourceTree = SOURCE_ROOT; };
		3251B5351A4641D99838E521 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = convolvedstudentt.hpp; path = ql/experimental/math/convolvedstudentt.hpp; sourceTree = SOURCE_ROOT; };
		32562E7D91E140959EF785D4 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/solvers1d/all.hpp; sourceTree = SOURCE_ROOT; };
		3266C17743724B93A359855D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepcoinitialswaps.cpp; path = ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp; sourceTree = SOURCE_ROOT; };
		32691107CF29469C961F7A0F /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hybridhestonhullwhiteprocess.cpp; path = ql/processes/hybridhestonhullwhiteprocess.cpp; sourceTree = SOURCE_ROOT; };
		327320B9D0F946E88722E820 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcapfloorengines.cpp; path = ql/pricingengines/inflation/inflationcapfloorengines.cpp; sourceTree = SOURCE_ROOT; };
		327BD098D98548E7988819A1 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytic_discr_geom_av_strike.hpp; path = ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp; sourceTree = SOURCE_ROOT; };
		327C595331AF4549BB9270CA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdvanillaengine.cpp; path = ql/pricingengines/vanilla/fdvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		328C46B6F7A943179CFA6CE7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volcube.hpp; path = ql/experimental/volatility/volcube.hpp; sourceTree = SOURCE_ROOT; };
		3293303391D0467C9F0CA1F5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lattice.hpp; path = ql/methods/lattices/lattice.hpp; sourceTree = SOURCE_ROOT; };
		329567C383DD4156B3F4BF22 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditysettings.hpp; path = ql/experimental/commodities/commoditysettings.hpp; sourceTree = SOURCE_ROOT; };
		32A12C15A68145BAA3818E3D /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = subperiodcoupons.hpp; path = ql/experimental/coupons/subperiodcoupons.hpp; sourceTree = SOURCE_ROOT; };
		32A7F0EBA573450382FCC9B9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodelvolprocess.cpp; path = ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp; sourceTree = SOURCE_ROOT; };
		32B880E80DE646D6A849DE12 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multisteppathwisewrapper.hpp; path = ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp; sourceTree = SOURCE_ROOT; };
		32C25FA8A66F4AB492B55D13 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/browniangenerators/all.hpp; sourceTree = SOURCE_ROOT; };
		32D9F5D2A740485FA56E09F3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localvolsurface.hpp; path = ql/termstructures/volatility/equityfx/localvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		32E518B6AD5D4A92B2CAA9D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestonvanillaengine.hpp; path = ql/pricingengines/vanilla/fdhestonvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		32E7705A5BBF497EA52D8B2B /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stochasticprocessarray.hpp; path = ql/processes/stochasticprocessarray.hpp; sourceTree = SOURCE_ROOT; };
		331E5E37FBF149398BF873E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gridmodellocalvolsurface.cpp; path = ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		3328037AB0B444B68D635EAB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticeuropeanengine.hpp; path = ql/pricingengines/vanilla/analyticeuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		333878B91C0B4A33BB442A17 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/boxmullergaussianrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = boxmullergaussianrng.hpp; path = ql/math/randomnumbers/boxmullergaussianrng.hpp; sourceTree = SOURCE_ROOT; };
		333899114FD54848922D9826 /* /Users/heiner/git/QuantLib/ql/math/statistics/convergencestatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = convergencestatistics.hpp; path = ql/math/statistics/convergencestatistics.hpp; sourceTree = SOURCE_ROOT; };
		33577D7A56C04BF78065BB68 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lastfixingquote.hpp; path = ql/quotes/lastfixingquote.hpp; sourceTree = SOURCE_ROOT; };
		335D279F8B874E43A7E2A723 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmswaptionengine.cpp; path = ql/legacy/libormarketmodels/lfmswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		336ECAFBD42A42839986F998 /* /Users/heiner/git/QuantLib/ql/math/ode/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/ode/all.hpp; sourceTree = SOURCE_ROOT; };
		33985D914E8B455DB6074FD5 /* /Users/heiner/git/QuantLib/test-suite/hestonslvmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonslvmodel.cpp; path = "test-suite/hestonslvmodel.cpp"; sourceTree = SOURCE_ROOT; };
		33C4A1B053D641B49816825F /* /Users/heiner/git/QuantLib/Examples/LatentModel/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/LatentModel/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		33C7E0BE7E294CD6BD078EEE /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = faurersg.cpp; path = ql/math/randomnumbers/faurersg.cpp; sourceTree = SOURCE_ROOT; };
		33E208C8B1234D3E9ABCBF57 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpiswap.hpp; path = ql/instruments/cpiswap.hpp; sourceTree = SOURCE_ROOT; };
		33E332F3045143AEBE6D9069 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energyswap.cpp; path = ql/experimental/commodities/energyswap.cpp; sourceTree = SOURCE_ROOT; };
		33E6DC9520FA4C70A159BD40 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmg2op.cpp; path = ql/methods/finitedifferences/operators/fdmg2op.cpp; sourceTree = SOURCE_ROOT; };
		33E806DDE24142ADBEDC5891 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardperformanceengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardperformanceengine.hpp; path = ql/pricingengines/forward/forwardperformanceengine.hpp; sourceTree = SOURCE_ROOT; };
		3402FC31560A4B24A11898D0 /* /Users/heiner/git/QuantLib/test-suite/calendars.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = calendars.cpp; path = "test-suite/calendars.cpp"; sourceTree = SOURCE_ROOT; };
		340A9337212F40FF9087AB03 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedyoyinflationcurve.hpp; path = ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp; sourceTree = SOURCE_ROOT; };
		341C37D76FB14D41803CB2DE /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hungary.cpp; path = ql/time/calendars/hungary.cpp; sourceTree = SOURCE_ROOT; };
		345F3383B8F2477C8D2B26F2 /* /Users/heiner/git/QuantLib/test-suite/twoassetbarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = twoassetbarrieroption.cpp; path = "test-suite/twoassetbarrieroption.cpp"; sourceTree = SOURCE_ROOT; };
		34636571D6F24192A5D7C74D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmswapcurvestate.hpp; path = ql/models/marketmodels/curvestates/cmswapcurvestate.hpp; sourceTree = SOURCE_ROOT; };
		3463DE9023954FC1A93D8E9A /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitedstates.cpp; path = ql/time/calendars/unitedstates.cpp; sourceTree = SOURCE_ROOT; };
		346ACAC642EE44EAA75576A8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaultevent.cpp; path = ql/experimental/credit/defaultevent.cpp; sourceTree = SOURCE_ROOT; };
		34792596485E4AC0B69940E0 /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = chisquaredistribution.hpp; path = ql/math/distributions/chisquaredistribution.hpp; sourceTree = SOURCE_ROOT; };
		3495F0662A744AAB9911208C /* /Users/heiner/git/QuantLib/ql/math/integrals/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/integrals/all.hpp; sourceTree = SOURCE_ROOT; };
		34A1CE9239B54918AFD926A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/driftcomputation/all.hpp; sourceTree = SOURCE_ROOT; };
		34B2C1310A95402193643750 /* /Users/heiner/git/QuantLib/test-suite/gjrgarchmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gjrgarchmodel.hpp; path = "test-suite/gjrgarchmodel.hpp"; sourceTree = SOURCE_ROOT; };
		34BE0ACA75A540C591447FDA /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commodityindex.hpp; path = ql/experimental/commodities/commodityindex.hpp; sourceTree = SOURCE_ROOT; };
		34C3FC0D76794BAD865FAD69 /* /Users/heiner/git/QuantLib/ql/volatilitymodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volatilitymodel.hpp; path = ql/volatilitymodel.hpp; sourceTree = SOURCE_ROOT; };
		34D2EA9E6F264CE2BD0BBF8F /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cdo.hpp; path = ql/experimental/credit/cdo.hpp; sourceTree = SOURCE_ROOT; };
		34E470715B9C4D41A994220C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmvppstepcondition.hpp; path = ql/experimental/finitedifferences/fdmvppstepcondition.hpp; sourceTree = SOURCE_ROOT; };
		34FFA67A7A154B2FB2360AAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmmdriftcalculator.cpp; path = ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp; sourceTree = SOURCE_ROOT; };
		35025D6A7888401CB966E80F /* /Users/heiner/git/QuantLib/ql/time/calendars/target.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = target.hpp; path = ql/time/calendars/target.hpp; sourceTree = SOURCE_ROOT; };
		3506C07DA03241EEA99D6F70 /* /Users/heiner/git/QuantLib/ql/exchangerate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exchangerate.hpp; path = ql/exchangerate.hpp; sourceTree = SOURCE_ROOT; };
		350AC5D4BB55488BA2E56D3D /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basketgeneratingengine.hpp; path = ql/pricingengines/swaption/basketgeneratingengine.hpp; sourceTree = SOURCE_ROOT; };
		3516A60BD4244806AA64E70E /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = normaldistribution.cpp; path = ql/math/distributions/normaldistribution.cpp; sourceTree = SOURCE_ROOT; };
		35260E37B3E54AA9A13713AF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onestepoptionlets.cpp; path = ql/models/marketmodels/products/onestep/onestepoptionlets.cpp; sourceTree = SOURCE_ROOT; };
		3529B286458B4BB6AEC25EB6 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditycurve.cpp; path = ql/experimental/commodities/commoditycurve.cpp; sourceTree = SOURCE_ROOT; };
		354179D9AE664435A43CE66E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonsolver.cpp; path = ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp; sourceTree = SOURCE_ROOT; };
		357667C6493645AD8FFD5FA0 /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitaliborcoupon.cpp; path = ql/cashflows/digitaliborcoupon.cpp; sourceTree = SOURCE_ROOT; };
		35767CE0ADD74950B6DDFC37 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhullwhiteop.cpp; path = ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp; sourceTree = SOURCE_ROOT; };
		35A9DCB4F1F24E3A87D03D61 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = catbond.hpp; path = ql/experimental/catbonds/catbond.hpp; sourceTree = SOURCE_ROOT; };
		35B1E12CFC104B3AA499934E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskneutraldensitycalculator.hpp; path = ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp; sourceTree = SOURCE_ROOT; };
		35B3BC62425944408EBFBDCE /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yoycapfloortermpricesurface.cpp; path = ql/experimental/inflation/yoycapfloortermpricesurface.cpp; sourceTree = SOURCE_ROOT; };
		35C77CF0F68748FD9AE33AFE /* /Users/heiner/git/QuantLib/ql/experimental/credit/inhomogeneouspooldef.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inhomogeneouspooldef.hpp; path = ql/experimental/credit/inhomogeneouspooldef.hpp; sourceTree = SOURCE_ROOT; };
		35D80948C11242578B4848CA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsimpleswingcondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp; sourceTree = SOURCE_ROOT; };
		35E512423B5C4C5989039B3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholesmultistrikemesher.hpp; path = ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp; sourceTree = SOURCE_ROOT; };
		35F4DBE470914F1F9436A55A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = browniangenerator.hpp; path = ql/models/marketmodels/browniangenerator.hpp; sourceTree = SOURCE_ROOT; };
		3600F69AF0D14C44BEDD358F /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskynotional.hpp; path = ql/experimental/catbonds/riskynotional.hpp; sourceTree = SOURCE_ROOT; };
		361A1E2A3E3E4F54BE6E955E /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = calibrationhelper.hpp; path = ql/models/calibrationhelper.hpp; sourceTree = SOURCE_ROOT; };
		361AE52A6EBF4A608607FAB7 /* /Users/heiner/git/QuantLib/Examples/Repo/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/Repo/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		361C067F298D4A4EBEB026F1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/randomnumbers/all.hpp; sourceTree = SOURCE_ROOT; };
		361FE08F8A004B28BF026134 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackcapfloorengine.hpp; path = ql/pricingengines/capfloor/blackcapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		362057D51C46471ABB5581CB /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eurliborswap.cpp; path = ql/indexes/swap/eurliborswap.cpp; sourceTree = SOURCE_ROOT; };
		363B338E15D848929FACBA70 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = projection.cpp; path = ql/math/optimization/projection.cpp; sourceTree = SOURCE_ROOT; };
		36425563143F4D7289299A01 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsimpleprocess1dmesher.cpp; path = ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp; sourceTree = SOURCE_ROOT; };
		365B281EE9564ACB9E98D887 /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = studenttdistribution.hpp; path = ql/math/distributions/studenttdistribution.hpp; sourceTree = SOURCE_ROOT; };
		365F71D336344609A0B790CA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = juquadraticengine.cpp; path = ql/pricingengines/vanilla/juquadraticengine.cpp; sourceTree = SOURCE_ROOT; };
		366108E302554080846CE9C9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eonia.hpp; path = ql/indexes/ibor/eonia.hpp; sourceTree = SOURCE_ROOT; };
		36623341F68F4F74A77CBEA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cashrebate.hpp; path = ql/models/marketmodels/products/multistep/cashrebate.hpp; sourceTree = SOURCE_ROOT; };
		366FAA87CDB74F3D8AA25199 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimplestoragecondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp; sourceTree = SOURCE_ROOT; };
		3682C862424D4B7080FCAA99 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = varianceswap.cpp; path = ql/instruments/varianceswap.cpp; sourceTree = SOURCE_ROOT; };
		3689513D96CF405C91B39C6B /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eurodollarfuturesquote.cpp; path = ql/quotes/eurodollarfuturesquote.cpp; sourceTree = SOURCE_ROOT; };
		368BE6503367463193A000E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = douglasscheme.cpp; path = ql/methods/finitedifferences/schemes/douglasscheme.cpp; sourceTree = SOURCE_ROOT; };
		368F8ACBB302421289E0094E /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = germany.hpp; path = ql/time/calendars/germany.hpp; sourceTree = SOURCE_ROOT; };
		36CFB0770F3640EA984DC536 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = overnightindexedcoupon.cpp; path = ql/cashflows/overnightindexedcoupon.cpp; sourceTree = SOURCE_ROOT; };
		36DDDF80DCB84FC6A3D9D6C7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimplestoragecondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp; sourceTree = SOURCE_ROOT; };
		36F175815CD845ABB3727D3D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gbsmrndcalculator.hpp; path = ql/experimental/finitedifferences/gbsmrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		36F247AFD6544D94AB1FF5B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discountingbondengine.cpp; path = ql/pricingengines/bond/discountingbondengine.cpp; sourceTree = SOURCE_ROOT; };
		36F585D3921742A888B1C0A3 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = incrementalstatistics.hpp; path = ql/math/statistics/incrementalstatistics.hpp; sourceTree = SOURCE_ROOT; };
		37029505F3E74912BBD31D83 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdornsteinuhlenbeckvanillaengine.hpp; path = ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		371D4CCBAAD14C14AD3263C1 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticvariancegammaengine.cpp; path = ql/experimental/variancegamma/analyticvariancegammaengine.cpp; sourceTree = SOURCE_ROOT; };
		37251C76D2864BE9BC6B6B7F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonhullwhiteop.cpp; path = ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp; sourceTree = SOURCE_ROOT; };
		372E09D23E50462CA9A9501B /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaption.cpp; path = ql/instruments/swaption.cpp; sourceTree = SOURCE_ROOT; };
		375F4E73DAE24A0DB23C8BBE /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathpayoff.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathpayoff.hpp; path = ql/experimental/mcbasket/pathpayoff.hpp; sourceTree = SOURCE_ROOT; };
		37731B643F4F455DADF13A50 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/zacpi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zacpi.hpp; path = ql/indexes/inflation/zacpi.hpp; sourceTree = SOURCE_ROOT; };
		377BB54AE5784F5296BABFF8 /* /Users/heiner/git/QuantLib/ql/math/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/all.hpp; sourceTree = SOURCE_ROOT; };
		3793FCC26C784272BE429665 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mc_discr_arith_av_price.hpp; path = ql/pricingengines/asian/mc_discr_arith_av_price.hpp; sourceTree = SOURCE_ROOT; };
		37A003641A0545D5B33F7EF6 /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dividend.cpp; path = ql/cashflows/dividend.cpp; sourceTree = SOURCE_ROOT; };
		37A4C0C18EDC4A03B46AC7D3 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = brownianbridge.cpp; path = ql/methods/montecarlo/brownianbridge.cpp; sourceTree = SOURCE_ROOT; };
		37B24FA84A4A438280BD325A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ratepseudorootjacobian.cpp; path = ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp; sourceTree = SOURCE_ROOT; };
		37D5F558A0A8444CA475B34D /* /Users/heiner/git/QuantLib/test-suite/swingoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swingoption.hpp; path = "test-suite/swingoption.hpp"; sourceTree = SOURCE_ROOT; };
		37F44C1CD88A46D28DF71021 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpiswap.cpp; path = ql/instruments/cpiswap.cpp; sourceTree = SOURCE_ROOT; };
		37F77142CAD2472C9F82F26F /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = kirkengine.cpp; path = ql/pricingengines/basket/kirkengine.cpp; sourceTree = SOURCE_ROOT; };
		380FD96ACB8C4A4998BB598E /* /Users/heiner/git/QuantLib/ql/math/distributions/poissondistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = poissondistribution.hpp; path = ql/math/distributions/poissondistribution.hpp; sourceTree = SOURCE_ROOT; };
		381955D85B6E41FDA848292A /* /Users/heiner/git/QuantLib/ql/experimental/processes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/processes/all.hpp; sourceTree = SOURCE_ROOT; };
		381A0BF4155B43D8B1300644 /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardvanillaoption.cpp; path = ql/instruments/forwardvanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		381B917CD24C4BEA956799F2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsmmdriftcalculator.cpp; path = ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp; sourceTree = SOURCE_ROOT; };
		38256CE2DF054452946EC5F1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = strippedoptionletbase.hpp; path = ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp; sourceTree = SOURCE_ROOT; };
		382A6E18EDE8449693794932 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vanillaswingoption.cpp; path = ql/instruments/vanillaswingoption.cpp; sourceTree = SOURCE_ROOT; };
		383DD6C0466947638D7CFA95 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = projection.cpp; path = ql/math/optimization/projection.cpp; sourceTree = SOURCE_ROOT; };
		384528CC394141AABD3A8DF3 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicoupon.hpp; path = ql/cashflows/cpicoupon.hpp; sourceTree = SOURCE_ROOT; };
		386169C11EB54D1897E0C36C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm2dblackscholessolver.hpp; path = ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp; sourceTree = SOURCE_ROOT; };
		3877D59B393645CB9AAE3DFD /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcapfloor.cpp; path = ql/instruments/inflationcapfloor.cpp; sourceTree = SOURCE_ROOT; };
		389516E2FD0B4F38905E9A81 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewiseconstantvariance.cpp; path = ql/models/marketmodels/models/piecewiseconstantvariance.cpp; sourceTree = SOURCE_ROOT; };
		38A4988BE9F74FDCA068CF2F /* /Users/heiner/git/QuantLib/test-suite/interestrates.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = interestrates.cpp; path = "test-suite/interestrates.cpp"; sourceTree = SOURCE_ROOT; };
		38BC7835565648D8989DD634 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lsmbasissystem.hpp; path = ql/methods/montecarlo/lsmbasissystem.hpp; sourceTree = SOURCE_ROOT; };
		38C4CCDBD8934ED7B064A8CB /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cdor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cdor.hpp; path = ql/indexes/ibor/cdor.hpp; sourceTree = SOURCE_ROOT; };
		38D2F948B1714B9B88CA7933 /* /Users/heiner/git/QuantLib/ql/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = ql/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		38DF819012F3471CB17EBFF9 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = treecallablebondengine.hpp; path = ql/experimental/callablebonds/treecallablebondengine.hpp; sourceTree = SOURCE_ROOT; };
		38E44B6E4B4145DBBD0C4B52 /* /Users/heiner/git/QuantLib/ql/math/distributions/binomialdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialdistribution.hpp; path = ql/math/distributions/binomialdistribution.hpp; sourceTree = SOURCE_ROOT; };
		38ED1512D07044BFAB52FAF2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flathazardrate.hpp; path = ql/termstructures/credit/flathazardrate.hpp; sourceTree = SOURCE_ROOT; };
		38EECF0665D7490F890821A4 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = taiwan.cpp; path = ql/time/calendars/taiwan.cpp; sourceTree = SOURCE_ROOT; };
		38F5C033EC64452C925B67D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/g2swaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = g2swaptionengine.hpp; path = ql/pricingengines/swaption/g2swaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		39381CF1DD6D4491BC8AE297 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionletstripper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyoptionletstripper.hpp; path = ql/experimental/inflation/yoyoptionletstripper.hpp; sourceTree = SOURCE_ROOT; };
		3942F392B7204F1B973C4053 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicapfloorengines.hpp; path = ql/experimental/inflation/cpicapfloorengines.hpp; sourceTree = SOURCE_ROOT; };
		39462BF62D7B468F80B35A3C /* /Users/heiner/git/QuantLib/ql/volatilitymodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volatilitymodel.hpp; path = ql/volatilitymodel.hpp; sourceTree = SOURCE_ROOT; };
		397084DD59DC4AE8A4ABA6AF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonfwdop.cpp; path = ql/experimental/finitedifferences/fdmhestonfwdop.cpp; sourceTree = SOURCE_ROOT; };
		39714402DECF440AA901D88D /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discountingbondengine.hpp; path = ql/pricingengines/bond/discountingbondengine.hpp; sourceTree = SOURCE_ROOT; };
		397C036C2BAA4A61876A3457 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noarbsabrinterpolation.hpp; path = ql/experimental/volatility/noarbsabrinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		39ABBE06D2C8404BAB50AFDD /* /Users/heiner/git/QuantLib/ql/math/generallinearleastsquares.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = generallinearleastsquares.hpp; path = ql/math/generallinearleastsquares.hpp; sourceTree = SOURCE_ROOT; };
		39B641096A9C42C2BEAD20CE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticeuropeanmargrabeengine.hpp; path = ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp; sourceTree = SOURCE_ROOT; };
		39C6DA8CFB854F7392297E3B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsmarketcalibration.hpp; path = ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp; sourceTree = SOURCE_ROOT; };
		39CBF08A44B944F894EB4984 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcperformanceengine.cpp; path = ql/pricingengines/cliquet/mcperformanceengine.cpp; sourceTree = SOURCE_ROOT; };
		39D623A76C60465DBF92B7FE /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitalcmscoupon.hpp; path = ql/cashflows/digitalcmscoupon.hpp; sourceTree = SOURCE_ROOT; };
		39E53CCD15114F0E81D03D08 /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = australia.cpp; path = ql/time/calendars/australia.cpp; sourceTree = SOURCE_ROOT; };
		39EBF0242D6543EB8B9C4850 /* /Users/heiner/git/QuantLib/ql/math/statistics/riskstatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskstatistics.hpp; path = ql/math/statistics/riskstatistics.hpp; sourceTree = SOURCE_ROOT; };
		3A0DA117B7AA475D91099651 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/products/multistep/all.hpp; sourceTree = SOURCE_ROOT; };
		3A1041E2FCC74032BF62DA4A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optionletstripper2.cpp; path = ql/termstructures/volatility/optionlet/optionletstripper2.cpp; sourceTree = SOURCE_ROOT; };
		3A1B557E4E3A426BB5484DFB /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewisezeroinflationcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisezeroinflationcurve.hpp; path = ql/termstructures/inflation/piecewisezeroinflationcurve.hpp; sourceTree = SOURCE_ROOT; };
		3A20C54AF5284B33990E1482 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = atmsmilesection.hpp; path = ql/termstructures/volatility/atmsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		3A30A44E07B147FFACD2EC29 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitofmeasure.hpp; path = ql/experimental/commodities/unitofmeasure.hpp; sourceTree = SOURCE_ROOT; };
		3A5D122085E642AF8A5C990E /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = convertiblebonds.hpp; path = "test-suite/convertiblebonds.hpp"; sourceTree = SOURCE_ROOT; };
		3A666167FC2D408785D840FA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdblackscholesvanillaengine.hpp; path = ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		3A795BDA1EC84BE7802E2BD9 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = oceania.hpp; path = ql/currencies/oceania.hpp; sourceTree = SOURCE_ROOT; };
		3A7BA5711B3C4A7998C9F312 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/multiproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiproduct.hpp; path = ql/models/marketmodels/multiproduct.hpp; sourceTree = SOURCE_ROOT; };
		3A89A171F63A41068EF9A36F /* /Users/heiner/git/QuantLib/ql/math/solver1d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = solver1d.hpp; path = ql/math/solver1d.hpp; sourceTree = SOURCE_ROOT; };
		3A8D48B09CBF4D57B965B0B6 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/shortrate/all.hpp; sourceTree = SOURCE_ROOT; };
		3A8DDF5D2EC947BE9A7B95C9 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nonstandardswap.hpp; path = ql/instruments/nonstandardswap.hpp; sourceTree = SOURCE_ROOT; };
		3AB9A178A43F4CD8840F2E7F /* /Users/heiner/git/QuantLib/test-suite/pathgenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathgenerator.hpp; path = "test-suite/pathgenerator.hpp"; sourceTree = SOURCE_ROOT; };
		3ACB40A9D1904163B85D879D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmdupire1dop.hpp; path = ql/experimental/finitedifferences/fdmdupire1dop.hpp; sourceTree = SOURCE_ROOT; };
		3AD2F95423284449997FE788 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantoptionletvol.hpp; path = ql/termstructures/volatility/optionlet/constantoptionletvol.hpp; sourceTree = SOURCE_ROOT; };
		3AE91B2E7F8542E29EDF390F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsimplestoragecondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp; sourceTree = SOURCE_ROOT; };
		3AEEAE2424A94A9B91962EEE /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = chisquaredistribution.hpp; path = ql/math/distributions/chisquaredistribution.hpp; sourceTree = SOURCE_ROOT; };
		3B0BB55B4E374A96B6CABE8A /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tracing.cpp; path = ql/utilities/tracing.cpp; sourceTree = SOURCE_ROOT; };
		3B1091D647EB46BC84900281 /* /Users/heiner/git/QuantLib/ql/quotes/compositequote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compositequote.hpp; path = ql/quotes/compositequote.hpp; sourceTree = SOURCE_ROOT; };
		3B20F91A32644467A8287F9E /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = arithmeticoisratehelper.hpp; path = ql/experimental/averageois/arithmeticoisratehelper.hpp; sourceTree = SOURCE_ROOT; };
		3B2B8DC6DD134B4093281724 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantovanillaoption.hpp; path = ql/instruments/quantovanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		3B3540969CF84C19BAF1116D /* /Users/heiner/git/QuantLib/ql/math/statistics/gaussianstatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussianstatistics.hpp; path = ql/math/statistics/gaussianstatistics.hpp; sourceTree = SOURCE_ROOT; };
		3B443E1EFBAA49FE97D0327C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticdigitalamericanengine.hpp; path = ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp; sourceTree = SOURCE_ROOT; };
		3B470B7B2DCA4DF0A451A790 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = variancegammamodel.cpp; path = ql/experimental/variancegamma/variancegammamodel.cpp; sourceTree = SOURCE_ROOT; };
		3B722D79DF164E47BA0D7BEC /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardvanillaoption.cpp; path = ql/instruments/forwardvanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		3B766BB500FD411C95F2D63E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestongreensfct.hpp; path = ql/experimental/finitedifferences/fdmhestongreensfct.hpp; sourceTree = SOURCE_ROOT; };
		3B76728258204835AA641669 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytictwoassetbarrierengine.hpp; path = ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		3B7F3B1A30684D17AA90841D /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = modifiedbessel.cpp; path = ql/math/modifiedbessel.cpp; sourceTree = SOURCE_ROOT; };
		3B81A09C8764482EAC487C2B /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = duration.cpp; path = ql/cashflows/duration.cpp; sourceTree = SOURCE_ROOT; };
		3B855AE6C3154037AED35293 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cvaswapengine.cpp; path = ql/pricingengines/swap/cvaswapengine.cpp; sourceTree = SOURCE_ROOT; };
		3B8D03C6BA28450BACDA5562 /* /Users/heiner/git/QuantLib/test-suite/paralleltestrunner.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = paralleltestrunner.hpp; path = "test-suite/paralleltestrunner.hpp"; sourceTree = SOURCE_ROOT; };
		3B8E19C55E4A40648E721544 /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tcopulapolicy.hpp; path = ql/experimental/math/tcopulapolicy.hpp; sourceTree = SOURCE_ROOT; };
		3B9C373CD44C4A17A52FEF05 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralhestonvarianceoptionengine.cpp; path = ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		3BA6436F7CB94F7681B949B1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateeuler.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp; sourceTree = SOURCE_ROOT; };
		3BC156C2A72F4AD199BCB391 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/equityfx/all.hpp; sourceTree = SOURCE_ROOT; };
		3BDFEC1B451A4E07B4F1957B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmlinexpvolmodel.hpp; path = ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp; sourceTree = SOURCE_ROOT; };
		3BEB13C90806481BA7BE076A /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = usdliborswap.cpp; path = ql/indexes/swap/usdliborswap.cpp; sourceTree = SOURCE_ROOT; };
		3BF57C0DDEEC4D2DAD62BE67 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = russia.hpp; path = ql/time/calendars/russia.hpp; sourceTree = SOURCE_ROOT; };
		3BF956232CF240D39B770893 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhullwhitesolver.hpp; path = ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp; sourceTree = SOURCE_ROOT; };
		3BFC425B087848AB8A9ACC83 /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bmaswap.cpp; path = ql/instruments/bmaswap.cpp; sourceTree = SOURCE_ROOT; };
		3C188940BD2E4E90ADF34F18 /* /Users/heiner/git/QuantLib/ql/config.mingw.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = config.mingw.hpp; path = ql/config.mingw.hpp; sourceTree = SOURCE_ROOT; };
		3C2F814670D54BB6B2C86348 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = futuresconvadjustmentquote.cpp; path = ql/quotes/futuresconvadjustmentquote.cpp; sourceTree = SOURCE_ROOT; };
		3C478FA7FCC34CF5BC32A9AD /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmprocess.hpp; path = ql/legacy/libormarketmodels/lfmprocess.hpp; sourceTree = SOURCE_ROOT; };
		3C4AA880C46D4928895FA593 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = voltermstructure.hpp; path = ql/termstructures/voltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		3C530D01838044CE8CCF95B8 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = linesearchbasedmethod.hpp; path = ql/math/optimization/linesearchbasedmethod.hpp; sourceTree = SOURCE_ROOT; };
		3C5698944C404549A7D5D72D /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = projection.hpp; path = ql/math/optimization/projection.hpp; sourceTree = SOURCE_ROOT; };
		3C6D1A21514B40719710A5D2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductcaplet.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp; sourceTree = SOURCE_ROOT; };
		3C717C6BA2FD4013A0CF6FE8 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = amortizingfloatingratebond.hpp; path = ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp; sourceTree = SOURCE_ROOT; };
		3C7F215A8A304DDBBC69FDE2 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = floatfloatswap.hpp; path = ql/instruments/floatfloatswap.hpp; sourceTree = SOURCE_ROOT; };
		3C8BB98FF403459B8ACA4134 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = barriertype.hpp; path = ql/instruments/barriertype.hpp; sourceTree = SOURCE_ROOT; };
		3C9DCE7F63AB432290CADBA0 /* /Users/heiner/git/QuantLib/ql/indexes/swap/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/indexes/swap/all.hpp; sourceTree = SOURCE_ROOT; };
		3CBAAB266D6E402A9E9305EB /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sampledcurve.cpp; path = ql/math/sampledcurve.cpp; sourceTree = SOURCE_ROOT; };
		3CBD39AE46844EBB8C425584 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsspreadcoupon.hpp; path = ql/experimental/coupons/cmsspreadcoupon.hpp; sourceTree = SOURCE_ROOT; };
		3CCD738FA2AA4E0BB5D6D10A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmbackwardsolver.hpp; path = ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp; sourceTree = SOURCE_ROOT; };
		3CEE8B0128914320B3A7CED3 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = italy.cpp; path = ql/time/calendars/italy.cpp; sourceTree = SOURCE_ROOT; };
		3CF37B6654B34B01B4216A2A /* /Users/heiner/git/QuantLib/test-suite/swaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaption.hpp; path = "test-suite/swaption.hpp"; sourceTree = SOURCE_ROOT; };
		3CFFED5A221F4511B1223B79 /* /Users/heiner/git/QuantLib/ql/math/rounding.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rounding.hpp; path = ql/math/rounding.hpp; sourceTree = SOURCE_ROOT; };
		3D32B8FB0B40482ABB8AF6D9 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lineartsrpricer.hpp; path = ql/cashflows/lineartsrpricer.hpp; sourceTree = SOURCE_ROOT; };
		3D4781333FB44D2898B7154B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noarbsabrsmilesection.hpp; path = ql/experimental/volatility/noarbsabrsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		3D555086A9D44CFCAE85C505 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestongreensfct.cpp; path = ql/experimental/finitedifferences/fdmhestongreensfct.cpp; sourceTree = SOURCE_ROOT; };
		3D7EFA5BE4A74ED0A38DEFC2 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = asianoption.hpp; path = ql/instruments/asianoption.hpp; sourceTree = SOURCE_ROOT; };
		3D93723565ED4FF9906D4EA5 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hazardratestructure.cpp; path = ql/termstructures/credit/hazardratestructure.cpp; sourceTree = SOURCE_ROOT; };
		3DA49374890B4A94B92D7A20 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapindex.cpp; path = ql/indexes/swapindex.cpp; sourceTree = SOURCE_ROOT; };
		3DA6C46B93FC44D881D1783C /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = caphelper.hpp; path = ql/models/shortrate/calibrationhelpers/caphelper.hpp; sourceTree = SOURCE_ROOT; };
		3DA8205E575C42FFA3CDC9CC /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = haltonrsg.cpp; path = ql/math/randomnumbers/haltonrsg.cpp; sourceTree = SOURCE_ROOT; };
		3DB8082A875E4B34A21C6728 /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliedvolatility.hpp; path = ql/instruments/impliedvolatility.hpp; sourceTree = SOURCE_ROOT; };
		3DC0859E85784018841164B1 /* /Users/heiner/git/QuantLib/ql/instruments/dividendschedule.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dividendschedule.hpp; path = ql/instruments/dividendschedule.hpp; sourceTree = SOURCE_ROOT; };
		3E0011E52D084BD88168675A /* /Users/heiner/git/QuantLib/ql/math/interpolations/sabrinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrinterpolation.hpp; path = ql/math/interpolations/sabrinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		3E00C5362D4E4286A9273AB5 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capfloor.cpp; path = ql/instruments/capfloor.cpp; sourceTree = SOURCE_ROOT; };
		3E01ABEF3CA24B02BC530FC8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateipc.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp; sourceTree = SOURCE_ROOT; };
		3E03F1A90BA7488FA34D7D9D /* /Users/heiner/git/QuantLib/ql/math/interpolations/mixedinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mixedinterpolation.hpp; path = ql/math/interpolations/mixedinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		3E20F86EB846461CB7D25320 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewiseintegral.cpp; path = ql/experimental/math/piecewiseintegral.cpp; sourceTree = SOURCE_ROOT; };
		3E312C00B1994B34B1760577 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gemanroncoroniprocess.hpp; path = ql/experimental/processes/gemanroncoroniprocess.hpp; sourceTree = SOURCE_ROOT; };
		3E3E54BCF39D4F30A9D67611 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/lattices/all.hpp; sourceTree = SOURCE_ROOT; };
		3E406993298E45B799B76BAC /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedbarrieroption.cpp; path = ql/pricingengines/barrier/discretizedbarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		3E416F541BEF4FF780308BE1 /* /Users/heiner/git/QuantLib/Examples/LatentModel/LatentModel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = LatentModel.cpp; path = Examples/LatentModel/LatentModel.cpp; sourceTree = SOURCE_ROOT; };
		3E4A3A789CC746BCAEE8E589 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestonvanillaengine.cpp; path = ql/pricingengines/vanilla/fdhestonvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		3E52A140DA2249B38E96DE6F /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callablebond.hpp; path = ql/experimental/callablebonds/callablebond.hpp; sourceTree = SOURCE_ROOT; };
		3E52C80D6BE74F1391577E25 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = compositeproduct.cpp; path = ql/models/marketmodels/products/compositeproduct.cpp; sourceTree = SOURCE_ROOT; };
		3E5DE80691254455B6898E8C /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = treeswapengine.cpp; path = ql/pricingengines/swap/treeswapengine.cpp; sourceTree = SOURCE_ROOT; };
		3E8A186DE54142959B179C1E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdblackscholesbarrierengine.cpp; path = ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		3E8B8B7DBCDE4F4CA91BD2CC /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = markovfunctional.hpp; path = ql/models/shortrate/onefactormodels/markovfunctional.hpp; sourceTree = SOURCE_ROOT; };
		3E9AF4D482AF434494C2DA8C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = slovakia.hpp; path = ql/time/calendars/slovakia.hpp; sourceTree = SOURCE_ROOT; };
		3E9B9BF84C2B4C72AAE27F3F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytichestonengine.cpp; path = ql/pricingengines/vanilla/analytichestonengine.cpp; sourceTree = SOURCE_ROOT; };
		3EC6998B0733472C94D7901D /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sweden.hpp; path = ql/time/calendars/sweden.hpp; sourceTree = SOURCE_ROOT; };
		3EF53B054DB54F7385E4FABD /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = compoundoption.cpp; path = ql/experimental/exoticoptions/compoundoption.cpp; sourceTree = SOURCE_ROOT; };
		3EF8DB795E0142058AE7ED4C /* /Users/heiner/git/QuantLib/ql/math/linearleastsquaresregression.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = linearleastsquaresregression.hpp; path = ql/math/linearleastsquaresregression.hpp; sourceTree = SOURCE_ROOT; };
		3EFFBFC6A2F04965843B4864 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticdigitalamericanengine.cpp; path = ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp; sourceTree = SOURCE_ROOT; };
		3F0A5EB7FA2A42E3BF0EAB37 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsmmdriftcalculator.hpp; path = ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp; sourceTree = SOURCE_ROOT; };
		3F209E6373FD4A3195ED1B02 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditycashflow.hpp; path = ql/experimental/commodities/commoditycashflow.hpp; sourceTree = SOURCE_ROOT; };
		3F4C822065E44C58B387C9E4 /* /Users/heiner/git/QuantLib/ql/experimental/math/latentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = latentmodel.hpp; path = ql/experimental/math/latentmodel.hpp; sourceTree = SOURCE_ROOT; };
		3F53FB862992443C9CDE60F6 /* /Users/heiner/git/QuantLib/Examples/Gaussian1dModels/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/Gaussian1dModels/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		3F5AF2385E8745DD9164E051 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = turkey.hpp; path = ql/time/calendars/turkey.hpp; sourceTree = SOURCE_ROOT; };
		3F6B28FB6846417BA49D3954 /* /Users/heiner/git/QuantLib/test-suite/everestoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = everestoption.cpp; path = "test-suite/everestoption.cpp"; sourceTree = SOURCE_ROOT; };
		3F7F114B1F514D41B48AAC98 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhullwhiteswaptionengine.cpp; path = ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		3F8302E774894BD890C50543 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathgenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathgenerator.hpp; path = ql/methods/montecarlo/pathgenerator.hpp; sourceTree = SOURCE_ROOT; };
		3F937A7E571A4BFCB135016B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mceverestengine.cpp; path = ql/experimental/exoticoptions/mceverestengine.cpp; sourceTree = SOURCE_ROOT; };
		3FAAF21ABDF74334A03C8ADD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onestepcoterminalswaps.cpp; path = ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp; sourceTree = SOURCE_ROOT; };
		3FB293EE4DE54BE38F487893 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicouponpricer.cpp; path = ql/cashflows/cpicouponpricer.cpp; sourceTree = SOURCE_ROOT; };
		3FED2145632C4C559FFEE437 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitofmeasure.cpp; path = ql/experimental/commodities/unitofmeasure.cpp; sourceTree = SOURCE_ROOT; };
		3FFE806F5C3A476489C3B647 /* /Users/heiner/git/QuantLib/ql/currencies/america.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = america.hpp; path = ql/currencies/america.hpp; sourceTree = SOURCE_ROOT; };
		4003DDCCBFC84F938972BB52 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basketoption.hpp; path = ql/instruments/basketoption.hpp; sourceTree = SOURCE_ROOT; };
		400423A5BA5A4729A0ADE283 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = smilesection.hpp; path = ql/termstructures/volatility/smilesection.hpp; sourceTree = SOURCE_ROOT; };
		40090BAF4E654027A253BC26 /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = incompletegamma.cpp; path = ql/math/incompletegamma.cpp; sourceTree = SOURCE_ROOT; };
		40096B6800724B9AB5BAAE14 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = recoveryratemodel.hpp; path = ql/experimental/credit/recoveryratemodel.hpp; sourceTree = SOURCE_ROOT; };
		401E42171B4C4FB9BB58C46C /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sampledcurve.hpp; path = ql/math/sampledcurve.hpp; sourceTree = SOURCE_ROOT; };
		403307713DEA49B6B1506046 /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ornsteinuhlenbeckprocess.hpp; path = ql/processes/ornsteinuhlenbeckprocess.hpp; sourceTree = SOURCE_ROOT; };
		404F704BB8A14EAA9EBB96B0 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = coupon.hpp; path = ql/cashflows/coupon.hpp; sourceTree = SOURCE_ROOT; };
		4052A5DBA1DD478F8296B46E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestonhullwhitevanillaengine.cpp; path = ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		408FEF8763844AE19A5D2817 /* /Users/heiner/git/QuantLib/ql/math/generallinearleastsquares.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = generallinearleastsquares.hpp; path = ql/math/generallinearleastsquares.hpp; sourceTree = SOURCE_ROOT; };
		40981C9FE7DD46BC95BD762B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onestepcoinitialswaps.hpp; path = ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp; sourceTree = SOURCE_ROOT; };
		40AC7642EA1B4D4C80B6DD99 /* /Users/heiner/git/QuantLib/ql/processes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/processes/all.hpp; sourceTree = SOURCE_ROOT; };
		40B4A67E7C0D4FF58A45493F /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eulerdiscretization.hpp; path = ql/processes/eulerdiscretization.hpp; sourceTree = SOURCE_ROOT; };
		40D84630AA9E483A92643FAA /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = galamboscopula.hpp; path = ql/math/copulas/galamboscopula.hpp; sourceTree = SOURCE_ROOT; };
		40E9344DF0B846FFB189A425 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = everestoption.cpp; path = ql/experimental/exoticoptions/everestoption.cpp; sourceTree = SOURCE_ROOT; };
		40EBE8CDAC7240BA91E3E9F6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callspecifiedmultiproduct.hpp; path = ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp; sourceTree = SOURCE_ROOT; };
		40FAF780C8174D9FA0810F11 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optionletstripper2.hpp; path = ql/termstructures/volatility/optionlet/optionletstripper2.hpp; sourceTree = SOURCE_ROOT; };
		40FD31A5941E4324A13981B2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hazardratestructure.hpp; path = ql/termstructures/credit/hazardratestructure.hpp; sourceTree = SOURCE_ROOT; };
		40FEA2AFF4964E25B0F9D14D /* /Users/heiner/git/QuantLib/ql/math/statistics/gaussianstatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussianstatistics.hpp; path = ql/math/statistics/gaussianstatistics.hpp; sourceTree = SOURCE_ROOT; };
		41035DBDB72C45A7933B4A63 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniform1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = uniform1dmesher.hpp; path = ql/methods/finitedifferences/meshers/uniform1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		410758D877234208888C3C5A /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = chfliborswap.hpp; path = ql/indexes/swap/chfliborswap.hpp; sourceTree = SOURCE_ROOT; };
		41228EC39CD34B76818FBE57 /* /Users/heiner/git/QuantLib/ql/instruments/swaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaption.hpp; path = ql/instruments/swaption.hpp; sourceTree = SOURCE_ROOT; };
		41257AF156914742B0CABEE3 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytic_discr_geom_av_strike.hpp; path = ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp; sourceTree = SOURCE_ROOT; };
		4126751D8EE543A384FFFB6D /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fftvanillaengine.hpp; path = ql/experimental/variancegamma/fftvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		413964FE234D4DAAAF615565 /* /Users/heiner/git/QuantLib/ql/time/calendars/nullcalendar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nullcalendar.hpp; path = ql/time/calendars/nullcalendar.hpp; sourceTree = SOURCE_ROOT; };
		413D599B96564B8E8E3CBCF3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onefactorgaussiancopula.cpp; path = ql/experimental/credit/onefactorgaussiancopula.cpp; sourceTree = SOURCE_ROOT; };
		413E22ABE4974928A0B93F06 /* QuantLib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = libQuantLib.dylib; sourceTree = BUILT_PRODUCTS_DIR; };
		413F3AFDF8E7469F90CD17AE /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jointcalendar.hpp; path = ql/time/calendars/jointcalendar.hpp; sourceTree = SOURCE_ROOT; };
		414D2FD24BD84976A4D52E56 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticamericanmargrabeengine.hpp; path = ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp; sourceTree = SOURCE_ROOT; };
		41630351974649C8A6242F07 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvoltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrvoltermstructure.hpp; path = ql/experimental/volatility/sabrvoltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		41657FB60E1845508CB6EE02 /* /Users/heiner/git/QuantLib/test-suite/hestonslvmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonslvmodel.hpp; path = "test-suite/hestonslvmodel.hpp"; sourceTree = SOURCE_ROOT; };
		417ABAFCECDF4445AE642775 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/solvers1d/all.hpp; sourceTree = SOURCE_ROOT; };
		417C7599EDD04214B07CBBDB /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/binomialbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialbarrierengine.hpp; path = ql/pricingengines/barrier/binomialbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		4182F609B72F49428093D907 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomdefaultmodel.hpp; path = ql/experimental/credit/randomdefaultmodel.hpp; sourceTree = SOURCE_ROOT; };
		41A2DD9BB6DD43E0945ED672 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcoupon.hpp; path = ql/cashflows/inflationcoupon.hpp; sourceTree = SOURCE_ROOT; };
		41D08D6399FB4FBD9D3BAE10 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = glued1dmesher.cpp; path = ql/experimental/finitedifferences/glued1dmesher.cpp; sourceTree = SOURCE_ROOT; };
		41D0E2F792F440C89D4FE43B /* /Users/heiner/git/QuantLib/test-suite/cliquetoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cliquetoption.hpp; path = "test-suite/cliquetoption.hpp"; sourceTree = SOURCE_ROOT; };
		41D5D66E62AC475D8B832358 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/drifttermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = drifttermstructure.hpp; path = ql/termstructures/yield/drifttermstructure.hpp; sourceTree = SOURCE_ROOT; };
		41E56A80128C41AAA4E454DF /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseintegral.hpp; path = ql/experimental/math/piecewiseintegral.hpp; sourceTree = SOURCE_ROOT; };
		41F0579DC6BD4545A154A6E2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmlinexpcorrmodel.cpp; path = ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp; sourceTree = SOURCE_ROOT; };
		41F5EE859D2D4D46BBFA72CE /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365nl.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = actual365nl.hpp; path = ql/time/daycounters/actual365nl.hpp; sourceTree = SOURCE_ROOT; };
		420E44B227884B918650A6D9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dsmilesection.cpp; path = ql/termstructures/volatility/gaussian1dsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		420F1190F11743C28E1A0390 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = shibor.cpp; path = ql/indexes/ibor/shibor.cpp; sourceTree = SOURCE_ROOT; };
		4215578761BE45C6AA65A971 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardswapquote.cpp; path = ql/quotes/forwardswapquote.cpp; sourceTree = SOURCE_ROOT; };
		421FECA56D0B415D979BC16D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/binomialengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialengine.hpp; path = ql/pricingengines/vanilla/binomialengine.hpp; sourceTree = SOURCE_ROOT; };
		4220DF0E0AF44A56BFE7F877 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = iceland.hpp; path = ql/time/calendars/iceland.hpp; sourceTree = SOURCE_ROOT; };
		42391BFAC3844BE596B01F53 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = parametricexercise.hpp; path = ql/methods/montecarlo/parametricexercise.hpp; sourceTree = SOURCE_ROOT; };
		423A9F59A16446708346EA01 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = assetswap.hpp; path = ql/instruments/assetswap.hpp; sourceTree = SOURCE_ROOT; };
		424A9F1FDB7B4B91BA560D90 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapforwardmappings.cpp; path = ql/models/marketmodels/swapforwardmappings.cpp; sourceTree = SOURCE_ROOT; };
		4256F347F20E4FC798CEE1D5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonrndcalculator.hpp; path = ql/experimental/finitedifferences/hestonrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		425E3B7566E845CABC1CDB63 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extouwithjumpsprocess.hpp; path = ql/experimental/processes/extouwithjumpsprocess.hpp; sourceTree = SOURCE_ROOT; };
		426241327858466B983AC9A9 /* /Users/heiner/git/QuantLib/ql/instruments/bond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bond.hpp; path = ql/instruments/bond.hpp; sourceTree = SOURCE_ROOT; };
		427CD1E6BEAE40E9BE74E7F9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateeuler.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp; sourceTree = SOURCE_ROOT; };
		42889CBFDE394F48BDACD945 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/forward/all.hpp; sourceTree = SOURCE_ROOT; };
		428B4AC6E0A146918C221448 /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constantestimator.cpp; path = ql/models/volatility/constantestimator.cpp; sourceTree = SOURCE_ROOT; };
		42991F784BE94216814BBF2E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/swaptionvolcube1a.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolcube1a.hpp; path = ql/experimental/volatility/swaptionvolcube1a.hpp; sourceTree = SOURCE_ROOT; };
		42D7ABCFC40B41B2BA7DBC78 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/shortrate/onefactormodels/all.hpp; sourceTree = SOURCE_ROOT; };
		42E0F02B3B0543179CD7D6F1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditytype.cpp; path = ql/experimental/commodities/commoditytype.cpp; sourceTree = SOURCE_ROOT; };
		42EA873E48994316A2390688 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = noarbsabrinterpolatedsmilesection.cpp; path = ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		42EC522D4410422AAFD3E820 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductcallspecified.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp; sourceTree = SOURCE_ROOT; };
		42EF01E452464C968AE39B49 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energyvanillaswap.cpp; path = ql/experimental/commodities/energyvanillaswap.cpp; sourceTree = SOURCE_ROOT; };
		42FA9B8361054977B380E808 /* /Users/heiner/git/QuantLib/ql/cashflow.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cashflow.hpp; path = ql/cashflow.hpp; sourceTree = SOURCE_ROOT; };
		433AFC848D4A4DF08073AB9D /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/replicatingvarianceswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = replicatingvarianceswapengine.hpp; path = ql/pricingengines/forward/replicatingvarianceswapengine.hpp; sourceTree = SOURCE_ROOT; };
		433C7BC2A9C9415D8914F522 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepforwards.hpp; path = ql/models/marketmodels/products/multistep/multistepforwards.hpp; sourceTree = SOURCE_ROOT; };
		433F8C7AB53142E7BFD152A9 /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dividendoption.cpp; path = "test-suite/dividendoption.cpp"; sourceTree = SOURCE_ROOT; };
		4358D274DA2D463799D896F7 /* /Users/heiner/git/QuantLib/test-suite/stats.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stats.hpp; path = "test-suite/stats.hpp"; sourceTree = SOURCE_ROOT; };
		4362EEA024604D0C830483F8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmzabrop.hpp; path = ql/experimental/finitedifferences/fdmzabrop.hpp; sourceTree = SOURCE_ROOT; };
		439B56F6087745C389BA9C54 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = symmetricschurdecomposition.cpp; path = ql/math/matrixutilities/symmetricschurdecomposition.cpp; sourceTree = SOURCE_ROOT; };
		43B4FB05A2A04310B9F0EA08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdeuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdeuropeanengine.hpp; path = ql/pricingengines/vanilla/fdeuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		43C947F031E14CCDB9B1EA4D /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		43CE3079437A45AB884FA48A /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = longstaffschwartzmultipathpricer.cpp; path = ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp; sourceTree = SOURCE_ROOT; };
		43D9149D9A7E4B85B8A5E6F1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = coterminalswapcurvestate.cpp; path = ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp; sourceTree = SOURCE_ROOT; };
		440061824118437C868D00B6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonblackvolsurface.hpp; path = ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		440DE69B80654E739D63D84C /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytic_discr_geom_av_price.cpp; path = ql/pricingengines/asian/analytic_discr_geom_av_price.cpp; sourceTree = SOURCE_ROOT; };
		4411C45E4D124A2784A58A3A /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditypricinghelpers.hpp; path = ql/experimental/commodities/commoditypricinghelpers.hpp; sourceTree = SOURCE_ROOT; };
		4417C3F694FD468AB33D554E /* /Users/heiner/git/QuantLib/test-suite/mersennetwister.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mersennetwister.cpp; path = "test-suite/mersennetwister.cpp"; sourceTree = SOURCE_ROOT; };
		441F225AE53B499AA8291971 /* /Users/heiner/git/QuantLib/test-suite/amortizingbond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = amortizingbond.hpp; path = "test-suite/amortizingbond.hpp"; sourceTree = SOURCE_ROOT; };
		4422D562BB7147859D96800F /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = farliegumbelmorgensterncopula.hpp; path = ql/math/copulas/farliegumbelmorgensterncopula.hpp; sourceTree = SOURCE_ROOT; };
		442A6937474A44A2B9682880 /* /Users/heiner/git/QuantLib/ql/math/ode/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/ode/all.hpp; sourceTree = SOURCE_ROOT; };
		442D3212F535496AB8494F0F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseconstantabcdvariance.hpp; path = ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp; sourceTree = SOURCE_ROOT; };
		442DEF61ED9C4C7D9DC3B6D4 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stochasticcollocationinvcdf.hpp; path = ql/math/randomnumbers/stochasticcollocationinvcdf.hpp; sourceTree = SOURCE_ROOT; };
		4442AA8303F54801A90374D3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolstructure.cpp; path = ql/termstructures/volatility/swaption/swaptionvolstructure.cpp; sourceTree = SOURCE_ROOT; };
		445268C5B9134478831B6562 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/binomialbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialbarrierengine.hpp; path = ql/pricingengines/barrier/binomialbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		44548468C5E44F90A0AFD3DB /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = indonesia.hpp; path = ql/time/calendars/indonesia.hpp; sourceTree = SOURCE_ROOT; };
		445D6BAA886347A9B0FAFF66 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = payoffs.hpp; path = ql/instruments/payoffs.hpp; sourceTree = SOURCE_ROOT; };
		446872B3F9DD4165B578FD0A /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = variancegammaprocess.cpp; path = ql/experimental/variancegamma/variancegammaprocess.cpp; sourceTree = SOURCE_ROOT; };
		446A1C026B27411594DBEB0D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = strippedoptionlet.hpp; path = ql/termstructures/volatility/optionlet/strippedoptionlet.hpp; sourceTree = SOURCE_ROOT; };
		4482367BD973419ABBBC80C3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = oisratehelper.hpp; path = ql/termstructures/yield/oisratehelper.hpp; sourceTree = SOURCE_ROOT; };
		448B1BB9DDCF4276A8A9E8D8 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation2d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kernelinterpolation2d.hpp; path = ql/math/interpolations/kernelinterpolation2d.hpp; sourceTree = SOURCE_ROOT; };
		44B56B56A4EF4311B8388EDF /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eulerdiscretization.hpp; path = ql/processes/eulerdiscretization.hpp; sourceTree = SOURCE_ROOT; };
		44BD92BE473E49C185A53AF0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exerciseadapter.hpp; path = ql/models/marketmodels/products/multistep/exerciseadapter.hpp; sourceTree = SOURCE_ROOT; };
		44C2386F01754AFE88075CC5 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcperformanceengine.cpp; path = ql/pricingengines/cliquet/mcperformanceengine.cpp; sourceTree = SOURCE_ROOT; };
		44D091046CB146E880B99457 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zabrinterpolatedsmilesection.hpp; path = ql/experimental/volatility/zabrinterpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		44E9EC08054B426FBAAAEF91 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = kronrodintegral.cpp; path = ql/math/integrals/kronrodintegral.cpp; sourceTree = SOURCE_ROOT; };
		4507CD473A1F4EEB890CD598 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kirkspreadoptionengine.hpp; path = ql/experimental/exoticoptions/kirkspreadoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		45182F7525BF45339F56C4EB /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = germany.cpp; path = ql/time/calendars/germany.cpp; sourceTree = SOURCE_ROOT; };
		4540360D55EF45E08F01D956 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonvariancemesher.cpp; path = ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp; sourceTree = SOURCE_ROOT; };
		454D6184561444F0AE29D38F /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = asianoption.cpp; path = ql/instruments/asianoption.cpp; sourceTree = SOURCE_ROOT; };
		455DCCA9285B4BCBA84206C8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/zibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zibor.hpp; path = ql/indexes/ibor/zibor.hpp; sourceTree = SOURCE_ROOT; };
		457C2DA32EB940BCAF27B54E /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onefactorcopula.cpp; path = ql/experimental/credit/onefactorcopula.cpp; sourceTree = SOURCE_ROOT; };
		458116C2878B4AEDB737AF1B /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = italy.cpp; path = ql/time/calendars/italy.cpp; sourceTree = SOURCE_ROOT; };
		459502309D38469A8447CDF4 /* /Users/heiner/git/QuantLib/ql/math/array.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = array.hpp; path = ql/math/array.hpp; sourceTree = SOURCE_ROOT; };
		4596A3B5C05841A7884EF6B1 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = euriborswap.hpp; path = ql/indexes/swap/euriborswap.hpp; sourceTree = SOURCE_ROOT; };
		45BEE43CD9D44CA3A7D557BE /* /Users/heiner/git/QuantLib/ql/math/linearleastsquaresregression.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = linearleastsquaresregression.hpp; path = ql/math/linearleastsquaresregression.hpp; sourceTree = SOURCE_ROOT; };
		45BF546172F2408798CD7E14 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vegabumpcluster.hpp; path = ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp; sourceTree = SOURCE_ROOT; };
		45BF80F2F6344A21892A5B8C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliciteulerscheme.hpp; path = ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp; sourceTree = SOURCE_ROOT; };
		45D7089533694A378A6AD18D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sonia.cpp; path = ql/indexes/ibor/sonia.cpp; sourceTree = SOURCE_ROOT; };
		45E06764CC6147159591BB5E /* /Users/heiner/git/QuantLib/ql/models/volatility/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/volatility/all.hpp; sourceTree = SOURCE_ROOT; };
		45EA54A461B44A4E89879B29 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussianquadratures.cpp; path = ql/math/integrals/gaussianquadratures.cpp; sourceTree = SOURCE_ROOT; };
		45FD8E6D448B4FF29A85B9AE /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = deltavolquote.cpp; path = ql/experimental/fx/deltavolquote.cpp; sourceTree = SOURCE_ROOT; };
		4626BD3F84734992B908F069 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vegabumpcluster.hpp; path = ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp; sourceTree = SOURCE_ROOT; };
		46463C49C3CB4838AF594FFE /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = varianceoption.hpp; path = ql/experimental/varianceoption/varianceoption.hpp; sourceTree = SOURCE_ROOT; };
		4646FE4CF61D48DFA2A80485 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalcmsspreadpricer.hpp; path = ql/experimental/coupons/lognormalcmsspreadpricer.hpp; sourceTree = SOURCE_ROOT; };
		465568E45B5246C380CEFD40 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = czechrepublic.cpp; path = ql/time/calendars/czechrepublic.cpp; sourceTree = SOURCE_ROOT; };
		46692E96565F44BC862BD8F1 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticpartialtimebarrieroptionengine.cpp; path = ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp; sourceTree = SOURCE_ROOT; };
		4676D63CA14845429F358622 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/sample.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sample.hpp; path = ql/methods/montecarlo/sample.hpp; sourceTree = SOURCE_ROOT; };
		46931D0C71ED496F931E470F /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = conjugategradient.cpp; path = ql/math/optimization/conjugategradient.cpp; sourceTree = SOURCE_ROOT; };
		46A068C5F76D491896E2A82B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwisediscounter.cpp; path = ql/models/marketmodels/pathwisediscounter.cpp; sourceTree = SOURCE_ROOT; };
		46A1718015C14830B533BE99 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/lattices/all.hpp; sourceTree = SOURCE_ROOT; };
		46A4930A53F1467AB61863D6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = triggeredswapexercise.hpp; path = ql/models/marketmodels/callability/triggeredswapexercise.hpp; sourceTree = SOURCE_ROOT; };
		46AB81EE212341A99261B2EF /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kirkengine.hpp; path = ql/pricingengines/basket/kirkengine.hpp; sourceTree = SOURCE_ROOT; };
		46B6AC528BC64A1A9B1CE76A /* /Users/heiner/git/QuantLib/Examples/BasketLosses/BasketLosses.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = BasketLosses.cpp; path = Examples/BasketLosses/BasketLosses.cpp; sourceTree = SOURCE_ROOT; };
		46EA672B551348A1838A5911 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bjerksundstenslandengine.cpp; path = ql/pricingengines/vanilla/bjerksundstenslandengine.cpp; sourceTree = SOURCE_ROOT; };
		46FD4D855A7948388E4F3479 /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ecb.cpp; path = ql/time/ecb.cpp; sourceTree = SOURCE_ROOT; };
		4710C5E504A94BAE9A6DE668 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepoptionlets.hpp; path = ql/models/marketmodels/products/multistep/multistepoptionlets.hpp; sourceTree = SOURCE_ROOT; };
		471506017255430A894BE728 /* /Users/heiner/git/QuantLib/ql/math/distributions/poissondistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = poissondistribution.hpp; path = ql/math/distributions/poissondistribution.hpp; sourceTree = SOURCE_ROOT; };
		4719068AF3C1408C9087FB46 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = oneassetoption.hpp; path = ql/instruments/oneassetoption.hpp; sourceTree = SOURCE_ROOT; };
		471B380A24DA4398A0C605DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = smmdriftcalculator.cpp; path = ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp; sourceTree = SOURCE_ROOT; };
		471CFF82FB534A0F99FAE25B /* /Users/heiner/git/QuantLib/Examples/Replication/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/Replication/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		472297B793224460B99EBDA2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commodityunitcost.cpp; path = ql/experimental/commodities/commodityunitcost.cpp; sourceTree = SOURCE_ROOT; };
		47235A96B3684FD9B1A8DEF0 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = errorfunction.hpp; path = ql/math/errorfunction.hpp; sourceTree = SOURCE_ROOT; };
		473A50817A1E4823B54C3B54 /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hullwhiteprocess.hpp; path = ql/processes/hullwhiteprocess.hpp; sourceTree = SOURCE_ROOT; };
		47567029BA1A44C983527BD2 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mincopula.cpp; path = ql/math/copulas/mincopula.cpp; sourceTree = SOURCE_ROOT; };
		47640667A2C642619A75A505 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/callability/all.hpp; sourceTree = SOURCE_ROOT; };
		476CD531B2D74AC786AD20BF /* /Users/heiner/git/QuantLib/ql/indexes/ibor/dkklibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dkklibor.hpp; path = ql/indexes/ibor/dkklibor.hpp; sourceTree = SOURCE_ROOT; };
		477C02FC26E4421FB6914DF4 /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = matrix.cpp; path = ql/math/matrix.cpp; sourceTree = SOURCE_ROOT; };
		479E02AFB8E04E278744799E /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitaloption.cpp; path = "test-suite/digitaloption.cpp"; sourceTree = SOURCE_ROOT; };
		47A0074BAC9044898F72B0FF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bumpinstrumentjacobian.hpp; path = ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp; sourceTree = SOURCE_ROOT; };
		47ADC69DD0CF4B61B64270B2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pagodaoption.hpp; path = ql/experimental/exoticoptions/pagodaoption.hpp; sourceTree = SOURCE_ROOT; };
		47ADE1A3C7F847EA876D7347 /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitaloption.cpp; path = "test-suite/digitaloption.cpp"; sourceTree = SOURCE_ROOT; };
		47B0F928FC8F4A41BDA33ECC /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/quanto/all.hpp; sourceTree = SOURCE_ROOT; };
		47BCBCADF29343FA910DB439 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdg2swaptionengine.hpp; path = ql/pricingengines/swaption/fdg2swaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		47CB28B18F1E4D32870EDE68 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestonrebateengine.hpp; path = ql/pricingengines/barrier/fdhestonrebateengine.hpp; sourceTree = SOURCE_ROOT; };
		47E11AF51D674A75B07DF48D /* /Users/heiner/git/QuantLib/ql/math/optimization/simulatedannealing.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simulatedannealing.hpp; path = ql/math/optimization/simulatedannealing.hpp; sourceTree = SOURCE_ROOT; };
		47E28414BB064E0592DA466D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsimpleprocess1dmesher.cpp; path = ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp; sourceTree = SOURCE_ROOT; };
		47E3086CAACE4FE7B4E9E092 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = creditdefaultswap.cpp; path = ql/instruments/creditdefaultswap.cpp; sourceTree = SOURCE_ROOT; };
		47EECD010EB04B3193F778C1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sviinterpolatedsmilesection.cpp; path = ql/experimental/volatility/sviinterpolatedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		4807AE3235404AB0A3D5C9C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multisteptarn.hpp; path = ql/models/marketmodels/products/multistep/multisteptarn.hpp; sourceTree = SOURCE_ROOT; };
		4812530EF838403681954743 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplecashflow.hpp; path = ql/cashflows/simplecashflow.hpp; sourceTree = SOURCE_ROOT; };
		481D47204EF24D9086BAF9FC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/evolvers/volprocesses/all.hpp; sourceTree = SOURCE_ROOT; };
		4822742F8BAB44B993A47D32 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = coshestonengine.hpp; path = ql/pricingengines/vanilla/coshestonengine.hpp; sourceTree = SOURCE_ROOT; };
		482956E72AA841C1B0B2406C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/fdtypedefs.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdtypedefs.hpp; path = ql/methods/finitedifferences/fdtypedefs.hpp; sourceTree = SOURCE_ROOT; };
		484BACC67C4D4A3AA1D9A404 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = timehomogeneousforwardcorrelation.cpp; path = ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp; sourceTree = SOURCE_ROOT; };
		484C3E257D6A4BD7BFC4D874 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sobolbrowniangenerator.cpp; path = ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp; sourceTree = SOURCE_ROOT; };
		4855EF97652A471B8F964850 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = poland.hpp; path = ql/time/calendars/poland.hpp; sourceTree = SOURCE_ROOT; };
		4858451253E5469BA9C1209F /* /Users/heiner/git/QuantLib/ql/termstructures/interpolatedcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedcurve.hpp; path = ql/termstructures/interpolatedcurve.hpp; sourceTree = SOURCE_ROOT; };
		487285A315834D6EBD5C521E /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basket.cpp; path = ql/experimental/credit/basket.cpp; sourceTree = SOURCE_ROOT; };
		487B89EE62BC4836BB1F5AEC /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exchangeratemanager.hpp; path = ql/currencies/exchangeratemanager.hpp; sourceTree = SOURCE_ROOT; };
		487C11E8C9104BB79747307F /* /Users/heiner/git/QuantLib/test-suite/commodityunitofmeasure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commodityunitofmeasure.cpp; path = "test-suite/commodityunitofmeasure.cpp"; sourceTree = SOURCE_ROOT; };
		4894DD9155AC44D58A67D896 /* /Users/heiner/git/QuantLib/ql/math/transformedgrid.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = transformedgrid.hpp; path = ql/math/transformedgrid.hpp; sourceTree = SOURCE_ROOT; };
		4895DA24EE6F46A5A6E5AB99 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticbinarybarrierengine.hpp; path = ql/pricingengines/barrier/analyticbinarybarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		48AAC6EA46264B92A91DBA6D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapforwardbasissystem.cpp; path = ql/models/marketmodels/callability/swapforwardbasissystem.cpp; sourceTree = SOURCE_ROOT; };
		48AB6467023347D4BC7B5531 /* /Users/heiner/git/QuantLib/ql/errors.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = errors.hpp; path = ql/errors.hpp; sourceTree = SOURCE_ROOT; };
		48BB17B7C0E2464A801BE3C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = smilesectionutils.hpp; path = ql/termstructures/volatility/smilesectionutils.hpp; sourceTree = SOURCE_ROOT; };
		48DBB8CCC2E64759BBE302B0 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = batesengine.cpp; path = ql/pricingengines/vanilla/batesengine.cpp; sourceTree = SOURCE_ROOT; };
		48E6CB858C8048A9AD94F374 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = africa.cpp; path = ql/currencies/africa.cpp; sourceTree = SOURCE_ROOT; };
		48E9D8B063A446368C19DFC8 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = variancegammaprocess.hpp; path = ql/experimental/variancegamma/variancegammaprocess.hpp; sourceTree = SOURCE_ROOT; };
		491832E91E00470FBAD54AB9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = recoveryratemodel.cpp; path = ql/experimental/credit/recoveryratemodel.cpp; sourceTree = SOURCE_ROOT; };
		493A2C37CBFD4193A48EAB44 /* /Users/heiner/git/QuantLib/test-suite/observable.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = observable.cpp; path = "test-suite/observable.cpp"; sourceTree = SOURCE_ROOT; };
		49474A684FCE4588B4489775 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmmnormaldriftcalculator.hpp; path = ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp; sourceTree = SOURCE_ROOT; };
		495C1202CFDC4131907EA624 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/indexes/ibor/all.hpp; sourceTree = SOURCE_ROOT; };
		497E45DED7DE40B79786FDCF /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multidimintegrator.cpp; path = ql/experimental/math/multidimintegrator.cpp; sourceTree = SOURCE_ROOT; };
		499CC1CD34E4451DA2F06AD4 /* /Users/heiner/git/QuantLib/test-suite/termstructures.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = termstructures.cpp; path = "test-suite/termstructures.cpp"; sourceTree = SOURCE_ROOT; };
		49CA9A72540A48E684DFB178 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fftengine.cpp; path = ql/experimental/variancegamma/fftengine.cpp; sourceTree = SOURCE_ROOT; };
		49D2D15606A04E4AB31C3A64 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capletcoterminalswaptioncalibration.cpp; path = ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp; sourceTree = SOURCE_ROOT; };
		49D7680D62B1454CBC9A4C4C /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = primenumbers.cpp; path = ql/math/primenumbers.cpp; sourceTree = SOURCE_ROOT; };
		4A06824B1BC64E21B2320219 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/volatilitytype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volatilitytype.hpp; path = ql/termstructures/volatility/volatilitytype.hpp; sourceTree = SOURCE_ROOT; };
		4A169BE801A84DBCB3D70A46 /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = asx.cpp; path = ql/time/asx.cpp; sourceTree = SOURCE_ROOT; };
		4A265F4D97FF4D1FA09BA6A3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerocurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerocurve.hpp; path = ql/termstructures/yield/zerocurve.hpp; sourceTree = SOURCE_ROOT; };
		4A2F648789CD410D900793EB /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = twofactormodel.cpp; path = ql/models/shortrate/twofactormodel.cpp; sourceTree = SOURCE_ROOT; };
		4A33DF7078AA46D99B15AA8D /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactormodel.hpp; path = ql/models/shortrate/onefactormodel.hpp; sourceTree = SOURCE_ROOT; };
		4A33E1561DAE4B9084A2D4B2 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = actual365fixed.hpp; path = ql/time/daycounters/actual365fixed.hpp; sourceTree = SOURCE_ROOT; };
		4A3B0BBD35C94D6A907BF871 /* /Users/heiner/git/QuantLib/ql/math/interpolations/convexmonotoneinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = convexmonotoneinterpolation.hpp; path = ql/math/interpolations/convexmonotoneinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		4A4372295DB04E3488DAE567 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vanillaswingoption.cpp; path = ql/instruments/vanillaswingoption.cpp; sourceTree = SOURCE_ROOT; };
		4A52FD566BAB444B867701AC /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = target.cpp; path = ql/time/calendars/target.cpp; sourceTree = SOURCE_ROOT; };
		4A563B8A40E74524828C25CF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = partialtimebarrieroption.hpp; path = ql/experimental/exoticoptions/partialtimebarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		4A647814326E4DAC8B8EB98D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localvolrndcalculator.hpp; path = ql/experimental/finitedifferences/localvolrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		4A7025838AC547D680DED3B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonexpansionengine.hpp; path = ql/pricingengines/vanilla/hestonexpansionengine.hpp; sourceTree = SOURCE_ROOT; };
		4A72D3D007724164BA4AF484 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/all.hpp; sourceTree = SOURCE_ROOT; };
		4A751921B3D44A20AD334CC5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = syntheticcdo.hpp; path = ql/experimental/credit/syntheticcdo.hpp; sourceTree = SOURCE_ROOT; };
		4A8CA30D159F4ACEAC0412F1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = factorreduction.hpp; path = ql/math/matrixutilities/factorreduction.hpp; sourceTree = SOURCE_ROOT; };
		4A8FB7F2632B437AACA38472 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholesfwdop.cpp; path = ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp; sourceTree = SOURCE_ROOT; };
		4A9FC2D981B141E78115829D /* /Users/heiner/git/QuantLib/test-suite/mersennetwister.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mersennetwister.hpp; path = "test-suite/mersennetwister.hpp"; sourceTree = SOURCE_ROOT; };
		4AAABCDB70DD446589CE0E33 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = plackettcopula.hpp; path = ql/math/copulas/plackettcopula.hpp; sourceTree = SOURCE_ROOT; };
		4AC533178AD546FD9B665B69 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcdigitalengine.cpp; path = ql/pricingengines/vanilla/mcdigitalengine.cpp; sourceTree = SOURCE_ROOT; };
		4AD8ACDAD4254C708F1D7C38 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = couponpricer.cpp; path = ql/cashflows/couponpricer.cpp; sourceTree = SOURCE_ROOT; };
		4ADD4523688449D092907904 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmhullwhiteparam.cpp; path = ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp; sourceTree = SOURCE_ROOT; };
		4AF811272028471296C73400 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = variancegammaprocess.cpp; path = ql/experimental/variancegamma/variancegammaprocess.cpp; sourceTree = SOURCE_ROOT; };
		4B0B60C9861F4E688CAB421E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optionletvolatilitystructure.cpp; path = ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		4B0C0A5D948B4979B888A60E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytichestonhullwhiteengine.cpp; path = ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp; sourceTree = SOURCE_ROOT; };
		4B17B77628BA4787B4CE4790 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsratebond.cpp; path = ql/instruments/bonds/cmsratebond.cpp; sourceTree = SOURCE_ROOT; };
		4B28FBA4495848DB9215CD03 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = squarerootprocessrndcalculator.cpp; path = ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		4B2D47F9A103482DA1CE4383 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardforwardmappings.hpp; path = ql/models/marketmodels/forwardforwardmappings.hpp; sourceTree = SOURCE_ROOT; };
		4B3B0BA7CBFA4946BD8582CB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm2dimsolver.cpp; path = ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp; sourceTree = SOURCE_ROOT; };
		4B3DBC03067E4B83969A1A08 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zerocouponbond.cpp; path = ql/instruments/bonds/zerocouponbond.cpp; sourceTree = SOURCE_ROOT; };
		4B5BD8F6C77B474391110A81 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = simplex.cpp; path = ql/math/optimization/simplex.cpp; sourceTree = SOURCE_ROOT; };
		4B604E85EB474BF2BDDD2BA7 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = parametricexercise.cpp; path = ql/methods/montecarlo/parametricexercise.cpp; sourceTree = SOURCE_ROOT; };
		4B72A5F4449F421AABD7F1E1 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fireflyalgorithm.cpp; path = ql/experimental/math/fireflyalgorithm.cpp; sourceTree = SOURCE_ROOT; };
		4B85762175B346E2A9638C53 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bkbm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bkbm.hpp; path = ql/indexes/ibor/bkbm.hpp; sourceTree = SOURCE_ROOT; };
		4B96FBD38BF94B3E81C1AB59 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = levenbergmarquardt.hpp; path = ql/math/optimization/levenbergmarquardt.hpp; sourceTree = SOURCE_ROOT; };
		4BBAB747B1434479885400CB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = boundaryconditionschemehelper.hpp; path = ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp; sourceTree = SOURCE_ROOT; };
		4BC0576E3CAA47FB812C51B4 /* /Users/heiner/git/QuantLib/ql/termstructures/iterativebootstrap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = iterativebootstrap.hpp; path = ql/termstructures/iterativebootstrap.hpp; sourceTree = SOURCE_ROOT; };
		4BF58A4ADE854667943EFFAE /* Gaussian1dModels */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Gaussian1dModels; sourceTree = BUILT_PRODUCTS_DIR; };
		4BFBB19898874B11A70CAE83 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantcpivolatility.hpp; path = ql/termstructures/volatility/inflation/constantcpivolatility.hpp; sourceTree = SOURCE_ROOT; };
		4C0653E8176F4FBFA4D7ADE9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = factorreduction.cpp; path = ql/math/matrixutilities/factorreduction.cpp; sourceTree = SOURCE_ROOT; };
		4C0F4CF9973442F887122F3F /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = couponpricer.cpp; path = ql/cashflows/couponpricer.cpp; sourceTree = SOURCE_ROOT; };
		4C14482791F24ABA918E0EAF /* /Users/heiner/git/QuantLib/ql/termstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = termstructure.hpp; path = ql/termstructure.hpp; sourceTree = SOURCE_ROOT; };
		4C4E0521C7914360A867CDB4 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = barrieroption.hpp; path = ql/instruments/barrieroption.hpp; sourceTree = SOURCE_ROOT; };
		4C525C37BA9D4815BB47CA34 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = singapore.cpp; path = ql/time/calendars/singapore.cpp; sourceTree = SOURCE_ROOT; };
		4C61897219E54A5D88A80577 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = shortratemodels.cpp; path = "test-suite/shortratemodels.cpp"; sourceTree = SOURCE_ROOT; };
		4C64FC5BB0084E7E91D28ADC /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticbarrierengine.hpp; path = ql/pricingengines/barrier/analyticbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		4C6A4C2CC92B4861A2761DE5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compositeproduct.hpp; path = ql/models/marketmodels/products/compositeproduct.hpp; sourceTree = SOURCE_ROOT; };
		4C71EEEF3A6F4D0D9D132B08 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makecapfloor.cpp; path = ql/instruments/makecapfloor.cpp; sourceTree = SOURCE_ROOT; };
		4C82A3DBBBAF4DECBE6E8908 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multiassetoption.cpp; path = ql/instruments/multiassetoption.cpp; sourceTree = SOURCE_ROOT; };
		4C840355F82644308F63A42A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = doublebarrieroption.hpp; path = ql/experimental/barrieroption/doublebarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		4C8E769131C741E3A738CBD9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiproductmultistep.hpp; path = ql/models/marketmodels/products/multiproductmultistep.hpp; sourceTree = SOURCE_ROOT; };
		4C935831A26D454F8DB3D950 /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jointcalendar.cpp; path = ql/time/calendars/jointcalendar.cpp; sourceTree = SOURCE_ROOT; };
		4C99148780C04CDD81D0E05B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcpagodaengine.cpp; path = ql/experimental/exoticoptions/mcpagodaengine.cpp; sourceTree = SOURCE_ROOT; };
		4CA94FB72E1B46D09CFC6883 /* /Users/heiner/git/QuantLib/ql/math/autocovariance.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = autocovariance.hpp; path = ql/math/autocovariance.hpp; sourceTree = SOURCE_ROOT; };
		4CAABD398C5A445093C29DCE /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcouponpricer.cpp; path = ql/cashflows/inflationcouponpricer.cpp; sourceTree = SOURCE_ROOT; };
		4CB072417AEF4EFFAEDBD9CA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdratepc.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp; sourceTree = SOURCE_ROOT; };
		4CC503B1FC95439DACCA48E4 /* /Users/heiner/git/QuantLib/ql/math/interpolations/abcdinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdinterpolation.hpp; path = ql/math/interpolations/abcdinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		4CD63DA209E540DF900C4034 /* /Users/heiner/git/QuantLib/test-suite/pathgenerator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathgenerator.cpp; path = "test-suite/pathgenerator.cpp"; sourceTree = SOURCE_ROOT; };
		4CE24196FAD64F9FA47E7BB4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolcube2.cpp; path = ql/termstructures/volatility/swaption/swaptionvolcube2.cpp; sourceTree = SOURCE_ROOT; };
		4CEB025F74924777A6ECDF6A /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = differentialevolution.hpp; path = ql/math/optimization/differentialevolution.hpp; sourceTree = SOURCE_ROOT; };
		4CFFDD70E3774269903C7F44 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplus.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dplus.hpp; path = ql/methods/finitedifferences/dplus.hpp; sourceTree = SOURCE_ROOT; };
		4D08FE947AEB4D66968A2349 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fd2dblackscholesvanillaengine.hpp; path = ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		4D39AE22B31146B88A2C05FC /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sampledcurve.hpp; path = ql/math/sampledcurve.hpp; sourceTree = SOURCE_ROOT; };
		4D39F4A687FE47609DCC3E19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cotswaptofwdadapter.cpp; path = ql/models/marketmodels/models/cotswaptofwdadapter.cpp; sourceTree = SOURCE_ROOT; };
		4D3A4B4114DA46C483670A67 /* /Users/heiner/git/QuantLib/ql/utilities/observablevalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = observablevalue.hpp; path = ql/utilities/observablevalue.hpp; sourceTree = SOURCE_ROOT; };
		4D3A729580D84F66BCABDAD5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussianlhplossmodel.hpp; path = ql/experimental/credit/gaussianlhplossmodel.hpp; sourceTree = SOURCE_ROOT; };
		4D45AE3A82A34C32B6083720 /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bond.cpp; path = ql/instruments/bond.cpp; sourceTree = SOURCE_ROOT; };
		4D5714FCF9A248D3A6CAF003 /* /Users/heiner/git/QuantLib/ql/math/interpolations/bicubicsplineinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bicubicsplineinterpolation.hpp; path = ql/math/interpolations/bicubicsplineinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		4D6956CC03A44670A85500C5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = normalfwdratepc.cpp; path = ql/models/marketmodels/evolvers/normalfwdratepc.cpp; sourceTree = SOURCE_ROOT; };
		4D70A715F750474BA93EDD67 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm2dblackscholesop.cpp; path = ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp; sourceTree = SOURCE_ROOT; };
		4D71A0AC7DE14EFBBEE60049 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepswaption.cpp; path = ql/models/marketmodels/products/multistep/multistepswaption.cpp; sourceTree = SOURCE_ROOT; };
		4D8605EB1D664FC890D50976 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel_smm.cpp; path = "test-suite/marketmodel_smm.cpp"; sourceTree = SOURCE_ROOT; };
		4DA7B631C0DC4400AD52FEE5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = curvestate.cpp; path = ql/models/marketmodels/curvestate.cpp; sourceTree = SOURCE_ROOT; };
		4DA9CC9966C34089876A453A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskneutraldensitycalculator.cpp; path = ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp; sourceTree = SOURCE_ROOT; };
		4DAF0FC9F5BA49AC82944EEE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lsstrategy.hpp; path = ql/models/marketmodels/callability/lsstrategy.hpp; sourceTree = SOURCE_ROOT; };
		4DB8CBB154B9453EAB3B2517 /* /Users/heiner/git/QuantLib/test-suite/schedule.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = schedule.hpp; path = "test-suite/schedule.hpp"; sourceTree = SOURCE_ROOT; };
		4DCC7BF424E04B7F9F91EF99 /* /Users/heiner/git/QuantLib/ql/models/model.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = model.cpp; path = ql/models/model.cpp; sourceTree = SOURCE_ROOT; };
		4DCCFC71C74B4BE7BFC53BE0 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrvolsurface.hpp; path = ql/experimental/volatility/sabrvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		4DD0651F20F44AF995590396 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcdvol.cpp; path = ql/models/marketmodels/models/abcdvol.cpp; sourceTree = SOURCE_ROOT; };
		4DDF08643F2244EE8BA263BD /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mt19937uniformrng.hpp; path = ql/math/randomnumbers/mt19937uniformrng.hpp; sourceTree = SOURCE_ROOT; };
		4E08CEEA2048420AB8977843 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantoforwardvanillaoption.cpp; path = ql/instruments/quantoforwardvanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		4E0C92ABA46C474BAD9BF63E /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonmodel.hpp; path = "test-suite/hestonmodel.hpp"; sourceTree = SOURCE_ROOT; };
		4E0EA78897094B1CA4B34962 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sviinterpolation.hpp; path = ql/experimental/volatility/sviinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		4E12719D9E2545EFB280624B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardstructure.hpp; path = ql/termstructures/yield/forwardstructure.hpp; sourceTree = SOURCE_ROOT; };
		4E16D9A029C845E6B26433B4 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/legacy/libormarketmodels/all.hpp; sourceTree = SOURCE_ROOT; };
		4E1A6BA1AF884524B7080130 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsmarket.cpp; path = ql/termstructures/volatility/swaption/cmsmarket.cpp; sourceTree = SOURCE_ROOT; };
		4E4BA8E4E2464EAAB353C970 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = juquadraticengine.cpp; path = ql/pricingengines/vanilla/juquadraticengine.cpp; sourceTree = SOURCE_ROOT; };
		4E4C301598094C4FBBD93C4F /* /Users/heiner/git/QuantLib/ql/indexes/inflation/uscpi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = uscpi.hpp; path = ql/indexes/inflation/uscpi.hpp; sourceTree = SOURCE_ROOT; };
		4E59B5CAE2074849B7B9DA7C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdratepc.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp; sourceTree = SOURCE_ROOT; };
		4E5BA1A846BC40C29126983A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/mixedscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mixedscheme.hpp; path = ql/methods/finitedifferences/mixedscheme.hpp; sourceTree = SOURCE_ROOT; };
		4E5D39AE4F31409EA9278A27 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = amortizingfixedratebond.cpp; path = ql/experimental/amortizingbonds/amortizingfixedratebond.cpp; sourceTree = SOURCE_ROOT; };
		4E6A8EFCEB2E40138980FD2E /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = impliedvolatility.cpp; path = ql/instruments/impliedvolatility.cpp; sourceTree = SOURCE_ROOT; };
		4E8DA220FCD9416FADEBF64F /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = kronrodintegral.cpp; path = ql/math/integrals/kronrodintegral.cpp; sourceTree = SOURCE_ROOT; };
		4E944116FB3D48BE84ED1B11 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/legacy/libormarketmodels/all.hpp; sourceTree = SOURCE_ROOT; };
		4E97DAF8AAE1472981D8E61E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitofmeasureconversion.cpp; path = ql/experimental/commodities/unitofmeasureconversion.cpp; sourceTree = SOURCE_ROOT; };
		4EA32A0030A14E5C8FC4DECD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dynprogvppintrinsicvalueengine.cpp; path = ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp; sourceTree = SOURCE_ROOT; };
		4EA33D3E791947D2A28D8E2F /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = deltavolquote.hpp; path = ql/experimental/fx/deltavolquote.hpp; sourceTree = SOURCE_ROOT; };
		4EA4229741544AFAA2703C8F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditytype.hpp; path = ql/experimental/commodities/commoditytype.hpp; sourceTree = SOURCE_ROOT; };
		4EAB2298D39B42D89E47988B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fedfunds.hpp; path = ql/indexes/ibor/fedfunds.hpp; sourceTree = SOURCE_ROOT; };
		4EB6371652D64B5ABB72905E /* /Users/heiner/git/QuantLib/ql/pricingengines/genericmodelengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = genericmodelengine.hpp; path = ql/pricingengines/genericmodelengine.hpp; sourceTree = SOURCE_ROOT; };
		4EB7A20C649B4D3B946FEBBC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/all.hpp; sourceTree = SOURCE_ROOT; };
		4EBC106D6E7D489C8DA06DB7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductswaption.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp; sourceTree = SOURCE_ROOT; };
		4ECFC630634746E2A9340112 /* /Users/heiner/git/QuantLib/test-suite/cms.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cms.cpp; path = "test-suite/cms.cpp"; sourceTree = SOURCE_ROOT; };
		4ED50241ADE5442A83E29633 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepforwards.hpp; path = ql/models/marketmodels/products/multistep/multistepforwards.hpp; sourceTree = SOURCE_ROOT; };
		4EDD4F64EB554C8EA8B1B5E3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultlatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomdefaultlatentmodel.hpp; path = ql/experimental/credit/randomdefaultlatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		4EE42B86FA6D46C798720CE1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcdcalibration.cpp; path = ql/termstructures/volatility/abcdcalibration.cpp; sourceTree = SOURCE_ROOT; };
		4EE84EC50A3C4CAD8069DF69 /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dataparsers.hpp; path = ql/utilities/dataparsers.hpp; sourceTree = SOURCE_ROOT; };
		4EE98437B63F40AF9396AAA8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capfloortermvolsurface.hpp; path = ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		4EF3779333B84F62B25A937A /* /Users/heiner/git/QuantLib/test-suite/compoundoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compoundoption.hpp; path = "test-suite/compoundoption.hpp"; sourceTree = SOURCE_ROOT; };
		4EF591466E51489CBEC25C29 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytichestonengine.hpp; path = ql/pricingengines/vanilla/analytichestonengine.hpp; sourceTree = SOURCE_ROOT; };
		4F023923B992471A9B5C9590 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = batesengine.hpp; path = ql/pricingengines/vanilla/batesengine.hpp; sourceTree = SOURCE_ROOT; };
		4F0A12BF2E1D47EEA3E22158 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionhelper.cpp; path = ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp; sourceTree = SOURCE_ROOT; };
		4F0AB8517E7A4E4780827457 /* /Users/heiner/git/QuantLib/test-suite/businessdayconventions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = businessdayconventions.hpp; path = "test-suite/businessdayconventions.hpp"; sourceTree = SOURCE_ROOT; };
		4F1192B1D8A943A99E8A64A9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = squarerootprocessrndcalculator.hpp; path = ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		4F1197A0E77E4C3BAD541D49 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = secondordermixedderivativeop.hpp; path = ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp; sourceTree = SOURCE_ROOT; };
		4F2501349EBA4903A0237ABE /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discountingswapengine.cpp; path = ql/pricingengines/swap/discountingswapengine.cpp; sourceTree = SOURCE_ROOT; };
		4F503FB20E8E493EBABCA406 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = wulinyongdoublebarrierengine.cpp; path = ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		4F6949DC2B6D41B7861EF4CE /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = steepestdescent.cpp; path = ql/math/optimization/steepestdescent.cpp; sourceTree = SOURCE_ROOT; };
		4F6F8023CFEB4976BD13F42D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticdividendeuropeanengine.hpp; path = ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		4F70825A936247A7A59B262B /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/shortrate/onefactormodels/all.hpp; sourceTree = SOURCE_ROOT; };
		4F72EAA1F8AB4996B8E6F741 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nonlinearfittingmethods.hpp; path = ql/termstructures/yield/nonlinearfittingmethods.hpp; sourceTree = SOURCE_ROOT; };
		4F8C4A7A28C64AF1B9F4BCDC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/schemes/all.hpp; sourceTree = SOURCE_ROOT; };
		4FAC8C6F9702408F91684014 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = claim.cpp; path = ql/instruments/claim.cpp; sourceTree = SOURCE_ROOT; };
		4FBB2ED3EA5A4A1FA009609E /* /Users/heiner/git/QuantLib/test-suite/capfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capfloor.cpp; path = "test-suite/capfloor.cpp"; sourceTree = SOURCE_ROOT; };
		4FC81DE1D0D14253B943FDB3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = noarbsabrabsprobs.cpp; path = ql/experimental/volatility/noarbsabrabsprobs.cpp; sourceTree = SOURCE_ROOT; };
		4FC8919BC7D440C38F813F8A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flatvol.cpp; path = ql/models/marketmodels/models/flatvol.cpp; sourceTree = SOURCE_ROOT; };
		4FCCA9B9B33E4E8AB3867289 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = iborcoupon.cpp; path = ql/cashflows/iborcoupon.cpp; sourceTree = SOURCE_ROOT; };
		4FDEC5658E2140A29ECC850E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/correlations/all.hpp; sourceTree = SOURCE_ROOT; };
		4FE7AED36A934C0CAD14AAE7 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitalcmscoupon.cpp; path = ql/cashflows/digitalcmscoupon.cpp; sourceTree = SOURCE_ROOT; };
		4FF38153D3EF41B98EBFB829 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = varianceoption.cpp; path = ql/experimental/varianceoption/varianceoption.cpp; sourceTree = SOURCE_ROOT; };
		4FFE538BAADE4AF4A8583933 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipathgenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multipathgenerator.hpp; path = ql/methods/montecarlo/multipathgenerator.hpp; sourceTree = SOURCE_ROOT; };
		4FFEC83EAEA34FE39C833982 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcamericanbasketengine.cpp; path = ql/pricingengines/basket/mcamericanbasketengine.cpp; sourceTree = SOURCE_ROOT; };
		5012937909954DCD9A4A94F8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = evolver.hpp; path = ql/models/marketmodels/evolver.hpp; sourceTree = SOURCE_ROOT; };
		501351F95F88420CBBF47040 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadedoptionletvol.hpp; path = ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp; sourceTree = SOURCE_ROOT; };
		501B36F5A7E4463388974C89 /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = beta.cpp; path = ql/math/beta.cpp; sourceTree = SOURCE_ROOT; };
		501DAE8DBD9349F784EB7896 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ninepointlinearop.cpp; path = ql/methods/finitedifferences/operators/ninepointlinearop.cpp; sourceTree = SOURCE_ROOT; };
		501E5BB588914365B9FC7A5E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdklugeextouspreadengine.hpp; path = ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp; sourceTree = SOURCE_ROOT; };
		502C964FBE114C0D938D40A9 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jointstochasticprocess.hpp; path = ql/processes/jointstochasticprocess.hpp; sourceTree = SOURCE_ROOT; };
		5032C87939704086915DCD88 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noarbsabr.hpp; path = ql/experimental/volatility/noarbsabr.hpp; sourceTree = SOURCE_ROOT; };
		503B0535743647AAAD2735C7 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multidimquadrature.cpp; path = ql/experimental/math/multidimquadrature.cpp; sourceTree = SOURCE_ROOT; };
		503EB87E6783417A993EFBC5 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bivariatenormaldistribution.hpp; path = ql/math/distributions/bivariatenormaldistribution.hpp; sourceTree = SOURCE_ROOT; };
		5042900DF6A04B158BE463C6 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = generalstatistics.cpp; path = ql/math/statistics/generalstatistics.cpp; sourceTree = SOURCE_ROOT; };
		504E81B25FCF4EAA8D70A2A6 /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = modifiedbessel.hpp; path = ql/math/modifiedbessel.hpp; sourceTree = SOURCE_ROOT; };
		5050536B78204E63AE3A38CB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = continuousarithmeticasianlevyengine.hpp; path = ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp; sourceTree = SOURCE_ROOT; };
		5055D3CD0DE9498E8289731E /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bspline.cpp; path = ql/math/bspline.cpp; sourceTree = SOURCE_ROOT; };
		507E6A489874406C96AEFB71 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicoupon.cpp; path = ql/cashflows/cpicoupon.cpp; sourceTree = SOURCE_ROOT; };
		509E6362B324492BAF5ED606 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmbatesop.hpp; path = ql/methods/finitedifferences/operators/fdmbatesop.hpp; sourceTree = SOURCE_ROOT; };
		50A319C2CF7A4772938D5DC6 /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = weekendsonly.cpp; path = ql/time/calendars/weekendsonly.cpp; sourceTree = SOURCE_ROOT; };
		50AC258CB96D4D50ACE26E8B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = holderextensibleoption.hpp; path = ql/experimental/exoticoptions/holderextensibleoption.hpp; sourceTree = SOURCE_ROOT; };
		50AD09DD5BB1429CA70A907C /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticdoublebarrierbinaryengine.hpp; path = ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp; sourceTree = SOURCE_ROOT; };
		50C2D54B4AEA449481B1FE2C /* /Users/heiner/git/QuantLib/ql/math/kernelfunctions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kernelfunctions.hpp; path = ql/math/kernelfunctions.hpp; sourceTree = SOURCE_ROOT; };
		50DA254E6CA846609F0056D1 /* /Users/heiner/git/QuantLib/ql/models/volatility/simplelocalestimator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplelocalestimator.hpp; path = ql/models/volatility/simplelocalestimator.hpp; sourceTree = SOURCE_ROOT; };
		50E6494157224173B723A50A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tqreigendecomposition.hpp; path = ql/math/matrixutilities/tqreigendecomposition.hpp; sourceTree = SOURCE_ROOT; };
		50EFF9FCEC3F40B2AD04E1F6 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yieldtermstructure.hpp; path = ql/termstructures/yieldtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		511C5F600DDF457C827D2259 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = choleskydecomposition.cpp; path = ql/math/matrixutilities/choleskydecomposition.cpp; sourceTree = SOURCE_ROOT; };
		511F0986157A4C66B9206276 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralcdoengine.cpp; path = ql/experimental/credit/integralcdoengine.cpp; sourceTree = SOURCE_ROOT; };
		51354ECB1345482DAEA57A7F /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tapcorrelations.hpp; path = ql/math/matrixutilities/tapcorrelations.hpp; sourceTree = SOURCE_ROOT; };
		514B1BA529BF4B9D86DB343A /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flathazardrate.hpp; path = ql/termstructures/credit/flathazardrate.hpp; sourceTree = SOURCE_ROOT; };
		514B748E279E467A89AF5BF8 /* /Users/heiner/git/QuantLib/ql/instrument.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = instrument.hpp; path = ql/instrument.hpp; sourceTree = SOURCE_ROOT; };
		51587E98A38F4191948C05AC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimpleprocess1dmesher.hpp; path = ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		515EC2E3F1074DF9A08DBBA3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaulttype.cpp; path = ql/experimental/credit/defaulttype.cpp; sourceTree = SOURCE_ROOT; };
		516BE923CA254B938811C1A7 /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = usdliborswap.cpp; path = ql/indexes/swap/usdliborswap.cpp; sourceTree = SOURCE_ROOT; };
		516D2F7AB595483D800F3FB1 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lowdiscrepancysequences.hpp; path = "test-suite/lowdiscrepancysequences.hpp"; sourceTree = SOURCE_ROOT; };
		51737F9F99F44F04B0F0E11A /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hullwhiteprocess.cpp; path = ql/processes/hullwhiteprocess.cpp; sourceTree = SOURCE_ROOT; };
		5173C9AC7C8E44EFB11E63C0 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tracing.hpp; path = ql/utilities/tracing.hpp; sourceTree = SOURCE_ROOT; };
		518D39CF66BC44429D021F64 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capflooredinflationcoupon.cpp; path = ql/cashflows/capflooredinflationcoupon.cpp; sourceTree = SOURCE_ROOT; };
		51946D842F4E4500B7239848 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lsmbasissystem.hpp; path = ql/methods/montecarlo/lsmbasissystem.hpp; sourceTree = SOURCE_ROOT; };
		51A9B8693C9C42DAAF79FC1E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = squarerootandersen.hpp; path = ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp; sourceTree = SOURCE_ROOT; };
		51BC1A0C626F4BF192E2CE1A /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultprobabilitykey.hpp; path = ql/experimental/credit/defaultprobabilitykey.hpp; sourceTree = SOURCE_ROOT; };
		51BCE6A5F854436381F23E9A /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discreteintegrals.cpp; path = ql/math/integrals/discreteintegrals.cpp; sourceTree = SOURCE_ROOT; };
		51C5BAD1823543748532644A /* /Users/heiner/git/QuantLib/test-suite/array.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = array.cpp; path = "test-suite/array.cpp"; sourceTree = SOURCE_ROOT; };
		51D09216064146E2B4985B19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseaccountingengine.hpp; path = ql/models/marketmodels/pathwiseaccountingengine.hpp; sourceTree = SOURCE_ROOT; };
		51D4AD4A35A345D4803E1A4A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gridmodellocalvolsurface.hpp; path = ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		51DCDF5258294375B38853D9 /* /Users/heiner/git/QuantLib/ql/math/quadratic.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quadratic.hpp; path = ql/math/quadratic.hpp; sourceTree = SOURCE_ROOT; };
		51E298E42D3F48FC81932F4A /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/catbonds/all.hpp; sourceTree = SOURCE_ROOT; };
		51EE2BAF525A46F184F772B4 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = floatingratecoupon.cpp; path = ql/cashflows/floatingratecoupon.cpp; sourceTree = SOURCE_ROOT; };
		51F03999B46A4AFFB17B5BEE /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = usdliborswap.hpp; path = ql/indexes/swap/usdliborswap.hpp; sourceTree = SOURCE_ROOT; };
		520F78132EA4473991ECE4FD /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitedstates.hpp; path = ql/time/calendars/unitedstates.hpp; sourceTree = SOURCE_ROOT; };
		5217F839CD8D42C7A14EDE44 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bfgs.hpp; path = ql/math/optimization/bfgs.hpp; sourceTree = SOURCE_ROOT; };
		52271DD409AC4D11B27D13AB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = complexchooseroption.hpp; path = ql/experimental/exoticoptions/complexchooseroption.hpp; sourceTree = SOURCE_ROOT; };
		5234E45F386647EF95AB76C6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmdirichletboundary.hpp; path = ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp; sourceTree = SOURCE_ROOT; };
		525933389273470CA0DF4F1B /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdmathfunction.hpp; path = ql/math/abcdmathfunction.hpp; sourceTree = SOURCE_ROOT; };
		525D2BB0B09B4FEEB9425772 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationtermstructure.hpp; path = ql/termstructures/inflationtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		52671152F31040BD905EDDF0 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = generalstatistics.hpp; path = ql/math/statistics/generalstatistics.hpp; sourceTree = SOURCE_ROOT; };
		527455819DB04A349B975173 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = proxygreekengine.cpp; path = ql/models/marketmodels/proxygreekengine.cpp; sourceTree = SOURCE_ROOT; };
		527B712EDACD43409545E619 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = errorfunction.hpp; path = ql/math/errorfunction.hpp; sourceTree = SOURCE_ROOT; };
		52844FC5ECC9421A8B7A9955 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optionletstripper1.cpp; path = ql/termstructures/volatility/optionlet/optionletstripper1.cpp; sourceTree = SOURCE_ROOT; };
		5284A354A92445EF8D0E2104 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = concentrating1dmesher.hpp; path = ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		52866D304BBD46DFB3DA7240 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energybasisswap.cpp; path = ql/experimental/commodities/energybasisswap.cpp; sourceTree = SOURCE_ROOT; };
		528D99A56F324B1BBD8070B0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadedsmilesection.hpp; path = ql/termstructures/volatility/spreadedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		529474EB292F423F848FB2B5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = localvolsurface.cpp; path = ql/termstructures/volatility/equityfx/localvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		529517A83B9D4013BDDB9B18 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = margrabeoption.cpp; path = ql/experimental/exoticoptions/margrabeoption.cpp; sourceTree = SOURCE_ROOT; };
		52A08718EC0D42F8AA0B746E /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = issuer.cpp; path = ql/experimental/credit/issuer.cpp; sourceTree = SOURCE_ROOT; };
		52B222FC878E4E6A89F13C38 /* /Users/heiner/git/QuantLib/ql/math/interpolations/loginterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = loginterpolation.hpp; path = ql/math/interpolations/loginterpolation.hpp; sourceTree = SOURCE_ROOT; };
		52B611C3EE10438A88AB4880 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwisediscounter.cpp; path = ql/models/marketmodels/pathwisediscounter.cpp; sourceTree = SOURCE_ROOT; };
		52BF3AB64F904E7B96972A01 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/bisection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bisection.hpp; path = ql/math/solvers1d/bisection.hpp; sourceTree = SOURCE_ROOT; };
		52C8DE6733FC41D689D7FD39 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/swap/all.hpp; sourceTree = SOURCE_ROOT; };
		52D56B6A8EB44D2EB0B870B8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/dkklibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dkklibor.hpp; path = ql/indexes/ibor/dkklibor.hpp; sourceTree = SOURCE_ROOT; };
		52DF7956B7EA4F799D2CF962 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = iceland.cpp; path = ql/time/calendars/iceland.cpp; sourceTree = SOURCE_ROOT; };
		5308CF127FC846ACAF1634AB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optionletstripper.cpp; path = ql/termstructures/volatility/optionlet/optionletstripper.cpp; sourceTree = SOURCE_ROOT; };
		5311B34FC64840368EEFED1D /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = replication.cpp; path = ql/cashflows/replication.cpp; sourceTree = SOURCE_ROOT; };
		531F05DCC11F4AB8A9ED2E30 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapforwardbasissystem.cpp; path = ql/models/marketmodels/callability/swapforwardbasissystem.cpp; sourceTree = SOURCE_ROOT; };
		53287880DC7C4703804B5B11 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gsrprocesscore.cpp; path = ql/processes/gsrprocesscore.cpp; sourceTree = SOURCE_ROOT; };
		533DD3A7D08A4DE4B4E3CE65 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noarbsabrinterpolation.hpp; path = ql/experimental/volatility/noarbsabrinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		534AFB446A4E4056A389DC03 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcapfloor.cpp; path = ql/instruments/inflationcapfloor.cpp; sourceTree = SOURCE_ROOT; };
		53682E8835654821913139F2 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedcoxingersollross.cpp; path = ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp; sourceTree = SOURCE_ROOT; };
		536F3094476E43239CAD5728 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ratehelpers.cpp; path = ql/termstructures/yield/ratehelpers.cpp; sourceTree = SOURCE_ROOT; };
		5375DE18BFD642BEB3653246 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flatsmilesection.cpp; path = ql/termstructures/volatility/flatsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		537BEE69784D4F268D1635A9 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makearithmeticaverageois.hpp; path = ql/experimental/averageois/makearithmeticaverageois.hpp; sourceTree = SOURCE_ROOT; };
		539AE749C80D47D288607343 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = coupon.cpp; path = ql/cashflows/coupon.cpp; sourceTree = SOURCE_ROOT; };
		539EA6610AA64B47A3FC30C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = atmadjustedsmilesection.cpp; path = ql/termstructures/volatility/atmadjustedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		53B3C32552254BAF9405AEA9 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedswap.cpp; path = ql/pricingengines/swap/discretizedswap.cpp; sourceTree = SOURCE_ROOT; };
		53BBB262D97E4C2F885678C9 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitycube.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolatilitycube.cpp; path = "test-suite/swaptionvolatilitycube.cpp"; sourceTree = SOURCE_ROOT; };
		53C09F574DF94AAABB579519 /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jpyliborswap.hpp; path = ql/indexes/swap/jpyliborswap.hpp; sourceTree = SOURCE_ROOT; };
		53CDF0B69CAC4D22A53C247C /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lossdistribution.cpp; path = ql/experimental/credit/lossdistribution.cpp; sourceTree = SOURCE_ROOT; };
		53DC71E223AC4057A3CADCA5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseaccountingengine.hpp; path = ql/models/marketmodels/pathwiseaccountingengine.hpp; sourceTree = SOURCE_ROOT; };
		53E481A0CC3049CC9A45F3B3 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliedstddevquote.hpp; path = ql/quotes/impliedstddevquote.hpp; sourceTree = SOURCE_ROOT; };
		53EA0BCC5D034711A0634E92 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapratetrigger.hpp; path = ql/models/marketmodels/callability/swapratetrigger.hpp; sourceTree = SOURCE_ROOT; };
		53EA5718E1CE499B956B0F92 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makearithmeticaverageois.cpp; path = ql/experimental/averageois/makearithmeticaverageois.cpp; sourceTree = SOURCE_ROOT; };
		53EB17ABCDD84589988DDC0A /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonprocess.hpp; path = ql/processes/hestonprocess.hpp; sourceTree = SOURCE_ROOT; };
		53EBA2D65115428D87DBD525 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flatforward.hpp; path = ql/termstructures/yield/flatforward.hpp; sourceTree = SOURCE_ROOT; };
		53F627CEC1F14AAA88BF77C5 /* /Users/heiner/git/QuantLib/test-suite/varianceswaps.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = varianceswaps.cpp; path = "test-suite/varianceswaps.cpp"; sourceTree = SOURCE_ROOT; };
		53FEDF07BDA34C499980C0D4 /* /Users/heiner/git/QuantLib/ql/math/rounding.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rounding.hpp; path = ql/math/rounding.hpp; sourceTree = SOURCE_ROOT; };
		5408D807481742148C5CAFE7 /* /Users/heiner/git/QuantLib/ql/termstructures/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/all.hpp; sourceTree = SOURCE_ROOT; };
		5408F1E055CD492881AC044F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdebsm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pdebsm.hpp; path = ql/methods/finitedifferences/pdebsm.hpp; sourceTree = SOURCE_ROOT; };
		540B514D47F54C899E8277CC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/optionlet/all.hpp; sourceTree = SOURCE_ROOT; };
		541A4BF4DA4C43D69A8F87FA /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathmultiassetoption.hpp; path = ql/experimental/mcbasket/pathmultiassetoption.hpp; sourceTree = SOURCE_ROOT; };
		541AA9FEF8384FBBA0EB963B /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vasicek.hpp; path = ql/models/shortrate/onefactormodels/vasicek.hpp; sourceTree = SOURCE_ROOT; };
		541D680AB41045FB814D75FB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdsimplebsswingengine.cpp; path = ql/pricingengines/vanilla/fdsimplebsswingengine.cpp; sourceTree = SOURCE_ROOT; };
		54236AA4ABDD441F9C694349 /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constraint.hpp; path = ql/math/optimization/constraint.hpp; sourceTree = SOURCE_ROOT; };
		54280447FE7C4A0D87222A8A /* /Users/heiner/git/QuantLib/test-suite/zabr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zabr.hpp; path = "test-suite/zabr.hpp"; sourceTree = SOURCE_ROOT; };
		542C9022D93A4B68A37F1F8E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/longstaffschwartzpathpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = longstaffschwartzpathpricer.hpp; path = ql/methods/montecarlo/longstaffschwartzpathpricer.hpp; sourceTree = SOURCE_ROOT; };
		54372C807C224F2BAF342042 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskyassetswap.cpp; path = ql/experimental/credit/riskyassetswap.cpp; sourceTree = SOURCE_ROOT; };
		54445E883F314317B7972C39 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackcalculator.cpp; path = ql/pricingengines/blackcalculator.cpp; sourceTree = SOURCE_ROOT; };
		5468D5BB4FF04A2E8B0DDBF8 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = argentina.hpp; path = ql/time/calendars/argentina.hpp; sourceTree = SOURCE_ROOT; };
		5478EEF131044C7FA53E9E44 /* /Users/heiner/git/QuantLib/ql/indexes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/indexes/all.hpp; sourceTree = SOURCE_ROOT; };
		547BF916F72E49DC8E2A0FCC /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = huslerreisscopula.hpp; path = ql/math/copulas/huslerreisscopula.hpp; sourceTree = SOURCE_ROOT; };
		5486B0EA2B234FAEB22B1006 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discountingswapengine.hpp; path = ql/pricingengines/swap/discountingswapengine.hpp; sourceTree = SOURCE_ROOT; };
		54AFEFB7FFCC41A1AEB974BE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = firstderivativeop.cpp; path = ql/methods/finitedifferences/operators/firstderivativeop.cpp; sourceTree = SOURCE_ROOT; };
		54B5447C535E4BED9D02582D /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapspreadindex.hpp; path = ql/experimental/coupons/swapspreadindex.hpp; sourceTree = SOURCE_ROOT; };
		54B8FD8DFDB94DE2963EDA06 /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = rounding.cpp; path = ql/math/rounding.cpp; sourceTree = SOURCE_ROOT; };
		54D0C9A94BD846DA89140C4A /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fftengine.hpp; path = ql/experimental/variancegamma/fftengine.hpp; sourceTree = SOURCE_ROOT; };
		54E5874FE68D4CC181B663DC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvoldiscrete.cpp; path = ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp; sourceTree = SOURCE_ROOT; };
		54EFB15EEC464AEFB59F6CD0 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tapcorrelations.hpp; path = ql/math/matrixutilities/tapcorrelations.hpp; sourceTree = SOURCE_ROOT; };
		54F1CE6C5F6F4A43990A4350 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmscoupon.cpp; path = ql/cashflows/cmscoupon.cpp; sourceTree = SOURCE_ROOT; };
		54F4BEB5F2F44BA3AFC6CEAC /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/capfloor/all.hpp; sourceTree = SOURCE_ROOT; };
		55046CB71E3C439E9F2158FE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmstepconditioncomposite.cpp; path = ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp; sourceTree = SOURCE_ROOT; };
		5509E21B1C674D40AA52EC10 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/swaptions/all.hpp; sourceTree = SOURCE_ROOT; };
		550E32F12B2547B98B5EF13E /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussianquadratures.hpp; path = ql/math/integrals/gaussianquadratures.hpp; sourceTree = SOURCE_ROOT; };
		550ED4F4E1D341B38BCEFA4A /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discountingbondengine.cpp; path = ql/pricingengines/bond/discountingbondengine.cpp; sourceTree = SOURCE_ROOT; };
		551682EA2171471BA652338B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = expliciteulerscheme.cpp; path = ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp; sourceTree = SOURCE_ROOT; };
		555089153F934B66B8162847 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerocouponinflationswap.hpp; path = ql/instruments/zerocouponinflationswap.hpp; sourceTree = SOURCE_ROOT; };
		55564DEC7BFE4AA4B38C7FB5 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcontinuousfloatinglookback.hpp; path = ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp; sourceTree = SOURCE_ROOT; };
		555965371450455D9F924E7B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gbsmrndcalculator.cpp; path = ql/experimental/finitedifferences/gbsmrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		5563DD4A358A4A7BB67E1F2E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedblackvariancecurve.cpp; path = ql/experimental/volatility/extendedblackvariancecurve.cpp; sourceTree = SOURCE_ROOT; };
		55664950830143D895C43365 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticbarrierengine.hpp; path = ql/pricingengines/barrier/analyticbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		557BE6E7F9564498912B04D5 /* /Users/heiner/git/QuantLib/test-suite/normalclvmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = normalclvmodel.cpp; path = "test-suite/normalclvmodel.cpp"; sourceTree = SOURCE_ROOT; };
		557F8EAFB9A745C3A08CA891 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube1.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolcube1.hpp; path = ql/termstructures/volatility/swaption/swaptionvolcube1.hpp; sourceTree = SOURCE_ROOT; };
		55B481F58DB3419CA299E054 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = symmetricschurdecomposition.cpp; path = ql/math/matrixutilities/symmetricschurdecomposition.cpp; sourceTree = SOURCE_ROOT; };
		55BC615E9FBA491C822B4D1E /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliedvolatility.hpp; path = ql/instruments/impliedvolatility.hpp; sourceTree = SOURCE_ROOT; };
		55CBE34A555344389797FF3A /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = particleswarmoptimization.cpp; path = ql/experimental/math/particleswarmoptimization.cpp; sourceTree = SOURCE_ROOT; };
		55D4AAB70B87440D8C0DC9D5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bjerksundstenslandengine.hpp; path = ql/pricingengines/vanilla/bjerksundstenslandengine.hpp; sourceTree = SOURCE_ROOT; };
		55D6AD34AAB24215830E2708 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = indexmanager.cpp; path = ql/indexes/indexmanager.cpp; sourceTree = SOURCE_ROOT; };
		55E122EE76EA4603A146DD93 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussiancopulapolicy.hpp; path = ql/experimental/math/gaussiancopulapolicy.hpp; sourceTree = SOURCE_ROOT; };
		55EE9C3CCEA749D486795442 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stulzengine.cpp; path = ql/pricingengines/basket/stulzengine.cpp; sourceTree = SOURCE_ROOT; };
		55F388F18860463D84E2C654 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = generalizedhullwhite.cpp; path = ql/experimental/shortrate/generalizedhullwhite.cpp; sourceTree = SOURCE_ROOT; };
		55F8A7E191ED4B1DB033905C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackatmvolcurve.hpp; path = ql/experimental/volatility/blackatmvolcurve.hpp; sourceTree = SOURCE_ROOT; };
		55FC659CC90043ABA6BEFE2A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlocalvolfwdop.hpp; path = ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp; sourceTree = SOURCE_ROOT; };
		5627E9FA57454935A2B48357 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcomplexchooserengine.hpp; path = ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp; sourceTree = SOURCE_ROOT; };
		562F114C8C1745A4926FE890 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcapfloorengines.hpp; path = ql/pricingengines/inflation/inflationcapfloorengines.hpp; sourceTree = SOURCE_ROOT; };
		5636E00EF80A49269686D7AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmmcurvestate.hpp; path = ql/models/marketmodels/curvestates/lmmcurvestate.hpp; sourceTree = SOURCE_ROOT; };
		563C0B6A8C4F40F4851F75A4 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcamericanpathengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcamericanpathengine.hpp; path = ql/experimental/mcbasket/mcamericanpathengine.hpp; sourceTree = SOURCE_ROOT; };
		5645CB088CD54B89BE0BB3FE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdshoutengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdshoutengine.hpp; path = ql/pricingengines/vanilla/fdshoutengine.hpp; sourceTree = SOURCE_ROOT; };
		56529BFE0FB046549E1896D2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/capletvariancecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletvariancecurve.hpp; path = ql/termstructures/volatility/optionlet/capletvariancecurve.hpp; sourceTree = SOURCE_ROOT; };
		565EE622F2764DF6B36A5728 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = generalizedornsteinuhlenbeckprocess.cpp; path = ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp; sourceTree = SOURCE_ROOT; };
		565F6E68DBC140C687FE69D0 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcdmathfunction.cpp; path = ql/math/abcdmathfunction.cpp; sourceTree = SOURCE_ROOT; };
		5676F1A434564C3B8AFE09A7 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerocouponinflationswap.hpp; path = ql/instruments/zerocouponinflationswap.hpp; sourceTree = SOURCE_ROOT; };
		567892B19E7F47569FE3FC5A /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackscholesprocess.cpp; path = ql/processes/blackscholesprocess.cpp; sourceTree = SOURCE_ROOT; };
		567A074845BB4282AB2DCAED /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = midpointcdoengine.cpp; path = ql/experimental/credit/midpointcdoengine.cpp; sourceTree = SOURCE_ROOT; };
		56A0A315FE9B4BF884399915 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonmodel.cpp; path = ql/models/equity/hestonmodel.cpp; sourceTree = SOURCE_ROOT; };
		56A4D2F487D6422E9D290493 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaulttype.hpp; path = ql/experimental/credit/defaulttype.hpp; sourceTree = SOURCE_ROOT; };
		56BE7297616840F597FDE00D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fwdperiodadapter.cpp; path = ql/models/marketmodels/models/fwdperiodadapter.cpp; sourceTree = SOURCE_ROOT; };
		56CF698855C7446DA904A35E /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eurliborswap.hpp; path = ql/indexes/swap/eurliborswap.hpp; sourceTree = SOURCE_ROOT; };
		56EC2F776DE447E28A9FAE43 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/montecarlo/all.hpp; sourceTree = SOURCE_ROOT; };
		56F7B4D2E5C5435BB2CB53F6 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = knuthuniformrng.cpp; path = ql/math/randomnumbers/knuthuniformrng.cpp; sourceTree = SOURCE_ROOT; };
		56F802BB63174EDC87E655EA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = svd.cpp; path = ql/math/matrixutilities/svd.cpp; sourceTree = SOURCE_ROOT; };
		56FDE15BF35F47F1B99F59B3 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticvariancegammaengine.hpp; path = ql/experimental/variancegamma/analyticvariancegammaengine.hpp; sourceTree = SOURCE_ROOT; };
		57091F2CBB194C01BA0D2197 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gammadistribution.cpp; path = ql/math/distributions/gammadistribution.cpp; sourceTree = SOURCE_ROOT; };
		571A7C094CDC46D7B87AFC27 /* /Users/heiner/git/QuantLib/Examples/BasketLosses/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/BasketLosses/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		572ABA19F1F247B98AF71C08 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = barriertype.cpp; path = ql/instruments/barriertype.cpp; sourceTree = SOURCE_ROOT; };
		572AEE3AAB9A4391BE8D0F31 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateipc.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp; sourceTree = SOURCE_ROOT; };
		572BAA5CF491423FB04A8D13 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gjrgarchmodel.hpp; path = ql/models/equity/gjrgarchmodel.hpp; sourceTree = SOURCE_ROOT; };
		573C37266D254997B4EDDD8F /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fittedbonddiscountcurve.cpp; path = ql/termstructures/yield/fittedbonddiscountcurve.cpp; sourceTree = SOURCE_ROOT; };
		574054733914434EB3678A17 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = compositeinstrument.cpp; path = ql/instruments/compositeinstrument.cpp; sourceTree = SOURCE_ROOT; };
		574A0861DC2C4A8DB3E97574 /* /Users/heiner/git/QuantLib/test-suite/tqreigendecomposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tqreigendecomposition.hpp; path = "test-suite/tqreigendecomposition.hpp"; sourceTree = SOURCE_ROOT; };
		575655761D064F519DE0AB36 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = strippedoptionletadapter.hpp; path = ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp; sourceTree = SOURCE_ROOT; };
		5767F6A70124419FB152E7F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcamericanengine.hpp; path = ql/pricingengines/vanilla/mcamericanengine.hpp; sourceTree = SOURCE_ROOT; };
		578334E8981A4E0AAC9BFDD1 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = greeks.hpp; path = ql/pricingengines/greeks.hpp; sourceTree = SOURCE_ROOT; };
		578C2C6AC2FF4FD7B5EAF44E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cotswapfromfwdcorrelation.hpp; path = ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp; sourceTree = SOURCE_ROOT; };
		57A01AD588304321800EC103 /* /Users/heiner/git/QuantLib/ql/instruments/callabilityschedule.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callabilityschedule.hpp; path = ql/instruments/callabilityschedule.hpp; sourceTree = SOURCE_ROOT; };
		57A12BD48E4342AB9E2EEF91 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cashflowvectors.cpp; path = ql/cashflows/cashflowvectors.cpp; sourceTree = SOURCE_ROOT; };
		57ABD0C976554D7699B9E2C9 /* /Users/heiner/git/QuantLib/ql/math/kernelfunctions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kernelfunctions.hpp; path = ql/math/kernelfunctions.hpp; sourceTree = SOURCE_ROOT; };
		57C046AB5DDF4AE5979FC5F3 /* /Users/heiner/git/QuantLib/test-suite/lazyobject.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lazyobject.hpp; path = "test-suite/lazyobject.hpp"; sourceTree = SOURCE_ROOT; };
		57C047771E464FF88BCDC7B0 /* /Users/heiner/git/QuantLib/ql/time/ecb.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ecb.hpp; path = ql/time/ecb.hpp; sourceTree = SOURCE_ROOT; };
		57D177E086BD4F62BAD252F1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = firstderivativeop.cpp; path = ql/methods/finitedifferences/operators/firstderivativeop.cpp; sourceTree = SOURCE_ROOT; };
		57D8252C2BF74649BC475DF8 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiassetoption.hpp; path = ql/instruments/multiassetoption.hpp; sourceTree = SOURCE_ROOT; };
		57EDA17ACADD4EA3A4F31601 /* /Users/heiner/git/QuantLib/Examples/MultidimIntegral/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/MultidimIntegral/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		57F1F2049B86434A89E59BF0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = alphaformconcrete.cpp; path = ql/models/marketmodels/models/alphaformconcrete.cpp; sourceTree = SOURCE_ROOT; };
		57FD8841CFF6400DBE87E7F7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticpdfhestonengine.hpp; path = ql/experimental/exoticoptions/analyticpdfhestonengine.hpp; sourceTree = SOURCE_ROOT; };
		5807078F5CCB4AC48FCAE96C /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitaliborcoupon.hpp; path = ql/cashflows/digitaliborcoupon.hpp; sourceTree = SOURCE_ROOT; };
		5810EA125C2845618E449F35 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/browniangenerators/all.hpp; sourceTree = SOURCE_ROOT; };
		582452318D24487FBD7A2F66 /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = incompletegamma.hpp; path = ql/math/incompletegamma.hpp; sourceTree = SOURCE_ROOT; };
		585557000CF04A4D982FD37F /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = batesprocess.cpp; path = ql/processes/batesprocess.cpp; sourceTree = SOURCE_ROOT; };
		586D55DF025C4040B875960B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = partialtimebarrieroption.hpp; path = ql/experimental/exoticoptions/partialtimebarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		586E2DF8FDB849888049FF37 /* /Users/heiner/git/QuantLib/ql/utilities/vectors.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vectors.hpp; path = ql/utilities/vectors.hpp; sourceTree = SOURCE_ROOT; };
		58845B5754E04C8891AF2941 /* /Users/heiner/git/QuantLib/ql/time/daycounters/one.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = one.hpp; path = ql/time/daycounters/one.hpp; sourceTree = SOURCE_ROOT; };
		5886C521F99C46B99CD22522 /* /Users/heiner/git/QuantLib/ql/math/interpolations/mixedinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mixedinterpolation.hpp; path = ql/math/interpolations/mixedinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		58B2666B016344B28CE8A708 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vasicek.cpp; path = ql/models/shortrate/onefactormodels/vasicek.cpp; sourceTree = SOURCE_ROOT; };
		58BA92191E0441CBA9910B7A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = modifiedcraigsneydscheme.cpp; path = ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp; sourceTree = SOURCE_ROOT; };
		58DE29B570ED454D8F118956 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdblackscholesvanillaengine.cpp; path = ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		58E07DA9D1514A41A0F66845 /* /Users/heiner/git/QuantLib/ql/math/statistics/statistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = statistics.hpp; path = ql/math/statistics/statistics.hpp; sourceTree = SOURCE_ROOT; };
		58E83F2E06A2415A9FB0028A /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = floatfloatswaption.hpp; path = ql/instruments/floatfloatswaption.hpp; sourceTree = SOURCE_ROOT; };
		58F3BB9116AF49E190E9E909 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackvariancecurve.hpp; path = ql/termstructures/volatility/equityfx/blackvariancecurve.hpp; sourceTree = SOURCE_ROOT; };
		58F43EBADF274BEFB8A87AAC /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = perturbativebarrieroptionengine.hpp; path = ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp; sourceTree = SOURCE_ROOT; };
		59048626F7F94BCF960C38B8 /* /Users/heiner/git/QuantLib/Examples/Repo/Repo.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Repo.cpp; path = Examples/Repo/Repo.cpp; sourceTree = SOURCE_ROOT; };
		590F201A707E4E809F1928D6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nothingexercisevalue.hpp; path = ql/models/marketmodels/callability/nothingexercisevalue.hpp; sourceTree = SOURCE_ROOT; };
		591EE9370F3B4193BCA917E8 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/frhicp.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = frhicp.hpp; path = ql/indexes/inflation/frhicp.hpp; sourceTree = SOURCE_ROOT; };
		5939D2A93DBE46C68AF19DD5 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mceuropeanbasketengine.cpp; path = ql/pricingengines/basket/mceuropeanbasketengine.cpp; sourceTree = SOURCE_ROOT; };
		593A0DAC38E94690B0EB5895 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sensitivityanalysis.cpp; path = ql/experimental/risk/sensitivityanalysis.cpp; sourceTree = SOURCE_ROOT; };
		593B9AF12644421BA13E3D10 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = china.hpp; path = ql/time/calendars/china.hpp; sourceTree = SOURCE_ROOT; };
		59573AE3D28D411790196090 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onefactorcopula.cpp; path = ql/experimental/credit/onefactorcopula.cpp; sourceTree = SOURCE_ROOT; };
		595A5D59DC3D45C2B86FF879 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fireflyalgorithm.cpp; path = ql/experimental/math/fireflyalgorithm.cpp; sourceTree = SOURCE_ROOT; };
		595D94BE61F341DD9D3D18E8 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exchangeratemanager.hpp; path = ql/currencies/exchangeratemanager.hpp; sourceTree = SOURCE_ROOT; };
		595EEE26C03A4E9A8BB2E133 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cvaswapengine.hpp; path = ql/pricingengines/swap/cvaswapengine.hpp; sourceTree = SOURCE_ROOT; };
		5978B02CA15C40BCAD7E0ABC /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = plackettcopula.hpp; path = ql/math/copulas/plackettcopula.hpp; sourceTree = SOURCE_ROOT; };
		59A78971C5274008B01F4D31 /* /Users/heiner/git/QuantLib/test-suite/vpp.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vpp.hpp; path = "test-suite/vpp.hpp"; sourceTree = SOURCE_ROOT; };
		59A7D868ACD04E37B3E375E3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yoycapfloortermpricesurface.cpp; path = ql/experimental/inflation/yoycapfloortermpricesurface.cpp; sourceTree = SOURCE_ROOT; };
		59B9439D3254417F97525078 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmextlinexpvolmodel.cpp; path = ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp; sourceTree = SOURCE_ROOT; };
		59CEC9D6610940AEAF26147E /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		59CF883A671B41FE9C38938E /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = australia.cpp; path = ql/time/calendars/australia.cpp; sourceTree = SOURCE_ROOT; };
		59E82CDC049A4537ADB4C7BC /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice1d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lattice1d.hpp; path = ql/methods/lattices/lattice1d.hpp; sourceTree = SOURCE_ROOT; };
		59F5DAB066324426B1619C78 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonhullwhiteop.hpp; path = ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp; sourceTree = SOURCE_ROOT; };
		59F9513B467A40C0A1FF39A8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateballand.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp; sourceTree = SOURCE_ROOT; };
		59F9B6AED65D4C2BB4EF0E1F /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = maxcopula.cpp; path = ql/math/copulas/maxcopula.cpp; sourceTree = SOURCE_ROOT; };
		5A246450A00946F889705527 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = libor.cpp; path = ql/indexes/ibor/libor.cpp; sourceTree = SOURCE_ROOT; };
		5A37E31D60AA4D278398A30C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = spreadedsmilesection.cpp; path = ql/termstructures/volatility/spreadedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		5A63D2B97549496D8C4B9164 /* /Users/heiner/git/QuantLib/ql/position.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = position.hpp; path = ql/position.hpp; sourceTree = SOURCE_ROOT; };
		5A69D90EB79F4AD69D675A42 /* /Users/heiner/git/QuantLib/test-suite/capflooredcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capflooredcoupon.cpp; path = "test-suite/capflooredcoupon.cpp"; sourceTree = SOURCE_ROOT; };
		5A82A550337F448B8A8461C4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/zerocondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerocondition.hpp; path = ql/methods/finitedifferences/zerocondition.hpp; sourceTree = SOURCE_ROOT; };
		5A891BDB6325481FAA954E17 /* /Users/heiner/git/QuantLib/Examples/FittedBondCurve/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/FittedBondCurve/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5A8CCFFE0A4F4AD796C9513E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/chflibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = chflibor.hpp; path = ql/indexes/ibor/chflibor.hpp; sourceTree = SOURCE_ROOT; };
		5A9D16C4466140DCBD751E20 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dswaptionvolatility.hpp; path = ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp; sourceTree = SOURCE_ROOT; };
		5AB03163050B4FBAAFBACC08 /* /Users/heiner/git/QuantLib/test-suite/daycounters.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = daycounters.hpp; path = "test-suite/daycounters.hpp"; sourceTree = SOURCE_ROOT; };
		5ACE8D79C91C4AF48B9DC3A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kirkengine.hpp; path = ql/pricingengines/basket/kirkengine.hpp; sourceTree = SOURCE_ROOT; };
		5ACF8386153C46CAAE72B7C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalcmswapratepc.cpp; path = ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp; sourceTree = SOURCE_ROOT; };
		5AD07711DBB246E3A006E747 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/boxmullergaussianrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = boxmullergaussianrng.hpp; path = ql/math/randomnumbers/boxmullergaussianrng.hpp; sourceTree = SOURCE_ROOT; };
		5AD4280997EB48FD8F1A5E44 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yieldtermstructure.cpp; path = ql/termstructures/yieldtermstructure.cpp; sourceTree = SOURCE_ROOT; };
		5ADA72AABB2B403E82133BFF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = alphafinder.hpp; path = ql/models/marketmodels/models/alphafinder.hpp; sourceTree = SOURCE_ROOT; };
		5AEE07C22122489692C11EEF /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = futuresconvadjustmentquote.hpp; path = ql/quotes/futuresconvadjustmentquote.hpp; sourceTree = SOURCE_ROOT; };
		5AF6ED73AE054396991E44DB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewiseconstantabcdvariance.cpp; path = ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp; sourceTree = SOURCE_ROOT; };
		5AF952F94161495E9AB4F3BD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepforwards.cpp; path = ql/models/marketmodels/products/multistep/multistepforwards.cpp; sourceTree = SOURCE_ROOT; };
		5AFEAFF81DCD411097ACFA0B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmbatessolver.cpp; path = ql/methods/finitedifferences/solvers/fdmbatessolver.cpp; sourceTree = SOURCE_ROOT; };
		5B03E290EE294EF4872D4E84 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gemanroncoroniprocess.cpp; path = ql/experimental/processes/gemanroncoroniprocess.cpp; sourceTree = SOURCE_ROOT; };
		5B3106B25983491FB5285DE6 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonmodelhelper.hpp; path = ql/models/equity/hestonmodelhelper.hpp; sourceTree = SOURCE_ROOT; };
		5B3487132C8F4B6390121FBE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = boundarycondition.cpp; path = ql/methods/finitedifferences/boundarycondition.cpp; sourceTree = SOURCE_ROOT; };
		5B535E297F564F0290027268 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcomplexchooserengine.hpp; path = ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp; sourceTree = SOURCE_ROOT; };
		5B672B3282D54C529ABBBDE9 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = endeulerdiscretization.cpp; path = ql/processes/endeulerdiscretization.cpp; sourceTree = SOURCE_ROOT; };
		5B6970D761354780B58E3D60 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fixedratecoupon.cpp; path = ql/cashflows/fixedratecoupon.cpp; sourceTree = SOURCE_ROOT; };
		5B6BE408A14944BE81C4C287 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = euribor.cpp; path = ql/indexes/ibor/euribor.cpp; sourceTree = SOURCE_ROOT; };
		5B79EBACB65147D5AE2DAFFE /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fedfunds.cpp; path = ql/indexes/ibor/fedfunds.cpp; sourceTree = SOURCE_ROOT; };
		5B80DE6957FC45DA8F12A487 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseaccountingengine.cpp; path = ql/models/marketmodels/pathwiseaccountingengine.cpp; sourceTree = SOURCE_ROOT; };
		5B85130580534A799EB4EC2D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = alphafinder.cpp; path = ql/models/marketmodels/models/alphafinder.cpp; sourceTree = SOURCE_ROOT; };
		5B85FA87A6534DC88B8B28A0 /* /Users/heiner/git/QuantLib/ql/math/solver1d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = solver1d.hpp; path = ql/math/solver1d.hpp; sourceTree = SOURCE_ROOT; };
		5B941474E1F649E8B45D1906 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseconstantabcdvariance.hpp; path = ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp; sourceTree = SOURCE_ROOT; };
		5BA4D725CFC3474BA8847F98 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/vanilla/all.hpp; sourceTree = SOURCE_ROOT; };
		5BB4087B382C4351B1AE4D12 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fittedbonddiscountcurve.hpp; path = ql/termstructures/yield/fittedbonddiscountcurve.hpp; sourceTree = SOURCE_ROOT; };
		5BB4E8C7266E4C939F4BBD9E /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedswap.hpp; path = ql/pricingengines/swap/discretizedswap.hpp; sourceTree = SOURCE_ROOT; };
		5BB54CBA7BFF4AC995840328 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolcube.cpp; path = ql/termstructures/volatility/swaption/swaptionvolcube.cpp; sourceTree = SOURCE_ROOT; };
		5BBA4A2C946B45A7B968A596 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskyassetswapoption.hpp; path = ql/experimental/credit/riskyassetswapoption.hpp; sourceTree = SOURCE_ROOT; };
		5BC2A0D98DA74B3CA1F2E17A /* /Users/heiner/git/QuantLib/test-suite/europeanoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = europeanoption.hpp; path = "test-suite/europeanoption.hpp"; sourceTree = SOURCE_ROOT; };
		5BD0B787906641EDB8A60644 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = evolver.hpp; path = ql/models/marketmodels/evolver.hpp; sourceTree = SOURCE_ROOT; };
		5BD80BB2F1674154A518C299 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticholderextensibleoptionengine.cpp; path = ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		5BFA406AE5104229931BA6B8 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = convertiblebond.cpp; path = ql/experimental/convertiblebonds/convertiblebond.cpp; sourceTree = SOURCE_ROOT; };
		5C1E0FBB356A4F4893626F5D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gmres.hpp; path = ql/math/matrixutilities/gmres.hpp; sourceTree = SOURCE_ROOT; };
		5C243736D0234EDBAC523B1C /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = subperiodcoupons.cpp; path = ql/experimental/coupons/subperiodcoupons.cpp; sourceTree = SOURCE_ROOT; };
		5C3143EC201B44949F21B821 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stickyratchet.hpp; path = ql/instruments/stickyratchet.hpp; sourceTree = SOURCE_ROOT; };
		5C3F682324884FF0B069FAC9 /* /Users/heiner/git/QuantLib/test-suite/piecewisezerospreadedtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisezerospreadedtermstructure.hpp; path = "test-suite/piecewisezerospreadedtermstructure.hpp"; sourceTree = SOURCE_ROOT; };
		5C468A331C7542AC849AC059 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mexico.hpp; path = ql/time/calendars/mexico.hpp; sourceTree = SOURCE_ROOT; };
		5C53C97D28A54B1FB143D884 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmaffinemodeltermstructure.cpp; path = ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp; sourceTree = SOURCE_ROOT; };
		5C59A2DBBD1141EA909CB21A /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = denmark.hpp; path = ql/time/calendars/denmark.hpp; sourceTree = SOURCE_ROOT; };
		5C5DCD415BD94D40AEC950E8 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makeois.hpp; path = ql/instruments/makeois.hpp; sourceTree = SOURCE_ROOT; };
		5C6220482ADF4CCBA46BA09C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodelvolprocess.hpp; path = ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp; sourceTree = SOURCE_ROOT; };
		5C642962A63D44A4B1521CC4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionconstantvol.cpp; path = ql/termstructures/volatility/swaption/swaptionconstantvol.cpp; sourceTree = SOURCE_ROOT; };
		5C81D711743944F8B5050DB4 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mc_discr_geom_av_price.hpp; path = ql/pricingengines/asian/mc_discr_geom_av_price.hpp; sourceTree = SOURCE_ROOT; };
		5CAF0D2D417241FFAF0DB838 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = primenumbers.cpp; path = ql/math/primenumbers.cpp; sourceTree = SOURCE_ROOT; };
		5CB37447CAE442F79A2B9090 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackcapfloorengine.hpp; path = ql/pricingengines/capfloor/blackcapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		5CC2B1D279C3417086FC4708 /* /Users/heiner/git/QuantLib/ql/time/calendars/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/time/calendars/all.hpp; sourceTree = SOURCE_ROOT; };
		5CC9392378DF4EEAAB0AFB0A /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = seedgenerator.cpp; path = ql/math/randomnumbers/seedgenerator.cpp; sourceTree = SOURCE_ROOT; };
		5CD3B1BFB0E74C52BCF72FAC /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = isdacdsengine.cpp; path = ql/pricingengines/credit/isdacdsengine.cpp; sourceTree = SOURCE_ROOT; };
		5CDF1A6C66F94FAA9AE1DE91 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizeddoublebarrieroption.hpp; path = ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		5CEBB020DED345F38492B763 /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = timegrid.cpp; path = ql/timegrid.cpp; sourceTree = SOURCE_ROOT; };
		5CEF619630A24B4390713249 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = barriertype.cpp; path = ql/instruments/barriertype.cpp; sourceTree = SOURCE_ROOT; };
		5D01B3F38317489CAA497CCE /* /Users/heiner/git/QuantLib/ql/experimental/volatility/swaptionvolcube1a.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolcube1a.hpp; path = ql/experimental/volatility/swaptionvolcube1a.hpp; sourceTree = SOURCE_ROOT; };
		5D07777CA402454399AA7C1D /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = issuer.cpp; path = ql/experimental/credit/issuer.cpp; sourceTree = SOURCE_ROOT; };
		5D30F52F09CB4243A7D8C4BC /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardvanillaoption.hpp; path = ql/instruments/forwardvanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		5D4A8A2E7E5340539DE50056 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = squarerootprocess.cpp; path = ql/processes/squarerootprocess.cpp; sourceTree = SOURCE_ROOT; };
		5D5005AF88244A96B80C1DBF /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stochasticprocessarray.hpp; path = ql/processes/stochasticprocessarray.hpp; sourceTree = SOURCE_ROOT; };
		5D51B239145547DD89291804 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optionletstripper.cpp; path = ql/termstructures/volatility/optionlet/optionletstripper.cpp; sourceTree = SOURCE_ROOT; };
		5D5CC20A22B04BA18E37DD77 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/finitedifferencenewtonsafe.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = finitedifferencenewtonsafe.hpp; path = ql/math/solvers1d/finitedifferencenewtonsafe.hpp; sourceTree = SOURCE_ROOT; };
		5D703687DB534B1C84F14F9C /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedzeroinflationcurve.hpp; path = ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp; sourceTree = SOURCE_ROOT; };
		5D70AF727AA347EAA1B9316A /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marshallolkincopula.hpp; path = ql/math/copulas/marshallolkincopula.hpp; sourceTree = SOURCE_ROOT; };
		5D773582E12649A4B961BE04 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = convolvedstudentt.cpp; path = ql/experimental/math/convolvedstudentt.cpp; sourceTree = SOURCE_ROOT; };
		5D78B53714FC42FDB82D5837 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dfloatfloatswaptionengine.cpp; path = ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		5D7A195224904A2AAFA34D7C /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = caphelper.hpp; path = ql/models/shortrate/calibrationhelpers/caphelper.hpp; sourceTree = SOURCE_ROOT; };
		5D7BBC1DF34D4366BD08EC6B /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = beta.cpp; path = ql/math/beta.cpp; sourceTree = SOURCE_ROOT; };
		5D802B39A52E4DF8A166DE5C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdbatesvanillaengine.hpp; path = ql/pricingengines/vanilla/fdbatesvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		5D83C262809D4B7395FFA4C7 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mt19937uniformrng.hpp; path = ql/math/randomnumbers/mt19937uniformrng.hpp; sourceTree = SOURCE_ROOT; };
		5D9D41399A2F476690047343 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = genericlsregression.hpp; path = ql/methods/montecarlo/genericlsregression.hpp; sourceTree = SOURCE_ROOT; };
		5D9F17860D524525AA85782C /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stickyratchet.cpp; path = ql/instruments/stickyratchet.cpp; sourceTree = SOURCE_ROOT; };
		5DA77F28EB074066B2D36DDE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/pricingperiod.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pricingperiod.hpp; path = ql/experimental/commodities/pricingperiod.hpp; sourceTree = SOURCE_ROOT; };
		5DB243779A7F4B158153D2DC /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussiancopulapolicy.cpp; path = ql/experimental/math/gaussiancopulapolicy.cpp; sourceTree = SOURCE_ROOT; };
		5DBAA28AA6BC4D80BE2281DA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm2dimsolver.cpp; path = ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp; sourceTree = SOURCE_ROOT; };
		5DC320B78C1844BAB2CF2813 /* /Users/heiner/git/QuantLib/ql/grid.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = grid.hpp; path = ql/grid.hpp; sourceTree = SOURCE_ROOT; };
		5DC595DEB52B4106A60C0634 /* /Users/heiner/git/QuantLib/Examples/EquityOption/EquityOption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = EquityOption.cpp; path = Examples/EquityOption/EquityOption.cpp; sourceTree = SOURCE_ROOT; };
		5DE96E90EB46415C85457C83 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/variancegamma/all.hpp; sourceTree = SOURCE_ROOT; };
		5DEAB18249464C889B756C46 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultevent.hpp; path = ql/experimental/credit/defaultevent.hpp; sourceTree = SOURCE_ROOT; };
		5DEF4A549D324EFB856A1431 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitymatrix.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolatilitymatrix.hpp; path = "test-suite/swaptionvolatilitymatrix.hpp"; sourceTree = SOURCE_ROOT; };
		5DF4A5F984CB4242BEA4652D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = writerextensibleoption.cpp; path = ql/experimental/exoticoptions/writerextensibleoption.cpp; sourceTree = SOURCE_ROOT; };
		5E0770BBEFA64A7791C17C48 /* /Users/heiner/git/QuantLib/test-suite/variancegamma.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = variancegamma.cpp; path = "test-suite/variancegamma.cpp"; sourceTree = SOURCE_ROOT; };
		5E1066F1BCC84B6EAC3BB723 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dateinterval.cpp; path = ql/experimental/commodities/dateinterval.cpp; sourceTree = SOURCE_ROOT; };
		5E183A6784D142D6985F3683 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = distribution.hpp; path = ql/experimental/credit/distribution.hpp; sourceTree = SOURCE_ROOT; };
		5E26D9E15293479CA3DA9D4C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackatmvolcurve.cpp; path = ql/experimental/volatility/blackatmvolcurve.cpp; sourceTree = SOURCE_ROOT; };
		5E32EBE78A744F91ADD359CB /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gsrprocesscore.hpp; path = ql/processes/gsrprocesscore.hpp; sourceTree = SOURCE_ROOT; };
		5E42D0DB3BED4AE39C36726A /* /Users/heiner/git/QuantLib/test-suite/swap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swap.cpp; path = "test-suite/swap.cpp"; sourceTree = SOURCE_ROOT; };
		5E59274A6531484B9BD826F2 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitalcoupon.hpp; path = ql/cashflows/digitalcoupon.hpp; sourceTree = SOURCE_ROOT; };
		5E61A279ABBB4D99B6515E9E /* DiscreteHedging */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = DiscreteHedging; sourceTree = BUILT_PRODUCTS_DIR; };
		5E84265E375B49C09CEDC1A0 /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = alimikhailhaqcopula.hpp; path = ql/math/copulas/alimikhailhaqcopula.hpp; sourceTree = SOURCE_ROOT; };
		5E8A0512FDB24E08B17CFE94 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskynotional.cpp; path = ql/experimental/catbonds/riskynotional.cpp; sourceTree = SOURCE_ROOT; };
		5E8AFC64F3F546E1872A641A /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedswaption.hpp; path = ql/pricingengines/swaption/discretizedswaption.hpp; sourceTree = SOURCE_ROOT; };
		5E95CBC756F847289E3E31D1 /* /Users/heiner/git/QuantLib/ql/instruments/callabilityschedule.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callabilityschedule.hpp; path = ql/instruments/callabilityschedule.hpp; sourceTree = SOURCE_ROOT; };
		5E9EF85F576945B283C42341 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = floatingratebond.cpp; path = ql/instruments/bonds/floatingratebond.cpp; sourceTree = SOURCE_ROOT; };
		5ED80E79B0D64A7E89928EF4 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = singapore.hpp; path = ql/time/calendars/singapore.hpp; sourceTree = SOURCE_ROOT; };
		5ED8A2D944D0492380241804 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = poland.cpp; path = ql/time/calendars/poland.cpp; sourceTree = SOURCE_ROOT; };
		5EE1CE08F7054994BF63883C /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = floatfloatswap.cpp; path = ql/instruments/floatfloatswap.cpp; sourceTree = SOURCE_ROOT; };
		5EEC90F5A54F434E89945CCA /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vegastressedblackscholesprocess.hpp; path = ql/experimental/processes/vegastressedblackscholesprocess.hpp; sourceTree = SOURCE_ROOT; };
		5EF3A59369E643DDB07161F4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = triplebandlinearop.hpp; path = ql/methods/finitedifferences/operators/triplebandlinearop.hpp; sourceTree = SOURCE_ROOT; };
		5EF9807D44484F199326DF14 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twoassetcorrelationoption.hpp; path = ql/experimental/exoticoptions/twoassetcorrelationoption.hpp; sourceTree = SOURCE_ROOT; };
		5F00E3C6844141D693229D21 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytichestonhullwhiteengine.hpp; path = ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp; sourceTree = SOURCE_ROOT; };
		5F01CBD78FE84C9B821EBA84 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolstructure.hpp; path = ql/termstructures/volatility/swaption/swaptionvolstructure.hpp; sourceTree = SOURCE_ROOT; };
		5F0746BCECC348D88C4CBFAB /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = frequency.cpp; path = ql/time/frequency.cpp; sourceTree = SOURCE_ROOT; };
		5F1B9FB9DF5C494B967304FF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestondoublebarrierengine.cpp; path = ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		5F254CCB76C64D3FB817916E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/expliciteuler.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = expliciteuler.hpp; path = ql/methods/finitedifferences/expliciteuler.hpp; sourceTree = SOURCE_ROOT; };
		5F25EB49761B4FB0B3CEFB79 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/quantotermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantotermstructure.hpp; path = ql/termstructures/yield/quantotermstructure.hpp; sourceTree = SOURCE_ROOT; };
		5F41D2DB50F44C83BFB05F40 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsquarerootfwdop.cpp; path = ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp; sourceTree = SOURCE_ROOT; };
		5F4577143E38406A8DF055F0 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = creditriskplus.cpp; path = ql/experimental/risk/creditriskplus.cpp; sourceTree = SOURCE_ROOT; };
		5F5AA48BC9C348089C0F1EB7 /* /Users/heiner/git/QuantLib/ql/models/model.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = model.cpp; path = ql/models/model.cpp; sourceTree = SOURCE_ROOT; };
		5F5EDA73668A4BBAA19666B7 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = southafrica.cpp; path = ql/time/calendars/southafrica.cpp; sourceTree = SOURCE_ROOT; };
		5F775DE97E3E427D989D6C76 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepoptionlets.cpp; path = ql/models/marketmodels/products/multistep/multistepoptionlets.cpp; sourceTree = SOURCE_ROOT; };
		5F776979E162491A8F5832FA /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forward.cpp; path = ql/instruments/forward.cpp; sourceTree = SOURCE_ROOT; };
		5F7B68748D5642159D8E1F94 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationtermstructure.hpp; path = ql/termstructures/inflationtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		5FA81CAD58A541FD9EEAB254 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stochasticprocess.cpp; path = ql/stochasticprocess.cpp; sourceTree = SOURCE_ROOT; };
		5FADAA9184164ED5B932F823 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = batesprocess.cpp; path = ql/processes/batesprocess.cpp; sourceTree = SOURCE_ROOT; };
		5FB5784EAF974A78BA88D680 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mchimalayaengine.cpp; path = ql/experimental/exoticoptions/mchimalayaengine.cpp; sourceTree = SOURCE_ROOT; };
		5FBF941D03A347D6A46652C8 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = rebatedexercise.cpp; path = ql/rebatedexercise.cpp; sourceTree = SOURCE_ROOT; };
		5FC88E126D45490FB5BA81EC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm2dblackscholessolver.hpp; path = ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp; sourceTree = SOURCE_ROOT; };
		5FD5BD5FF5224C82A5FF68DC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackvariancesurface.hpp; path = ql/termstructures/volatility/equityfx/blackvariancesurface.hpp; sourceTree = SOURCE_ROOT; };
		6017B8A0B2924DA3B0D1F4C9 /* /Users/heiner/git/QuantLib/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6036D10558124201A7D046BE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nodedataprovider.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nodedataprovider.hpp; path = ql/models/marketmodels/callability/nodedataprovider.hpp; sourceTree = SOURCE_ROOT; };
		603F69CD5C354D93BEC41701 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = simplecashflow.cpp; path = ql/cashflows/simplecashflow.cpp; sourceTree = SOURCE_ROOT; };
		6040C789D51943FA8F8AE74C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmconstwrappercorrmodel.hpp; path = ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp; sourceTree = SOURCE_ROOT; };
		60527BF369D9414EB7D79D90 /* /Users/heiner/git/QuantLib/ql/time/schedule.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = schedule.hpp; path = ql/time/schedule.hpp; sourceTree = SOURCE_ROOT; };
		606415A500F643F9A120BD8C /* /Users/heiner/git/QuantLib/ql/math/interpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolation.hpp; path = ql/math/interpolation.hpp; sourceTree = SOURCE_ROOT; };
		606F6F2982F5496394CE0840 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/impliciteuler.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliciteuler.hpp; path = ql/methods/finitedifferences/impliciteuler.hpp; sourceTree = SOURCE_ROOT; };
		607C0538CEE24F8A96192E2D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volatilityinterpolationspecifierabcd.hpp; path = ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp; sourceTree = SOURCE_ROOT; };
		6080B83A5FF0402D819B0065 /* /Users/heiner/git/QuantLib/test-suite/covariance.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = covariance.hpp; path = "test-suite/covariance.hpp"; sourceTree = SOURCE_ROOT; };
		6082AB03DB834B7AA54765AC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bermudanswaptionexercisevalue.hpp; path = ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp; sourceTree = SOURCE_ROOT; };
		609E09C544E64E7FBE9AB090 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepperiodcapletswaptions.cpp; path = ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp; sourceTree = SOURCE_ROOT; };
		60AC6987DE804DBC9A319FD9 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantoforwardvanillaoption.hpp; path = ql/instruments/quantoforwardvanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		60B50F877AF546F6A8E137BC /* /Users/heiner/git/QuantLib/ql/math/statistics/riskstatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskstatistics.hpp; path = ql/math/statistics/riskstatistics.hpp; sourceTree = SOURCE_ROOT; };
		60BE1324DB754C1B863F3A71 /* /Users/heiner/git/QuantLib/test-suite/inflationcpibond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcpibond.cpp; path = "test-suite/inflationcpibond.cpp"; sourceTree = SOURCE_ROOT; };
		60C4332AA923410E9B2CB06A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticdoublebarrierbinaryengine.cpp; path = ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp; sourceTree = SOURCE_ROOT; };
		60DAEE67FA4B4F7281A3B663 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = curvestate.hpp; path = ql/models/marketmodels/curvestate.hpp; sourceTree = SOURCE_ROOT; };
		60EADF64C4FC41A08BEC2FDA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodeldifferences.hpp; path = ql/models/marketmodels/marketmodeldifferences.hpp; sourceTree = SOURCE_ROOT; };
		6117754E8BDD4E558F548983 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimple2dextousolver.hpp; path = ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp; sourceTree = SOURCE_ROOT; };
		6122AEB922E64EDAA8A9B6B6 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = oceania.cpp; path = ql/currencies/oceania.cpp; sourceTree = SOURCE_ROOT; };
		6129E108B646425B9C1D08E2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytic_cont_geom_av_price.cpp; path = ql/pricingengines/asian/analytic_cont_geom_av_price.cpp; sourceTree = SOURCE_ROOT; };
		612BD4FF842C42B09D34D984 /* /Users/heiner/git/QuantLib/test-suite/money.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = money.cpp; path = "test-suite/money.cpp"; sourceTree = SOURCE_ROOT; };
		614A15481DCC45FBA0EA0BB6 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionhelper.hpp; path = ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp; sourceTree = SOURCE_ROOT; };
		615A98DAA6CD46A283D36BBB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionpseudojacobian.hpp; path = ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp; sourceTree = SOURCE_ROOT; };
		618B27B739404B1FA08D48FD /* /Users/heiner/git/QuantLib/ql/math/solvers1d/finitedifferencenewtonsafe.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = finitedifferencenewtonsafe.hpp; path = ql/math/solvers1d/finitedifferencenewtonsafe.hpp; sourceTree = SOURCE_ROOT; };
		6191E18A3F7B4FF9AECD84AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateeulerconstrained.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp; sourceTree = SOURCE_ROOT; };
		6195256BB1E1439D87431CAC /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = floatfloatswap.hpp; path = ql/instruments/floatfloatswap.hpp; sourceTree = SOURCE_ROOT; };
		6198F95F407445FEBA6F84AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = collectnodedata.cpp; path = ql/models/marketmodels/callability/collectnodedata.cpp; sourceTree = SOURCE_ROOT; };
		6199151913804A039926902E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/products/all.hpp; sourceTree = SOURCE_ROOT; };
		61999BD4818E422F9C6DD86D /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fixedratebondforward.hpp; path = ql/instruments/fixedratebondforward.hpp; sourceTree = SOURCE_ROOT; };
		619A866067E240AE905047E8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseconstantvariance.hpp; path = ql/models/marketmodels/models/piecewiseconstantvariance.hpp; sourceTree = SOURCE_ROOT; };
		61A260A49E994164973E6677 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = southkorea.hpp; path = ql/time/calendars/southkorea.hpp; sourceTree = SOURCE_ROOT; };
		61AC54D378AC4803A9A910CD /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativerng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inversecumulativerng.hpp; path = ql/math/randomnumbers/inversecumulativerng.hpp; sourceTree = SOURCE_ROOT; };
		61AF95DB2AE74D1FB1440017 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = china.cpp; path = ql/time/calendars/china.cpp; sourceTree = SOURCE_ROOT; };
		61B4066B70C64891BEF64906 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capletcoterminalmaxhomogeneity.cpp; path = ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp; sourceTree = SOURCE_ROOT; };
		61BA8FAF56C54867A8FA3C31 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = libor.hpp; path = ql/indexes/ibor/libor.hpp; sourceTree = SOURCE_ROOT; };
		61CAB9CEB3A24900AB1C5E9A /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = americanpayoffatexpiry.cpp; path = ql/pricingengines/americanpayoffatexpiry.cpp; sourceTree = SOURCE_ROOT; };
		61DCA77A1D5C4E44864A3AFB /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = midpointcdsengine.hpp; path = ql/pricingengines/credit/midpointcdsengine.hpp; sourceTree = SOURCE_ROOT; };
		61E059CB42DF48FF9F91606A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = impliciteulerscheme.cpp; path = ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp; sourceTree = SOURCE_ROOT; };
		61EA760A1F6E482E8F758711 /* /Users/heiner/git/QuantLib/ql/experimental/credit/factorspreadedhazardratecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = factorspreadedhazardratecurve.hpp; path = ql/experimental/credit/factorspreadedhazardratecurve.hpp; sourceTree = SOURCE_ROOT; };
		61EEE7033A544139A2587418 /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = europe.cpp; path = ql/currencies/europe.cpp; sourceTree = SOURCE_ROOT; };
		6203E1294CA548D18FA93803 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dcapfloorengine.cpp; path = ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		62155971204D401485956828 /* EquityOption */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = EquityOption; sourceTree = BUILT_PRODUCTS_DIR; };
		62202F96122D43BD9367F2F4 /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = schedule.cpp; path = ql/time/schedule.cpp; sourceTree = SOURCE_ROOT; };
		6224A3CEDA5C4B58B33D68AE /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantovanillaoption.cpp; path = ql/instruments/quantovanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		622AC0B1E4B14FD5BB49A1EE /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discrepancystatistics.hpp; path = ql/math/statistics/discrepancystatistics.hpp; sourceTree = SOURCE_ROOT; };
		62321324DF974C0D8EDE9CEE /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/binomialconvertibleengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialconvertibleengine.hpp; path = ql/experimental/convertiblebonds/binomialconvertibleengine.hpp; sourceTree = SOURCE_ROOT; };
		62388503D5984168B3DFC1E0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackcdsoptionengine.cpp; path = ql/experimental/credit/blackcdsoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		624985C8D54A49D2BBF559EE /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel_cms.cpp; path = "test-suite/marketmodel_cms.cpp"; sourceTree = SOURCE_ROOT; };
		62527E44BA394DB8B05B705A /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = compositeinstrument.cpp; path = ql/instruments/compositeinstrument.cpp; sourceTree = SOURCE_ROOT; };
		625A1F1B768F49AA87003096 /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = farliegumbelmorgensterncopula.hpp; path = ql/math/copulas/farliegumbelmorgensterncopula.hpp; sourceTree = SOURCE_ROOT; };
		62627729D31F4421834C9D1F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/curvestates/all.hpp; sourceTree = SOURCE_ROOT; };
		62675524BE8F4F48937C36E8 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdconditions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdconditions.hpp; path = ql/pricingengines/vanilla/fdconditions.hpp; sourceTree = SOURCE_ROOT; };
		628A64C10DE94B699FED49A7 /* /Users/heiner/git/QuantLib/test-suite/bermudanswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bermudanswaption.hpp; path = "test-suite/bermudanswaption.hpp"; sourceTree = SOURCE_ROOT; };
		62A5491B1C5145BB8F683266 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmdif.cpp; path = ql/math/optimization/lmdif.cpp; sourceTree = SOURCE_ROOT; };
		62A9B7B87147479A86287A20 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exponentialjump1dmesher.hpp; path = ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		62D70AE3DFDB407EAF87C31A /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = convertiblebonds.cpp; path = "test-suite/convertiblebonds.cpp"; sourceTree = SOURCE_ROOT; };
		62D9C0D4BD714284A2FA5107 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = business252.hpp; path = ql/time/daycounters/business252.hpp; sourceTree = SOURCE_ROOT; };
		62DBD5822F244D52A62D92AF /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gammadistribution.hpp; path = ql/math/distributions/gammadistribution.hpp; sourceTree = SOURCE_ROOT; };
		62E2FA9D2AF84604B5C61190 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = business252.hpp; path = ql/time/daycounters/business252.hpp; sourceTree = SOURCE_ROOT; };
		62EA52435A234048BF914EA1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = alphafinder.hpp; path = ql/models/marketmodels/models/alphafinder.hpp; sourceTree = SOURCE_ROOT; };
		630C067FA3BF4E05AC942C7E /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = btp.hpp; path = ql/instruments/bonds/btp.hpp; sourceTree = SOURCE_ROOT; };
		6319F4B4D68C441EB56415DF /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = latticerules.cpp; path = ql/math/randomnumbers/latticerules.cpp; sourceTree = SOURCE_ROOT; };
		631A0B0C63CA4A4993C09397 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductinversefloater.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp; sourceTree = SOURCE_ROOT; };
		6333E2E9B7EE4913805CC94E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/meshers/all.hpp; sourceTree = SOURCE_ROOT; };
		634C58F16E5B499398DD3D10 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = merton76process.cpp; path = ql/processes/merton76process.cpp; sourceTree = SOURCE_ROOT; };
		63536535CE0043A2AB099E95 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalcmsspreadpricer.hpp; path = ql/experimental/coupons/lognormalcmsspreadpricer.hpp; sourceTree = SOURCE_ROOT; };
		6356D87B28E8404AB8CF479B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = evolutiondescription.cpp; path = ql/models/marketmodels/evolutiondescription.cpp; sourceTree = SOURCE_ROOT; };
		637358957AE64B0E8C6EC351 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmvolmodel.hpp; path = ql/legacy/libormarketmodels/lmvolmodel.hpp; sourceTree = SOURCE_ROOT; };
		63830BA6F12E4EA8A315351D /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/swaption/all.hpp; sourceTree = SOURCE_ROOT; };
		63A3308F068F4873B7BDBFF8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmmesher.hpp; path = ql/methods/finitedifferences/meshers/fdmmesher.hpp; sourceTree = SOURCE_ROOT; };
		63A7CC953D9F4C99AE869C6B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapratetrigger.hpp; path = ql/models/marketmodels/callability/swapratetrigger.hpp; sourceTree = SOURCE_ROOT; };
		63BB1F871AB14660B509CDCA /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = irregularswap.cpp; path = ql/experimental/swaptions/irregularswap.cpp; sourceTree = SOURCE_ROOT; };
		63E20E60D3F347D694FA28BB /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyinflationoptionletvolatilitystructure2.hpp; path = ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp; sourceTree = SOURCE_ROOT; };
		6407FA59155E46F1B3D9B2A2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = spreadedoptionletvol.cpp; path = ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp; sourceTree = SOURCE_ROOT; };
		640A7D17D83F4095898DBAD2 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = americanpayoffathit.hpp; path = ql/pricingengines/americanpayoffathit.hpp; sourceTree = SOURCE_ROOT; };
		640F5E312E67465A95C92E2E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductswap.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp; sourceTree = SOURCE_ROOT; };
		64145F5889C74A1DA2ED5770 /* /Users/heiner/git/QuantLib/ql/utilities/disposable.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = disposable.hpp; path = ql/utilities/disposable.hpp; sourceTree = SOURCE_ROOT; };
		6416C22A727C4E46875F66AE /* /Users/heiner/git/QuantLib/test-suite/gsr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gsr.cpp; path = "test-suite/gsr.cpp"; sourceTree = SOURCE_ROOT; };
		641B8A3263F0441FAE798224 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralhestonvarianceoptionengine.hpp; path = ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		641F0DE58B004D17B1C8591D /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = irregularswaption.hpp; path = ql/experimental/swaptions/irregularswaption.hpp; sourceTree = SOURCE_ROOT; };
		6440E1E3E9044F1CBBCC05B3 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rebatedexercise.hpp; path = ql/rebatedexercise.hpp; sourceTree = SOURCE_ROOT; };
		6466D735E6C94B8FBCA5C94B /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gemanroncoroniprocess.cpp; path = ql/experimental/processes/gemanroncoroniprocess.cpp; sourceTree = SOURCE_ROOT; };
		6469981ED01D4E55B5D09235 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmlinexpcorrmodel.hpp; path = ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp; sourceTree = SOURCE_ROOT; };
		648E51C6566F43EFAEE643FC /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedvanillaoption.hpp; path = ql/pricingengines/vanilla/discretizedvanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		6494790BA24E4AC8813ADB1A /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = americanpayoffatexpiry.hpp; path = ql/pricingengines/americanpayoffatexpiry.hpp; sourceTree = SOURCE_ROOT; };
		64BCE37647EF45DDAC858B3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonop.hpp; path = ql/methods/finitedifferences/operators/fdmhestonop.hpp; sourceTree = SOURCE_ROOT; };
		64BEF61C70694B778E18AC25 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = linesearchbasedmethod.cpp; path = ql/math/optimization/linesearchbasedmethod.cpp; sourceTree = SOURCE_ROOT; };
		64C0A60F5C4B4E42BA303236 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseconstantvariance.hpp; path = ql/models/marketmodels/models/piecewiseconstantvariance.hpp; sourceTree = SOURCE_ROOT; };
		64CE86D48E1348469D309615 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyinflationoptionletvolatilitystructure.hpp; path = ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		64DC69D4080F492D85F5045C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepperiodcapletswaptions.hpp; path = ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp; sourceTree = SOURCE_ROOT; };
		64E79E4E3D7E4443956C2FA4 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholesfwdop.hpp; path = ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp; sourceTree = SOURCE_ROOT; };
		64F75B21AECA4532B0A9BEB0 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fftengine.hpp; path = ql/experimental/variancegamma/fftengine.hpp; sourceTree = SOURCE_ROOT; };
		64F803C347824C81BC3AE66D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = svddfwdratepc.hpp; path = ql/models/marketmodels/evolvers/svddfwdratepc.hpp; sourceTree = SOURCE_ROOT; };
		64F8D32A248D4477BD754623 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = southafrica.cpp; path = ql/time/calendars/southafrica.cpp; sourceTree = SOURCE_ROOT; };
		65393B79958E42519E678E70 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationhelpers.cpp; path = ql/termstructures/inflation/inflationhelpers.cpp; sourceTree = SOURCE_ROOT; };
		6543F35D0A6649BAA8E6A602 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/nodedata.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nodedata.hpp; path = ql/methods/montecarlo/nodedata.hpp; sourceTree = SOURCE_ROOT; };
		654BE8F09CA64236B8B851A3 /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gbpliborswap.hpp; path = ql/indexes/swap/gbpliborswap.hpp; sourceTree = SOURCE_ROOT; };
		654F914828384694A3BB4500 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/volatilitytype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volatilitytype.hpp; path = ql/termstructures/volatility/volatilitytype.hpp; sourceTree = SOURCE_ROOT; };
		655DF95EF7EC499BB535DF18 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmbatesop.cpp; path = ql/methods/finitedifferences/operators/fdmbatesop.cpp; sourceTree = SOURCE_ROOT; };
		6562C7C1CFF14004A203A080 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = africa.cpp; path = ql/currencies/africa.cpp; sourceTree = SOURCE_ROOT; };
		6577CCDCBBBD41689C1B9B24 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmmnormaldriftcalculator.cpp; path = ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp; sourceTree = SOURCE_ROOT; };
		657814075AB2434D9A4DF019 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = generalizedhullwhite.hpp; path = ql/experimental/shortrate/generalizedhullwhite.hpp; sourceTree = SOURCE_ROOT; };
		6581E1B851E9439B98432123 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optionletstripper1.hpp; path = ql/termstructures/volatility/optionlet/optionletstripper1.hpp; sourceTree = SOURCE_ROOT; };
		6582773D54DC48B7BE287517 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcvanillaengine.hpp; path = ql/pricingengines/vanilla/mcvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		65947FAB60384D829F042425 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = actualactual.hpp; path = ql/time/daycounters/actualactual.hpp; sourceTree = SOURCE_ROOT; };
		65AB221092C548FE83F17D68 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmtimedepdirichletboundary.cpp; path = ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp; sourceTree = SOURCE_ROOT; };
		65BE492AE8614F47ACCB42DF /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basketgeneratingengine.cpp; path = ql/pricingengines/swaption/basketgeneratingengine.cpp; sourceTree = SOURCE_ROOT; };
		65C43E7F10EC422BB9054585 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noarbsabrinterpolatedsmilesection.hpp; path = ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		65EA1E9FD21C4F069F1EBFEB /* /Users/heiner/git/QuantLib/ql/patterns/observable.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = observable.hpp; path = ql/patterns/observable.hpp; sourceTree = SOURCE_ROOT; };
		65EE30F297CB467BAA2768BA /* /Users/heiner/git/QuantLib/test-suite/distributions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = distributions.hpp; path = "test-suite/distributions.hpp"; sourceTree = SOURCE_ROOT; };
		6620943A3D5D467885806F90 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nonlinearfittingmethods.cpp; path = ql/termstructures/yield/nonlinearfittingmethods.cpp; sourceTree = SOURCE_ROOT; };
		663012F08E124A7491C26FD3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmboundaryconditionset.hpp; path = ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp; sourceTree = SOURCE_ROOT; };
		66482DE799F04CB186A1379C /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = recoveryratequote.cpp; path = ql/experimental/credit/recoveryratequote.cpp; sourceTree = SOURCE_ROOT; };
		664D70BBC1714428B478C834 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mexico.cpp; path = ql/time/calendars/mexico.cpp; sourceTree = SOURCE_ROOT; };
		6679B19A13FA48238E91E4A1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmmnormaldriftcalculator.hpp; path = ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp; sourceTree = SOURCE_ROOT; };
		667B159329A94452B8B3A8D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticptdhestonengine.cpp; path = ql/pricingengines/vanilla/analyticptdhestonengine.cpp; sourceTree = SOURCE_ROOT; };
		667DED74FF0D4E2ABE17D197 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm2dblackscholesop.hpp; path = ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp; sourceTree = SOURCE_ROOT; };
		669BE30BFC244881B08A7C87 /* /Users/heiner/git/QuantLib/ql/instruments/dividendschedule.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dividendschedule.hpp; path = ql/instruments/dividendschedule.hpp; sourceTree = SOURCE_ROOT; };
		66A0D7D450BE4DC597248F11 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackformula.cpp; path = ql/pricingengines/blackformula.cpp; sourceTree = SOURCE_ROOT; };
		66A3E04836C449E6A13376EA /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonprocess.cpp; path = ql/processes/hestonprocess.cpp; sourceTree = SOURCE_ROOT; };
		66AC20E0DF124840B0D501E6 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = actualactual.cpp; path = ql/time/daycounters/actualactual.cpp; sourceTree = SOURCE_ROOT; };
		66AF5F308E8C4DFFACC20BD0 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energycommodity.cpp; path = ql/experimental/commodities/energycommodity.cpp; sourceTree = SOURCE_ROOT; };
		66B5117BE5C7442DA482423F /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gausslobattointegral.hpp; path = ql/math/integrals/gausslobattointegral.hpp; sourceTree = SOURCE_ROOT; };
		66D3134A5DB74BE58E7A9E8D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsnapshotcondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp; sourceTree = SOURCE_ROOT; };
		66F7DA50156A4173905DE054 /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makeyoyinflationcapfloor.hpp; path = ql/instruments/makeyoyinflationcapfloor.hpp; sourceTree = SOURCE_ROOT; };
		66FCAF4A2F324F9991E24012 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = douglasscheme.hpp; path = ql/methods/finitedifferences/schemes/douglasscheme.hpp; sourceTree = SOURCE_ROOT; };
		66FE7F0C7F6146F89D608720 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multidimintegrator.hpp; path = ql/experimental/math/multidimintegrator.hpp; sourceTree = SOURCE_ROOT; };
		6707DCC3324F4012B987A330 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelbasissystem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodelbasissystem.hpp; path = ql/models/marketmodels/callability/marketmodelbasissystem.hpp; sourceTree = SOURCE_ROOT; };
		6708D9F094FA4B78973EF235 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/asian/all.hpp; sourceTree = SOURCE_ROOT; };
		670CBF772A2E4D0CB1C3EE2C /* /Users/heiner/git/QuantLib/test-suite/creditdefaultswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = creditdefaultswap.hpp; path = "test-suite/creditdefaultswap.hpp"; sourceTree = SOURCE_ROOT; };
		670CC737DD594D94AEB9FFB2 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = oisratehelper.hpp; path = ql/termstructures/yield/oisratehelper.hpp; sourceTree = SOURCE_ROOT; };
		671A1FDFF3C64725A8121969 /* CDS */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = CDS; sourceTree = BUILT_PRODUCTS_DIR; };
		6734C1ABD197443E95E7D712 /* /Users/heiner/git/QuantLib/ql/math/interpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolation.hpp; path = ql/math/interpolation.hpp; sourceTree = SOURCE_ROOT; };
		6734D08994544AA784FC94B5 /* /Users/heiner/git/QuantLib/test-suite/utilities.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = utilities.hpp; path = "test-suite/utilities.hpp"; sourceTree = SOURCE_ROOT; };
		673A46C1159F4572879EA6C3 /* /Users/heiner/git/QuantLib/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		674CCDE8F71943198E6E237D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multisteppathwisewrapper.hpp; path = ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp; sourceTree = SOURCE_ROOT; };
		6752D2C468694FCC8E2CF575 /* /Users/heiner/git/QuantLib/test-suite/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "test-suite/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		6760D3404C744100BF024B92 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nthtodefault.hpp; path = ql/experimental/credit/nthtodefault.hpp; sourceTree = SOURCE_ROOT; };
		676375AB27794D88985E83CE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmvppstartlimitstepcondition.cpp; path = ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp; sourceTree = SOURCE_ROOT; };
		67763852F4454BC89353AA74 /* /Users/heiner/git/QuantLib/ql/math/integrals/trapezoidintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = trapezoidintegral.hpp; path = ql/math/integrals/trapezoidintegral.hpp; sourceTree = SOURCE_ROOT; };
		6787197E2F3B4E989B78A572 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eulerdiscretization.cpp; path = ql/processes/eulerdiscretization.cpp; sourceTree = SOURCE_ROOT; };
		678AD79378B94A54941F317B /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lineartsrpricer.cpp; path = ql/cashflows/lineartsrpricer.cpp; sourceTree = SOURCE_ROOT; };
		67907F281E8A40FDA414C38B /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yieldtermstructure.hpp; path = ql/termstructures/yieldtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		67A3D3D56CAB44A1B8527B31 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mchullwhiteengine.cpp; path = ql/pricingengines/capfloor/mchullwhiteengine.cpp; sourceTree = SOURCE_ROOT; };
		67BBF21C0B874A6FB3940B6E /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcontinuousfixedlookback.hpp; path = ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp; sourceTree = SOURCE_ROOT; };
		67C99341E6B6454EB20F28DB /* /Users/heiner/git/QuantLib/ql/indexes/ibor/aonia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = aonia.hpp; path = ql/indexes/ibor/aonia.hpp; sourceTree = SOURCE_ROOT; };
		67ED4A6C0A6D457E91C8B440 /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = farliegumbelmorgensterncopula.cpp; path = ql/math/copulas/farliegumbelmorgensterncopula.cpp; sourceTree = SOURCE_ROOT; };
		67EE9FB105E8466AB232EB88 /* /Users/heiner/git/QuantLib/ql/pricingengines/latticeshortratemodelengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = latticeshortratemodelengine.hpp; path = ql/pricingengines/latticeshortratemodelengine.hpp; sourceTree = SOURCE_ROOT; };
		6806019B033B4F77A4719ADB /* /Users/heiner/git/QuantLib/ql/math/interpolations/lagrangeinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lagrangeinterpolation.hpp; path = ql/math/interpolations/lagrangeinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		680B4A091E824DBBBA605573 /* /Users/heiner/git/QuantLib/test-suite/inflationcpiswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcpiswap.cpp; path = "test-suite/inflationcpiswap.cpp"; sourceTree = SOURCE_ROOT; };
		68108F556CB3471FBCDE9DC5 /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = studenttdistribution.cpp; path = ql/math/distributions/studenttdistribution.cpp; sourceTree = SOURCE_ROOT; };
		6813103A8D4C4FA4819087C1 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackswaptionengine.hpp; path = ql/pricingengines/swaption/blackswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		6814732A27F246FCA66EA309 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = volatilityinterpolationspecifier.cpp; path = ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp; sourceTree = SOURCE_ROOT; };
		6831DB4CCB724D679A11772C /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pool.hpp; path = ql/experimental/credit/pool.hpp; sourceTree = SOURCE_ROOT; };
		683BA466E3B0437094E2FED3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capfloortermvolsurface.cpp; path = ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		683C9C8ADF8C49AB94468A46 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extouwithjumpsprocess.cpp; path = ql/experimental/processes/extouwithjumpsprocess.cpp; sourceTree = SOURCE_ROOT; };
		6848764D19224198BF454AA4 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yieldtermstructure.cpp; path = ql/termstructures/yieldtermstructure.cpp; sourceTree = SOURCE_ROOT; };
		6851DF7F458042F6B3851407 /* /Users/heiner/git/QuantLib/test-suite/variancegamma.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = variancegamma.hpp; path = "test-suite/variancegamma.hpp"; sourceTree = SOURCE_ROOT; };
		685B8ECA80974B049D1DFFA6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dsmilesection.hpp; path = ql/termstructures/volatility/gaussian1dsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		685EFA0BD4C943C58FC018B9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactorgaussiancopula.hpp; path = ql/experimental/credit/onefactorgaussiancopula.hpp; sourceTree = SOURCE_ROOT; };
		6871687653E24294A86B54FD /* /Users/heiner/git/QuantLib/ql/indexes/ibor/audlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = audlibor.hpp; path = ql/indexes/ibor/audlibor.hpp; sourceTree = SOURCE_ROOT; };
		68786BF15B9F41DEAF0C592A /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = huslerreisscopula.cpp; path = ql/math/copulas/huslerreisscopula.cpp; sourceTree = SOURCE_ROOT; };
		689CEF58ADBA4135A2CE2B91 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdamericanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdamericanengine.hpp; path = ql/pricingengines/vanilla/fdamericanengine.hpp; sourceTree = SOURCE_ROOT; };
		68AB522F41C84E2D94621F77 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bivariatestudenttdistribution.cpp; path = ql/math/distributions/bivariatestudenttdistribution.cpp; sourceTree = SOURCE_ROOT; };
		68B408BF78834453B1DFD2CB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabr.hpp; path = ql/termstructures/volatility/sabr.hpp; sourceTree = SOURCE_ROOT; };
		68C841EE4FBC4DF3916FF4B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticdividendeuropeanengine.hpp; path = ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		68C8EA6E1D8F4B1F92C45565 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/volatility/all.hpp; sourceTree = SOURCE_ROOT; };
		68F327A63A6D4C2388F510A8 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stulzengine.hpp; path = ql/pricingengines/basket/stulzengine.hpp; sourceTree = SOURCE_ROOT; };
		68F995DC882A45E699AC4DFA /* ConvertibleBonds */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ConvertibleBonds; sourceTree = BUILT_PRODUCTS_DIR; };
		690B365001954D9E9BA0483E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductcashrebate.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp; sourceTree = SOURCE_ROOT; };
		6911297420A8469BA5D5AA32 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nonstandardswap.cpp; path = ql/instruments/nonstandardswap.cpp; sourceTree = SOURCE_ROOT; };
		69159201FE9D4B908048FBC1 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fireflyalgorithm.hpp; path = ql/experimental/math/fireflyalgorithm.hpp; sourceTree = SOURCE_ROOT; };
		691790C50A704FC7B3787830 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = europeanoption.hpp; path = ql/instruments/europeanoption.hpp; sourceTree = SOURCE_ROOT; };
		691D39B0513F4AA6883521CF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fixedlocalvolsurface.cpp; path = ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		692A95D767704300869A20F7 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = impliedstddevquote.cpp; path = ql/quotes/impliedstddevquote.cpp; sourceTree = SOURCE_ROOT; };
		692BC2CD9C6C41F89A361721 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmmesherintegral.hpp; path = ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp; sourceTree = SOURCE_ROOT; };
		693634D53D304F84841548ED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonsolver.hpp; path = ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp; sourceTree = SOURCE_ROOT; };
		6958DD31B8B44033AC41BE72 /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integral.cpp; path = ql/math/integrals/integral.cpp; sourceTree = SOURCE_ROOT; };
		6975C72CF0F14739B6CB8692 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedswap.cpp; path = ql/pricingengines/swap/discretizedswap.cpp; sourceTree = SOURCE_ROOT; };
		6977BD80E1944C2DA5B3E1FA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gmres.cpp; path = ql/math/matrixutilities/gmres.cpp; sourceTree = SOURCE_ROOT; };
		69865B9475644376809C596C /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yoyinflationcoupon.cpp; path = ql/cashflows/yoyinflationcoupon.cpp; sourceTree = SOURCE_ROOT; };
		698ADF91018247D3B7AD9083 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = europeanoption.cpp; path = ql/instruments/europeanoption.cpp; sourceTree = SOURCE_ROOT; };
		698B0D9D29A44C90AA960A54 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onestepcoterminalswaps.hpp; path = ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp; sourceTree = SOURCE_ROOT; };
		6990A6FABBE547A59574AAA2 /* /Users/heiner/git/QuantLib/test-suite/inflationcpibond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcpibond.hpp; path = "test-suite/inflationcpibond.hpp"; sourceTree = SOURCE_ROOT; };
		69A20A9F23A64817823DD8AF /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bondfunctions.hpp; path = ql/pricingengines/bond/bondfunctions.hpp; sourceTree = SOURCE_ROOT; };
		69C1FBBE447B498AAEBE56F1 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/swaptions/all.hpp; sourceTree = SOURCE_ROOT; };
		69C4987189F5491593B9379D /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pool.cpp; path = ql/experimental/credit/pool.cpp; sourceTree = SOURCE_ROOT; };
		69D3EBF4FF484C4AB9D01B8A /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = galamboscopula.cpp; path = ql/math/copulas/galamboscopula.cpp; sourceTree = SOURCE_ROOT; };
		69D72D7D2CBF44DDB0CA724F /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capflooredcoupon.cpp; path = ql/cashflows/capflooredcoupon.cpp; sourceTree = SOURCE_ROOT; };
		69DFF5D6C18F448CB0DD51D2 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gjrgarchmodel.cpp; path = ql/models/equity/gjrgarchmodel.cpp; sourceTree = SOURCE_ROOT; };
		69ED8530774E44DCA9220010 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelparametricexercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodelparametricexercise.hpp; path = ql/models/marketmodels/callability/marketmodelparametricexercise.hpp; sourceTree = SOURCE_ROOT; };
		69FEDAFF921A41289D415ACB /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pascaltriangle.cpp; path = ql/math/pascaltriangle.cpp; sourceTree = SOURCE_ROOT; };
		69FF094081724640997EC231 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitalcmsspreadcoupon.hpp; path = ql/experimental/coupons/digitalcmsspreadcoupon.hpp; sourceTree = SOURCE_ROOT; };
		6A1AA52BAF5B46D28223705A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackvolsurface.hpp; path = ql/experimental/volatility/blackvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		6A22C7687CC041A08816E110 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = switzerland.cpp; path = ql/time/calendars/switzerland.cpp; sourceTree = SOURCE_ROOT; };
		6A2BA20FE5E74D378AEE89B8 /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cliquetoption.cpp; path = ql/instruments/cliquetoption.cpp; sourceTree = SOURCE_ROOT; };
		6A412B937D3E456785AECB2E /* /Users/heiner/git/QuantLib/ql/currencies/asia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = asia.hpp; path = ql/currencies/asia.hpp; sourceTree = SOURCE_ROOT; };
		6A53D28FF66A4EA1A5DB3BB9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmbermudanstepcondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp; sourceTree = SOURCE_ROOT; };
		6A5BC28AAF5A488C8A71A397 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmcorrmodel.cpp; path = ql/legacy/libormarketmodels/lmcorrmodel.cpp; sourceTree = SOURCE_ROOT; };
		6A60A7729CAC4B45A7FB810C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdsimpleklugeextouvppengine.hpp; path = ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp; sourceTree = SOURCE_ROOT; };
		6AB42753D3F64E3C86CB5F8B /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = geometricbrownianprocess.cpp; path = ql/processes/geometricbrownianprocess.cpp; sourceTree = SOURCE_ROOT; };
		6ACFDC835DA745579901523A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volatilityinterpolationspecifier.hpp; path = ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp; sourceTree = SOURCE_ROOT; };
		6AD428D8FC774159912BF14E /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = newzealand.hpp; path = ql/time/calendars/newzealand.hpp; sourceTree = SOURCE_ROOT; };
		6ADCABF4B98F48E0B0F6C19B /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bmaindex.hpp; path = ql/indexes/bmaindex.hpp; sourceTree = SOURCE_ROOT; };
		6ADCE3CE07674FE3A0A27949 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackkarasinski.hpp; path = ql/models/shortrate/onefactormodels/blackkarasinski.hpp; sourceTree = SOURCE_ROOT; };
		6AF100BF99DB4093B3639580 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = region.cpp; path = ql/indexes/region.cpp; sourceTree = SOURCE_ROOT; };
		6AF67A15278147B8A962AF73 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcdigitalengine.cpp; path = ql/pricingengines/vanilla/mcdigitalengine.cpp; sourceTree = SOURCE_ROOT; };
		6B2D7218B0744E899DD3A463 /* /Users/heiner/git/QuantLib/ql/version.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = version.hpp; path = ql/version.hpp; sourceTree = SOURCE_ROOT; };
		6B36C3700F7E40B5A0FD3343 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = complexchooseroption.cpp; path = ql/experimental/exoticoptions/complexchooseroption.cpp; sourceTree = SOURCE_ROOT; };
		6B40965D8C244E6085B7E834 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = levenbergmarquardt.hpp; path = ql/math/optimization/levenbergmarquardt.hpp; sourceTree = SOURCE_ROOT; };
		6B4A9F705DC84C03948F82AA /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicouponpricer.cpp; path = ql/cashflows/cpicouponpricer.cpp; sourceTree = SOURCE_ROOT; };
		6B5E98EB33254F7EBD078D55 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = craigsneydscheme.cpp; path = ql/methods/finitedifferences/schemes/craigsneydscheme.cpp; sourceTree = SOURCE_ROOT; };
		6B83ADB9CDB5435C905E8B6D /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralcdsengine.cpp; path = ql/pricingengines/credit/integralcdsengine.cpp; sourceTree = SOURCE_ROOT; };
		6BB3135B7B57464FA5258080 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/usdlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = usdlibor.hpp; path = ql/indexes/ibor/usdlibor.hpp; sourceTree = SOURCE_ROOT; };
		6BDAC96E8D0446488AD7AEC6 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = factorreduction.hpp; path = ql/math/matrixutilities/factorreduction.hpp; sourceTree = SOURCE_ROOT; };
		6BE40F5E599A41ADBA74B6C9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onestepcoterminalswaps.cpp; path = ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp; sourceTree = SOURCE_ROOT; };
		6BE416D054514507974B07D4 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/earlyexercisepathpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = earlyexercisepathpricer.hpp; path = ql/methods/montecarlo/earlyexercisepathpricer.hpp; sourceTree = SOURCE_ROOT; };
		6BEAAA0CC2914B549BBC50DE /* /Users/heiner/git/QuantLib/ql/experimental/models/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/models/all.hpp; sourceTree = SOURCE_ROOT; };
		6BEF5E494217466C81DD3F94 /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hongkong.hpp; path = ql/time/calendars/hongkong.hpp; sourceTree = SOURCE_ROOT; };
		6C1E3A452CD04BC6A75CFB3E /* /Users/heiner/git/QuantLib/ql/math/solvers1d/ridder.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ridder.hpp; path = ql/math/solvers1d/ridder.hpp; sourceTree = SOURCE_ROOT; };
		6C24102F0D2B45AB93A4F34F /* /Users/heiner/git/QuantLib/ql/models/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/all.hpp; sourceTree = SOURCE_ROOT; };
		6C2AFBB3DE24479C974DA26C /* /Users/heiner/git/QuantLib/test-suite/sampledcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sampledcurve.hpp; path = "test-suite/sampledcurve.hpp"; sourceTree = SOURCE_ROOT; };
		6C3C1D6EBD414F85AB64140C /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipathgenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multipathgenerator.hpp; path = ql/methods/montecarlo/multipathgenerator.hpp; sourceTree = SOURCE_ROOT; };
		6C4EEEFFD6284B11BB321E7E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmg2solver.cpp; path = ql/methods/finitedifferences/solvers/fdmg2solver.cpp; sourceTree = SOURCE_ROOT; };
		6C568CB8FB7D490FABE540B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcdigitalengine.hpp; path = ql/pricingengines/vanilla/mcdigitalengine.hpp; sourceTree = SOURCE_ROOT; };
		6C7027831CB84376BF4D8B7C /* FRA */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = FRA; sourceTree = BUILT_PRODUCTS_DIR; };
		6C999F6B76274A4C9E66E1E2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonexpansionengine.cpp; path = ql/pricingengines/vanilla/hestonexpansionengine.cpp; sourceTree = SOURCE_ROOT; };
		6C9D36F28B72452BB53EFE9B /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dmodel.cpp; path = ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp; sourceTree = SOURCE_ROOT; };
		6CA49E69C9A04557BC9A2244 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialtree.hpp; path = ql/methods/lattices/binomialtree.hpp; sourceTree = SOURCE_ROOT; };
		6CB398B7A705449C90FB6345 /* /Users/heiner/git/QuantLib/ql/config.sun.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = config.sun.hpp; path = ql/config.sun.hpp; sourceTree = SOURCE_ROOT; };
		6CB81C402E7B405A9A38B0C4 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdblackscholesasianengine.hpp; path = ql/pricingengines/asian/fdblackscholesasianengine.hpp; sourceTree = SOURCE_ROOT; };
		6CBA4ABC1A1E4E57BD7A505D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitofmeasureconversionmanager.cpp; path = ql/experimental/commodities/unitofmeasureconversionmanager.cpp; sourceTree = SOURCE_ROOT; };
		6CBD4CDA916043EEA1FCC9B9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackatmvolcurve.cpp; path = ql/experimental/volatility/blackatmvolcurve.cpp; sourceTree = SOURCE_ROOT; };
		6D052E07553E4D4BAA844EF7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackvoltermstructure.hpp; path = ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		6D0749C204144F808341DE4B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalforwardratesanalysis.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = historicalforwardratesanalysis.hpp; path = ql/models/marketmodels/historicalforwardratesanalysis.hpp; sourceTree = SOURCE_ROOT; };
		6D0FB2D55E1B420CB242329A /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kernelinterpolation.hpp; path = ql/math/interpolations/kernelinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		6D1787B3C7694F53B2D50119 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/averageois/all.hpp; sourceTree = SOURCE_ROOT; };
		6D1B499FE48C4B02AC90182F /* /Users/heiner/git/QuantLib/ql/patterns/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/patterns/all.hpp; sourceTree = SOURCE_ROOT; };
		6D20F020E68048DB9CD42CAE /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mincopula.hpp; path = ql/math/copulas/mincopula.hpp; sourceTree = SOURCE_ROOT; };
		6D3DF95EB98E4A04B9AB503A /* /Users/heiner/git/QuantLib/ql/termstructures/credit/probabilitytraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = probabilitytraits.hpp; path = ql/termstructures/credit/probabilitytraits.hpp; sourceTree = SOURCE_ROOT; };
		6D56E204287048FEA24F40B2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/asian/all.hpp; sourceTree = SOURCE_ROOT; };
		6D56E9FE9DDF4D16A6015D4F /* /Users/heiner/git/QuantLib/ql/time/calendars/target.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = target.hpp; path = ql/time/calendars/target.hpp; sourceTree = SOURCE_ROOT; };
		6D6A0B263154425ABF5CD1E6 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolstructuresutilities.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolstructuresutilities.hpp; path = "test-suite/swaptionvolstructuresutilities.hpp"; sourceTree = SOURCE_ROOT; };
		6D7093FA3B5E455BA5F7B1F2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cdsoption.cpp; path = ql/experimental/credit/cdsoption.cpp; sourceTree = SOURCE_ROOT; };
		6D747A2FF12246039AC92F48 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = treeswaptionengine.cpp; path = ql/pricingengines/swaption/treeswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		6D74E7CC5FA34BAF9363EAAA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmdividendhandler.hpp; path = ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp; sourceTree = SOURCE_ROOT; };
		6D922CB38627436CB301C1E4 /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = israel.hpp; path = ql/time/calendars/israel.hpp; sourceTree = SOURCE_ROOT; };
		6D945D68541448EA86FF241C /* /Users/heiner/git/QuantLib/test-suite/matrices.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = matrices.cpp; path = "test-suite/matrices.cpp"; sourceTree = SOURCE_ROOT; };
		6DA26ACC88E54905B8ECB0A4 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantovanillaoption.hpp; path = ql/instruments/quantovanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		6DB907BC0D114E788564AB8F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gbsmrndcalculator.hpp; path = ql/experimental/finitedifferences/gbsmrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		6DC31F8C71C64161896B9DF4 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedconstraint.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = projectedconstraint.hpp; path = ql/math/optimization/projectedconstraint.hpp; sourceTree = SOURCE_ROOT; };
		6DCAD1C959894E998BAB9CAE /* /Users/heiner/git/QuantLib/ql/models/volatility/simplelocalestimator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplelocalestimator.hpp; path = ql/models/volatility/simplelocalestimator.hpp; sourceTree = SOURCE_ROOT; };
		6DD1DB57576B443E934B91CC /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomsequencegenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomsequencegenerator.hpp; path = ql/math/randomnumbers/randomsequencegenerator.hpp; sourceTree = SOURCE_ROOT; };
		6DD364C591584B2DA47CE4C9 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = segmentintegral.hpp; path = ql/math/integrals/segmentintegral.hpp; sourceTree = SOURCE_ROOT; };
		6DE0C05B4ECC4211946C404C /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealing.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hybridsimulatedannealing.hpp; path = ql/experimental/math/hybridsimulatedannealing.hpp; sourceTree = SOURCE_ROOT; };
		6DF4A73C459440B4AA0EA3E5 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcontinuousfixedlookback.hpp; path = ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp; sourceTree = SOURCE_ROOT; };
		6DF8182D5F564924AD6946E9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recursivelossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = recursivelossmodel.hpp; path = ql/experimental/credit/recursivelossmodel.hpp; sourceTree = SOURCE_ROOT; };
		6DFAC83B0D744F5DBC95794E /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedblackscholesprocess.cpp; path = ql/experimental/processes/extendedblackscholesprocess.cpp; sourceTree = SOURCE_ROOT; };
		6DFD3BC3CECD455BB1D88271 /* /Users/heiner/git/QuantLib/test-suite/riskneutraldensitycalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskneutraldensitycalculator.hpp; path = "test-suite/riskneutraldensitycalculator.hpp"; sourceTree = SOURCE_ROOT; };
		6E0D6AE302734FE586FA8F47 /* /Users/heiner/git/QuantLib/test-suite/inflationvolatility.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationvolatility.cpp; path = "test-suite/inflationvolatility.cpp"; sourceTree = SOURCE_ROOT; };
		6E0F344F76B74C0DBAE855AF /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onefactorstudentcopula.cpp; path = ql/experimental/credit/onefactorstudentcopula.cpp; sourceTree = SOURCE_ROOT; };
		6E2980C5022B4357886C8A1F /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticbinarybarrierengine.cpp; path = ql/pricingengines/barrier/analyticbinarybarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		6E3791E0518A40848BA0ED45 /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = filonintegral.cpp; path = ql/math/integrals/filonintegral.cpp; sourceTree = SOURCE_ROOT; };
		6E4FA852C0FF4A38BD4A898B /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcontinuouspartialfixedlookback.cpp; path = ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp; sourceTree = SOURCE_ROOT; };
		6E5D74E5FFD940449B5F5440 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = callspecifiedmultiproduct.cpp; path = ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp; sourceTree = SOURCE_ROOT; };
		6E715C2865C342B9BE4A2E4D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hundsdorferscheme.cpp; path = ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp; sourceTree = SOURCE_ROOT; };
		6E7DCB9038D84518A4DC02F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytic_discr_geom_av_price.hpp; path = ql/pricingengines/asian/analytic_discr_geom_av_price.hpp; sourceTree = SOURCE_ROOT; };
		6E89628B785848649872342A /* /Users/heiner/git/QuantLib/ql/prices.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = prices.hpp; path = ql/prices.hpp; sourceTree = SOURCE_ROOT; };
		6E9CCB83BF994323B61676AD /* /Users/heiner/git/QuantLib/test-suite/pagodaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pagodaoption.hpp; path = "test-suite/pagodaoption.hpp"; sourceTree = SOURCE_ROOT; };
		6EA2DA7F69A440DCA1DD08E3 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = choleskydecomposition.hpp; path = ql/math/matrixutilities/choleskydecomposition.hpp; sourceTree = SOURCE_ROOT; };
		6EAD0323F83B4E61BB780A59 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jumpdiffusionengine.hpp; path = ql/pricingengines/vanilla/jumpdiffusionengine.hpp; sourceTree = SOURCE_ROOT; };
		6EB668C6165D40CF9E6B176F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localconstantvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localconstantvol.hpp; path = ql/termstructures/volatility/equityfx/localconstantvol.hpp; sourceTree = SOURCE_ROOT; };
		6ECC14CBDA7B41878EA43862 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsmmdriftcalculator.hpp; path = ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp; sourceTree = SOURCE_ROOT; };
		6ECCD98B4EA4425F82C74D9B /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = studenttdistribution.hpp; path = ql/math/distributions/studenttdistribution.hpp; sourceTree = SOURCE_ROOT; };
		6EDD4C731E40497DB81EAC98 /* /Users/heiner/git/QuantLib/ql/indexes/region.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = region.hpp; path = ql/indexes/region.hpp; sourceTree = SOURCE_ROOT; };
		6EDDCF9442084490B25A159A /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makeyoyinflationcapfloor.hpp; path = ql/instruments/makeyoyinflationcapfloor.hpp; sourceTree = SOURCE_ROOT; };
		6F1BBC50CA744C4581DE026F /* /Users/heiner/git/QuantLib/ql/time/frequency.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = frequency.hpp; path = ql/time/frequency.hpp; sourceTree = SOURCE_ROOT; };
		6F26414E8984402FB3C11091 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = evolutiondescription.cpp; path = ql/models/marketmodels/evolutiondescription.cpp; sourceTree = SOURCE_ROOT; };
		6F36DBE4D88E41FE9B28E3AE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compoundoption.hpp; path = ql/experimental/exoticoptions/compoundoption.hpp; sourceTree = SOURCE_ROOT; };
		6F3CADCF0D6C4FECA76DCB77 /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = interpolations.cpp; path = "test-suite/interpolations.cpp"; sourceTree = SOURCE_ROOT; };
		6F5B49B7B3044362A63B51E7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactorstudentcopula.hpp; path = ql/experimental/credit/onefactorstudentcopula.hpp; sourceTree = SOURCE_ROOT; };
		6F606644D6D148FEB55FE05F /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytic_cont_geom_av_price.hpp; path = ql/pricingengines/asian/analytic_cont_geom_av_price.hpp; sourceTree = SOURCE_ROOT; };
		6F75357CF3194361B6153F8E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multiproductcomposite.cpp; path = ql/models/marketmodels/products/multiproductcomposite.cpp; sourceTree = SOURCE_ROOT; };
		6F77AEACE4F145E5818D7134 /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdheston.cpp; path = "test-suite/fdheston.cpp"; sourceTree = SOURCE_ROOT; };
		6F9004F80CCE407B8FE92B7C /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simpledaycounter.hpp; path = ql/time/daycounters/simpledaycounter.hpp; sourceTree = SOURCE_ROOT; };
		6FA51EAD482E4E2DA0807A56 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationtermstructure.cpp; path = ql/termstructures/inflationtermstructure.cpp; sourceTree = SOURCE_ROOT; };
		6FAA64AFA0AC433394B8CB56 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/schemes/all.hpp; sourceTree = SOURCE_ROOT; };
		6FAF2DE888DE448BB465F99C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepcoterminalswaptions.hpp; path = ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp; sourceTree = SOURCE_ROOT; };
		6FB1EA72AC274EF180DCE317 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = kirkspreadoptionengine.cpp; path = ql/experimental/exoticoptions/kirkspreadoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		6FBC8F35887043E0B0FDA038 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedcapfloor.cpp; path = ql/pricingengines/capfloor/discretizedcapfloor.cpp; sourceTree = SOURCE_ROOT; };
		6FD73CC66A3041708E8D1DA8 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/barrier/all.hpp; sourceTree = SOURCE_ROOT; };
		6FDFA8FB45224EFAAADFE701 /* /Users/heiner/git/QuantLib/ql/event.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = event.hpp; path = ql/event.hpp; sourceTree = SOURCE_ROOT; };
		6FF0FA0809E747E3994EE111 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = adaptedpathpayoff.hpp; path = ql/experimental/mcbasket/adaptedpathpayoff.hpp; sourceTree = SOURCE_ROOT; };
		705E0614A6FE4EA8A568F065 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholesfwdop.hpp; path = ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp; sourceTree = SOURCE_ROOT; };
		707DBE5921DB4882B2AE184C /* /Users/heiner/git/QuantLib/ql/currencies/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/currencies/all.hpp; sourceTree = SOURCE_ROOT; };
		7088029D239B45E6910A777B /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jpyliborswap.hpp; path = ql/indexes/swap/jpyliborswap.hpp; sourceTree = SOURCE_ROOT; };
		709375F300BF4203915AB07D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholessolver.hpp; path = ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp; sourceTree = SOURCE_ROOT; };
		709A3F94377947A8A8492579 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = normalfwdratepc.cpp; path = ql/models/marketmodels/evolvers/normalfwdratepc.cpp; sourceTree = SOURCE_ROOT; };
		70A714522EC54243877FD586 /* /Users/heiner/git/QuantLib/ql/currency.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = currency.cpp; path = ql/currency.cpp; sourceTree = SOURCE_ROOT; };
		70AB38DD3DE64DE88FC8525B /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = particleswarmoptimization.hpp; path = ql/experimental/math/particleswarmoptimization.hpp; sourceTree = SOURCE_ROOT; };
		70C2C44214184735A9B2AEBE /* /Users/heiner/git/QuantLib/ql/numericalmethod.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = numericalmethod.hpp; path = ql/numericalmethod.hpp; sourceTree = SOURCE_ROOT; };
		70C34D46817D4B3C8A7C4778 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedcallablefixedratebond.hpp; path = ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp; sourceTree = SOURCE_ROOT; };
		70C66CCF228B4D7BAF43B102 /* /Users/heiner/git/QuantLib/ql/math/interpolations/cubicinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cubicinterpolation.hpp; path = ql/math/interpolations/cubicinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		70D34DF7B19A482D8ADDFBC2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticpdfhestonengine.cpp; path = ql/experimental/exoticoptions/analyticpdfhestonengine.cpp; sourceTree = SOURCE_ROOT; };
		70D73330B9D241D0B48B58A3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedblackvariancecurve.cpp; path = ql/experimental/volatility/extendedblackvariancecurve.cpp; sourceTree = SOURCE_ROOT; };
		70F5E1043EAF46E199CE910A /* /Users/heiner/git/QuantLib/ql/config.ansi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = config.ansi.hpp; path = ql/config.ansi.hpp; sourceTree = SOURCE_ROOT; };
		712393366E9842F4B9449536 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compositeinstrument.hpp; path = ql/instruments/compositeinstrument.hpp; sourceTree = SOURCE_ROOT; };
		7137928634FA489B899D896E /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = overnightindexedswap.cpp; path = ql/instruments/overnightindexedswap.cpp; sourceTree = SOURCE_ROOT; };
		718AC22F0DA14BB7B392039F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = knuthuniformrng.hpp; path = ql/math/randomnumbers/knuthuniformrng.hpp; sourceTree = SOURCE_ROOT; };
		7194F5234DAA4AB9BC319AB5 /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = weekday.cpp; path = ql/time/weekday.cpp; sourceTree = SOURCE_ROOT; };
		719C23BA8DAC4402A260E2B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = coshestonengine.cpp; path = ql/pricingengines/vanilla/coshestonengine.cpp; sourceTree = SOURCE_ROOT; };
		71A484A517F84F00B35A3834 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcontinuouspartialfixedlookback.hpp; path = ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp; sourceTree = SOURCE_ROOT; };
		71AD06EA63AD48F7878CE848 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmzabrop.cpp; path = ql/experimental/finitedifferences/fdmzabrop.cpp; sourceTree = SOURCE_ROOT; };
		71AD2B26C352476686BC8A27 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductswaption.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp; sourceTree = SOURCE_ROOT; };
		71D5F26AA632458899ECA764 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = brownianbridge.cpp; path = ql/methods/montecarlo/brownianbridge.cpp; sourceTree = SOURCE_ROOT; };
		71DB6A2816BF4F6EADDEB248 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gumbelcopula.cpp; path = ql/math/copulas/gumbelcopula.cpp; sourceTree = SOURCE_ROOT; };
		71ECEBDE7B924A248D9E238B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonop.cpp; path = ql/methods/finitedifferences/operators/fdmhestonop.cpp; sourceTree = SOURCE_ROOT; };
		71FE0FC985FE471CBC32AD4E /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackcapfloorengine.cpp; path = ql/pricingengines/capfloor/blackcapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		720FBE9F730C4F5F912EB6AF /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackformula.hpp; path = ql/pricingengines/blackformula.hpp; sourceTree = SOURCE_ROOT; };
		7212DCA7A6FC4C0997BC2E2B /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cliquetoption.hpp; path = ql/instruments/cliquetoption.hpp; sourceTree = SOURCE_ROOT; };
		721DA31CA95E4AABA58A2DF9 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/discountcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discountcurve.hpp; path = ql/termstructures/yield/discountcurve.hpp; sourceTree = SOURCE_ROOT; };
		72257E21994D42788D10B25D /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = variancegammaprocess.hpp; path = ql/experimental/variancegamma/variancegammaprocess.hpp; sourceTree = SOURCE_ROOT; };
		722BF0D6CF3A4A28AFD186A4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmquantohelper.cpp; path = ql/methods/finitedifferences/utilities/fdmquantohelper.cpp; sourceTree = SOURCE_ROOT; };
		722E03A22CEF4F09B378DB67 /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hybridhestonhullwhiteprocess.hpp; path = ql/processes/hybridhestonhullwhiteprocess.hpp; sourceTree = SOURCE_ROOT; };
		722E1A6A859244CA85F3525B /* /Users/heiner/git/QuantLib/test-suite/solvers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = solvers.cpp; path = "test-suite/solvers.cpp"; sourceTree = SOURCE_ROOT; };
		722F95F15D314954A3BA8F32 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = italy.hpp; path = ql/time/calendars/italy.hpp; sourceTree = SOURCE_ROOT; };
		7241DA3027D74DBB8C8A64A7 /* /Users/heiner/git/QuantLib/ql/math/curve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = curve.hpp; path = ql/math/curve.hpp; sourceTree = SOURCE_ROOT; };
		72437EAE7BDB426A87764B42 /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jointcalendar.cpp; path = ql/time/calendars/jointcalendar.cpp; sourceTree = SOURCE_ROOT; };
		725BE8B184DC4DC38965A503 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = denmark.cpp; path = ql/time/calendars/denmark.cpp; sourceTree = SOURCE_ROOT; };
		72708D0A909743C8A22C4A1D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vannavolgadoublebarrierengine.hpp; path = ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		7283676739B9456CA5ACB05A /* /Users/heiner/git/QuantLib/ql/exercise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exercise.cpp; path = ql/exercise.cpp; sourceTree = SOURCE_ROOT; };
		7284F6B4B881412CAD93083D /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussianorthogonalpolynomial.cpp; path = ql/math/integrals/gaussianorthogonalpolynomial.cpp; sourceTree = SOURCE_ROOT; };
		7292ADD5956848609CDBE431 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodel.hpp; path = ql/models/marketmodels/marketmodel.hpp; sourceTree = SOURCE_ROOT; };
		7295087C779B40B28D5F2469 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantcpivolatility.hpp; path = ql/termstructures/volatility/inflation/constantcpivolatility.hpp; sourceTree = SOURCE_ROOT; };
		729977EFF13F499A82BCECA8 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nonstandardswaption.cpp; path = ql/instruments/nonstandardswaption.cpp; sourceTree = SOURCE_ROOT; };
		7299EB922E374B81BC3F6E06 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = iborcoupon.hpp; path = ql/cashflows/iborcoupon.hpp; sourceTree = SOURCE_ROOT; };
		729A4257D1DA4C87B5A45823 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskybond.hpp; path = ql/experimental/credit/riskybond.hpp; sourceTree = SOURCE_ROOT; };
		72ACB624368A41D499E818C9 /* /Users/heiner/git/QuantLib/ql/patterns/lazyobject.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lazyobject.hpp; path = ql/patterns/lazyobject.hpp; sourceTree = SOURCE_ROOT; };
		72B411F0185642938BDC2C43 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exchangeratemanager.cpp; path = ql/currencies/exchangeratemanager.cpp; sourceTree = SOURCE_ROOT; };
		72D10E50977A44EDA4744A36 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticgjrgarchengine.hpp; path = ql/pricingengines/vanilla/analyticgjrgarchengine.hpp; sourceTree = SOURCE_ROOT; };
		72D60290DDE34357862CE4AC /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardswapquote.hpp; path = ql/quotes/forwardswapquote.hpp; sourceTree = SOURCE_ROOT; };
		72F12B6B452A4C29A5EAC94E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dsmilesection.cpp; path = ql/termstructures/volatility/gaussian1dsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		733F24C9F4D94879A4C681E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = atmadjustedsmilesection.hpp; path = ql/termstructures/volatility/atmadjustedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		734956DACF4346E898D6642A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmcovarproxy.cpp; path = ql/legacy/libormarketmodels/lfmcovarproxy.cpp; sourceTree = SOURCE_ROOT; };
		734B9B5F73C0479995D417DC /* /Users/heiner/git/QuantLib/ql/exercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exercise.hpp; path = ql/exercise.hpp; sourceTree = SOURCE_ROOT; };
		735EEFFE46234EE797145AF8 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = averageoiscouponpricer.hpp; path = ql/experimental/averageois/averageoiscouponpricer.hpp; sourceTree = SOURCE_ROOT; };
		73609021CAAF4E7DA01E20E1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackvariancecurve.hpp; path = ql/termstructures/volatility/equityfx/blackvariancecurve.hpp; sourceTree = SOURCE_ROOT; };
		737462AD12F1415C93E238FC /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makeswaption.cpp; path = ql/instruments/makeswaption.cpp; sourceTree = SOURCE_ROOT; };
		7375DF317D7B4B10A5B2FEBA /* /Users/heiner/git/QuantLib/ql/prices.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = prices.cpp; path = ql/prices.cpp; sourceTree = SOURCE_ROOT; };
		7377DD6E545F4BDB87FDD2F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dcapfloorengine.hpp; path = ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		7398026339D8450CAA75A068 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackcalculator.hpp; path = ql/pricingengines/blackcalculator.hpp; sourceTree = SOURCE_ROOT; };
		7399E73B2AC64227955AF15B /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantodoublebarrieroption.hpp; path = ql/experimental/barrieroption/quantodoublebarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		73B87055D4424CFA928632E8 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmlinexpcorrmodel.hpp; path = ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp; sourceTree = SOURCE_ROOT; };
		73C02D0D3E2F4FCA875CA298 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optionletstripper.hpp; path = ql/termstructures/volatility/optionlet/optionletstripper.hpp; sourceTree = SOURCE_ROOT; };
		73D81EB811F24138AF435191 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/falseposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = falseposition.hpp; path = ql/math/solvers1d/falseposition.hpp; sourceTree = SOURCE_ROOT; };
		73D83B64579A42D9A848741D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonblackvolsurface.cpp; path = ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		73DE6FD6EAEF47E88583F307 /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = europe.cpp; path = ql/currencies/europe.cpp; sourceTree = SOURCE_ROOT; };
		73E0D51F26D34DC89A786F25 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcdmathfunction.cpp; path = ql/math/abcdmathfunction.cpp; sourceTree = SOURCE_ROOT; };
		73F2CF6A175142A29DC45683 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/constrainedevolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constrainedevolver.hpp; path = ql/models/marketmodels/constrainedevolver.hpp; sourceTree = SOURCE_ROOT; };
		7407D7A5C64C4D33B6AE6686 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cdo.cpp; path = ql/experimental/credit/cdo.cpp; sourceTree = SOURCE_ROOT; };
		741484C70A8A4D1FB54FA7B3 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = termstructure.cpp; path = ql/termstructure.cpp; sourceTree = SOURCE_ROOT; };
		741E7BEBE33D49B3B8BF7DD7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmarithmeticaveragecondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp; sourceTree = SOURCE_ROOT; };
		74378CCDAA8A4591BD83BC3A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapratetrigger.cpp; path = ql/models/marketmodels/callability/swapratetrigger.cpp; sourceTree = SOURCE_ROOT; };
		7439E3E5562D4BA1861C7E53 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = g2.cpp; path = ql/models/shortrate/twofactormodels/g2.cpp; sourceTree = SOURCE_ROOT; };
		743F746F2849456BBF1D286C /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdblackscholesrebateengine.hpp; path = ql/pricingengines/barrier/fdblackscholesrebateengine.hpp; sourceTree = SOURCE_ROOT; };
		744272BC49414D058F47945E /* /Users/heiner/git/QuantLib/test-suite/binaryoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = binaryoption.cpp; path = "test-suite/binaryoption.cpp"; sourceTree = SOURCE_ROOT; };
		7448BDC2438649EEB619D07B /* /Users/heiner/git/QuantLib/ql/math/autocovariance.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = autocovariance.hpp; path = ql/math/autocovariance.hpp; sourceTree = SOURCE_ROOT; };
		7470AE3772F548E592B7DE2D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmhullwhiteparam.cpp; path = ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp; sourceTree = SOURCE_ROOT; };
		747B680B4F6E4A75A15642E2 /* /Users/heiner/git/QuantLib/test-suite/americanoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = americanoption.hpp; path = "test-suite/americanoption.hpp"; sourceTree = SOURCE_ROOT; };
		747C8A384B6B4671A2088ADB /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/termstructures/all.hpp; sourceTree = SOURCE_ROOT; };
		749E981048CB48B78DC90F18 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = latticersg.cpp; path = ql/math/randomnumbers/latticersg.cpp; sourceTree = SOURCE_ROOT; };
		74A212F966904791BBC770BD /* /Users/heiner/git/QuantLib/test-suite/money.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = money.hpp; path = "test-suite/money.hpp"; sourceTree = SOURCE_ROOT; };
		74BC53FEC55B47C596EFB645 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nthtodefault.cpp; path = ql/experimental/credit/nthtodefault.cpp; sourceTree = SOURCE_ROOT; };
		74D8E6C80A674FCABEC568AD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capletcoterminalmaxhomogeneity.cpp; path = ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp; sourceTree = SOURCE_ROOT; };
		74F862F92980496490C94E47 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = svd.cpp; path = ql/math/matrixutilities/svd.cpp; sourceTree = SOURCE_ROOT; };
		7513F748FD5948D79F35A4D2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/all.hpp; sourceTree = SOURCE_ROOT; };
		75323AB4D69A4A5DA0D312C0 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralhestonvarianceoptionengine.cpp; path = ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		7538D7DFC8A142CABA7D7508 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stochasticcollocationinvcdf.cpp; path = ql/math/randomnumbers/stochasticcollocationinvcdf.cpp; sourceTree = SOURCE_ROOT; };
		756D084ACB9949E79448B77A /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapspreadindex.cpp; path = ql/experimental/coupons/swapspreadindex.cpp; sourceTree = SOURCE_ROOT; };
		758F4CCA0C8841DDBC262157 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolcube.hpp; path = ql/termstructures/volatility/swaption/swaptionvolcube.hpp; sourceTree = SOURCE_ROOT; };
		75A2D7552CD34D18946DE297 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cashflows.hpp; path = ql/cashflows/cashflows.hpp; sourceTree = SOURCE_ROOT; };
		75AAF712C88A42BFAAFE2453 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bbsw.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bbsw.hpp; path = ql/indexes/ibor/bbsw.hpp; sourceTree = SOURCE_ROOT; };
		75B0AC35C2D7456D81B39FF2 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = overnightindexedcoupon.hpp; path = ql/cashflows/overnightindexedcoupon.hpp; sourceTree = SOURCE_ROOT; };
		75B2813D2B644799992F2330 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = numericaldifferentiation.cpp; path = ql/experimental/math/numericaldifferentiation.cpp; sourceTree = SOURCE_ROOT; };
		75B6FD9F5C7A44A9999FCC31 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cdsoption.hpp; path = ql/experimental/credit/cdsoption.hpp; sourceTree = SOURCE_ROOT; };
		75C91662FFE6433DB536959E /* /Users/heiner/git/QuantLib/test-suite/rngtraits.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = rngtraits.cpp; path = "test-suite/rngtraits.cpp"; sourceTree = SOURCE_ROOT; };
		75D5299FB60F4B74A6ABC87C /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bmaswap.cpp; path = ql/instruments/bmaswap.cpp; sourceTree = SOURCE_ROOT; };
		75E11E8971B04163992838C6 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flatforward.cpp; path = ql/termstructures/yield/flatforward.cpp; sourceTree = SOURCE_ROOT; };
		75E240437BA940C4A73E4149 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = garch.hpp; path = ql/models/volatility/garch.hpp; sourceTree = SOURCE_ROOT; };
		75EA0CEAECC2441A95984E04 /* /Users/heiner/git/QuantLib/ql/instruments/claim.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = claim.hpp; path = ql/instruments/claim.hpp; sourceTree = SOURCE_ROOT; };
		75EB90A52578478DAD98EA44 /* /Users/heiner/git/QuantLib/test-suite/cdo.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cdo.hpp; path = "test-suite/cdo.hpp"; sourceTree = SOURCE_ROOT; };
		761D88B59847413B9CD385A3 /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = schedule.cpp; path = ql/time/schedule.cpp; sourceTree = SOURCE_ROOT; };
		7627A40E642D4FCD92816E9B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapratetrigger.cpp; path = ql/models/marketmodels/callability/swapratetrigger.cpp; sourceTree = SOURCE_ROOT; };
		766558DF184446E6869994CD /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = catrisk.hpp; path = ql/experimental/catbonds/catrisk.hpp; sourceTree = SOURCE_ROOT; };
		7675D3BE4C1F46E6B2C14753 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonexpansionengine.hpp; path = ql/pricingengines/vanilla/hestonexpansionengine.hpp; sourceTree = SOURCE_ROOT; };
		7679F6BA1C46408884ADF32A /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = voltermstructure.cpp; path = ql/termstructures/voltermstructure.cpp; sourceTree = SOURCE_ROOT; };
		769558F5B6904581BBB219DF /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = amortizingcmsratebond.cpp; path = ql/experimental/amortizingbonds/amortizingcmsratebond.cpp; sourceTree = SOURCE_ROOT; };
		76A63685ABFE4B2989B5DAD5 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ratehelpers.cpp; path = ql/termstructures/yield/ratehelpers.cpp; sourceTree = SOURCE_ROOT; };
		76A90F52D3334B68AF93FBC3 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = levenbergmarquardt.cpp; path = ql/math/optimization/levenbergmarquardt.cpp; sourceTree = SOURCE_ROOT; };
		76B68133693B4B2CBDE9E886 /* /Users/heiner/git/QuantLib/test-suite/numericaldifferentiation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = numericaldifferentiation.hpp; path = "test-suite/numericaldifferentiation.hpp"; sourceTree = SOURCE_ROOT; };
		76BAF7B5983F400EA5F677EE /* /Users/heiner/git/QuantLib/test-suite/commodityunitofmeasure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commodityunitofmeasure.hpp; path = "test-suite/commodityunitofmeasure.hpp"; sourceTree = SOURCE_ROOT; };
		76CC76BEA90949A1AD4FC575 /* /Users/heiner/git/QuantLib/ql/math/optimization/method.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = method.hpp; path = ql/math/optimization/method.hpp; sourceTree = SOURCE_ROOT; };
		76CDB78A6CC3403983C9D109 /* /Users/heiner/git/QuantLib/Examples/GlobalOptimizer/GlobalOptimizer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = GlobalOptimizer.cpp; path = Examples/GlobalOptimizer/GlobalOptimizer.cpp; sourceTree = SOURCE_ROOT; };
		76D8FE90C6B34542ACBB13D1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sobolrsg.hpp; path = ql/math/randomnumbers/sobolrsg.hpp; sourceTree = SOURCE_ROOT; };
		76DF11C47B2F4D56A92790FD /* /Users/heiner/git/QuantLib/ql/cashflow.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cashflow.hpp; path = ql/cashflow.hpp; sourceTree = SOURCE_ROOT; };
		76F8999241144151B2853DE7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedblackvariancesurface.hpp; path = ql/experimental/volatility/extendedblackvariancesurface.hpp; sourceTree = SOURCE_ROOT; };
		76FE16BDE176448CA199C8EC /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = shibor.cpp; path = ql/indexes/ibor/shibor.cpp; sourceTree = SOURCE_ROOT; };
		7702F42E044C4ED48CCBA7B8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackconstantvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackconstantvol.hpp; path = ql/termstructures/volatility/equityfx/blackconstantvol.hpp; sourceTree = SOURCE_ROOT; };
		770A452110034111AF2FAA27 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = volcube.cpp; path = ql/experimental/volatility/volcube.cpp; sourceTree = SOURCE_ROOT; };
		77159EF635664CF5B57C4F1C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelbasissystem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodelbasissystem.hpp; path = ql/models/marketmodels/callability/marketmodelbasissystem.hpp; sourceTree = SOURCE_ROOT; };
		771D60B9D7874692BE1BB1A0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseaccountingengine.cpp; path = ql/models/marketmodels/pathwiseaccountingengine.cpp; sourceTree = SOURCE_ROOT; };
		772FFEA949CC4DE19B1592E9 /* /Users/heiner/git/QuantLib/Examples/Swap/swapvaluation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapvaluation.cpp; path = Examples/Swap/swapvaluation.cpp; sourceTree = SOURCE_ROOT; };
		7746FEBE259C4FCC857B0E2A /* /Users/heiner/git/QuantLib/test-suite/gsr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gsr.hpp; path = "test-suite/gsr.hpp"; sourceTree = SOURCE_ROOT; };
		774751A4BF044D7DB42D18AE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = evolutiondescription.hpp; path = ql/models/marketmodels/evolutiondescription.hpp; sourceTree = SOURCE_ROOT; };
		77569132181248AD8A41D27E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticbarrierengine.cpp; path = ql/pricingengines/barrier/analyticbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		775DB70BF6FD4E72B23113E3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardspreadedtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardspreadedtermstructure.hpp; path = ql/termstructures/yield/forwardspreadedtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		776C25E9F425478A958A273E /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dataparsers.cpp; path = ql/utilities/dataparsers.cpp; sourceTree = SOURCE_ROOT; };
		7770482AD0DB4C829896ED67 /* /Users/heiner/git/QuantLib/ql/mathconstants.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mathconstants.hpp; path = ql/mathconstants.hpp; sourceTree = SOURCE_ROOT; };
		777070E00B274590A89C0F29 /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/multicurvesensitivities.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multicurvesensitivities.hpp; path = ql/experimental/termstructures/multicurvesensitivities.hpp; sourceTree = SOURCE_ROOT; };
		7774ACEE12E94F40A79CA9BE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cotswapfromfwdcorrelation.cpp; path = ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp; sourceTree = SOURCE_ROOT; };
		7776B0B5D3B149C19B13FEE7 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdmathfunction.hpp; path = ql/math/abcdmathfunction.hpp; sourceTree = SOURCE_ROOT; };
		777C8D3D91D543D79A382159 /* /Users/heiner/git/QuantLib/ql/event.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = event.cpp; path = ql/event.cpp; sourceTree = SOURCE_ROOT; };
		77905C4BB17543A4B93A2D3E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jumpdiffusionengine.cpp; path = ql/pricingengines/vanilla/jumpdiffusionengine.cpp; sourceTree = SOURCE_ROOT; };
		77A12951415D42D5AA999C63 /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exchangerate.cpp; path = ql/exchangerate.cpp; sourceTree = SOURCE_ROOT; };
		77AA8F8BBE58420D864D8B87 /* /Users/heiner/git/QuantLib/test-suite/creditriskplus.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = creditriskplus.cpp; path = "test-suite/creditriskplus.cpp"; sourceTree = SOURCE_ROOT; };
		77B489C8DC3F42989A50D41C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmbermudanstepcondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp; sourceTree = SOURCE_ROOT; };
		77BA82B4140848F3AE10FA7F /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytic_discr_geom_av_strike.cpp; path = ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp; sourceTree = SOURCE_ROOT; };
		77C820D3F00C448881A9C02D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = longstaffschwartzmultipathpricer.hpp; path = ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp; sourceTree = SOURCE_ROOT; };
		77ECA370D4FC45299583AED9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvoldiscrete.hpp; path = ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp; sourceTree = SOURCE_ROOT; };
		77EF39FA294C498AB66F850F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdminnervaluecalculator.hpp; path = ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp; sourceTree = SOURCE_ROOT; };
		77FA4DEF32F74A11856B365B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmamericanstepcondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp; sourceTree = SOURCE_ROOT; };
		77FFC15D24A8462797D9BE56 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/trlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = trlibor.hpp; path = ql/indexes/ibor/trlibor.hpp; sourceTree = SOURCE_ROOT; };
		7816408FDEA1406A91CF6D3F /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newtonsafe.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = newtonsafe.hpp; path = ql/math/solvers1d/newtonsafe.hpp; sourceTree = SOURCE_ROOT; };
		781DD5A0528E4BC988F319DC /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onefactormodel.cpp; path = ql/models/shortrate/onefactormodel.cpp; sourceTree = SOURCE_ROOT; };
		7824B6A13450419FB31C70EE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bumpinstrumentjacobian.cpp; path = ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp; sourceTree = SOURCE_ROOT; };
		7830BFB617C04967B5925F47 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/gbplibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gbplibor.hpp; path = ql/indexes/ibor/gbplibor.hpp; sourceTree = SOURCE_ROOT; };
		7838295D53CC4B878747469C /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackcallablebondengine.cpp; path = ql/experimental/callablebonds/blackcallablebondengine.cpp; sourceTree = SOURCE_ROOT; };
		78403B04DFEA48F1AC1FB255 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = indexedcashflow.hpp; path = ql/cashflows/indexedcashflow.hpp; sourceTree = SOURCE_ROOT; };
		78451FEFCF1F4757A8216CDA /* /Users/heiner/git/QuantLib/test-suite/optimizers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optimizers.hpp; path = "test-suite/optimizers.hpp"; sourceTree = SOURCE_ROOT; };
		784C145F16804616BF9F09BF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hundsdorferscheme.hpp; path = ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp; sourceTree = SOURCE_ROOT; };
		785C669A82EF4B0E90BDC1B3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = expcorrelations.hpp; path = ql/models/marketmodels/correlations/expcorrelations.hpp; sourceTree = SOURCE_ROOT; };
		786B923E7B47469BB77A0176 /* /Users/heiner/git/QuantLib/Examples/BermudanSwaption/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/BermudanSwaption/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		786D10F263A0410B9F9C5261 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletcoterminalalphacalibration.hpp; path = ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp; sourceTree = SOURCE_ROOT; };
		786E3EA3B67443A0A8AEA0E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/fdtypedefs.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdtypedefs.hpp; path = ql/methods/finitedifferences/fdtypedefs.hpp; sourceTree = SOURCE_ROOT; };
		787E7362BDD4439D81E7C4B3 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = projection.hpp; path = ql/math/optimization/projection.hpp; sourceTree = SOURCE_ROOT; };
		788A84BFD86D4562935FBDF7 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dnonstandardswaptionengine.hpp; path = ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		78A37238A5F045D8B72F2AED /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constantestimator.cpp; path = ql/models/volatility/constantestimator.cpp; sourceTree = SOURCE_ROOT; };
		78A4D06C74454085BAF98955 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bsmrndcalculator.cpp; path = ql/experimental/finitedifferences/bsmrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		78B54E1521C142A5B307C1D6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmlinearoplayout.cpp; path = ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp; sourceTree = SOURCE_ROOT; };
		78B8B59617564341922ED15E /* /Users/heiner/git/QuantLib/test-suite/distributions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = distributions.cpp; path = "test-suite/distributions.cpp"; sourceTree = SOURCE_ROOT; };
		78E52937083A4485A7D5A63F /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = arithmeticaverageois.hpp; path = ql/experimental/averageois/arithmeticaverageois.hpp; sourceTree = SOURCE_ROOT; };
		78E9838433744607ADEB3CAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pseudorootfacade.hpp; path = ql/models/marketmodels/models/pseudorootfacade.hpp; sourceTree = SOURCE_ROOT; };
		78EDEFF8706F43DCACD1D7C5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optionletstripper2.hpp; path = ql/termstructures/volatility/optionlet/optionletstripper2.hpp; sourceTree = SOURCE_ROOT; };
		790562E63F694154AD1B6F08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = juquadraticengine.hpp; path = ql/pricingengines/vanilla/juquadraticengine.hpp; sourceTree = SOURCE_ROOT; };
		790B3E4DCD1E4CE4A95C03AA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplechooseroption.hpp; path = ql/experimental/exoticoptions/simplechooseroption.hpp; sourceTree = SOURCE_ROOT; };
		790D60FC832A48B88AA59595 /* /Users/heiner/git/QuantLib/ql/math/distributions/binomialdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialdistribution.hpp; path = ql/math/distributions/binomialdistribution.hpp; sourceTree = SOURCE_ROOT; };
		793753CDE1004CD1A1F0D471 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmvolmodel.hpp; path = ql/legacy/libormarketmodels/lmvolmodel.hpp; sourceTree = SOURCE_ROOT; };
		79380F6023964E1B9958EC91 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = noarbsabr.cpp; path = ql/experimental/volatility/noarbsabr.cpp; sourceTree = SOURCE_ROOT; };
		793FEFC234E84BB1A120E26F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tridiagonaloperator.cpp; path = ql/methods/finitedifferences/tridiagonaloperator.cpp; sourceTree = SOURCE_ROOT; };
		7983D5F7B2884DBAB337F70E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = batesengine.hpp; path = ql/pricingengines/vanilla/batesengine.hpp; sourceTree = SOURCE_ROOT; };
		79B336D5F2B54C5B8F78963F /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discreteintegrals.hpp; path = ql/math/integrals/discreteintegrals.hpp; sourceTree = SOURCE_ROOT; };
		79E18AC7F3AF4F93A4C6AEB9 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = survivalprobabilitystructure.hpp; path = ql/termstructures/credit/survivalprobabilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		79ECE982EC224AE0A720B483 /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraphelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bootstraphelper.hpp; path = ql/termstructures/bootstraphelper.hpp; sourceTree = SOURCE_ROOT; };
		79F93382F9E64E2A8EAD3825 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = libor.hpp; path = ql/indexes/ibor/libor.hpp; sourceTree = SOURCE_ROOT; };
		7A129B9AF7A04478AA492F66 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = getcovariance.hpp; path = ql/math/matrixutilities/getcovariance.hpp; sourceTree = SOURCE_ROOT; };
		7A1E6DA78E34497085D6546E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonhullwhitesolver.cpp; path = ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp; sourceTree = SOURCE_ROOT; };
		7A3B45A447B04D658BD8941E /* /Users/heiner/git/QuantLib/Examples/Replication/Replication.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Replication.cpp; path = Examples/Replication/Replication.cpp; sourceTree = SOURCE_ROOT; };
		7A3EB129542C459097DC2587 /* /Users/heiner/git/QuantLib/test-suite/garch.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = garch.cpp; path = "test-suite/garch.cpp"; sourceTree = SOURCE_ROOT; };
		7A3F48DF92894CEB83319FB9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonblackvolsurface.hpp; path = ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		7A846008A8D545878CACAECB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticholderextensibleoptionengine.hpp; path = ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		7A927598CEA842E7A562796D /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussianlhplossmodel.cpp; path = ql/experimental/credit/gaussianlhplossmodel.cpp; sourceTree = SOURCE_ROOT; };
		7AFFDDCEF2134162BBA81855 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mc_discr_arith_av_strike.cpp; path = ql/pricingengines/asian/mc_discr_arith_av_strike.cpp; sourceTree = SOURCE_ROOT; };
		7B2187032A2A468AA7759EC9 /* /Users/heiner/git/QuantLib/test-suite/ode.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ode.hpp; path = "test-suite/ode.hpp"; sourceTree = SOURCE_ROOT; };
		7B23081F1C534C60AC757333 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capletcoterminalalphacalibration.cpp; path = ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp; sourceTree = SOURCE_ROOT; };
		7B28B4EDB0D94E8CA1BE4A10 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/audlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = audlibor.hpp; path = ql/indexes/ibor/audlibor.hpp; sourceTree = SOURCE_ROOT; };
		7B2A70952E4D4C3BBD5D35EA /* /Users/heiner/git/QuantLib/ql/math/primenumbers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = primenumbers.hpp; path = ql/math/primenumbers.hpp; sourceTree = SOURCE_ROOT; };
		7B5E0B31701649D5A15A2E26 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmaffinemodelswapinnervalue.cpp; path = ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp; sourceTree = SOURCE_ROOT; };
		7B6F698FB6B349199AD0BFC9 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = expm.cpp; path = ql/experimental/math/expm.cpp; sourceTree = SOURCE_ROOT; };
		7B756A0D181D4A458FA04A81 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = floatingratecoupon.hpp; path = ql/cashflows/floatingratecoupon.hpp; sourceTree = SOURCE_ROOT; };
		7B9F3CCC6A9844CB9443626B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionpseudojacobian.hpp; path = ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp; sourceTree = SOURCE_ROOT; };
		7BAC186CC9B64A86935EF2D1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparsematrix.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sparsematrix.hpp; path = ql/math/matrixutilities/sparsematrix.hpp; sourceTree = SOURCE_ROOT; };
		7BB20559F7584AAB892E03C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateeuler.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp; sourceTree = SOURCE_ROOT; };
		7BBE59DE58CD48E3BC6C7147 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedcapfloor.hpp; path = ql/pricingengines/capfloor/discretizedcapfloor.hpp; sourceTree = SOURCE_ROOT; };
		7BC4E3575B714A939FCC9369 /* /Users/heiner/git/QuantLib/test-suite/partialtimebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = partialtimebarrieroption.cpp; path = "test-suite/partialtimebarrieroption.cpp"; sourceTree = SOURCE_ROOT; };
		7BD81B0F8F31412EA04A5301 /* /Users/heiner/git/QuantLib/ql/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = ql/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		7BD86FA885EB4FB0B442755C /* /Users/heiner/git/QuantLib/ql/time/calendars/china.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = china.hpp; path = ql/time/calendars/china.hpp; sourceTree = SOURCE_ROOT; };
		7BEAE3E5F0324BA084B78EDC /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = weekday.cpp; path = ql/time/weekday.cpp; sourceTree = SOURCE_ROOT; };
		7BFE197CB82E49568770FF59 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = numericaldifferentiation.hpp; path = ql/experimental/math/numericaldifferentiation.hpp; sourceTree = SOURCE_ROOT; };
		7C042F7B902C48E384BF8179 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ratepseudorootjacobian.hpp; path = ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp; sourceTree = SOURCE_ROOT; };
		7C1ED98A15284BE18E9626DB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capfloortermvolcurve.hpp; path = ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp; sourceTree = SOURCE_ROOT; };
		7C2910C6E8FE4869988117EF /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = chisquaredistribution.cpp; path = ql/math/distributions/chisquaredistribution.cpp; sourceTree = SOURCE_ROOT; };
		7C36CFC5E30E43E7B8491A3F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discounter.hpp; path = ql/models/marketmodels/discounter.hpp; sourceTree = SOURCE_ROOT; };
		7C3F66813A4E4F92B54F5632 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dswaptionengine.cpp; path = ql/pricingengines/swaption/gaussian1dswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		7C55A9C4A5F549D29B59EE93 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskstats.cpp; path = "test-suite/riskstats.cpp"; sourceTree = SOURCE_ROOT; };
		7C6562E7E6E64AF28B1ABD6E /* /Users/heiner/git/QuantLib/ql/default.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = default.hpp; path = ql/default.hpp; sourceTree = SOURCE_ROOT; };
		7C703482F4E94FD28E84B41F /* /Users/heiner/git/QuantLib/Examples/Gaussian1dModels/Gaussian1dModels.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = Gaussian1dModels.cpp; path = Examples/Gaussian1dModels/Gaussian1dModels.cpp; sourceTree = SOURCE_ROOT; };
		7C983C0375E24F66B15C87EF /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = incrementalstatistics.cpp; path = ql/math/statistics/incrementalstatistics.cpp; sourceTree = SOURCE_ROOT; };
		7CA5559C431D447685931BAE /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = barrieroption.cpp; path = "test-suite/barrieroption.cpp"; sourceTree = SOURCE_ROOT; };
		7CA96E74872946669936015A /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = levenbergmarquardt.cpp; path = ql/math/optimization/levenbergmarquardt.cpp; sourceTree = SOURCE_ROOT; };
		7CD0AA0509E84763BC12C89B /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussianorthogonalpolynomial.hpp; path = ql/math/integrals/gaussianorthogonalpolynomial.hpp; sourceTree = SOURCE_ROOT; };
		7CE1AF8D31E44B259E87F1D4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		7CE6D35892D042E9A5BC9449 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stepcondition.hpp; path = ql/methods/finitedifferences/stepcondition.hpp; sourceTree = SOURCE_ROOT; };
		7D0B4F21EAC243DEAB393186 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/piecewiseconstantcorrelation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseconstantcorrelation.hpp; path = ql/models/marketmodels/piecewiseconstantcorrelation.hpp; sourceTree = SOURCE_ROOT; };
		7D138A9AC75D484BABA540F7 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makecms.hpp; path = ql/instruments/makecms.hpp; sourceTree = SOURCE_ROOT; };
		7D14662ED9B1416B9A07EAF7 /* /Users/heiner/git/QuantLib/ql/errors.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = errors.cpp; path = ql/errors.cpp; sourceTree = SOURCE_ROOT; };
		7D242C8B6EAF4D3D8E02FDA2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultlossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultlossmodel.hpp; path = ql/experimental/credit/defaultlossmodel.hpp; sourceTree = SOURCE_ROOT; };
		7D3979D33CD44BA4A7841F2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantcapfloortermvol.hpp; path = ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp; sourceTree = SOURCE_ROOT; };
		7D3C4E8E5D8049148482516E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepperiodcapletswaptions.cpp; path = ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp; sourceTree = SOURCE_ROOT; };
		7D437E92BF0F4A9781831D8C /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makeois.cpp; path = ql/instruments/makeois.cpp; sourceTree = SOURCE_ROOT; };
		7D4B84C6B9B94FF987164CFB /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = primitivepolynomials.cpp; path = ql/math/randomnumbers/primitivepolynomials.cpp; sourceTree = SOURCE_ROOT; };
		7D6A59C4B4BC4466AFD73E6B /* /Users/heiner/git/QuantLib/ql/experimental/credit/homogeneouspooldef.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = homogeneouspooldef.hpp; path = ql/experimental/credit/homogeneouspooldef.hpp; sourceTree = SOURCE_ROOT; };
		7D81B65667AC4FA893D6DCFA /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basket.hpp; path = ql/experimental/credit/basket.hpp; sourceTree = SOURCE_ROOT; };
		7D962B9A52624AB5935B79C6 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = maxcopula.cpp; path = ql/math/copulas/maxcopula.cpp; sourceTree = SOURCE_ROOT; };
		7DAB28997E0144958170341D /* /Users/heiner/git/QuantLib/test-suite/optionletstripper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optionletstripper.hpp; path = "test-suite/optionletstripper.hpp"; sourceTree = SOURCE_ROOT; };
		7DAFA9E94D57421987D4D9A7 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cashflows.cpp; path = ql/cashflows/cashflows.cpp; sourceTree = SOURCE_ROOT; };
		7DB34DBC3AB943CE9E8CC53B /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = haganirregularswaptionengine.cpp; path = ql/experimental/swaptions/haganirregularswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		7DD74202988F4F20A01BFBA1 /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = normalclvmodel.hpp; path = ql/experimental/models/normalclvmodel.hpp; sourceTree = SOURCE_ROOT; };
		7DDF87A1AB2C44B1AF335DD5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localvoltermstructure.hpp; path = ql/termstructures/volatility/equityfx/localvoltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		7DE1B6578B0440D496822331 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dategenerationrule.hpp; path = ql/time/dategenerationrule.hpp; sourceTree = SOURCE_ROOT; };
		7DE6B4AA3D5348DEB7DB61E5 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmconstwrappervolmodel.hpp; path = ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp; sourceTree = SOURCE_ROOT; };
		7E03026F16094281ACBA819F /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcapfloorengine.hpp; path = ql/pricingengines/capfloor/analyticcapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		7E03B3C342BA4020BD6A218A /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capflooredcoupon.cpp; path = ql/cashflows/capflooredcoupon.cpp; sourceTree = SOURCE_ROOT; };
		7E0CB62D352047CC9CB97827 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1djamshidianswaptionengine.cpp; path = ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		7E161495F1D843E48C982107 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bespokecalendar.hpp; path = ql/time/calendars/bespokecalendar.hpp; sourceTree = SOURCE_ROOT; };
		7E189848DA6A442DBCC40FCD /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = svd.hpp; path = ql/math/matrixutilities/svd.hpp; sourceTree = SOURCE_ROOT; };
		7E27849BFCE543369EF740EE /* /Users/heiner/git/QuantLib/Examples/FittedBondCurve/FittedBondCurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = FittedBondCurve.cpp; path = Examples/FittedBondCurve/FittedBondCurve.cpp; sourceTree = SOURCE_ROOT; };
		7E27E79D2F3E475B8CD1F52D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmcovarparam.cpp; path = ql/legacy/libormarketmodels/lfmcovarparam.cpp; sourceTree = SOURCE_ROOT; };
		7E2D976EB90542978DB2753F /* /Users/heiner/git/QuantLib/ql/termstructures/iterativebootstrap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = iterativebootstrap.hpp; path = ql/termstructures/iterativebootstrap.hpp; sourceTree = SOURCE_ROOT; };
		7E371034EFC140BDB5BA85A3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmvppstartlimitstepcondition.hpp; path = ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp; sourceTree = SOURCE_ROOT; };
		7E7FE031534349EFBE652FFB /* /Users/heiner/git/QuantLib/test-suite/lookbackoptions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lookbackoptions.cpp; path = "test-suite/lookbackoptions.cpp"; sourceTree = SOURCE_ROOT; };
		7E827C498238405384CC8BBD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductcashrebate.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp; sourceTree = SOURCE_ROOT; };
		7E8B32EE24484BC5B4EC5B1A /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constraint.cpp; path = ql/math/optimization/constraint.cpp; sourceTree = SOURCE_ROOT; };
		7E8CFFD70BA442F6AAC4B2C2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendshoutengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fddividendshoutengine.hpp; path = ql/pricingengines/vanilla/fddividendshoutengine.hpp; sourceTree = SOURCE_ROOT; };
		7E912AB4ED6043E397CB522C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = uniformgridmesher.cpp; path = ql/methods/finitedifferences/meshers/uniformgridmesher.cpp; sourceTree = SOURCE_ROOT; };
		7E91C3A443AC46F580A31793 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = adaptedpathpayoff.cpp; path = ql/experimental/mcbasket/adaptedpathpayoff.cpp; sourceTree = SOURCE_ROOT; };
		7EA5C1BE78B84C41B7CFE557 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussianquadratures.hpp; path = ql/math/integrals/gaussianquadratures.hpp; sourceTree = SOURCE_ROOT; };
		7EA8C32A9C714A0593A1799B /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = americanpayoffatexpiry.hpp; path = ql/pricingengines/americanpayoffatexpiry.hpp; sourceTree = SOURCE_ROOT; };
		7EC12C696FD84A5FB5096461 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductcashrebate.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp; sourceTree = SOURCE_ROOT; };
		7EC3E0979E3C4B52967F8B82 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonop.cpp; path = ql/methods/finitedifferences/operators/fdmhestonop.cpp; sourceTree = SOURCE_ROOT; };
		7EC9FA79344743B1893E25FB /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = iborindex.cpp; path = ql/indexes/iborindex.cpp; sourceTree = SOURCE_ROOT; };
		7ECB224FCEB34C4C8176E889 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dzero.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dzero.hpp; path = ql/methods/finitedifferences/dzero.hpp; sourceTree = SOURCE_ROOT; };
		7EE2956280BC4D1492569ED5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capletcoterminalalphacalibration.cpp; path = ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp; sourceTree = SOURCE_ROOT; };
		7EEEE8412EE7490CA8575021 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zeroyieldstructure.cpp; path = ql/termstructures/yield/zeroyieldstructure.cpp; sourceTree = SOURCE_ROOT; };
		7EFFFEE5A2484A978B88A68E /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = czechrepublic.cpp; path = ql/time/calendars/czechrepublic.cpp; sourceTree = SOURCE_ROOT; };
		7F0217D93CD74A758383C731 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/amortizingbonds/all.hpp; sourceTree = SOURCE_ROOT; };
		7F1190DD65B547959E539CAF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onestepcoinitialswaps.cpp; path = ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp; sourceTree = SOURCE_ROOT; };
		7F1AB4F3AF7848E4ADC03D2F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/vanilla/all.hpp; sourceTree = SOURCE_ROOT; };
		7F2B3425A3A9479DBCE944F8 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiassetoption.hpp; path = ql/instruments/multiassetoption.hpp; sourceTree = SOURCE_ROOT; };
		7F39596FC2D84B38B700E06F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytichestonengine.hpp; path = ql/pricingengines/vanilla/analytichestonengine.hpp; sourceTree = SOURCE_ROOT; };
		7F467DC7B2684D33BB3E49E4 /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gausslobattointegral.cpp; path = ql/math/integrals/gausslobattointegral.cpp; sourceTree = SOURCE_ROOT; };
		7F53899859E142AB8614080A /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = romania.cpp; path = ql/time/calendars/romania.cpp; sourceTree = SOURCE_ROOT; };
		7F6898DBCCAB45A7BF4167C8 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = iborindex.cpp; path = ql/indexes/iborindex.cpp; sourceTree = SOURCE_ROOT; };
		7F6B70C176654D5BB9FFB0B8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commodityindex.cpp; path = ql/experimental/commodities/commodityindex.cpp; sourceTree = SOURCE_ROOT; };
		7F8A4F9462434A9188E1D4F8 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = iborcoupon.cpp; path = ql/cashflows/iborcoupon.cpp; sourceTree = SOURCE_ROOT; };
		7F8DF493CA554D9786B72900 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedvanillaoption.cpp; path = ql/pricingengines/vanilla/discretizedvanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		7F9AB7AD2D994EE0A07D53CB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bondhelpers.hpp; path = ql/termstructures/yield/bondhelpers.hpp; sourceTree = SOURCE_ROOT; };
		7FA37CDA71374F799176D071 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gsrprocesscore.hpp; path = ql/processes/gsrprocesscore.hpp; sourceTree = SOURCE_ROOT; };
		7FB5DDC5B7D3469F84047B98 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaulttype.cpp; path = ql/experimental/credit/defaulttype.cpp; sourceTree = SOURCE_ROOT; };
		7FB66F9DC2804907841B737D /* /Users/heiner/git/QuantLib/ql/experimental/math/polarstudenttrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = polarstudenttrng.hpp; path = ql/experimental/math/polarstudenttrng.hpp; sourceTree = SOURCE_ROOT; };
		7FBBE74535EE40D6A650E716 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdbatesvanillaengine.cpp; path = ql/pricingengines/vanilla/fdbatesvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		7FC97741BC9347A7BE5C0124 /* /Users/heiner/git/QuantLib/Examples/Bonds/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/Bonds/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		7FCEABF31F39433DA8D3E18A /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ukraine.cpp; path = ql/time/calendars/ukraine.cpp; sourceTree = SOURCE_ROOT; };
		7FECAE9146654BC083AAE86D /* /Users/heiner/git/QuantLib/ql/experimental/math/moorepenroseinverse.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = moorepenroseinverse.hpp; path = ql/experimental/math/moorepenroseinverse.hpp; sourceTree = SOURCE_ROOT; };
		7FF3CC6178A141CBA0C1F8CE /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = claytoncopula.hpp; path = ql/math/copulas/claytoncopula.hpp; sourceTree = SOURCE_ROOT; };
		7FF620BB39C548BBA6EA1F49 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bivariatestudenttdistribution.hpp; path = ql/math/distributions/bivariatestudenttdistribution.hpp; sourceTree = SOURCE_ROOT; };
		7FF67DBD77A848E798B35E4E /* /Users/heiner/git/QuantLib/test-suite/dates.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dates.cpp; path = "test-suite/dates.cpp"; sourceTree = SOURCE_ROOT; };
		7FF7CF070D0046FEBB685444 /* /Users/heiner/git/QuantLib/test-suite/volatilitymodels.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = volatilitymodels.cpp; path = "test-suite/volatilitymodels.cpp"; sourceTree = SOURCE_ROOT; };
		8006A246939741A6A4228956 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalcotswapratepc.cpp; path = ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp; sourceTree = SOURCE_ROOT; };
		80110C01DE23457F9F885C4E /* /Users/heiner/git/QuantLib/test-suite/pagodaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pagodaoption.cpp; path = "test-suite/pagodaoption.cpp"; sourceTree = SOURCE_ROOT; };
		8015F3AB65C24791812B13D8 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardspreadedtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardspreadedtermstructure.hpp; path = ql/termstructures/yield/forwardspreadedtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		801914C49D3B4B11961B95DF /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = projectedcostfunction.hpp; path = ql/math/optimization/projectedcostfunction.hpp; sourceTree = SOURCE_ROOT; };
		8021EC6E123E45E69D462C74 /* /Users/heiner/git/QuantLib/ql/models/volatility/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/volatility/all.hpp; sourceTree = SOURCE_ROOT; };
		802E2E82E0A34902B0F1F362 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantity.cpp; path = ql/experimental/commodities/quantity.cpp; sourceTree = SOURCE_ROOT; };
		805489C88BFF49C28E5AAB0C /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = differentialevolution.hpp; path = ql/math/optimization/differentialevolution.hpp; sourceTree = SOURCE_ROOT; };
		8091BD31E6604F4A91D15BDE /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = utilities.cpp; path = "test-suite/utilities.cpp"; sourceTree = SOURCE_ROOT; };
		809B732F5A0F445BB7361F0A /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bondfunctions.hpp; path = ql/pricingengines/bond/bondfunctions.hpp; sourceTree = SOURCE_ROOT; };
		80A11C120B1046D585FD1765 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/mctraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mctraits.hpp; path = ql/methods/montecarlo/mctraits.hpp; sourceTree = SOURCE_ROOT; };
		80AB74B7B3744649927FC8FA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = faurersg.cpp; path = ql/math/randomnumbers/faurersg.cpp; sourceTree = SOURCE_ROOT; };
		80B7FFA4A67D4306AFC988CF /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ornsteinuhlenbeckprocess.cpp; path = ql/processes/ornsteinuhlenbeckprocess.cpp; sourceTree = SOURCE_ROOT; };
		80BD2A9458AD4101960FA5B9 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/longstaffschwartzpathpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = longstaffschwartzpathpricer.hpp; path = ql/methods/montecarlo/longstaffschwartzpathpricer.hpp; sourceTree = SOURCE_ROOT; };
		80C27DBAAD424C8E9FB97BC6 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual360.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = actual360.hpp; path = ql/time/daycounters/actual360.hpp; sourceTree = SOURCE_ROOT; };
		80CC7BB7C92A4FB08413BDDC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductcallspecified.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp; sourceTree = SOURCE_ROOT; };
		80DD8F8DE70C4523AC422A70 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timebasket.hpp; path = ql/cashflows/timebasket.hpp; sourceTree = SOURCE_ROOT; };
		80DF6D4BDF174110B10BF039 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sobolbrownianbridgersg.cpp; path = ql/math/randomnumbers/sobolbrownianbridgersg.cpp; sourceTree = SOURCE_ROOT; };
		80F18FDD5E884A69AA172B7C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcd.cpp; path = ql/termstructures/volatility/abcd.cpp; sourceTree = SOURCE_ROOT; };
		80F58BE226C14FB7BF41121F /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodel_cms.hpp; path = "test-suite/marketmodel_cms.hpp"; sourceTree = SOURCE_ROOT; };
		810B3124492D4A61864FC83E /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = generalizedornsteinuhlenbeckprocess.hpp; path = ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp; sourceTree = SOURCE_ROOT; };
		8113CF82F34F47A4B2FAD220 /* /Users/heiner/git/QuantLib/test-suite/marketmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodel.hpp; path = "test-suite/marketmodel.hpp"; sourceTree = SOURCE_ROOT; };
		813229799C304A129D6CACCD /* /Users/heiner/git/QuantLib/ql/math/interpolations/forwardflatinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardflatinterpolation.hpp; path = ql/math/interpolations/forwardflatinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		81364E6A24A448799033D6D2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = euribor.hpp; path = ql/indexes/ibor/euribor.hpp; sourceTree = SOURCE_ROOT; };
		814243C9E34D482BBCA12C03 /* /Users/heiner/git/QuantLib/test-suite/forwardoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardoption.cpp; path = "test-suite/forwardoption.cpp"; sourceTree = SOURCE_ROOT; };
		814FBE71082C4D9581C68079 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nonlinearfittingmethods.cpp; path = ql/termstructures/yield/nonlinearfittingmethods.cpp; sourceTree = SOURCE_ROOT; };
		81588BC53BEF4178B3BEF761 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = spherecylinder.cpp; path = ql/math/optimization/spherecylinder.cpp; sourceTree = SOURCE_ROOT; };
		8171A0E76DDD486F9A132F54 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cashflow.cpp; path = ql/cashflow.cpp; sourceTree = SOURCE_ROOT; };
		817D3B695BA644C4951C9ED5 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicapfloortermpricesurface.cpp; path = ql/experimental/inflation/cpicapfloortermpricesurface.cpp; sourceTree = SOURCE_ROOT; };
		8193B03C1BD748649723983A /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = conjugategradient.hpp; path = ql/math/optimization/conjugategradient.hpp; sourceTree = SOURCE_ROOT; };
		819A57E3D578457998B6467E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/path.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = path.hpp; path = ql/methods/montecarlo/path.hpp; sourceTree = SOURCE_ROOT; };
		81BB97B8ADA34D56970F91DA /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = thirty360.hpp; path = ql/time/daycounters/thirty360.hpp; sourceTree = SOURCE_ROOT; };
		81C90519404F4C178D0C74C9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholesmesher.cpp; path = ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp; sourceTree = SOURCE_ROOT; };
		81EF894CCCF44B729AB4DEC2 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = generalstatistics.hpp; path = ql/math/statistics/generalstatistics.hpp; sourceTree = SOURCE_ROOT; };
		8203F31205AC4D66B9FE27F3 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = normaldistribution.hpp; path = ql/math/distributions/normaldistribution.hpp; sourceTree = SOURCE_ROOT; };
		8206F6461B2148E2BB5172EE /* /Users/heiner/git/QuantLib/ql/math/interpolations/bilinearinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bilinearinterpolation.hpp; path = ql/math/interpolations/bilinearinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		82205B895B63492E8881520C /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integral.hpp; path = ql/math/integrals/integral.hpp; sourceTree = SOURCE_ROOT; };
		8220A71324A04FC7ABA27116 /* /Users/heiner/git/QuantLib/test-suite/zabr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zabr.cpp; path = "test-suite/zabr.cpp"; sourceTree = SOURCE_ROOT; };
		8225C1D23FB14D1DB09D45DA /* /Users/heiner/git/QuantLib/test-suite/swaptionvolstructuresutilities.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolstructuresutilities.hpp; path = "test-suite/swaptionvolstructuresutilities.hpp"; sourceTree = SOURCE_ROOT; };
		82279085956945F49CAF6C20 /* /Users/heiner/git/QuantLib/ql/payoff.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = payoff.hpp; path = ql/payoff.hpp; sourceTree = SOURCE_ROOT; };
		8228DC41E3C24EB5BB4F607C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cadlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cadlibor.hpp; path = ql/indexes/ibor/cadlibor.hpp; sourceTree = SOURCE_ROOT; };
		823A0EEF7454467CB82E6D2B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stochasticcollocationinvcdf.cpp; path = ql/math/randomnumbers/stochasticcollocationinvcdf.cpp; sourceTree = SOURCE_ROOT; };
		823B77108B6F4232A99298ED /* /Users/heiner/git/QuantLib/ql/time/date.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = date.cpp; path = ql/time/date.cpp; sourceTree = SOURCE_ROOT; };
		825E09982FF04584A806CD7D /* /Users/heiner/git/QuantLib/ql/time/date.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = date.hpp; path = ql/time/date.hpp; sourceTree = SOURCE_ROOT; };
		827293512FA0489194B78197 /* /Users/heiner/git/QuantLib/ql/math/interpolations/interpolation2d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolation2d.hpp; path = ql/math/interpolations/interpolation2d.hpp; sourceTree = SOURCE_ROOT; };
		828E238823D8454786673BD9 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = merton76process.cpp; path = ql/processes/merton76process.cpp; sourceTree = SOURCE_ROOT; };
		82ADD96DB55942419A5C4C1D /* /Users/heiner/git/QuantLib/ql/indexes/inflation/uscpi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = uscpi.hpp; path = ql/indexes/inflation/uscpi.hpp; sourceTree = SOURCE_ROOT; };
		82B35A7CE8314E21BE5BDA78 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pascaltriangle.hpp; path = ql/math/pascaltriangle.hpp; sourceTree = SOURCE_ROOT; };
		82C5CF7BE28A42EFAB3186D6 /* /Users/heiner/git/QuantLib/test-suite/barrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = barrieroption.hpp; path = "test-suite/barrieroption.hpp"; sourceTree = SOURCE_ROOT; };
		82D1D8D9AA7B4DBC88B9FABC /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialtree.hpp; path = ql/methods/lattices/binomialtree.hpp; sourceTree = SOURCE_ROOT; };
		82E26503BB5A4787B07D31E4 /* /Users/heiner/git/QuantLib/Examples/DiscreteHedging/DiscreteHedging.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = DiscreteHedging.cpp; path = Examples/DiscreteHedging/DiscreteHedging.cpp; sourceTree = SOURCE_ROOT; };
		82E60D02318345A79EB99F82 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralcdsengine.hpp; path = ql/pricingengines/credit/integralcdsengine.hpp; sourceTree = SOURCE_ROOT; };
		82FB87DEC9094EC9A73B0F2D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathmultiassetoption.cpp; path = ql/experimental/mcbasket/pathmultiassetoption.cpp; sourceTree = SOURCE_ROOT; };
		82FD57C228B64CC48C0779AE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdamericanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdamericanengine.hpp; path = ql/pricingengines/vanilla/fdamericanengine.hpp; sourceTree = SOURCE_ROOT; };
		831074BE34F0457F8C34FAF0 /* /Users/heiner/git/QuantLib/ql/experimental/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/all.hpp; sourceTree = SOURCE_ROOT; };
		8314F5C8B6A04F2094940AAA /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = midpointcdoengine.cpp; path = ql/experimental/credit/midpointcdoengine.cpp; sourceTree = SOURCE_ROOT; };
		832F770D781349D9A625DE4F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cotswaptofwdadapter.cpp; path = ql/models/marketmodels/models/cotswaptofwdadapter.cpp; sourceTree = SOURCE_ROOT; };
		835B377CB42D467B8373BD12 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdsimplebsswingengine.cpp; path = ql/pricingengines/vanilla/fdsimplebsswingengine.cpp; sourceTree = SOURCE_ROOT; };
		835F1E7E30CE4A47B4015B19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onestepcoterminalswaps.hpp; path = ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp; sourceTree = SOURCE_ROOT; };
		836367A2C3DD4774BDC5154F /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gsrprocess.hpp; path = ql/processes/gsrprocess.hpp; sourceTree = SOURCE_ROOT; };
		83650C01A5104B3593B9B526 /* /Users/heiner/git/QuantLib/ql/cashflows/duration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = duration.hpp; path = ql/cashflows/duration.hpp; sourceTree = SOURCE_ROOT; };
		8366F96498794CC1BC3A9B33 /* /Users/heiner/git/QuantLib/ql/math/bspline.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bspline.hpp; path = ql/math/bspline.hpp; sourceTree = SOURCE_ROOT; };
		836FBB9348FC4FDB8CCE90F6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm2dblackscholessolver.cpp; path = ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp; sourceTree = SOURCE_ROOT; };
		83791D0520974A25B646BD99 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionconstantvol.cpp; path = ql/termstructures/volatility/swaption/swaptionconstantvol.cpp; sourceTree = SOURCE_ROOT; };
		8380236999BE4088832ABE5E /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = businessdayconvention.hpp; path = ql/time/businessdayconvention.hpp; sourceTree = SOURCE_ROOT; };
		838793063F9F44FE906283CA /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = incompletegamma.hpp; path = ql/math/incompletegamma.hpp; sourceTree = SOURCE_ROOT; };
		83B23BA335494617A309CCA2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jibar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jibar.hpp; path = ql/indexes/ibor/jibar.hpp; sourceTree = SOURCE_ROOT; };
		83B6B660ADC2481D96029976 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/finitedifferences/all.hpp; sourceTree = SOURCE_ROOT; };
		83B989E82FB64DB6829058D2 /* /Users/heiner/git/QuantLib/test-suite/marketmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel.cpp; path = "test-suite/marketmodel.cpp"; sourceTree = SOURCE_ROOT; };
		83CE3E0501A64B94A71EF4BF /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vannavolgadoublebarrierengine.hpp; path = ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		83E50653C6014524BB456E65 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactorcopula.hpp; path = ql/experimental/credit/onefactorcopula.hpp; sourceTree = SOURCE_ROOT; };
		83FC8104A91C45BA9041B312 /* /Users/heiner/git/QuantLib/ql/math/interpolations/interpolation2d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolation2d.hpp; path = ql/math/interpolations/interpolation2d.hpp; sourceTree = SOURCE_ROOT; };
		8403472BDDF14B11AE64096B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = expliciteulerscheme.hpp; path = ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp; sourceTree = SOURCE_ROOT; };
		84039867B5874E449CE7A932 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = impliciteulerscheme.cpp; path = ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp; sourceTree = SOURCE_ROOT; };
		840E703C4399401BA7D05F03 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = seasonality.hpp; path = ql/termstructures/inflation/seasonality.hpp; sourceTree = SOURCE_ROOT; };
		84156C187F794A57B3DDF033 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultprobabilityhelpers.hpp; path = ql/termstructures/credit/defaultprobabilityhelpers.hpp; sourceTree = SOURCE_ROOT; };
		841BF0D5DD0C4384B351C6EB /* /Users/heiner/git/QuantLib/ql/experimental/credit/saddlepointlossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = saddlepointlossmodel.hpp; path = ql/experimental/credit/saddlepointlossmodel.hpp; sourceTree = SOURCE_ROOT; };
		841D631217FC485EA7D3FD1B /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makeyoyinflationcapfloor.cpp; path = ql/instruments/makeyoyinflationcapfloor.cpp; sourceTree = SOURCE_ROOT; };
		842C5AF009A74FB381E95A65 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestonbarrierengine.cpp; path = ql/pricingengines/barrier/fdhestonbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		842E227326B640E1978C9FD5 /* /Users/heiner/git/QuantLib/ql/settings.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = settings.cpp; path = ql/settings.cpp; sourceTree = SOURCE_ROOT; };
		842E23F144E1411E977A8CB9 /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makeyoyinflationcapfloor.cpp; path = ql/instruments/makeyoyinflationcapfloor.cpp; sourceTree = SOURCE_ROOT; };
		84505A7CE7864456B0C1F436 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bootstraptraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bootstraptraits.hpp; path = ql/termstructures/yield/bootstraptraits.hpp; sourceTree = SOURCE_ROOT; };
		8452F11A3AC14746B1F58BAC /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = floatfloatswaption.cpp; path = ql/instruments/floatfloatswaption.cpp; sourceTree = SOURCE_ROOT; };
		8479B117176E4674885BF970 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = equityfxvolsurface.cpp; path = ql/experimental/volatility/equityfxvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		8493C1938B0A413299D6A2EB /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcpathbasketengine.hpp; path = ql/experimental/mcbasket/mcpathbasketengine.hpp; sourceTree = SOURCE_ROOT; };
		84949C7F351A4ABAAD49A8AE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmlocalvolfwdop.cpp; path = ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp; sourceTree = SOURCE_ROOT; };
		849A8B907B8C4A8EB7D66A3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsnapshotcondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp; sourceTree = SOURCE_ROOT; };
		849FAA9031944095AFD557AC /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = linesearch.hpp; path = ql/math/optimization/linesearch.hpp; sourceTree = SOURCE_ROOT; };
		84AF38CE356D4C01839703F6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pool.hpp; path = ql/experimental/credit/pool.hpp; sourceTree = SOURCE_ROOT; };
		84C6B94639794BB9A6ED446E /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = filonintegral.hpp; path = ql/math/integrals/filonintegral.hpp; sourceTree = SOURCE_ROOT; };
		84D47A93E4904F31A43DF1A9 /* /Users/heiner/git/QuantLib/ql/quotes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/quotes/all.hpp; sourceTree = SOURCE_ROOT; };
		84D9F9FB43434FD4BFC40B14 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mt19937uniformrng.cpp; path = ql/math/randomnumbers/mt19937uniformrng.cpp; sourceTree = SOURCE_ROOT; };
		84F473323FA6496390933A39 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcperformanceengine.hpp; path = ql/pricingengines/cliquet/mcperformanceengine.hpp; sourceTree = SOURCE_ROOT; };
		85094A6D1D224EBBAF0D1D69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exerciseadapter.cpp; path = ql/models/marketmodels/products/multistep/exerciseadapter.cpp; sourceTree = SOURCE_ROOT; };
		85208FFFD0B04514B293DB49 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = kirkengine.cpp; path = ql/pricingengines/basket/kirkengine.cpp; sourceTree = SOURCE_ROOT; };
		8525BC400D234FCC94ACAB25 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitalcmsspreadcoupon.cpp; path = ql/experimental/coupons/digitalcmsspreadcoupon.cpp; sourceTree = SOURCE_ROOT; };
		85260F913A3440719AE1F689 /* /Users/heiner/git/QuantLib/ql/event.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = event.cpp; path = ql/event.cpp; sourceTree = SOURCE_ROOT; };
		852BABF09DED4C4CB9BE9695 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capfloortermvolcurve.cpp; path = ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp; sourceTree = SOURCE_ROOT; };
		8531DAB31D7E478D84112930 /* QuantLib_Static */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libQuantLib.a; sourceTree = BUILT_PRODUCTS_DIR; };
		8531FDF381FF4D87B178C72C /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cdo.hpp; path = ql/experimental/credit/cdo.hpp; sourceTree = SOURCE_ROOT; };
		85333013E5F347D985F3BDDC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepinversefloater.hpp; path = ql/models/marketmodels/products/multistep/multistepinversefloater.hpp; sourceTree = SOURCE_ROOT; };
		85349A332AD542BDBB1C52FA /* /Users/heiner/git/QuantLib/test-suite/batesmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = batesmodel.hpp; path = "test-suite/batesmodel.hpp"; sourceTree = SOURCE_ROOT; };
		854D8941C1FF4BEE96484AEA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = haltonrsg.cpp; path = ql/math/randomnumbers/haltonrsg.cpp; sourceTree = SOURCE_ROOT; };
		855A8358CD7245209DD225CA /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discreteintegrals.hpp; path = ql/math/integrals/discreteintegrals.hpp; sourceTree = SOURCE_ROOT; };
		855C1387866948B8ACB74D4D /* /Users/heiner/git/QuantLib/ql/experimental/inflation/polynomial2Dspline.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = polynomial2Dspline.hpp; path = ql/experimental/inflation/polynomial2Dspline.hpp; sourceTree = SOURCE_ROOT; };
		856BAEFE419E493AA3B22006 /* /Users/heiner/git/QuantLib/ql/quotes/compositequote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compositequote.hpp; path = ql/quotes/compositequote.hpp; sourceTree = SOURCE_ROOT; };
		856C08DE39204F079F717F7F /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillaswingoption.hpp; path = ql/instruments/vanillaswingoption.hpp; sourceTree = SOURCE_ROOT; };
		8573BF9EDD4E4E9788657C9E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmswapcurvestate.cpp; path = ql/models/marketmodels/curvestates/cmswapcurvestate.cpp; sourceTree = SOURCE_ROOT; };
		8598231C38DE4FFC9AB5316E /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = newzealand.cpp; path = ql/time/calendars/newzealand.cpp; sourceTree = SOURCE_ROOT; };
		85A07F8878C749BEB31EAEEC /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = issuer.hpp; path = ql/experimental/credit/issuer.hpp; sourceTree = SOURCE_ROOT; };
		85CAFE3A8B2B432AB53E5334 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardcurve.hpp; path = ql/termstructures/yield/forwardcurve.hpp; sourceTree = SOURCE_ROOT; };
		85D9BFE75C544C9396F32B51 /* /Users/heiner/git/QuantLib/ql/config.mingw.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = config.mingw.hpp; path = ql/config.mingw.hpp; sourceTree = SOURCE_ROOT; };
		8606F0FAA18B4D0B971FA341 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmdirichletboundary.hpp; path = ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp; sourceTree = SOURCE_ROOT; };
		8609F70A6D2149FD9BD3E098 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = triplebandlinearop.cpp; path = ql/methods/finitedifferences/operators/triplebandlinearop.cpp; sourceTree = SOURCE_ROOT; };
		860AFA67EE9145EAAF4541FC /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizeddoublebarrieroption.cpp; path = ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		8612F9BF9F514F0DB717DCD7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flatvol.hpp; path = ql/models/marketmodels/models/flatvol.hpp; sourceTree = SOURCE_ROOT; };
		861EFD82C0DC439EA96B0CA7 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jamshidianswaptionengine.cpp; path = ql/pricingengines/swaption/jamshidianswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		8624F280F146493EBA4ADBE0 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energyfuture.cpp; path = ql/experimental/commodities/energyfuture.cpp; sourceTree = SOURCE_ROOT; };
		8643B11415134C2D8B4E6468 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisetimedependenthestonmodel.hpp; path = ql/models/equity/piecewisetimedependenthestonmodel.hpp; sourceTree = SOURCE_ROOT; };
		864B278AC148412D8D7997ED /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmspreadpayoffinnervalue.hpp; path = ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp; sourceTree = SOURCE_ROOT; };
		865ABE7B05434CC68463E5E2 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gsr.hpp; path = ql/models/shortrate/onefactormodels/gsr.hpp; sourceTree = SOURCE_ROOT; };
		866CAD1AF3B341A486739123 /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constraint.cpp; path = ql/math/optimization/constraint.cpp; sourceTree = SOURCE_ROOT; };
		866D6C73C4764F36908DFC53 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = markovfunctional.cpp; path = ql/models/shortrate/onefactormodels/markovfunctional.cpp; sourceTree = SOURCE_ROOT; };
		867BF28AF87C482A8A687198 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsquarerootfwdop.cpp; path = ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp; sourceTree = SOURCE_ROOT; };
		86B0D80353334FDEB66EBA23 /* /Users/heiner/git/QuantLib/ql/math/interpolations/flatextrapolation2d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flatextrapolation2d.hpp; path = ql/math/interpolations/flatextrapolation2d.hpp; sourceTree = SOURCE_ROOT; };
		86B1249822BD46C5AD945C54 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = arithmeticaverageois.cpp; path = ql/experimental/averageois/arithmeticaverageois.cpp; sourceTree = SOURCE_ROOT; };
		86B399E6512E4AB986EC33FA /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tcopulapolicy.cpp; path = ql/experimental/math/tcopulapolicy.cpp; sourceTree = SOURCE_ROOT; };
		86B481A072BA457BA4B4B9EF /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ornsteinuhlenbeckprocess.cpp; path = ql/processes/ornsteinuhlenbeckprocess.cpp; sourceTree = SOURCE_ROOT; };
		86C4DF5A0EF64180A76BF55F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = parametricexerciseadapter.hpp; path = ql/models/marketmodels/callability/parametricexerciseadapter.hpp; sourceTree = SOURCE_ROOT; };
		86CA8F19B12D4ABEBCFDE97F /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdg2swaptionengine.cpp; path = ql/pricingengines/swaption/fdg2swaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		86CEF52FCCC44C8BA3F0F3D7 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardmeasureprocess.cpp; path = ql/processes/forwardmeasureprocess.cpp; sourceTree = SOURCE_ROOT; };
		86DC9ED4833B48D9B09084AA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionconstantvol.hpp; path = ql/termstructures/volatility/swaption/swaptionconstantvol.hpp; sourceTree = SOURCE_ROOT; };
		86DCC2EAAFC4405A8C8D6EE2 /* /Users/heiner/git/QuantLib/ql/currency.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = currency.cpp; path = ql/currency.cpp; sourceTree = SOURCE_ROOT; };
		86EE4A70A8774A71BB03000A /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bond.cpp; path = ql/instruments/bond.cpp; sourceTree = SOURCE_ROOT; };
		86F3578823AB4FA1A38ED15B /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = histogram.cpp; path = ql/math/statistics/histogram.cpp; sourceTree = SOURCE_ROOT; };
		86FEDA313A5541219186183D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditypricinghelpers.hpp; path = ql/experimental/commodities/commoditypricinghelpers.hpp; sourceTree = SOURCE_ROOT; };
		8702C2FCEB09472D95BEA409 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = continuousarithmeticasianlevyengine.hpp; path = ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp; sourceTree = SOURCE_ROOT; };
		870E8B43D5BC4207A4A4CB90 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackvoltermstructure.cpp; path = ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp; sourceTree = SOURCE_ROOT; };
		8718127DB25846758EFF64D2 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = svismilesection.hpp; path = ql/experimental/volatility/svismilesection.hpp; sourceTree = SOURCE_ROOT; };
		8718904EFD00406A807F9672 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tracing.hpp; path = ql/utilities/tracing.hpp; sourceTree = SOURCE_ROOT; };
		87191A96118F467B814BF4A5 /* /Users/heiner/git/QuantLib/Examples/MarketModels/MarketModels.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = MarketModels.cpp; path = Examples/MarketModels/MarketModels.cpp; sourceTree = SOURCE_ROOT; };
		8727BDFB066046E090D97C5D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackvoltermstructure.hpp; path = ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		87319B707B7844F9AEAD6BF5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcamericanengine.cpp; path = ql/pricingengines/vanilla/mcamericanengine.cpp; sourceTree = SOURCE_ROOT; };
		8732229F1C374D06A2B06D10 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductinversefloater.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp; sourceTree = SOURCE_ROOT; };
		873C7546280C49B09DB8935F /* /Users/heiner/git/QuantLib/ql/experimental/credit/loss.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = loss.hpp; path = ql/experimental/credit/loss.hpp; sourceTree = SOURCE_ROOT; };
		8749E08292904401BB9EAA84 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hundsdorferscheme.hpp; path = ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp; sourceTree = SOURCE_ROOT; };
		874E2A008C674A4DA9B9FD18 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = collectnodedata.cpp; path = ql/models/marketmodels/callability/collectnodedata.cpp; sourceTree = SOURCE_ROOT; };
		877107DA0F074B6BAA4C025A /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fixedratebondforward.cpp; path = ql/instruments/fixedratebondforward.cpp; sourceTree = SOURCE_ROOT; };
		8777A492548E460F953EC574 /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = frequency.cpp; path = ql/time/frequency.cpp; sourceTree = SOURCE_ROOT; };
		877CA413095046968566C6D3 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energyvanillaswap.hpp; path = ql/experimental/commodities/energyvanillaswap.hpp; sourceTree = SOURCE_ROOT; };
		87804B59F6654AF79883E90F /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = simplex.cpp; path = ql/math/optimization/simplex.cpp; sourceTree = SOURCE_ROOT; };
		87AC15593DDB41918EA92366 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplusdminus.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dplusdminus.hpp; path = ql/methods/finitedifferences/dplusdminus.hpp; sourceTree = SOURCE_ROOT; };
		87AFC343D94A4010B71A51AB /* /Users/heiner/git/QuantLib/test-suite/rngtraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rngtraits.hpp; path = "test-suite/rngtraits.hpp"; sourceTree = SOURCE_ROOT; };
		87C44D3F331E45CDB5DCC065 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateiballand.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp; sourceTree = SOURCE_ROOT; };
		87C84CEF7AE4458FA0CFDF61 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = japan.cpp; path = ql/time/calendars/japan.cpp; sourceTree = SOURCE_ROOT; };
		87CB9B462ECC451191015B0F /* CVAIRS */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = CVAIRS; sourceTree = BUILT_PRODUCTS_DIR; };
		87D92BFA8C9D4C849DA680A7 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = goldstein.cpp; path = ql/math/optimization/goldstein.cpp; sourceTree = SOURCE_ROOT; };
		87EAD2E8351040FDAF923857 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrsmilesection.hpp; path = ql/termstructures/volatility/sabrsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		87EADCE3432F41619F758F9C /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = conundrumpricer.cpp; path = ql/cashflows/conundrumpricer.cpp; sourceTree = SOURCE_ROOT; };
		87F3E346FF2C4F028B954AC3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmindicesonboundary.hpp; path = ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp; sourceTree = SOURCE_ROOT; };
		88140968DE42492496C52CE0 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dataformatters.hpp; path = ql/utilities/dataformatters.hpp; sourceTree = SOURCE_ROOT; };
		8829404B47674E4DA465A4F3 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolateddefaultdensitycurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolateddefaultdensitycurve.hpp; path = ql/termstructures/credit/interpolateddefaultdensitycurve.hpp; sourceTree = SOURCE_ROOT; };
		88316A3B0D9E423AB6B676F6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonrndcalculator.cpp; path = ql/experimental/finitedifferences/hestonrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		8839E728851E41C5BF5B01C2 /* /Users/heiner/git/QuantLib/ql/math/optimization/method.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = method.hpp; path = ql/math/optimization/method.hpp; sourceTree = SOURCE_ROOT; };
		883DB8AD91554285B3DD1FAB /* /Users/heiner/git/QuantLib/ql/experimental/credit/spotlosslatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spotlosslatentmodel.hpp; path = ql/experimental/credit/spotlosslatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		8854AFE38A164ADC8ADB0C7E /* /Users/heiner/git/QuantLib/ql/methods/lattices/tree.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tree.hpp; path = ql/methods/lattices/tree.hpp; sourceTree = SOURCE_ROOT; };
		885F1322E68D4AEBBCDC6CE4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = smilesectionutils.cpp; path = ql/termstructures/volatility/smilesectionutils.cpp; sourceTree = SOURCE_ROOT; };
		886EADD8576B41D3BD3AABF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/all.hpp; sourceTree = SOURCE_ROOT; };
		888ACBC5F9FE4A32BD8FB2C1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commodityindex.cpp; path = ql/experimental/commodities/commodityindex.cpp; sourceTree = SOURCE_ROOT; };
		8890E648DDB94CBAB626AAEF /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energyswap.hpp; path = ql/experimental/commodities/energyswap.hpp; sourceTree = SOURCE_ROOT; };
		889D2E3724124F40A77EB2AE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energyfuture.cpp; path = ql/experimental/commodities/energyfuture.cpp; sourceTree = SOURCE_ROOT; };
		88ABE76D7A164A57A7DBA072 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = goldstein.hpp; path = ql/math/optimization/goldstein.hpp; sourceTree = SOURCE_ROOT; };
		88B44CF942414C55952FD030 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardengine.hpp; path = ql/pricingengines/forward/forwardengine.hpp; sourceTree = SOURCE_ROOT; };
		88B9981154E04292AA66897C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepcoterminalswaps.hpp; path = ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp; sourceTree = SOURCE_ROOT; };
		88BED79A9BDC4EC5A2C7269C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticwriterextensibleoptionengine.cpp; path = ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		88C26617E4B94A3A87D3CFDC /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussiancopula.cpp; path = ql/math/copulas/gaussiancopula.cpp; sourceTree = SOURCE_ROOT; };
		88CFD5B6E13340B9BC044AE8 /* /Users/heiner/git/QuantLib/ql/math/fastfouriertransform.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fastfouriertransform.hpp; path = ql/math/fastfouriertransform.hpp; sourceTree = SOURCE_ROOT; };
		88D4D795E65E4BC89A934B76 /* /Users/heiner/git/QuantLib/ql/utilities/steppingiterator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = steppingiterator.hpp; path = ql/utilities/steppingiterator.hpp; sourceTree = SOURCE_ROOT; };
		88D6086DBB1B4A3E801BD31A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/swaption/all.hpp; sourceTree = SOURCE_ROOT; };
		88D8A16B96364356879FCDA7 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gjrgarchprocess.hpp; path = ql/processes/gjrgarchprocess.hpp; sourceTree = SOURCE_ROOT; };
		88E7D3678404495C982E864B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiproductonestep.hpp; path = ql/models/marketmodels/products/multiproductonestep.hpp; sourceTree = SOURCE_ROOT; };
		89185BC4FE954623B6C15293 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/utilities/all.hpp; sourceTree = SOURCE_ROOT; };
		8933BA19CB8E44DAA1A2652B /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = americanpayoffathit.cpp; path = ql/pricingengines/americanpayoffathit.cpp; sourceTree = SOURCE_ROOT; };
		893E32F52FF045A39B53C20A /* /Users/heiner/git/QuantLib/test-suite/ode.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ode.cpp; path = "test-suite/ode.cpp"; sourceTree = SOURCE_ROOT; };
		895BEA3DA8C94670ACF4E741 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = volatilityinterpolationspecifier.cpp; path = ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp; sourceTree = SOURCE_ROOT; };
		8985911E330142D78CA6B002 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capletcoterminalperiodic.cpp; path = ql/models/marketmodels/models/capletcoterminalperiodic.cpp; sourceTree = SOURCE_ROOT; };
		89A6C64D2FB149A9B55E9880 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = averageoiscouponpricer.cpp; path = ql/experimental/averageois/averageoiscouponpricer.cpp; sourceTree = SOURCE_ROOT; };
		89BD68E8AF5B4CE2A6215E4E /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newtonsafe.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = newtonsafe.hpp; path = ql/math/solvers1d/newtonsafe.hpp; sourceTree = SOURCE_ROOT; };
		89D0D7E923A14090A4BFCB3F /* /Users/heiner/git/QuantLib/test-suite/period.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = period.hpp; path = "test-suite/period.hpp"; sourceTree = SOURCE_ROOT; };
		89DCB589D6C6415896865327 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capflooredcoupon.hpp; path = ql/cashflows/capflooredcoupon.hpp; sourceTree = SOURCE_ROOT; };
		89E8A03418334F53B2F7A193 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/utilities/all.hpp; sourceTree = SOURCE_ROOT; };
		8A05E7CA689947C6980E8FBD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletcoterminalmaxhomogeneity.hpp; path = ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp; sourceTree = SOURCE_ROOT; };
		8A13ACBCC00349E19A9B70DC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bsmoperator.hpp; path = ql/methods/finitedifferences/bsmoperator.hpp; sourceTree = SOURCE_ROOT; };
		8A15250AD4EE41F293F78DBC /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = floatfloatswaption.cpp; path = ql/instruments/floatfloatswaption.cpp; sourceTree = SOURCE_ROOT; };
		8A2C5111970B4C2394C15B53 /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = replication.cpp; path = ql/cashflows/replication.cpp; sourceTree = SOURCE_ROOT; };
		8A2FC95BED6F450DA390808F /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = indexedcashflow.cpp; path = ql/cashflows/indexedcashflow.cpp; sourceTree = SOURCE_ROOT; };
		8A41B7D571E6416BB158F00A /* /Users/heiner/git/QuantLib/ql/math/bspline.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bspline.hpp; path = ql/math/bspline.hpp; sourceTree = SOURCE_ROOT; };
		8A5DCC14C3884722B5754682 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticdividendeuropeanengine.cpp; path = ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp; sourceTree = SOURCE_ROOT; };
		8A645F3B8A9547D3BA4CAD65 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/shortrate/calibrationhelpers/all.hpp; sourceTree = SOURCE_ROOT; };
		8A6ECAD6E17D47C5A366D8F6 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestonbarrierengine.hpp; path = ql/pricingengines/barrier/fdhestonbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		8A6F582D4F9C40CEA010A914 /* /Users/heiner/git/QuantLib/Examples/BermudanSwaption/BermudanSwaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = BermudanSwaption.cpp; path = Examples/BermudanSwaption/BermudanSwaption.cpp; sourceTree = SOURCE_ROOT; };
		8A774696C6FA4408A68CF520 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = coshestonengine.cpp; path = ql/pricingengines/vanilla/coshestonengine.cpp; sourceTree = SOURCE_ROOT; };
		8A795306CF474603ADB0E6BD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fwdperiodadapter.hpp; path = ql/models/marketmodels/models/fwdperiodadapter.hpp; sourceTree = SOURCE_ROOT; };
		8A928DB22A3140BFAA27A7AC /* /Users/heiner/git/QuantLib/ql/config.sun.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = config.sun.hpp; path = ql/config.sun.hpp; sourceTree = SOURCE_ROOT; };
		8A92F57473E84302B40AAB55 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = distribution.hpp; path = ql/experimental/credit/distribution.hpp; sourceTree = SOURCE_ROOT; };
		8ACF40E2423A493693566B52 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzdlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nzdlibor.hpp; path = ql/indexes/ibor/nzdlibor.hpp; sourceTree = SOURCE_ROOT; };
		8AD3F09FF3E64A23A077874D /* /Users/heiner/git/QuantLib/ql/utilities/steppingiterator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = steppingiterator.hpp; path = ql/utilities/steppingiterator.hpp; sourceTree = SOURCE_ROOT; };
		8ADA69FCE6044366AF367DC0 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interestrateindex.hpp; path = ql/indexes/interestrateindex.hpp; sourceTree = SOURCE_ROOT; };
		8B11DC2B6CA84E37B2293CA8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sabrsmilesection.cpp; path = ql/termstructures/volatility/sabrsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		8B347E7B3D8646B6BDBE246B /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = seasonality.cpp; path = ql/termstructures/inflation/seasonality.cpp; sourceTree = SOURCE_ROOT; };
		8B5678EF928B4B10A3BA5D81 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/exchangecontract.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exchangecontract.hpp; path = ql/experimental/commodities/exchangecontract.hpp; sourceTree = SOURCE_ROOT; };
		8B66CABCD7F049759C80A3B4 /* /Users/heiner/git/QuantLib/test-suite/curvestates.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = curvestates.hpp; path = "test-suite/curvestates.hpp"; sourceTree = SOURCE_ROOT; };
		8B672CC4B3334664975BB96E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmg2op.cpp; path = ql/methods/finitedifferences/operators/fdmg2op.cpp; sourceTree = SOURCE_ROOT; };
		8B710299F38A4C67A0D8CFBA /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = overnightindexedcoupon.cpp; path = ql/cashflows/overnightindexedcoupon.cpp; sourceTree = SOURCE_ROOT; };
		8B7BF05DE4DD416B93BC90D9 /* /Users/heiner/git/QuantLib/test-suite/spreadoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = spreadoption.cpp; path = "test-suite/spreadoption.cpp"; sourceTree = SOURCE_ROOT; };
		8B815740650D4A0FA3F08262 /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ecb.cpp; path = ql/time/ecb.cpp; sourceTree = SOURCE_ROOT; };
		8B889276A0C948B5B0736157 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dataformatters.hpp; path = ql/utilities/dataformatters.hpp; sourceTree = SOURCE_ROOT; };
		8B99879D67FF472E9BBD2862 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gammadistribution.hpp; path = ql/math/distributions/gammadistribution.hpp; sourceTree = SOURCE_ROOT; };
		8BB344B8FB6C4E78A04E2EC3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sabrinterpolatedsmilesection.cpp; path = ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		8BDBB00D46C147E6BEC74554 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = histogram.cpp; path = ql/math/statistics/histogram.cpp; sourceTree = SOURCE_ROOT; };
		8BDDF2DCE3B445E8A18BAB6D /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationindex.cpp; path = ql/indexes/inflationindex.cpp; sourceTree = SOURCE_ROOT; };
		8BE41E89A22F4A40ADCC9E24 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/binomialdoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialdoublebarrierengine.hpp; path = ql/experimental/barrieroption/binomialdoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		8BE5B3FEE1AC408CB6875AD8 /* CallableBonds */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = CallableBonds; sourceTree = BUILT_PRODUCTS_DIR; };
		8BE651789CA641F6A1ECE32E /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/forward/all.hpp; sourceTree = SOURCE_ROOT; };
		8BF37D2B96C44A608462C8E6 /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = filonintegral.cpp; path = ql/math/integrals/filonintegral.cpp; sourceTree = SOURCE_ROOT; };
		8C072F53FEBE49B6B06CBA6F /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = actual365fixed.cpp; path = ql/time/daycounters/actual365fixed.cpp; sourceTree = SOURCE_ROOT; };
		8C0B81633D0C442EA4837E63 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactorstudentcopula.hpp; path = ql/experimental/credit/onefactorstudentcopula.hpp; sourceTree = SOURCE_ROOT; };
		8C20AA9DD678480FB55DD408 /* /Users/heiner/git/QuantLib/test-suite/swap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swap.hpp; path = "test-suite/swap.hpp"; sourceTree = SOURCE_ROOT; };
		8C211B4F8269468FA9110584 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmquantohelper.hpp; path = ql/methods/finitedifferences/utilities/fdmquantohelper.hpp; sourceTree = SOURCE_ROOT; };
		8C21E88230F7435C8DAF9E64 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = twofactormodel.cpp; path = ql/models/shortrate/twofactormodel.cpp; sourceTree = SOURCE_ROOT; };
		8C2D7A73D5B042FAA47F15E2 /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hybridhestonhullwhiteprocess.cpp; path = ql/processes/hybridhestonhullwhiteprocess.cpp; sourceTree = SOURCE_ROOT; };
		8C5A52C69E484511BAEFB26C /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gsrprocess.hpp; path = ql/processes/gsrprocess.hpp; sourceTree = SOURCE_ROOT; };
		8C5EE0FCABA145FA96C504EA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = browniangenerator.hpp; path = ql/models/marketmodels/browniangenerator.hpp; sourceTree = SOURCE_ROOT; };
		8C6061BA68D04CAA923786C3 /* /Users/heiner/git/QuantLib/ql/numericalmethod.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = numericalmethod.hpp; path = ql/numericalmethod.hpp; sourceTree = SOURCE_ROOT; };
		8C816E5609044D88B2732E26 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateballand.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp; sourceTree = SOURCE_ROOT; };
		8C81DC66862B47E89FBB8085 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gammadistribution.cpp; path = ql/math/distributions/gammadistribution.cpp; sourceTree = SOURCE_ROOT; };
		8C85134C25D943518BF1D63A /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = irregularswaption.cpp; path = ql/experimental/swaptions/irregularswaption.cpp; sourceTree = SOURCE_ROOT; };
		8CA82BAD24184DB994DEA36F /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = america.cpp; path = ql/currencies/america.cpp; sourceTree = SOURCE_ROOT; };
		8CBC783FCFAC44EA859AD395 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = trinomialtree.hpp; path = ql/methods/lattices/trinomialtree.hpp; sourceTree = SOURCE_ROOT; };
		8CDF222D5E3545C79702EE10 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commodity.cpp; path = ql/experimental/commodities/commodity.cpp; sourceTree = SOURCE_ROOT; };
		8CF1B60AE5E9408FA2DAAE31 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticvariancegammaengine.hpp; path = ql/experimental/variancegamma/analyticvariancegammaengine.hpp; sourceTree = SOURCE_ROOT; };
		8CF4460AA2A8440EBB232199 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskybond.cpp; path = ql/experimental/credit/riskybond.cpp; sourceTree = SOURCE_ROOT; };
		8CF51587C72144C9B6CBC9D9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bicgstab.hpp; path = ql/math/matrixutilities/bicgstab.hpp; sourceTree = SOURCE_ROOT; };
		8CF69F97693A46CC9E005EEA /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = binomialtree.cpp; path = ql/methods/lattices/binomialtree.cpp; sourceTree = SOURCE_ROOT; };
		8D29DAD2B819445099B943EE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceuropeangjrgarchengine.hpp; path = ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp; sourceTree = SOURCE_ROOT; };
		8D2CA45FF0454C68BFFB336E /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = rangeaccrual.cpp; path = ql/cashflows/rangeaccrual.cpp; sourceTree = SOURCE_ROOT; };
		8D4CE2E93AE84AB5A87ABC4A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalcotswapratepc.hpp; path = ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp; sourceTree = SOURCE_ROOT; };
		8D51D45336944198B0BB44BF /* /Users/heiner/git/QuantLib/ql/experimental/commodities/exchangecontract.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exchangecontract.hpp; path = ql/experimental/commodities/exchangecontract.hpp; sourceTree = SOURCE_ROOT; };
		8D628C15B7D6435EA7AA30E5 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/quantotermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantotermstructure.hpp; path = ql/termstructures/yield/quantotermstructure.hpp; sourceTree = SOURCE_ROOT; };
		8D708BF392A84B5BA786335F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = strippedcapflooredcoupon.cpp; path = ql/experimental/coupons/strippedcapflooredcoupon.cpp; sourceTree = SOURCE_ROOT; };
		8D760B1A825C4E8D93035BFE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsmarket.cpp; path = ql/termstructures/volatility/swaption/cmsmarket.cpp; sourceTree = SOURCE_ROOT; };
		8D783B120FE646A9B55DDAA7 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energybasisswap.hpp; path = ql/experimental/commodities/energybasisswap.hpp; sourceTree = SOURCE_ROOT; };
		8D7C456260AA405DAF5CE000 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bermudanswaptionexercisevalue.cpp; path = ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp; sourceTree = SOURCE_ROOT; };
		8D9420B56EAA48C3ACE84B69 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/coupons/all.hpp; sourceTree = SOURCE_ROOT; };
		8D9A760E253E45D1BD08A355 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ctsmmcapletcalibration.cpp; path = ql/models/marketmodels/models/ctsmmcapletcalibration.cpp; sourceTree = SOURCE_ROOT; };
		8D9D4C978AB44F3BBAE17401 /* /Users/heiner/git/QuantLib/ql/math/factorial.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = factorial.hpp; path = ql/math/factorial.hpp; sourceTree = SOURCE_ROOT; };
		8DA5DDA144684793A5301851 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmcovarparam.hpp; path = ql/legacy/libormarketmodels/lfmcovarparam.hpp; sourceTree = SOURCE_ROOT; };
		8DAC4D819290459B807EC371 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = actual365fixed.hpp; path = ql/time/daycounters/actual365fixed.hpp; sourceTree = SOURCE_ROOT; };
		8DB1C749F61040D4814C8496 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fftvariancegammaengine.hpp; path = ql/experimental/variancegamma/fftvariancegammaengine.hpp; sourceTree = SOURCE_ROOT; };
		8DBDD6B4167B4CEC95EACE8F /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathpricer.hpp; path = ql/methods/montecarlo/pathpricer.hpp; sourceTree = SOURCE_ROOT; };
		8DC2A60E01364F0FB4D60433 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callablebondconstantvol.hpp; path = ql/experimental/callablebonds/callablebondconstantvol.hpp; sourceTree = SOURCE_ROOT; };
		8DC3BD4BF23C4B2BB51835C2 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapindex.hpp; path = ql/indexes/swapindex.hpp; sourceTree = SOURCE_ROOT; };
		8DD6F43D14034E7FB19D2921 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestonbarrierengine.hpp; path = ql/pricingengines/barrier/fdhestonbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		8DDF376493AA44039AADE764 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = noarbsabrsmilesection.cpp; path = ql/experimental/volatility/noarbsabrsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		8E00FA84472B467F9CF58425 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = optionletstripper1.hpp; path = ql/termstructures/volatility/optionlet/optionletstripper1.hpp; sourceTree = SOURCE_ROOT; };
		8E082CA0612E4620A5F41161 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdratepc.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp; sourceTree = SOURCE_ROOT; };
		8E2BF47EDE494D8A9C30F8CB /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = batesmodel.hpp; path = ql/models/equity/batesmodel.hpp; sourceTree = SOURCE_ROOT; };
		8E66C6DC99EF493A94D1D0D9 /* /Users/heiner/git/QuantLib/Examples/EquityOption/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/EquityOption/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		8E6FBBCB76B24C3D95D7618C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhullwhiteop.cpp; path = ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp; sourceTree = SOURCE_ROOT; };
		8E7CAA896E3441A0B275BEEC /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stickyratchet.hpp; path = ql/instruments/stickyratchet.hpp; sourceTree = SOURCE_ROOT; };
		8E935A08FC5E4562B4555411 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = klugeextouprocess.cpp; path = ql/experimental/processes/klugeextouprocess.cpp; sourceTree = SOURCE_ROOT; };
		8E96291F6B134DF98D383A71 /* /Users/heiner/git/QuantLib/ql/currency.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = currency.hpp; path = ql/currency.hpp; sourceTree = SOURCE_ROOT; };
		8EA2546C5145406BA5C2ECAA /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/shortrate/twofactormodels/all.hpp; sourceTree = SOURCE_ROOT; };
		8EA6C09DEB594E4BAAD99B61 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = boundarycondition.hpp; path = ql/methods/finitedifferences/boundarycondition.hpp; sourceTree = SOURCE_ROOT; };
		8EA82D703C364FE58D966E2F /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/catbonds/all.hpp; sourceTree = SOURCE_ROOT; };
		8EB5C983A28E41E7B79627F2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonrndcalculator.cpp; path = ql/experimental/finitedifferences/hestonrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		8EBCD45A99C647C6B17EC9C7 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytich1hwengine.cpp; path = ql/pricingengines/vanilla/analytich1hwengine.cpp; sourceTree = SOURCE_ROOT; };
		8EBD32A1E1B144659C8F6063 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = simplechooseroption.cpp; path = ql/experimental/exoticoptions/simplechooseroption.cpp; sourceTree = SOURCE_ROOT; };
		8EBDF6D82C6F4A4E89E24940 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eulerdiscretization.cpp; path = ql/processes/eulerdiscretization.cpp; sourceTree = SOURCE_ROOT; };
		8EC70F584B144E97AC5BF312 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = taiwan.cpp; path = ql/time/calendars/taiwan.cpp; sourceTree = SOURCE_ROOT; };
		8ECB6FBE9DD148D59B69E568 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = himalayaoption.cpp; path = ql/experimental/exoticoptions/himalayaoption.cpp; sourceTree = SOURCE_ROOT; };
		8EE90EFE150743658006FFFB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = strippedoptionletbase.hpp; path = ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp; sourceTree = SOURCE_ROOT; };
		8F087AD426034EB8922F282A /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpiswap.cpp; path = ql/instruments/cpiswap.cpp; sourceTree = SOURCE_ROOT; };
		8F1067F6FBD2415DAE0BF144 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcouponpricer.hpp; path = ql/cashflows/inflationcouponpricer.hpp; sourceTree = SOURCE_ROOT; };
		8F1302D4047E4E9192C336B2 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/montecarlomodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = montecarlomodel.hpp; path = ql/methods/montecarlo/montecarlomodel.hpp; sourceTree = SOURCE_ROOT; };
		8F1F5EA28C9A4686BFDD10C6 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitofmeasure.cpp; path = ql/experimental/commodities/unitofmeasure.cpp; sourceTree = SOURCE_ROOT; };
		8F249AA349D34404867291A3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductcallspecified.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp; sourceTree = SOURCE_ROOT; };
		8F2C0D0C2E6B4D82A5DEBF98 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lsmbasissystem.cpp; path = ql/methods/montecarlo/lsmbasissystem.cpp; sourceTree = SOURCE_ROOT; };
		8F4C1FFA957A4762BFAB1D8F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = craigsneydscheme.hpp; path = ql/methods/finitedifferences/schemes/craigsneydscheme.hpp; sourceTree = SOURCE_ROOT; };
		8F56FB2806B14A54920E3D5C /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussiannoncentralchisquaredpolynomial.cpp; path = ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp; sourceTree = SOURCE_ROOT; };
		8F7691EB609E4F439F2B6AF9 /* /Users/heiner/git/QuantLib/test-suite/margrabeoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = margrabeoption.hpp; path = "test-suite/margrabeoption.hpp"; sourceTree = SOURCE_ROOT; };
		8F7755B2A6294C2183CC001F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsolverdesc.hpp; path = ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp; sourceTree = SOURCE_ROOT; };
		8F8414C512C84288A4B3D386 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmexpcorrmodel.cpp; path = ql/legacy/libormarketmodels/lmexpcorrmodel.cpp; sourceTree = SOURCE_ROOT; };
		8F85BC7400AE4ABDB6A4BAB3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bsmoperator.cpp; path = ql/methods/finitedifferences/bsmoperator.cpp; sourceTree = SOURCE_ROOT; };
		8F8D31DF43E34824B1C8B962 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hungary.hpp; path = ql/time/calendars/hungary.hpp; sourceTree = SOURCE_ROOT; };
		8F950EDA87554F6288E29D3F /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice1d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lattice1d.hpp; path = ql/methods/lattices/lattice1d.hpp; sourceTree = SOURCE_ROOT; };
		8F96C3125D93407A9E6C084E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cotswaptofwdadapter.hpp; path = ql/models/marketmodels/models/cotswaptofwdadapter.hpp; sourceTree = SOURCE_ROOT; };
		8F9E4AEB8E3B40E8859424EC /* BasketLosses */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = BasketLosses; sourceTree = BUILT_PRODUCTS_DIR; };
		8FA224EFA70E411BA88684E8 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcontinuousfloatinglookback.cpp; path = ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp; sourceTree = SOURCE_ROOT; };
		8FA48EDD170D41E9A1E8BEC1 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bondhelpers.cpp; path = ql/termstructures/yield/bondhelpers.cpp; sourceTree = SOURCE_ROOT; };
		8FC06832709B4F7E972D0D69 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/genericindexes.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = genericindexes.hpp; path = ql/experimental/inflation/genericindexes.hpp; sourceTree = SOURCE_ROOT; };
		90053E9FCC374D58A7856D1E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticholderextensibleoptionengine.cpp; path = ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		900A01B3719C4BF2892A321D /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = farliegumbelmorgensterncopula.cpp; path = ql/math/copulas/farliegumbelmorgensterncopula.cpp; sourceTree = SOURCE_ROOT; };
		9013E5FEFAEE4DB98ABFF474 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdmultiperiodengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmultiperiodengine.hpp; path = ql/pricingengines/vanilla/fdmultiperiodengine.hpp; sourceTree = SOURCE_ROOT; };
		9023D672B96A47D7B55665A7 /* /Users/heiner/git/QuantLib/test-suite/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = "test-suite/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
		9033C7B09FE347AB8986C351 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedornsteinuhlenbeckprocess.hpp; path = ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp; sourceTree = SOURCE_ROOT; };
		904569C69C6C4AB4A1C4FA36 /* /Users/heiner/git/QuantLib/ql/utilities/observablevalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = observablevalue.hpp; path = ql/utilities/observablevalue.hpp; sourceTree = SOURCE_ROOT; };
		9045FF95C12C49DBA1C117FC /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticamericanmargrabeengine.cpp; path = ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp; sourceTree = SOURCE_ROOT; };
		905908B7D76E4A3692080253 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmquantohelper.hpp; path = ql/methods/finitedifferences/utilities/fdmquantohelper.hpp; sourceTree = SOURCE_ROOT; };
		90638B3ECF0D471F8181E7CF /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = strippedcapflooredcoupon.hpp; path = ql/experimental/coupons/strippedcapflooredcoupon.hpp; sourceTree = SOURCE_ROOT; };
		9068A72ED3CE411BB2D5B29F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = proxygreekengine.cpp; path = ql/models/marketmodels/proxygreekengine.cpp; sourceTree = SOURCE_ROOT; };
		907981D2C9DA42A389D1B8AF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytictwoassetbarrierengine.cpp; path = ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		90AC1769F4254830BD8149C7 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nonstandardswap.hpp; path = ql/instruments/nonstandardswap.hpp; sourceTree = SOURCE_ROOT; };
		90F518583BD8425A8AB52789 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/exercisevalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exercisevalue.hpp; path = ql/models/marketmodels/callability/exercisevalue.hpp; sourceTree = SOURCE_ROOT; };
		9105F87F7B5540C09A0C795F /* /Users/heiner/git/QuantLib/ql/time/ecb.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ecb.hpp; path = ql/time/ecb.hpp; sourceTree = SOURCE_ROOT; };
		910ACB7AC18A42419D641106 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonhullwhiteop.hpp; path = ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp; sourceTree = SOURCE_ROOT; };
		9114B8670B5F4536A1B46D52 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/ridder.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ridder.hpp; path = ql/math/solvers1d/ridder.hpp; sourceTree = SOURCE_ROOT; };
		91164443AFCB48DE93A0F404 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discrepancystatistics.cpp; path = ql/math/statistics/discrepancystatistics.cpp; sourceTree = SOURCE_ROOT; };
		911A8EA500534B4DA862FF28 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = uniformgridmesher.cpp; path = ql/methods/finitedifferences/meshers/uniformgridmesher.cpp; sourceTree = SOURCE_ROOT; };
		918799BAD27A4B738FABF88A /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsratebond.hpp; path = ql/instruments/bonds/cmsratebond.hpp; sourceTree = SOURCE_ROOT; };
		9196BCF5C4C24827ADCD69ED /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vannavolgabarrierengine.hpp; path = ql/experimental/barrieroption/vannavolgabarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		91B472D43C5F4DB59EEC49A2 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticbarrierengine.cpp; path = ql/pricingengines/barrier/analyticbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		91B9BB39E6634274BAD63161 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = denmark.hpp; path = ql/time/calendars/denmark.hpp; sourceTree = SOURCE_ROOT; };
		91F3AF24FEC0401AA42667BD /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = paymentterm.hpp; path = ql/experimental/commodities/paymentterm.hpp; sourceTree = SOURCE_ROOT; };
		91F4EE17F5254BA8AECFE44F /* /Users/heiner/git/QuantLib/test-suite/main.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = main.cpp; path = "test-suite/main.cpp"; sourceTree = SOURCE_ROOT; };
		92077EEB369D49CFB255CF87 /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = asia.cpp; path = ql/currencies/asia.cpp; sourceTree = SOURCE_ROOT; };
		920977E0BB94478EBF997DA1 /* /Users/heiner/git/QuantLib/test-suite/noarbsabr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = noarbsabr.cpp; path = "test-suite/noarbsabr.cpp"; sourceTree = SOURCE_ROOT; };
		923518369B954669AA96AB55 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capfloortermvolsurface.hpp; path = ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		923DA78E608A45938D325D87 /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = europeanoption.cpp; path = "test-suite/europeanoption.cpp"; sourceTree = SOURCE_ROOT; };
		9250DC8C8FBF4EE39CAC714D /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = particleswarmoptimization.hpp; path = ql/experimental/math/particleswarmoptimization.hpp; sourceTree = SOURCE_ROOT; };
		925B98FF185B49C5A5D1DE0E /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = weekendsonly.hpp; path = ql/time/calendars/weekendsonly.hpp; sourceTree = SOURCE_ROOT; };
		9261E759CC524C79A39641A1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/matrixutilities/all.hpp; sourceTree = SOURCE_ROOT; };
		92674096E13640D2A612156A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = strippedoptionlet.cpp; path = ql/termstructures/volatility/optionlet/strippedoptionlet.cpp; sourceTree = SOURCE_ROOT; };
		927053E904A847649DF6CADB /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = alimikhailhaqcopula.cpp; path = ql/math/copulas/alimikhailhaqcopula.cpp; sourceTree = SOURCE_ROOT; };
		9281C7E1A4324830ACFFF707 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = knuthuniformrng.cpp; path = ql/math/randomnumbers/knuthuniformrng.cpp; sourceTree = SOURCE_ROOT; };
		929220D5A1274D448F741066 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitedkingdom.cpp; path = ql/time/calendars/unitedkingdom.cpp; sourceTree = SOURCE_ROOT; };
		92A249FE9265464F980BE939 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energycommodity.hpp; path = ql/experimental/commodities/energycommodity.hpp; sourceTree = SOURCE_ROOT; };
		92A371B9FFF846C28D174736 /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bmaswap.hpp; path = ql/instruments/bmaswap.hpp; sourceTree = SOURCE_ROOT; };
		92AD2C6F1D34464280C0CFE3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmbatesop.cpp; path = ql/methods/finitedifferences/operators/fdmbatesop.cpp; sourceTree = SOURCE_ROOT; };
		92AF0E8F37D043FEBCF5D8CB /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseyoyinflationcurve.hpp; path = ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp; sourceTree = SOURCE_ROOT; };
		92B740E45D8A4C0D9E03D106 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = barrieroption.hpp; path = ql/instruments/barrieroption.hpp; sourceTree = SOURCE_ROOT; };
		92BE93EE4B294287A662D0B5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = trinomialtree.cpp; path = ql/methods/lattices/trinomialtree.cpp; sourceTree = SOURCE_ROOT; };
		92C767B9CF0D48BA9161757F /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fedfunds.hpp; path = ql/indexes/ibor/fedfunds.hpp; sourceTree = SOURCE_ROOT; };
		92D414D882C1474B96505CBF /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hullwhite.cpp; path = ql/models/shortrate/onefactormodels/hullwhite.cpp; sourceTree = SOURCE_ROOT; };
		92D7A82D36E34266866E9656 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zabr.hpp; path = ql/experimental/volatility/zabr.hpp; sourceTree = SOURCE_ROOT; };
		92D9D433A29B4F3CB13ACE06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyinflationoptionletvolatilitystructure.hpp; path = ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		92E3347D50A74C0FB8C02F75 /* /Users/heiner/git/QuantLib/ql/compounding.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compounding.hpp; path = ql/compounding.hpp; sourceTree = SOURCE_ROOT; };
		92F75C7D3C9143339A72599C /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hungary.cpp; path = ql/time/calendars/hungary.cpp; sourceTree = SOURCE_ROOT; };
		930C5B2096D141B39B7B299E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/expliciteuler.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = expliciteuler.hpp; path = ql/methods/finitedifferences/expliciteuler.hpp; sourceTree = SOURCE_ROOT; };
		9311FA9F8E764C0ABFD61773 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zigguratrng.cpp; path = ql/experimental/math/zigguratrng.cpp; sourceTree = SOURCE_ROOT; };
		9328E0C2F57848F29C5C02A7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = strippedoptionletadapter.cpp; path = ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp; sourceTree = SOURCE_ROOT; };
		933669A4A4BD45838766946D /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/montecarlomodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = montecarlomodel.hpp; path = ql/methods/montecarlo/montecarlomodel.hpp; sourceTree = SOURCE_ROOT; };
		9339F61F804B401BBF125B6C /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basket.hpp; path = ql/experimental/credit/basket.hpp; sourceTree = SOURCE_ROOT; };
		935418338A7E423B98652767 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicoupon.cpp; path = ql/cashflows/cpicoupon.cpp; sourceTree = SOURCE_ROOT; };
		93550DC7E9E14932BDA7293F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditycurve.cpp; path = ql/experimental/commodities/commoditycurve.cpp; sourceTree = SOURCE_ROOT; };
		9367A331883E4A968E5A601B /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = recoveryratequote.cpp; path = ql/experimental/credit/recoveryratequote.cpp; sourceTree = SOURCE_ROOT; };
		93748A23EFB24809A3C061A7 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralhestonvarianceoptionengine.hpp; path = ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		9376CD25BC664543AF602667 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makecds.hpp; path = ql/instruments/makecds.hpp; sourceTree = SOURCE_ROOT; };
		93A6C958C1BC4638B9ABD048 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalcmswapratepc.hpp; path = ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp; sourceTree = SOURCE_ROOT; };
		93A8240A20974C97802D7181 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewisefunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisefunction.hpp; path = ql/experimental/math/piecewisefunction.hpp; sourceTree = SOURCE_ROOT; };
		93B0EF3E09CB4F06A21687D6 /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = israel.hpp; path = ql/time/calendars/israel.hpp; sourceTree = SOURCE_ROOT; };
		93B69819C8C94D6388A04A0E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapforwardmappings.hpp; path = ql/models/marketmodels/swapforwardmappings.hpp; sourceTree = SOURCE_ROOT; };
		93BCA84B75F148029271B420 /* /Users/heiner/git/QuantLib/test-suite/extendedtrees.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedtrees.cpp; path = "test-suite/extendedtrees.cpp"; sourceTree = SOURCE_ROOT; };
		93D79CCD95CB474FB4ED1283 /* /Users/heiner/git/QuantLib/test-suite/interpolations.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolations.hpp; path = "test-suite/interpolations.hpp"; sourceTree = SOURCE_ROOT; };
		93DB0DDA5B94431AA1D064F6 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultprobabilityhelpers.hpp; path = ql/termstructures/credit/defaultprobabilityhelpers.hpp; sourceTree = SOURCE_ROOT; };
		93E4CE3DD74347AB8E9DC724 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cashrebate.cpp; path = ql/models/marketmodels/products/multistep/cashrebate.cpp; sourceTree = SOURCE_ROOT; };
		9400E0E69178461D87D46201 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = strippedcapflooredcoupon.cpp; path = ql/experimental/coupons/strippedcapflooredcoupon.cpp; sourceTree = SOURCE_ROOT; };
		940B636C313943B59283F241 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedcoxingersollross.hpp; path = ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp; sourceTree = SOURCE_ROOT; };
		940D8049597040E9A4382AB1 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = india.hpp; path = ql/time/calendars/india.hpp; sourceTree = SOURCE_ROOT; };
		9413A6ED619D4679AF08CB81 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = primitivepolynomials.cpp; path = ql/math/randomnumbers/primitivepolynomials.cpp; sourceTree = SOURCE_ROOT; };
		9419FAE0934B4E98ABC0D26C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticsimplechooserengine.cpp; path = ql/experimental/exoticoptions/analyticsimplechooserengine.cpp; sourceTree = SOURCE_ROOT; };
		94228A9C624D4E4BA898948D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitofmeasure.hpp; path = ql/experimental/commodities/unitofmeasure.hpp; sourceTree = SOURCE_ROOT; };
		943BD1DA630C46F1A75443BE /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fftvariancegammaengine.cpp; path = ql/experimental/variancegamma/fftvariancegammaengine.cpp; sourceTree = SOURCE_ROOT; };
		94415481E20547859B499770 /* /Users/heiner/git/QuantLib/ql/patterns/composite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = composite.hpp; path = ql/patterns/composite.hpp; sourceTree = SOURCE_ROOT; };
		94415D00F71741AC831F6086 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = strippedoptionlet.hpp; path = ql/termstructures/volatility/optionlet/strippedoptionlet.hpp; sourceTree = SOURCE_ROOT; };
		945C8B01543443899167F696 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = greeks.cpp; path = ql/pricingengines/greeks.cpp; sourceTree = SOURCE_ROOT; };
		94620BB75A0048188412B47D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sobolbrownianbridgersg.cpp; path = ql/math/randomnumbers/sobolbrownianbridgersg.cpp; sourceTree = SOURCE_ROOT; };
		9483D46A2162452B832D78C8 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zabr.hpp; path = ql/experimental/volatility/zabr.hpp; sourceTree = SOURCE_ROOT; };
		94855942923C43A5905E864D /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = israel.cpp; path = ql/time/calendars/israel.cpp; sourceTree = SOURCE_ROOT; };
		94A1E6725B9A415280A06DE7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = atmadjustedsmilesection.cpp; path = ql/termstructures/volatility/atmadjustedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		94B3814AA29E4E299C9F2EDF /* /Users/heiner/git/QuantLib/ql/utilities/clone.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = clone.hpp; path = ql/utilities/clone.hpp; sourceTree = SOURCE_ROOT; };
		94D672934BDD4F4084D2B738 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dateinterval.hpp; path = ql/experimental/commodities/dateinterval.hpp; sourceTree = SOURCE_ROOT; };
		9501997CF8CC4A3DA98F121C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sviinterpolatedsmilesection.hpp; path = ql/experimental/volatility/sviinterpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		950623AB91304D41944C566D /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tcopulapolicy.cpp; path = ql/experimental/math/tcopulapolicy.cpp; sourceTree = SOURCE_ROOT; };
		953D8434973047B68F743040 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pde.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pde.hpp; path = ql/methods/finitedifferences/pde.hpp; sourceTree = SOURCE_ROOT; };
		95560CED36094D2998D088B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapbasissystem.hpp; path = ql/models/marketmodels/callability/swapbasissystem.hpp; sourceTree = SOURCE_ROOT; };
		95699D9CDD924B1295F288B3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm1dimsolver.hpp; path = ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp; sourceTree = SOURCE_ROOT; };
		95777BDC6ACA4051BEA857A8 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		95808492BF0D45A7A3F9AA68 /* /Users/heiner/git/QuantLib/test-suite/swingoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swingoption.cpp; path = "test-suite/swingoption.cpp"; sourceTree = SOURCE_ROOT; };
		9590C5BFB21A415292927B84 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = singapore.hpp; path = ql/time/calendars/singapore.hpp; sourceTree = SOURCE_ROOT; };
		95B169DC3B254A7BA91106D4 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spherecylinder.hpp; path = ql/math/optimization/spherecylinder.hpp; sourceTree = SOURCE_ROOT; };
		95CB3D0961A941DE82AFF000 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = wulinyongdoublebarrierengine.hpp; path = ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		95DDBBFCFD3F4FA099EA63EC /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = segmentintegral.cpp; path = ql/math/integrals/segmentintegral.cpp; sourceTree = SOURCE_ROOT; };
		95E3B98CDD3A410D82970934 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = convolvedstudentt.cpp; path = ql/experimental/math/convolvedstudentt.cpp; sourceTree = SOURCE_ROOT; };
		962B07DB1B0D45D8B9FADA12 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcliquetengine.cpp; path = ql/pricingengines/cliquet/analyticcliquetengine.cpp; sourceTree = SOURCE_ROOT; };
		96304212CB594D9CAC1E178D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bjerksundstenslandengine.hpp; path = ql/pricingengines/vanilla/bjerksundstenslandengine.hpp; sourceTree = SOURCE_ROOT; };
		9634221BD0E84AB78B1605CE /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = treecapfloorengine.hpp; path = ql/pricingengines/capfloor/treecapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		965E57075C2B4EEB8B5A3F5A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewiseconstantabcdvariance.cpp; path = ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp; sourceTree = SOURCE_ROOT; };
		965FE0D97E3C45DFBA34C7BB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = secondderivativeop.hpp; path = ql/methods/finitedifferences/operators/secondderivativeop.hpp; sourceTree = SOURCE_ROOT; };
		966CF29F69F54878B19CE43E /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = squarerootclvmodel.hpp; path = ql/experimental/models/squarerootclvmodel.hpp; sourceTree = SOURCE_ROOT; };
		967579A13FCD43B1B061F0F6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmg2op.hpp; path = ql/methods/finitedifferences/operators/fdmg2op.hpp; sourceTree = SOURCE_ROOT; };
		968131179A9241FCB9673AB2 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nonstandardswaption.cpp; path = ql/instruments/nonstandardswaption.cpp; sourceTree = SOURCE_ROOT; };
		96851528B8DC47C3B662C064 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcoupon.hpp; path = ql/cashflows/inflationcoupon.hpp; sourceTree = SOURCE_ROOT; };
		9686DB0DCF7C4A25A10F0DE9 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcbarrierengine.cpp; path = ql/pricingengines/barrier/mcbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		968AE0CCB3F747119D63C3F4 /* /Users/heiner/git/QuantLib/ql/mathconstants.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mathconstants.hpp; path = ql/mathconstants.hpp; sourceTree = SOURCE_ROOT; };
		96AB8FB7450144CE96D4AA65 /* /Users/heiner/git/QuantLib/ql/experimental/math/isotropicrandomwalk.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = isotropicrandomwalk.hpp; path = ql/experimental/math/isotropicrandomwalk.hpp; sourceTree = SOURCE_ROOT; };
		96B984B5B3604CC99F1AAADC /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bacheliercapfloorengine.hpp; path = ql/pricingengines/capfloor/bacheliercapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		96BFFCC989544D92A7297D69 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = shortratemodels.cpp; path = "test-suite/shortratemodels.cpp"; sourceTree = SOURCE_ROOT; };
		96CFCB310AC44FA3B2AB7C30 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcamericanengine.hpp; path = ql/pricingengines/vanilla/mcamericanengine.hpp; sourceTree = SOURCE_ROOT; };
		96D198B715BF4BD29C806AE5 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitedstates.hpp; path = ql/time/calendars/unitedstates.hpp; sourceTree = SOURCE_ROOT; };
		96FD8F812F7F4AAF8E489560 /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dividendvanillaoption.hpp; path = ql/instruments/dividendvanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		970C9D165D4E45779790E409 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = adaptedpathpayoff.hpp; path = ql/experimental/mcbasket/adaptedpathpayoff.hpp; sourceTree = SOURCE_ROOT; };
		97206F6B97634466908AD713 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gumbelcopula.hpp; path = ql/math/copulas/gumbelcopula.hpp; sourceTree = SOURCE_ROOT; };
		9720DA3AE3B64D929439D801 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = norway.cpp; path = ql/time/calendars/norway.cpp; sourceTree = SOURCE_ROOT; };
		9744C07412454ADEAED1801B /* /Users/heiner/git/QuantLib/ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseyoyoptionletvolatility.hpp; path = ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp; sourceTree = SOURCE_ROOT; };
		974D1C8184FE436E873EFA73 /* /Users/heiner/git/QuantLib/ql/currencies/africa.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = africa.hpp; path = ql/currencies/africa.hpp; sourceTree = SOURCE_ROOT; };
		9751FD15A4714E01A42F687D /* /Users/heiner/git/QuantLib/ql/auto_link.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = auto_link.hpp; path = ql/auto_link.hpp; sourceTree = SOURCE_ROOT; };
		9758DBB3682F4867AE8098EC /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = compoundoption.cpp; path = ql/experimental/exoticoptions/compoundoption.cpp; sourceTree = SOURCE_ROOT; };
		9759567A631E4300B342BD46 /* /Users/heiner/git/QuantLib/ql/userconfig.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = userconfig.hpp; path = ql/userconfig.hpp; sourceTree = SOURCE_ROOT; };
		975B26480F69436A8E929FAB /* /Users/heiner/git/QuantLib/ql/quotes/simplequote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplequote.hpp; path = ql/quotes/simplequote.hpp; sourceTree = SOURCE_ROOT; };
		976000574C5643D187CA99C2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = writerextensibleoption.hpp; path = ql/experimental/exoticoptions/writerextensibleoption.hpp; sourceTree = SOURCE_ROOT; };
		977E5825706841BF984F0AF2 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/varianceoption/all.hpp; sourceTree = SOURCE_ROOT; };
		978A798C0A7D4CC9A21F661E /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vanillaoption.cpp; path = ql/instruments/vanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		9794802D04E549599507E8C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadedsmilesection.hpp; path = ql/termstructures/volatility/spreadedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		979B49FD37364480A7864742 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytich1hwengine.hpp; path = ql/pricingengines/vanilla/analytich1hwengine.hpp; sourceTree = SOURCE_ROOT; };
		97AD7CDD966D4C6084826AA4 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dateinterval.cpp; path = ql/experimental/commodities/dateinterval.cpp; sourceTree = SOURCE_ROOT; };
		97B1835C7AE944DCA1F0F889 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditycashflow.hpp; path = ql/experimental/commodities/commoditycashflow.hpp; sourceTree = SOURCE_ROOT; };
		97B2D01DBF8E4A9CBA07EEA8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commodity.hpp; path = ql/experimental/commodities/commodity.hpp; sourceTree = SOURCE_ROOT; };
		97B2D52572274DEAAF390A72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lsstrategy.cpp; path = ql/models/marketmodels/callability/lsstrategy.cpp; sourceTree = SOURCE_ROOT; };
		97B7EC46C5EE4FA196CE941E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizeddoublebarrieroption.hpp; path = ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		97B96E1E206D4025A4FC5E10 /* /Users/heiner/git/QuantLib/ql/termstructures/localbootstrap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localbootstrap.hpp; path = ql/termstructures/localbootstrap.hpp; sourceTree = SOURCE_ROOT; };
		97C34D1F525D4B3985893D55 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitedstates.cpp; path = ql/time/calendars/unitedstates.cpp; sourceTree = SOURCE_ROOT; };
		97DAA14898584B8492AEF36B /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = claytoncopula.hpp; path = ql/math/copulas/claytoncopula.hpp; sourceTree = SOURCE_ROOT; };
		97DC1CF1C2F743B698991432 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = compositeproduct.cpp; path = ql/models/marketmodels/products/compositeproduct.cpp; sourceTree = SOURCE_ROOT; };
		97E0DE5C58D84C559C42C87B /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dividend.hpp; path = ql/cashflows/dividend.hpp; sourceTree = SOURCE_ROOT; };
		97E141527687463891252911 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual360.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = actual360.hpp; path = ql/time/daycounters/actual360.hpp; sourceTree = SOURCE_ROOT; };
		97E56A97452A40B08F79C3F4 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = timebasket.cpp; path = ql/cashflows/timebasket.cpp; sourceTree = SOURCE_ROOT; };
		97FF2C91FFED47F68F408E33 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/swaption/all.hpp; sourceTree = SOURCE_ROOT; };
		9805B95A573C439EB9E00289 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = getcovariance.cpp; path = ql/math/matrixutilities/getcovariance.cpp; sourceTree = SOURCE_ROOT; };
		981B6E8C481F4DFA810239B0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcompoundoptionengine.hpp; path = ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		982F22B478A247D78212E106 /* /Users/heiner/git/QuantLib/test-suite/assetswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = assetswap.hpp; path = "test-suite/assetswap.hpp"; sourceTree = SOURCE_ROOT; };
		98370F31630F489596093537 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmlinexpvolmodel.cpp; path = ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp; sourceTree = SOURCE_ROOT; };
		9861910C455B40DF8687F37B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/seklibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = seklibor.hpp; path = ql/indexes/ibor/seklibor.hpp; sourceTree = SOURCE_ROOT; };
		9864DB89BADE40A0A50E98A0 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dmodel.hpp; path = ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp; sourceTree = SOURCE_ROOT; };
		98772D90C93C4DFFB340CD83 /* /Users/heiner/git/QuantLib/test-suite/digitalcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitalcoupon.cpp; path = "test-suite/digitalcoupon.cpp"; sourceTree = SOURCE_ROOT; };
		987EEB341811428FB78F1A4C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = slovakia.hpp; path = ql/time/calendars/slovakia.hpp; sourceTree = SOURCE_ROOT; };
		987F71F309F24938A47A11C4 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodel_smm.hpp; path = "test-suite/marketmodel_smm.hpp"; sourceTree = SOURCE_ROOT; };
		988174CBEC714B989A905F80 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = variancegammamodel.hpp; path = ql/experimental/variancegamma/variancegammamodel.hpp; sourceTree = SOURCE_ROOT; };
		988FE36311814D35973657BB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardstructure.hpp; path = ql/termstructures/yield/forwardstructure.hpp; sourceTree = SOURCE_ROOT; };
		989932AB094E4F2399AD76B9 /* /Users/heiner/git/QuantLib/ql/methods/lattices/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/lattices/all.hpp; sourceTree = SOURCE_ROOT; };
		989F047C7BF94FCDAC7D37DC /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathpayoff.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathpayoff.hpp; path = ql/experimental/mcbasket/pathpayoff.hpp; sourceTree = SOURCE_ROOT; };
		98A0F6FFE8DF41178A503417 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcompoundoptionengine.hpp; path = ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		98A343BD26A2466EB9179230 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholesmesher.hpp; path = ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp; sourceTree = SOURCE_ROOT; };
		98BBC92C419E43F6B859BC99 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmbermudanstepcondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp; sourceTree = SOURCE_ROOT; };
		990276D3DCBC4A018CA394AF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticpartialtimebarrieroptionengine.cpp; path = ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp; sourceTree = SOURCE_ROOT; };
		991AE5BA31F744B1A3C0745B /* /Users/heiner/git/QuantLib/test-suite/vpp.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vpp.cpp; path = "test-suite/vpp.cpp"; sourceTree = SOURCE_ROOT; };
		992CC12C43284CE0BC98ABB2 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gsrprocess.cpp; path = ql/processes/gsrprocess.cpp; sourceTree = SOURCE_ROOT; };
		993157148F3C47599B3E9E89 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mfstateprocess.hpp; path = ql/processes/mfstateprocess.hpp; sourceTree = SOURCE_ROOT; };
		994F85C7F69D46989AC20676 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hazardratestructure.cpp; path = ql/termstructures/credit/hazardratestructure.cpp; sourceTree = SOURCE_ROOT; };
		9951BC6A8FEE4731A0E5F693 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fwdtocotswapadapter.hpp; path = ql/models/marketmodels/models/fwdtocotswapadapter.hpp; sourceTree = SOURCE_ROOT; };
		9952D2BE28054A1E822441DA /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = treecallablebondengine.cpp; path = ql/experimental/callablebonds/treecallablebondengine.cpp; sourceTree = SOURCE_ROOT; };
		995621E94BF04C38B47E4FAC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discounter.cpp; path = ql/models/marketmodels/discounter.cpp; sourceTree = SOURCE_ROOT; };
		99695AD9A0E84A21BB8DECF2 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = frankcopula.cpp; path = ql/math/copulas/frankcopula.cpp; sourceTree = SOURCE_ROOT; };
		996C944C340B44A59D24B631 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/shortrate/calibrationhelpers/all.hpp; sourceTree = SOURCE_ROOT; };
		997D2DA2C5A042B4A45A9DB5 /* /Users/heiner/git/QuantLib/ql/exercise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exercise.cpp; path = ql/exercise.cpp; sourceTree = SOURCE_ROOT; };
		99833774493843C58DC121C8 /* /Users/heiner/git/QuantLib/test-suite/fdmlinearop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmlinearop.cpp; path = "test-suite/fdmlinearop.cpp"; sourceTree = SOURCE_ROOT; };
		99872BF8025B400F9A0F909C /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/credit/all.hpp; sourceTree = SOURCE_ROOT; };
		99A245E1AEB74624AE5FC0A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/pathwisegreeks/all.hpp; sourceTree = SOURCE_ROOT; };
		99BCC8A0559F4D32B89641F0 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = varianceoption.hpp; path = ql/experimental/varianceoption/varianceoption.hpp; sourceTree = SOURCE_ROOT; };
		99C7C7EB235F496EB2E497D2 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonslvfdmmodel.hpp; path = ql/experimental/models/hestonslvfdmmodel.hpp; sourceTree = SOURCE_ROOT; };
		99CC978BF1AD4EBFBF03A7B7 /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rangeaccrual.hpp; path = ql/cashflows/rangeaccrual.hpp; sourceTree = SOURCE_ROOT; };
		99CEB72718A6447CB0B2BE5C /* /Users/heiner/git/QuantLib/test-suite/capflooredcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capflooredcoupon.hpp; path = "test-suite/capflooredcoupon.hpp"; sourceTree = SOURCE_ROOT; };
		99E1815C50924F14A3BCF917 /* /Users/heiner/git/QuantLib/test-suite/interestrates.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interestrates.hpp; path = "test-suite/interestrates.hpp"; sourceTree = SOURCE_ROOT; };
		99E2DAC6E15C416CBA6D50CC /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makecds.cpp; path = ql/instruments/makecds.cpp; sourceTree = SOURCE_ROOT; };
		99EDC349777F44E98E74724C /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = weekendsonly.cpp; path = ql/time/calendars/weekendsonly.cpp; sourceTree = SOURCE_ROOT; };
		99EE3F63D2FE4989880D573B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dcapfloorengine.hpp; path = ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		9A027960828D4FE8A7F8E5B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discountingswapengine.cpp; path = ql/pricingengines/swap/discountingswapengine.cpp; sourceTree = SOURCE_ROOT; };
		9A11E01CE0DE4041903A2033 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = coterminalswapcurvestate.hpp; path = ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp; sourceTree = SOURCE_ROOT; };
		9A16BBFB74D143849DAADD4A /* /Users/heiner/git/QuantLib/ql/models/volatility/garmanklass.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = garmanklass.hpp; path = ql/models/volatility/garmanklass.hpp; sourceTree = SOURCE_ROOT; };
		9A170075F05A42C4BCC17862 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionhelper.cpp; path = ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp; sourceTree = SOURCE_ROOT; };
		9A2664E159DB4B25AF5A7140 /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealing.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hybridsimulatedannealing.hpp; path = ql/experimental/math/hybridsimulatedannealing.hpp; sourceTree = SOURCE_ROOT; };
		9A33ED317BFF40019193D257 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jumpdiffusion.cpp; path = "test-suite/jumpdiffusion.cpp"; sourceTree = SOURCE_ROOT; };
		9A73C09D751243B6AC797FED /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discreteintegrals.cpp; path = ql/math/integrals/discreteintegrals.cpp; sourceTree = SOURCE_ROOT; };
		9A8368AE1BB94D29B3E9BB95 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = syntheticcdo.cpp; path = ql/experimental/credit/syntheticcdo.cpp; sourceTree = SOURCE_ROOT; };
		9A8FBFE3785E4CABB7A4C89F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsmmdriftcalculator.cpp; path = ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp; sourceTree = SOURCE_ROOT; };
		9A99BF80A6634F348A49FF24 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lastfixingquote.cpp; path = ql/quotes/lastfixingquote.cpp; sourceTree = SOURCE_ROOT; };
		9A9AB1CB86BC46EA81FC112F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdsimpleextoujumpswingengine.hpp; path = ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp; sourceTree = SOURCE_ROOT; };
		9A9ADE16A5494C1EB7066E42 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewisetimedependenthestonmodel.cpp; path = ql/models/equity/piecewisetimedependenthestonmodel.cpp; sourceTree = SOURCE_ROOT; };
		9ABC8BD57CBA447B8A4D2C2A /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capflooredinflationcoupon.hpp; path = ql/cashflows/capflooredinflationcoupon.hpp; sourceTree = SOURCE_ROOT; };
		9AC96ADFD0F8408B8C92771B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdg2swaptionengine.hpp; path = ql/pricingengines/swaption/fdg2swaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		9AD372ABC4104C188904DCA3 /* /Users/heiner/git/QuantLib/ql/index.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = index.hpp; path = ql/index.hpp; sourceTree = SOURCE_ROOT; };
		9ADB5522E2454210AE071D1E /* /Users/heiner/git/QuantLib/test-suite/extendedtrees.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedtrees.hpp; path = "test-suite/extendedtrees.hpp"; sourceTree = SOURCE_ROOT; };
		9AFE7125ED7740D4BA76CE4B /* /Users/heiner/git/QuantLib/ql/experimental/math/moorepenroseinverse.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = moorepenroseinverse.hpp; path = ql/experimental/math/moorepenroseinverse.hpp; sourceTree = SOURCE_ROOT; };
		9B0A39892BA740639C49E187 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = amortizingfloatingratebond.hpp; path = ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp; sourceTree = SOURCE_ROOT; };
		9B0BBAA5ABA845CC885B2D90 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nonlinearfittingmethods.hpp; path = ql/termstructures/yield/nonlinearfittingmethods.hpp; sourceTree = SOURCE_ROOT; };
		9B0C8F3E921B45919D7A1587 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = segmentintegral.hpp; path = ql/math/integrals/segmentintegral.hpp; sourceTree = SOURCE_ROOT; };
		9B172FA7B9D440599406EA6E /* /Users/heiner/git/QuantLib/ql/instruments/makecds.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makecds.hpp; path = ql/instruments/makecds.hpp; sourceTree = SOURCE_ROOT; };
		9B19F3A62AA64E798E90A8CB /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonslvprocess.hpp; path = ql/experimental/processes/hestonslvprocess.hpp; sourceTree = SOURCE_ROOT; };
		9B1F469D9F154A0EAAC04F74 /* /Users/heiner/git/QuantLib/ql/utilities/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/utilities/all.hpp; sourceTree = SOURCE_ROOT; };
		9B27AB6A49DB4D9C99B5A580 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdblackscholesvanillaengine.hpp; path = ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		9B4BF5B6D8294C9397BCD787 /* /Users/heiner/git/QuantLib/test-suite/riskstats.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskstats.hpp; path = "test-suite/riskstats.hpp"; sourceTree = SOURCE_ROOT; };
		9B5574D462BE4AADA6D666EA /* /Users/heiner/git/QuantLib/ql/math/array.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = array.hpp; path = ql/math/array.hpp; sourceTree = SOURCE_ROOT; };
		9B5BFC20029C4DF5B27BBC0D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditypricinghelpers.cpp; path = ql/experimental/commodities/commoditypricinghelpers.cpp; sourceTree = SOURCE_ROOT; };
		9B6029B2070D409494360D88 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zabrinterpolatedsmilesection.hpp; path = ql/experimental/volatility/zabrinterpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		9B6886294FA847799076A857 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/finitedifferencemodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = finitedifferencemodel.hpp; path = ql/methods/finitedifferences/finitedifferencemodel.hpp; sourceTree = SOURCE_ROOT; };
		9B7C8AA69A27440D9F046DAB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = douglasscheme.cpp; path = ql/methods/finitedifferences/schemes/douglasscheme.cpp; sourceTree = SOURCE_ROOT; };
		9BA2F7CC64A14FDB970DF0E3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yoyoptionlethelpers.cpp; path = ql/experimental/inflation/yoyoptionlethelpers.cpp; sourceTree = SOURCE_ROOT; };
		9BADBE9AE41049FCA2E3F4C9 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = doublebarrieroption.hpp; path = ql/experimental/barrieroption/doublebarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		9BBC49D42E9A4E7CBE70ED28 /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = finland.hpp; path = ql/time/calendars/finland.hpp; sourceTree = SOURCE_ROOT; };
		9BBCBD62B1CD44B389B2CB24 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlinearoplayout.hpp; path = ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp; sourceTree = SOURCE_ROOT; };
		9BC5341157FF4E118F1931EA /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationtraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationtraits.hpp; path = ql/termstructures/inflation/inflationtraits.hpp; sourceTree = SOURCE_ROOT; };
		9BC8D6A7870F42FDA09C0251 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerocouponbond.hpp; path = ql/instruments/bonds/zerocouponbond.hpp; sourceTree = SOURCE_ROOT; };
		9BD2EE5156E742ACB42F61E5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = alphaformconcrete.hpp; path = ql/models/marketmodels/models/alphaformconcrete.hpp; sourceTree = SOURCE_ROOT; };
		9BE23B5349C744999280BA1D /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = impliedvolatility.cpp; path = ql/instruments/impliedvolatility.cpp; sourceTree = SOURCE_ROOT; };
		9BE4659E38C6444DBA30281F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceverestengine.hpp; path = ql/experimental/exoticoptions/mceverestengine.hpp; sourceTree = SOURCE_ROOT; };
		9BFAB5A552414CAE930F785B /* /Users/heiner/git/QuantLib/test-suite/twoassetcorrelationoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = twoassetcorrelationoption.cpp; path = "test-suite/twoassetcorrelationoption.cpp"; sourceTree = SOURCE_ROOT; };
		9BFEEFD4A982499DB8293B7D /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdblackscholesasianengine.hpp; path = ql/pricingengines/asian/fdblackscholesasianengine.hpp; sourceTree = SOURCE_ROOT; };
		9C0C5ABF44E04A64B1B865C0 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = endeulerdiscretization.hpp; path = ql/processes/endeulerdiscretization.hpp; sourceTree = SOURCE_ROOT; };
		9C17004C50A54EF995CE1603 /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = newzealand.hpp; path = ql/time/calendars/newzealand.hpp; sourceTree = SOURCE_ROOT; };
		9C3B70081429458C9BC8A2AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/multiproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiproduct.hpp; path = ql/models/marketmodels/multiproduct.hpp; sourceTree = SOURCE_ROOT; };
		9C4033EEAF9A4D5C9A99BA1B /* /Users/heiner/git/QuantLib/ql/experimental/math/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/math/all.hpp; sourceTree = SOURCE_ROOT; };
		9C4870A58E5644F4B792DC3E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodelvolprocess.cpp; path = ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp; sourceTree = SOURCE_ROOT; };
		9C49A9F48C464E93985FA263 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralcdoengine.cpp; path = ql/experimental/credit/integralcdoengine.cpp; sourceTree = SOURCE_ROOT; };
		9C4D1297319B4B49BCC17F64 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = amortizingcmsratebond.cpp; path = ql/experimental/amortizingbonds/amortizingcmsratebond.cpp; sourceTree = SOURCE_ROOT; };
		9C5D0052F5B54CF49E24E723 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextousolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmklugeextousolver.hpp; path = ql/experimental/finitedifferences/fdmklugeextousolver.hpp; sourceTree = SOURCE_ROOT; };
		9C7AEA19164E44DF97488D31 /* /Users/heiner/git/QuantLib/ql/math/statistics/statistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = statistics.hpp; path = ql/math/statistics/statistics.hpp; sourceTree = SOURCE_ROOT; };
		9C8C739C528D491DB47C5A3A /* /Users/heiner/git/QuantLib/Examples/CDS/CDS.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = CDS.cpp; path = Examples/CDS/CDS.cpp; sourceTree = SOURCE_ROOT; };
		9C99EEF73B144AD8B4F92387 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmndimsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmndimsolver.hpp; path = ql/methods/finitedifferences/solvers/fdmndimsolver.hpp; sourceTree = SOURCE_ROOT; };
		9CA214B9B1EF45F2A06B63C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ctsmmcapletcalibration.hpp; path = ql/models/marketmodels/models/ctsmmcapletcalibration.hpp; sourceTree = SOURCE_ROOT; };
		9CA2CD4F9B4D4520BB50D2BD /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonmodelhelper.cpp; path = ql/models/equity/hestonmodelhelper.cpp; sourceTree = SOURCE_ROOT; };
		9CA804A326AB4048BFFA204B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticgjrgarchengine.cpp; path = ql/pricingengines/vanilla/analyticgjrgarchengine.cpp; sourceTree = SOURCE_ROOT; };
		9CAC6BD8B5A0448D99DA7F45 /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = squarerootclvmodel.cpp; path = ql/experimental/models/squarerootclvmodel.cpp; sourceTree = SOURCE_ROOT; };
		9CBA834AAD134C4291C56526 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackvariancesurface.cpp; path = ql/termstructures/volatility/equityfx/blackvariancesurface.cpp; sourceTree = SOURCE_ROOT; };
		9CC50ED1175147199505142C /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = normalclvmodel.hpp; path = ql/experimental/models/normalclvmodel.hpp; sourceTree = SOURCE_ROOT; };
		9CC78A1801544925B3A8D111 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capletcoterminalperiodic.cpp; path = ql/models/marketmodels/models/capletcoterminalperiodic.cpp; sourceTree = SOURCE_ROOT; };
		9CDEB905D22E43829782EFC4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = uniformgridmesher.hpp; path = ql/methods/finitedifferences/meshers/uniformgridmesher.hpp; sourceTree = SOURCE_ROOT; };
		9CE2109D7FC7484787A0ED74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ratepseudorootjacobian.hpp; path = ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp; sourceTree = SOURCE_ROOT; };
		9CFF1EF7089941DC9D67BFAB /* /Users/heiner/git/QuantLib/ql/math/comparison.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = comparison.hpp; path = ql/math/comparison.hpp; sourceTree = SOURCE_ROOT; };
		9D0866D1A7DB47E4AC4BFBE2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmmesherintegral.hpp; path = ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp; sourceTree = SOURCE_ROOT; };
		9D1895A41477452DAA5FE4B3 /* /Users/heiner/git/QuantLib/ql/prices.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = prices.cpp; path = ql/prices.cpp; sourceTree = SOURCE_ROOT; };
		9D3A57C33B4347D89D37E4A0 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodelprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = libormarketmodelprocess.cpp; path = "test-suite/libormarketmodelprocess.cpp"; sourceTree = SOURCE_ROOT; };
		9D4D8A9AB2724FDC8D67A78E /* /Users/heiner/git/QuantLib/ql/types.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = types.hpp; path = ql/types.hpp; sourceTree = SOURCE_ROOT; };
		9D4E176933164C1EA783B3BA /* /Users/heiner/git/QuantLib/ql/indexes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/indexes/all.hpp; sourceTree = SOURCE_ROOT; };
		9D82577522754202B4ACDE8E /* /Users/heiner/git/QuantLib/ql/math/statistics/sequencestatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sequencestatistics.hpp; path = ql/math/statistics/sequencestatistics.hpp; sourceTree = SOURCE_ROOT; };
		9D94C891D0CA488EA7D2C061 /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forward.cpp; path = ql/instruments/forward.cpp; sourceTree = SOURCE_ROOT; };
		9DA93E5C6E034FD486530ECF /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparsematrix.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sparsematrix.hpp; path = ql/math/matrixutilities/sparsematrix.hpp; sourceTree = SOURCE_ROOT; };
		9DAC37AD89B848AEBA72A265 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedcallablefixedratebond.cpp; path = ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp; sourceTree = SOURCE_ROOT; };
		9DB078129ECC43868CFCEF90 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = projectedcostfunction.hpp; path = ql/math/optimization/projectedcostfunction.hpp; sourceTree = SOURCE_ROOT; };
		9DB64EC477494220897024FE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capfloortermvolatilitystructure.hpp; path = ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		9DC749499BE440A1B0817E1E /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackkarasinski.hpp; path = ql/models/shortrate/onefactormodels/blackkarasinski.hpp; sourceTree = SOURCE_ROOT; };
		9DFB83D828064F8DB2AC4A3E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = expcorrelations.hpp; path = ql/models/marketmodels/correlations/expcorrelations.hpp; sourceTree = SOURCE_ROOT; };
		9DFE4D91398646029B9B0E0F /* /Users/heiner/git/QuantLib/test-suite/defaultprobabilitycurves.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaultprobabilitycurves.cpp; path = "test-suite/defaultprobabilitycurves.cpp"; sourceTree = SOURCE_ROOT; };
		9E00C1D21C4F422AAC0714EF /* /Users/heiner/git/QuantLib/test-suite/mclongstaffschwartzengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mclongstaffschwartzengine.hpp; path = "test-suite/mclongstaffschwartzengine.hpp"; sourceTree = SOURCE_ROOT; };
		9E0BA7827ECC4E4CA9EEA162 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicapfloortermpricesurface.cpp; path = ql/experimental/inflation/cpicapfloortermpricesurface.cpp; sourceTree = SOURCE_ROOT; };
		9E0EC08185E44111B81C09B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmamericanstepcondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp; sourceTree = SOURCE_ROOT; };
		9E2546AC6C9C4075B91F77D8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwisediscounter.hpp; path = ql/models/marketmodels/pathwisediscounter.hpp; sourceTree = SOURCE_ROOT; };
		9E33C6A89494458CB3AC2BAB /* /Users/heiner/git/QuantLib/test-suite/bonds.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bonds.hpp; path = "test-suite/bonds.hpp"; sourceTree = SOURCE_ROOT; };
		9E399BDEBF7F4AD1AED08990 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = backwardflatinterpolation.hpp; path = ql/math/interpolations/backwardflatinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		9E4D0F0570534415856CC0FE /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mexico.cpp; path = ql/time/calendars/mexico.cpp; sourceTree = SOURCE_ROOT; };
		9E66872BF0DE4B258E59B912 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel.cpp; path = ql/models/marketmodels/marketmodel.cpp; sourceTree = SOURCE_ROOT; };
		9E7019C2B64F448E89CBADBE /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitaliborcoupon.cpp; path = ql/cashflows/digitaliborcoupon.cpp; sourceTree = SOURCE_ROOT; };
		9EF28D186508446393D2CB62 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardswapquote.cpp; path = ql/quotes/forwardswapquote.cpp; sourceTree = SOURCE_ROOT; };
		9F02503CFC6D465D94F806D5 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/tflattice.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tflattice.hpp; path = ql/experimental/convertiblebonds/tflattice.hpp; sourceTree = SOURCE_ROOT; };
		9F0D6A38B4A348F5AF20089A /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ornsteinuhlenbeckprocess.hpp; path = ql/processes/ornsteinuhlenbeckprocess.hpp; sourceTree = SOURCE_ROOT; };
		9F1A2629BEBD4571ADEC4FED /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpivolatilitystructure.cpp; path = ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		9F2C940F050E4B3589847771 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = haltonrsg.hpp; path = ql/math/randomnumbers/haltonrsg.hpp; sourceTree = SOURCE_ROOT; };
		9F34AB39A69E428599FA3100 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliedvoltermstructure.hpp; path = ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		9F4A5A047E634345A99F9D8C /* /Users/heiner/git/QuantLib/ql/prices.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = prices.hpp; path = ql/prices.hpp; sourceTree = SOURCE_ROOT; };
		9F61E46887154C989D7ECE43 /* /Users/heiner/git/QuantLib/ql/instrument.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = instrument.hpp; path = ql/instrument.hpp; sourceTree = SOURCE_ROOT; };
		9F649D91DF1A40DFA3CA7060 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerocurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerocurve.hpp; path = ql/termstructures/yield/zerocurve.hpp; sourceTree = SOURCE_ROOT; };
		9F76620D698546CFA192A1DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepperiodcapletswaptions.hpp; path = ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp; sourceTree = SOURCE_ROOT; };
		9F77D48FA5EB441EA70B016B /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraperror.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bootstraperror.hpp; path = ql/termstructures/bootstraperror.hpp; sourceTree = SOURCE_ROOT; };
		9F7B6169A28246D991B7518E /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = observable.cpp; path = ql/patterns/observable.cpp; sourceTree = SOURCE_ROOT; };
		9F98E9429DDD467BA5870AD5 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makecapfloor.hpp; path = ql/instruments/makecapfloor.hpp; sourceTree = SOURCE_ROOT; };
		9FC43D729DDC4EAFBFA0931D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcpathbasketengine.hpp; path = ql/experimental/mcbasket/mcpathbasketengine.hpp; sourceTree = SOURCE_ROOT; };
		9FC7AFF0EB46446599D6B1B7 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletcalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodel_smmcapletcalibration.hpp; path = "test-suite/marketmodel_smmcapletcalibration.hpp"; sourceTree = SOURCE_ROOT; };
		9FD3AC04588C4A0DA1399A6E /* /Users/heiner/git/QuantLib/Examples/DiscreteHedging/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/DiscreteHedging/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9FDE3AA0CC814B54AABA36D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = treeswapengine.hpp; path = ql/pricingengines/swap/treeswapengine.hpp; sourceTree = SOURCE_ROOT; };
		9FE20CBC91224564BA025214 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/euhicp.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = euhicp.hpp; path = ql/indexes/inflation/euhicp.hpp; sourceTree = SOURCE_ROOT; };
		A03A0A3EFE9047F7904439E3 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discountingswapengine.hpp; path = ql/pricingengines/swap/discountingswapengine.hpp; sourceTree = SOURCE_ROOT; };
		A03DA38ACFCB43ACA4430B12 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lowdiscrepancysequences.cpp; path = "test-suite/lowdiscrepancysequences.cpp"; sourceTree = SOURCE_ROOT; };
		A041EBBF7C7B450684C3DA63 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mtbrowniangenerator.cpp; path = ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp; sourceTree = SOURCE_ROOT; };
		A055D9FEA8B74F24BB5B4073 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytic_cont_geom_av_price.hpp; path = ql/pricingengines/asian/analytic_cont_geom_av_price.hpp; sourceTree = SOURCE_ROOT; };
		A06019B2861E4F19805D82C2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commodityunitcost.hpp; path = ql/experimental/commodities/commodityunitcost.hpp; sourceTree = SOURCE_ROOT; };
		A06309696D6E4B0EBC9D98F4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplusdminus.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dplusdminus.hpp; path = ql/methods/finitedifferences/dplusdminus.hpp; sourceTree = SOURCE_ROOT; };
		A090A57F7B014F61932829CA /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fixedratebondforward.cpp; path = ql/instruments/fixedratebondforward.cpp; sourceTree = SOURCE_ROOT; };
		A09F18899F124F17BD8B5B9B /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = callablebondconstantvol.cpp; path = ql/experimental/callablebonds/callablebondconstantvol.cpp; sourceTree = SOURCE_ROOT; };
		A0DC4A9D54594918AF4BEA33 /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = averagetype.cpp; path = ql/instruments/averagetype.cpp; sourceTree = SOURCE_ROOT; };
		A0E451610EFB45F3B69B93D7 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simpledaycounter.hpp; path = ql/time/daycounters/simpledaycounter.hpp; sourceTree = SOURCE_ROOT; };
		A0EA6B4A02A34F149CA05D4F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatortraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = operatortraits.hpp; path = ql/methods/finitedifferences/operatortraits.hpp; sourceTree = SOURCE_ROOT; };
		A114B667EE3443CC92FC8252 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/instruments/bonds/all.hpp; sourceTree = SOURCE_ROOT; };
		A11505D8E9D94B929FF3419A /* /Users/heiner/git/QuantLib/ql/math/matrix.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = matrix.hpp; path = ql/math/matrix.hpp; sourceTree = SOURCE_ROOT; };
		A1206248916648FC95E07E53 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcontinuouspartialfloatinglookback.cpp; path = ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp; sourceTree = SOURCE_ROOT; };
		A1210AD664C64FE7852D1EF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanhestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceuropeanhestonengine.hpp; path = ql/pricingengines/vanilla/mceuropeanhestonengine.hpp; sourceTree = SOURCE_ROOT; };
		A12882EAFD7D4A3D8FB7EABB /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardvaluequote.hpp; path = ql/quotes/forwardvaluequote.hpp; sourceTree = SOURCE_ROOT; };
		A128F42D3C2B4B0ABB031294 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jumpdiffusion.hpp; path = "test-suite/jumpdiffusion.hpp"; sourceTree = SOURCE_ROOT; };
		A12D9F51E7BF475BA24F0CB7 /* /Users/heiner/git/QuantLib/test-suite/basketoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basketoption.hpp; path = "test-suite/basketoption.hpp"; sourceTree = SOURCE_ROOT; };
		A131B947560D4B1DBC6C042A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm1dimsolver.cpp; path = ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp; sourceTree = SOURCE_ROOT; };
		A137354145DF45E4A232F46B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/commodities/all.hpp; sourceTree = SOURCE_ROOT; };
		A141646111CF4C1A8FF89F63 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bespokecalendar.cpp; path = ql/time/calendars/bespokecalendar.cpp; sourceTree = SOURCE_ROOT; };
		A14FD360A4134344B0116C4D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductinversefloater.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp; sourceTree = SOURCE_ROOT; };
		A15B0F61ECB448B39FB1ED99 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcompoundoptionengine.cpp; path = ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		A171ABAA9979430A9BE81A54 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discountingbondengine.hpp; path = ql/pricingengines/bond/discountingbondengine.hpp; sourceTree = SOURCE_ROOT; };
		A172580C67494F4B8C3F8893 /* /Users/heiner/git/QuantLib/ql/patterns/composite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = composite.hpp; path = ql/patterns/composite.hpp; sourceTree = SOURCE_ROOT; };
		A1823A6C71E8462082148D81 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmdupire1dop.cpp; path = ql/experimental/finitedifferences/fdmdupire1dop.cpp; sourceTree = SOURCE_ROOT; };
		A1834E4F54074AD2AF4BD33C /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = india.cpp; path = ql/time/calendars/india.cpp; sourceTree = SOURCE_ROOT; };
		A19399A0C8CE45E29F5B2212 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/brent.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = brent.hpp; path = ql/math/solvers1d/brent.hpp; sourceTree = SOURCE_ROOT; };
		A1951730C3B64000ACBB2214 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedbinomialtree.cpp; path = ql/experimental/lattices/extendedbinomialtree.cpp; sourceTree = SOURCE_ROOT; };
		A1A708BD6E0A4697910CE434 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = twoassetbarrieroption.cpp; path = ql/experimental/exoticoptions/twoassetbarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		A1B6ECCFAD3E4AC186D7675E /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhullwhiteswaptionengine.hpp; path = ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		A1BAC17565A64779902E7A1A /* /Users/heiner/git/QuantLib/ql/money.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = money.hpp; path = ql/money.hpp; sourceTree = SOURCE_ROOT; };
		A1C0201B20F8435AA078B5FC /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytichestonengine.cpp; path = ql/pricingengines/vanilla/analytichestonengine.cpp; sourceTree = SOURCE_ROOT; };
		A1C669B5633E4B58AE67B277 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillaoption.hpp; path = ql/instruments/vanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		A1E1DA51D42C4F178BE7CE50 /* /Users/heiner/git/QuantLib/test-suite/functions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = functions.cpp; path = "test-suite/functions.cpp"; sourceTree = SOURCE_ROOT; };
		A1E5BDFDB633471895FBB756 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateeulerconstrained.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp; sourceTree = SOURCE_ROOT; };
		A1E834AE3270412386B0EDD1 /* /Users/heiner/git/QuantLib/Examples/FRA/FRA.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = FRA.cpp; path = Examples/FRA/FRA.cpp; sourceTree = SOURCE_ROOT; };
		A1F0E92F6BC34F8C99EE003F /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealingfunctors.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hybridsimulatedannealingfunctors.hpp; path = ql/experimental/math/hybridsimulatedannealingfunctors.hpp; sourceTree = SOURCE_ROOT; };
		A201586FE2E84FEE9CE245DE /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mc_discr_geom_av_price.hpp; path = ql/pricingengines/asian/mc_discr_geom_av_price.hpp; sourceTree = SOURCE_ROOT; };
		A2117D6C947F4A1E8C059250 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flatforward.cpp; path = ql/termstructures/yield/flatforward.cpp; sourceTree = SOURCE_ROOT; };
		A212B83008A34209AA5804AA /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = creditriskplus.cpp; path = ql/experimental/risk/creditriskplus.cpp; sourceTree = SOURCE_ROOT; };
		A236FF8982354E0B9EB9AFA1 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hullwhite.cpp; path = ql/models/shortrate/onefactormodels/hullwhite.cpp; sourceTree = SOURCE_ROOT; };
		A2409672F5474E29A3F1BBD5 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = seedgenerator.hpp; path = ql/math/randomnumbers/seedgenerator.hpp; sourceTree = SOURCE_ROOT; };
		A26BE9B829A546C0B9C0CA21 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = svismilesection.hpp; path = ql/experimental/volatility/svismilesection.hpp; sourceTree = SOURCE_ROOT; };
		A2729720C2C84D1282036E60 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = leastsquare.cpp; path = ql/math/optimization/leastsquare.cpp; sourceTree = SOURCE_ROOT; };
		A285437ABB9B48BB9564BEAC /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cdo.cpp; path = ql/experimental/credit/cdo.cpp; sourceTree = SOURCE_ROOT; };
		A2B660C212F1430DB5410E9F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capfloortermvolcurve.hpp; path = ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp; sourceTree = SOURCE_ROOT; };
		A2C02865DB924784B5CD8FE4 /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonmodel.cpp; path = "test-suite/hestonmodel.cpp"; sourceTree = SOURCE_ROOT; };
		A2C319DEA1644FA4AE8231FF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = alphaformconcrete.hpp; path = ql/models/marketmodels/models/alphaformconcrete.hpp; sourceTree = SOURCE_ROOT; };
		A2C5F6EB6E3C49B9BACC22A5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcompoundoptionengine.cpp; path = ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		A2DCABBC7B0B4F5BA28F336C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = factorreduction.cpp; path = ql/math/matrixutilities/factorreduction.cpp; sourceTree = SOURCE_ROOT; };
		A2EFFC104B2E4D29AF20BE05 /* /Users/heiner/git/QuantLib/ql/quote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quote.hpp; path = ql/quote.hpp; sourceTree = SOURCE_ROOT; };
		A2FBEA62E3224DDBBCD94D0C /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = generalizedornsteinuhlenbeckprocess.cpp; path = ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp; sourceTree = SOURCE_ROOT; };
		A30D3464915143F1BD34190B /* /Users/heiner/git/QuantLib/test-suite/blackdeltacalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackdeltacalculator.hpp; path = "test-suite/blackdeltacalculator.hpp"; sourceTree = SOURCE_ROOT; };
		A3113CE82013413488013242 /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = australia.hpp; path = ql/time/calendars/australia.hpp; sourceTree = SOURCE_ROOT; };
		A317E3CCAACA4331A5718771 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdmultiperiodengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmultiperiodengine.hpp; path = ql/pricingengines/vanilla/fdmultiperiodengine.hpp; sourceTree = SOURCE_ROOT; };
		A3314D13BA0D47A198174DFD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = strippedoptionlet.cpp; path = ql/termstructures/volatility/optionlet/strippedoptionlet.cpp; sourceTree = SOURCE_ROOT; };
		A35A9DD41F1B48DDA5831665 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdstepconditionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdstepconditionengine.hpp; path = ql/pricingengines/vanilla/fdstepconditionengine.hpp; sourceTree = SOURCE_ROOT; };
		A366F4F76CE94DD0B0C0FAB9 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = liborforwardmodel.hpp; path = ql/legacy/libormarketmodels/liborforwardmodel.hpp; sourceTree = SOURCE_ROOT; };
		A36B17CE9A1D4058A0A1065E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = wulinyongdoublebarrierengine.cpp; path = ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		A37AFD5352714F13A047D061 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestondoublebarrierengine.cpp; path = ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		A39583EE04CC40059A6DC702 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmmdriftcalculator.hpp; path = ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp; sourceTree = SOURCE_ROOT; };
		A39A6AA49FE54B91AF7206F9 /* /Users/heiner/git/QuantLib/ql/time/frequency.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = frequency.hpp; path = ql/time/frequency.hpp; sourceTree = SOURCE_ROOT; };
		A3A222CEEB314B4DB6FF626D /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vegastressedblackscholesprocess.hpp; path = ql/experimental/processes/vegastressedblackscholesprocess.hpp; sourceTree = SOURCE_ROOT; };
		A3A6F4B2DB7B49A6BB0B82DD /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestonrebateengine.cpp; path = ql/pricingengines/barrier/fdhestonrebateengine.cpp; sourceTree = SOURCE_ROOT; };
		A3A7028AA7B5414DA097844D /* /Users/heiner/git/QuantLib/Examples/CDS/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/CDS/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A3AF4C06BC094C0B97ACBBDB /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nonstandardswaption.hpp; path = ql/instruments/nonstandardswaption.hpp; sourceTree = SOURCE_ROOT; };
		A3B29145A2A2412DA2F75E03 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/rngtraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rngtraits.hpp; path = ql/math/randomnumbers/rngtraits.hpp; sourceTree = SOURCE_ROOT; };
		A3BF21AAD7F244F2A7339009 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = normaldistribution.cpp; path = ql/math/distributions/normaldistribution.cpp; sourceTree = SOURCE_ROOT; };
		A3E48068B6104E6B89B28B91 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = denmark.cpp; path = ql/time/calendars/denmark.cpp; sourceTree = SOURCE_ROOT; };
		A3E712BCC43046AA9CF76D44 /* /Users/heiner/git/QuantLib/ql/instruments/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/instruments/all.hpp; sourceTree = SOURCE_ROOT; };
		A3EABA2643A24A42A08A20EA /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = proxyibor.hpp; path = ql/experimental/coupons/proxyibor.hpp; sourceTree = SOURCE_ROOT; };
		A3F417B958AA468D94E8851E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticamericanmargrabeengine.hpp; path = ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp; sourceTree = SOURCE_ROOT; };
		A3FAA73AE708498282E49C5C /* /Users/heiner/git/QuantLib/test-suite/brownianbridge.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = brownianbridge.hpp; path = "test-suite/brownianbridge.hpp"; sourceTree = SOURCE_ROOT; };
		A4370E439FCD487C91E919E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm2dimsolver.hpp; path = ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp; sourceTree = SOURCE_ROOT; };
		A438EC12264348FEAAB320CD /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = factorial.cpp; path = ql/math/factorial.cpp; sourceTree = SOURCE_ROOT; };
		A4738264B13944A380199623 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = norway.hpp; path = ql/time/calendars/norway.hpp; sourceTree = SOURCE_ROOT; };
		A47799947EFE427F9D7255FB /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basecorrelationstructure.hpp; path = ql/experimental/credit/basecorrelationstructure.hpp; sourceTree = SOURCE_ROOT; };
		A4876119F0D04B1ABC7BFDEC /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = goldstein.hpp; path = ql/math/optimization/goldstein.hpp; sourceTree = SOURCE_ROOT; };
		A487F336C4834DA7A6C2D204 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantoforwardvanillaoption.hpp; path = ql/instruments/quantoforwardvanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		A488C07979F24EB6885B955B /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdblackscholesasianengine.cpp; path = ql/pricingengines/asian/fdblackscholesasianengine.cpp; sourceTree = SOURCE_ROOT; };
		A4A129FDC2434FE19E63CC48 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapforwardmappings.hpp; path = ql/models/marketmodels/swapforwardmappings.hpp; sourceTree = SOURCE_ROOT; };
		A4A29AD4946943C085D75B16 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolstructure.cpp; path = ql/termstructures/volatility/swaption/swaptionvolstructure.cpp; sourceTree = SOURCE_ROOT; };
		A4BF8AB027CD4E1899360FD7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onestepoptionlets.hpp; path = ql/models/marketmodels/products/onestep/onestepoptionlets.hpp; sourceTree = SOURCE_ROOT; };
		A4D47BCCC35040F588ED3939 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = markovfunctional.cpp; path = ql/models/shortrate/onefactormodels/markovfunctional.cpp; sourceTree = SOURCE_ROOT; };
		A4DEBE024FD341D6A02E18A8 /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardvanillaoption.hpp; path = ql/instruments/forwardvanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		A4E1A6A8350840E0ACF5C736 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basecorrelationstructure.cpp; path = ql/experimental/credit/basecorrelationstructure.cpp; sourceTree = SOURCE_ROOT; };
		A4F3CFD905654C9EB4ED49D3 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newton.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = newton.hpp; path = ql/math/solvers1d/newton.hpp; sourceTree = SOURCE_ROOT; };
		A50970E0440D43F8A0077B17 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/callablebonds/all.hpp; sourceTree = SOURCE_ROOT; };
		A50B603A16A747BA987D9CE3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticeuropeanengine.cpp; path = ql/pricingengines/vanilla/analyticeuropeanengine.cpp; sourceTree = SOURCE_ROOT; };
		A52371B791664F129DAB03EE /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = iborcoupon.hpp; path = ql/cashflows/iborcoupon.hpp; sourceTree = SOURCE_ROOT; };
		A52840682F5D46949BDF5DA0 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackdeltacalculator.hpp; path = ql/experimental/fx/blackdeltacalculator.hpp; sourceTree = SOURCE_ROOT; };
		A54C24ECC07041F587896982 /* /Users/heiner/git/QuantLib/test-suite/gaussianquadratures.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussianquadratures.hpp; path = "test-suite/gaussianquadratures.hpp"; sourceTree = SOURCE_ROOT; };
		A55A7F02DB82416C8B4862B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestonbarrierengine.cpp; path = ql/pricingengines/barrier/fdhestonbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		A56033A6B7A442D88AB86C24 /* /Users/heiner/git/QuantLib/ql/methods/lattices/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/lattices/all.hpp; sourceTree = SOURCE_ROOT; };
		A56E95CA204344BCA0244F2E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = singleproductcomposite.hpp; path = ql/models/marketmodels/products/singleproductcomposite.hpp; sourceTree = SOURCE_ROOT; };
		A5713BDABD27416A8394DF7D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = curvestate.hpp; path = ql/models/marketmodels/curvestate.hpp; sourceTree = SOURCE_ROOT; };
		A57B0A0EF2834328A2431DCB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmexpcorrmodel.cpp; path = ql/legacy/libormarketmodels/lmexpcorrmodel.cpp; sourceTree = SOURCE_ROOT; };
		A582F54C4F374386B741A4F9 /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicapfloor.cpp; path = ql/instruments/cpicapfloor.cpp; sourceTree = SOURCE_ROOT; };
		A5895A4065B6421485A1406A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapbasissystem.cpp; path = ql/models/marketmodels/callability/swapbasissystem.cpp; sourceTree = SOURCE_ROOT; };
		A59AB75B44274F6CA620E584 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackcallablebondengine.hpp; path = ql/experimental/callablebonds/blackcallablebondengine.hpp; sourceTree = SOURCE_ROOT; };
		A5A072B90DDB4E3E9C9D0871 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bfgs.cpp; path = ql/math/optimization/bfgs.cpp; sourceTree = SOURCE_ROOT; };
		A5AFED4145CE46A5A837E33D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ratehelpers.hpp; path = ql/termstructures/yield/ratehelpers.hpp; sourceTree = SOURCE_ROOT; };
		A5B5295241564033998E55A1 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitedkingdom.hpp; path = ql/time/calendars/unitedkingdom.hpp; sourceTree = SOURCE_ROOT; };
		A5B6EB8A6F2948CEB88D9F44 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pseudosqrt.cpp; path = ql/math/matrixutilities/pseudosqrt.cpp; sourceTree = SOURCE_ROOT; };
		A5BB170CD367402C92D8478E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletcoterminalperiodic.hpp; path = ql/models/marketmodels/models/capletcoterminalperiodic.hpp; sourceTree = SOURCE_ROOT; };
		A5D19D0848104A22AAAF0E84 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tracing.cpp; path = ql/utilities/tracing.cpp; sourceTree = SOURCE_ROOT; };
		A5F9D5A8DD384BFF955F7602 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmextendedornsteinuhlenbeckop.hpp; path = ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp; sourceTree = SOURCE_ROOT; };
		A61D003C13D84F65B72C8978 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = holderextensibleoption.hpp; path = ql/experimental/exoticoptions/holderextensibleoption.hpp; sourceTree = SOURCE_ROOT; };
		A62DA6AE90344F048BE4ECE9 /* /Users/heiner/git/QuantLib/ql/instruments/vanillastorageoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillastorageoption.hpp; path = ql/instruments/vanillastorageoption.hpp; sourceTree = SOURCE_ROOT; };
		A6506E37EE2E4C3791903FD7 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basketoption.hpp; path = ql/instruments/basketoption.hpp; sourceTree = SOURCE_ROOT; };
		A658EC709DC24FD2BD6AEB37 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = india.hpp; path = ql/time/calendars/india.hpp; sourceTree = SOURCE_ROOT; };
		A65F3F9D0D454D7DBB04328B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodeldifferences.hpp; path = ql/models/marketmodels/marketmodeldifferences.hpp; sourceTree = SOURCE_ROOT; };
		A66DB87898F64CD6B913AB2F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralengine.cpp; path = ql/pricingengines/vanilla/integralengine.cpp; sourceTree = SOURCE_ROOT; };
		A66F9ADF38CD4A9F9D515C90 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackscholesprocess.cpp; path = ql/processes/blackscholesprocess.cpp; sourceTree = SOURCE_ROOT; };
		A68F4455E38F4C5DB378F7E9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basecorrelationstructure.cpp; path = ql/experimental/credit/basecorrelationstructure.cpp; sourceTree = SOURCE_ROOT; };
		A6957B966E7F47859068AD8B /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = caphelper.cpp; path = ql/models/shortrate/calibrationhelpers/caphelper.cpp; sourceTree = SOURCE_ROOT; };
		A695EC07AE1E47478835831E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cashrebate.hpp; path = ql/models/marketmodels/products/multistep/cashrebate.hpp; sourceTree = SOURCE_ROOT; };
		A6A1479CE7E840F184D467CA /* /Users/heiner/git/QuantLib/ql/math/solvers1d/secant.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = secant.hpp; path = ql/math/solvers1d/secant.hpp; sourceTree = SOURCE_ROOT; };
		A6A9B9BF942C4475935C6CA2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multisteppathwisewrapper.cpp; path = ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp; sourceTree = SOURCE_ROOT; };
		A6B1E0104B37495BA3806EBF /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = treecapfloorengine.hpp; path = ql/pricingengines/capfloor/treecapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		A6B1FFAEDE234F76848AB08D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = triplebandlinearop.hpp; path = ql/methods/finitedifferences/operators/triplebandlinearop.hpp; sourceTree = SOURCE_ROOT; };
		A6C8B53EF37B40D1B753A86C /* /Users/heiner/git/QuantLib/ql/time/period.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = period.hpp; path = ql/time/period.hpp; sourceTree = SOURCE_ROOT; };
		A70888817AB543E48C1DC234 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gjrgarchmodel.hpp; path = ql/models/equity/gjrgarchmodel.hpp; sourceTree = SOURCE_ROOT; };
		A71208A62A0842699BC31D6A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dminus.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dminus.hpp; path = ql/methods/finitedifferences/dminus.hpp; sourceTree = SOURCE_ROOT; };
		A72066BCD80F433687A8B311 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = leastsquare.hpp; path = ql/math/optimization/leastsquare.hpp; sourceTree = SOURCE_ROOT; };
		A728FF149C0C4F2787F21B76 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticwriterextensibleoptionengine.hpp; path = ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		A7299EBB205A4FB7882B94C9 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedbarrieroption.cpp; path = ql/pricingengines/barrier/discretizedbarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		A732E9C45C2342679D8154E1 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewisetimedependenthestonmodel.cpp; path = ql/models/equity/piecewisetimedependenthestonmodel.cpp; sourceTree = SOURCE_ROOT; };
		A74AAB767C2D4E66B2FC8E6B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gbsmrndcalculator.cpp; path = ql/experimental/finitedifferences/gbsmrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		A74BDAE166BE4F6B98652C69 /* /Users/heiner/git/QuantLib/test-suite/businessdayconventions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = businessdayconventions.cpp; path = "test-suite/businessdayconventions.cpp"; sourceTree = SOURCE_ROOT; };
		A759D125034949EA9C532FFA /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardstructure.cpp; path = ql/termstructures/yield/forwardstructure.cpp; sourceTree = SOURCE_ROOT; };
		A75E9FB37B5942C69DF28B88 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gumbelcopula.hpp; path = ql/math/copulas/gumbelcopula.hpp; sourceTree = SOURCE_ROOT; };
		A76476021B8143F8B86ABE09 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticptdhestonengine.cpp; path = ql/pricingengines/vanilla/analyticptdhestonengine.cpp; sourceTree = SOURCE_ROOT; };
		A76CEEFC07CE497398A97DCA /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmextoujumpop.cpp; path = ql/experimental/finitedifferences/fdmextoujumpop.cpp; sourceTree = SOURCE_ROOT; };
		A78A83BC77344803843FDB3D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pseudosqrt.hpp; path = ql/math/matrixutilities/pseudosqrt.hpp; sourceTree = SOURCE_ROOT; };
		A78E77A4C01746D8AE2DBA70 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcomplexchooserengine.cpp; path = ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp; sourceTree = SOURCE_ROOT; };
		A7A0BEC8143C4256B0DFACA3 /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = timegrid.cpp; path = ql/timegrid.cpp; sourceTree = SOURCE_ROOT; };
		A7C4463A859B4BCC8F2A2B56 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcd.hpp; path = ql/termstructures/volatility/abcd.hpp; sourceTree = SOURCE_ROOT; };
		A7F30E8E8338454C9B0E19D3 /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = usdliborswap.hpp; path = ql/indexes/swap/usdliborswap.hpp; sourceTree = SOURCE_ROOT; };
		A80D038FC5ED4AB4AD5CD69A /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dmodel.hpp; path = ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp; sourceTree = SOURCE_ROOT; };
		A810F4E06127499B9B73D78D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmextoujumpsolver.cpp; path = ql/experimental/finitedifferences/fdmextoujumpsolver.cpp; sourceTree = SOURCE_ROOT; };
		A811EBF298164CF595D420DD /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fittedbonddiscountcurve.hpp; path = ql/termstructures/yield/fittedbonddiscountcurve.hpp; sourceTree = SOURCE_ROOT; };
		A8297B6B92C141A19433D83A /* /Users/heiner/git/QuantLib/test-suite/calendars.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = calendars.hpp; path = "test-suite/calendars.hpp"; sourceTree = SOURCE_ROOT; };
		A82FBD647259497AB5C38894 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = iborindex.hpp; path = ql/indexes/iborindex.hpp; sourceTree = SOURCE_ROOT; };
		A834C86222BD49F6BA090F91 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackvolsurface.cpp; path = ql/experimental/volatility/blackvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		A836B87431DD46BEAD2854E1 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = assetswap.hpp; path = ql/instruments/assetswap.hpp; sourceTree = SOURCE_ROOT; };
		A83E08A8F6564F448E94D471 /* /Users/heiner/git/QuantLib/ql/math/optimization/simulatedannealing.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simulatedannealing.hpp; path = ql/math/optimization/simulatedannealing.hpp; sourceTree = SOURCE_ROOT; };
		A83E5A30C1BC4568A6E8CC0B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lecuyeruniformrng.cpp; path = ql/math/randomnumbers/lecuyeruniformrng.cpp; sourceTree = SOURCE_ROOT; };
		A84862D9D8A74EC7AE18F526 /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussiancopula.hpp; path = ql/math/copulas/gaussiancopula.hpp; sourceTree = SOURCE_ROOT; };
		A84E09AA5DEE42449B9EC56F /* /Users/heiner/git/QuantLib/ql/termstructures/credit/piecewisedefaultcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisedefaultcurve.hpp; path = ql/termstructures/credit/piecewisedefaultcurve.hpp; sourceTree = SOURCE_ROOT; };
		A84E21395FDB4C35944C6ED5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cdsoption.hpp; path = ql/experimental/credit/cdsoption.hpp; sourceTree = SOURCE_ROOT; };
		A8555848783F4DB682782DA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = svddfwdratepc.cpp; path = ql/models/marketmodels/evolvers/svddfwdratepc.cpp; sourceTree = SOURCE_ROOT; };
		A85C215576FF4ACEB1736411 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vanillavppoption.cpp; path = ql/experimental/finitedifferences/vanillavppoption.cpp; sourceTree = SOURCE_ROOT; };
		A86D4505930A448EB1102E26 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twofactormodel.hpp; path = ql/models/shortrate/twofactormodel.hpp; sourceTree = SOURCE_ROOT; };
		A880575A14684CBA8D03A699 /* /Users/heiner/git/QuantLib/test-suite/instruments.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = instruments.hpp; path = "test-suite/instruments.hpp"; sourceTree = SOURCE_ROOT; };
		A883256218F74EE488485066 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/predefined1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = predefined1dmesher.hpp; path = ql/methods/finitedifferences/meshers/predefined1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		A88B9F21D0DB46B698A9C1B9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zabrsmilesection.hpp; path = ql/experimental/volatility/zabrsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		A892E61901734B248B6DF7F6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/evolvers/all.hpp; sourceTree = SOURCE_ROOT; };
		A89550D0560C4A5C95A8DED0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalcmswapratepc.cpp; path = ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp; sourceTree = SOURCE_ROOT; };
		A8AF68569ED9444DB3967852 /* /Users/heiner/git/QuantLib/ql/processes/g2process.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = g2process.hpp; path = ql/processes/g2process.hpp; sourceTree = SOURCE_ROOT; };
		A8C5176479EC44BE96EE549D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardforwardmappings.hpp; path = ql/models/marketmodels/forwardforwardmappings.hpp; sourceTree = SOURCE_ROOT; };
		A8CA434F4C1A4BB4970E3B11 /* /Users/heiner/git/QuantLib/ql/math/lexicographicalview.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lexicographicalview.hpp; path = ql/math/lexicographicalview.hpp; sourceTree = SOURCE_ROOT; };
		A8CD6EB3A501477781110FDA /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sweden.cpp; path = ql/time/calendars/sweden.cpp; sourceTree = SOURCE_ROOT; };
		A8D0D33F7C5646598DF218AE /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultprobabilitykey.hpp; path = ql/experimental/credit/defaultprobabilitykey.hpp; sourceTree = SOURCE_ROOT; };
		A8E580EAE7194B4987B8EBDB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/equityfx/all.hpp; sourceTree = SOURCE_ROOT; };
		A91681CFC2244864BCFCDB4C /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = assetswap.cpp; path = ql/instruments/assetswap.cpp; sourceTree = SOURCE_ROOT; };
		A91E67067FE446A1A8CF8DCF /* /Users/heiner/git/QuantLib/Examples/ConvertibleBonds/ConvertibleBonds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ConvertibleBonds.cpp; path = Examples/ConvertibleBonds/ConvertibleBonds.cpp; sourceTree = SOURCE_ROOT; };
		A91F9D2A950743AE8FD61E77 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdvanillaengine.hpp; path = ql/pricingengines/vanilla/fdvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		A920686D070C4467AC3C4411 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onestepcoinitialswaps.hpp; path = ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp; sourceTree = SOURCE_ROOT; };
		A92BDE9101F64BCD8A4B5C5B /* /Users/heiner/git/QuantLib/ql/processes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/processes/all.hpp; sourceTree = SOURCE_ROOT; };
		A9486C10BB9946FEBA70D796 /* /Users/heiner/git/QuantLib/ql/experimental/processes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/processes/all.hpp; sourceTree = SOURCE_ROOT; };
		A95094536EBC41B1A15B3251 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholesmultistrikemesher.hpp; path = ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp; sourceTree = SOURCE_ROOT; };
		A95854D2A2324C7FB32FBBFF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/predefined1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = predefined1dmesher.hpp; path = ql/methods/finitedifferences/meshers/predefined1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		A95C52381C78405588226578 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatorfactory.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = operatorfactory.hpp; path = ql/methods/finitedifferences/operatorfactory.hpp; sourceTree = SOURCE_ROOT; };
		A96249085F6B435BAAB940D9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tqreigendecomposition.cpp; path = ql/math/matrixutilities/tqreigendecomposition.cpp; sourceTree = SOURCE_ROOT; };
		A96D91E9CF9349C98703008E /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exchangerate.cpp; path = ql/exchangerate.cpp; sourceTree = SOURCE_ROOT; };
		A98137FB01C24435A3857CD5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice2d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lattice2d.hpp; path = ql/methods/lattices/lattice2d.hpp; sourceTree = SOURCE_ROOT; };
		A997840100BD4B8280381BA5 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ukraine.hpp; path = ql/time/calendars/ukraine.hpp; sourceTree = SOURCE_ROOT; };
		A9A2843DFF314AA58BEB6DBD /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedcapfloor.cpp; path = ql/pricingengines/capfloor/discretizedcapfloor.cpp; sourceTree = SOURCE_ROOT; };
		A9A9D121A69B43E8A2584E10 /* /Users/heiner/git/QuantLib/test-suite/numericaldifferentiation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = numericaldifferentiation.cpp; path = "test-suite/numericaldifferentiation.cpp"; sourceTree = SOURCE_ROOT; };
		A9C79FC1702D4D4C9245B1A9 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multidimintegrator.hpp; path = ql/experimental/math/multidimintegrator.hpp; sourceTree = SOURCE_ROOT; };
		A9C963232D5A421C8CF1ADDB /* /Users/heiner/git/QuantLib/ql/experimental/math/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/math/all.hpp; sourceTree = SOURCE_ROOT; };
		A9CBD1C94E3948CFB290788D /* /Users/heiner/git/QuantLib/ql/math/factorial.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = factorial.hpp; path = ql/math/factorial.hpp; sourceTree = SOURCE_ROOT; };
		A9D505AD9EA747DFAD877306 /* /Users/heiner/git/QuantLib/test-suite/inflationvolatility.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationvolatility.hpp; path = "test-suite/inflationvolatility.hpp"; sourceTree = SOURCE_ROOT; };
		A9DAB2F045804718BADDCF42 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/brent.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = brent.hpp; path = ql/math/solvers1d/brent.hpp; sourceTree = SOURCE_ROOT; };
		A9E1B3B25E184CF8A7DCB632 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationindex.hpp; path = ql/indexes/inflationindex.hpp; sourceTree = SOURCE_ROOT; };
		A9F0B52A31AF4A62B678EDBA /* /Users/heiner/git/QuantLib/ql/math/copulas/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/copulas/all.hpp; sourceTree = SOURCE_ROOT; };
		A9F7AEDDE30C41388CBA79E3 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmcovarproxy.cpp; path = ql/legacy/libormarketmodels/lfmcovarproxy.cpp; sourceTree = SOURCE_ROOT; };
		AA09FA3383024A4D995AD023 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volatilityinterpolationspecifierabcd.hpp; path = ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp; sourceTree = SOURCE_ROOT; };
		AA0A6E6D81FB43E7AE4D2D84 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticholderextensibleoptionengine.hpp; path = ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		AA1053C66AB34DF79021ED0E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzocr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nzocr.hpp; path = ql/indexes/ibor/nzocr.hpp; sourceTree = SOURCE_ROOT; };
		AA24A5FD7CDD44BAA3F35BCB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capfloortermvolsurface.cpp; path = ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		AA46E699D82440F382224253 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmg2solver.cpp; path = ql/methods/finitedifferences/solvers/fdmg2solver.cpp; sourceTree = SOURCE_ROOT; };
		AA560E0A347644ACBF5E48D3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisezerospreadedtermstructure.hpp; path = ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		AA5BDB2134204204ADC8EA3E /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantobarrieroption.hpp; path = ql/instruments/quantobarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		AA606CED7BF048F7B89CCFFD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bsmrndcalculator.hpp; path = ql/experimental/finitedifferences/bsmrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		AA615EDD6B28469CA795126D /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = frankcopula.cpp; path = ql/math/copulas/frankcopula.cpp; sourceTree = SOURCE_ROOT; };
		AA69B65ABD844AF3A8183018 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonhullwhitesolver.cpp; path = ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp; sourceTree = SOURCE_ROOT; };
		AA7282BF35D441DAB37811A2 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = polynomialmathfunction.hpp; path = ql/math/polynomialmathfunction.hpp; sourceTree = SOURCE_ROOT; };
		AA749B3C422040F6BCDC5695 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = geometricbrownianprocess.cpp; path = ql/processes/geometricbrownianprocess.cpp; sourceTree = SOURCE_ROOT; };
		AA79577C99FD41BA97BE0767 /* /Users/heiner/git/QuantLib/ql/experimental/fx/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/fx/all.hpp; sourceTree = SOURCE_ROOT; };
		AA8C78B13B07428BA170A4C0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = twoassetcorrelationoption.cpp; path = ql/experimental/exoticoptions/twoassetcorrelationoption.cpp; sourceTree = SOURCE_ROOT; };
		AA8E4C58DABB4F5AB53E787B /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = assetswap.cpp; path = ql/instruments/assetswap.cpp; sourceTree = SOURCE_ROOT; };
		AAB32ACA95A54CAB8FFAB2AC /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticeuropeanmargrabeengine.cpp; path = ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp; sourceTree = SOURCE_ROOT; };
		AAC2FB8599094C8FB6C2E78E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolmatrix.hpp; path = ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp; sourceTree = SOURCE_ROOT; };
		AAC6A260398F41959098B861 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noexceptlocalvolsurface.hpp; path = ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		AAD3C7DA50ED4BAAB9A9F7F5 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantocouponpricer.hpp; path = ql/experimental/coupons/quantocouponpricer.hpp; sourceTree = SOURCE_ROOT; };
		AAD3F2A51CAA43DA878B5D96 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmextoujumpsolver.hpp; path = ql/experimental/finitedifferences/fdmextoujumpsolver.hpp; sourceTree = SOURCE_ROOT; };
		AAD9C8A43C9D4BA3A47C9310 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mfstateprocess.hpp; path = ql/processes/mfstateprocess.hpp; sourceTree = SOURCE_ROOT; };
		AAE0242B7312464A928E39AA /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dividend.hpp; path = ql/cashflows/dividend.hpp; sourceTree = SOURCE_ROOT; };
		AAF1A377759C42D2A195840F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/all.hpp; sourceTree = SOURCE_ROOT; };
		AAFFDD48A5BD46BCA2F24EEA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stochasticcollocationinvcdf.hpp; path = ql/math/randomnumbers/stochasticcollocationinvcdf.hpp; sourceTree = SOURCE_ROOT; };
		AB0A16D068634D4DBB527701 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmbackwardsolver.cpp; path = ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp; sourceTree = SOURCE_ROOT; };
		AB0DDEEF39714A40A539D143 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onestepforwards.hpp; path = ql/models/marketmodels/products/onestep/onestepforwards.hpp; sourceTree = SOURCE_ROOT; };
		AB0F7A99A1FA4CCA9C22989E /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice2d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lattice2d.hpp; path = ql/methods/lattices/lattice2d.hpp; sourceTree = SOURCE_ROOT; };
		AB2F5488967347C1B97464CF /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/credit/all.hpp; sourceTree = SOURCE_ROOT; };
		AB31C470613C444AA691C4DF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tridiagonaloperator.cpp; path = ql/methods/finitedifferences/tridiagonaloperator.cpp; sourceTree = SOURCE_ROOT; };
		AB439C4599E24EC1A0C24FFA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/models/all.hpp; sourceTree = SOURCE_ROOT; };
		AB5643AB4E2343A2BF65C908 /* /Users/heiner/git/QuantLib/ql/utilities/null_deleter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = null_deleter.hpp; path = ql/utilities/null_deleter.hpp; sourceTree = SOURCE_ROOT; };
		AB5DD6C6F2D7439BB911D268 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductcallspecified.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp; sourceTree = SOURCE_ROOT; };
		AB5E69FC3F1847D98851AA65 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticdoublebarrierbinaryengine.hpp; path = ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp; sourceTree = SOURCE_ROOT; };
		AB84362EB10A48179367DCB2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmexpextouinnervaluecalculator.hpp; path = ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp; sourceTree = SOURCE_ROOT; };
		AB8E11A19B394F20AC4255A2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = complexchooseroption.hpp; path = ql/experimental/exoticoptions/complexchooseroption.hpp; sourceTree = SOURCE_ROOT; };
		AB99DBC145114F0EA9BE4535 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = indonesia.cpp; path = ql/time/calendars/indonesia.cpp; sourceTree = SOURCE_ROOT; };
		ABB298C2236846E4AF5C70FB /* /Users/heiner/git/QuantLib/test-suite/libormarketmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = libormarketmodel.cpp; path = "test-suite/libormarketmodel.cpp"; sourceTree = SOURCE_ROOT; };
		ABBF7473E1E941D8ADBA7346 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmbatessolver.cpp; path = ql/methods/finitedifferences/solvers/fdmbatessolver.cpp; sourceTree = SOURCE_ROOT; };
		ABBFA905E9BB4B9F9F1C8B98 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdbatesvanillaengine.cpp; path = ql/pricingengines/vanilla/fdbatesvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		ABC5160ACA4543A3BAFEFF9E /* /Users/heiner/git/QuantLib/ql/math/distributions/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/distributions/all.hpp; sourceTree = SOURCE_ROOT; };
		ABC90BB21E4E499FAF4C8069 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nthtodefault.hpp; path = ql/experimental/credit/nthtodefault.hpp; sourceTree = SOURCE_ROOT; };
		ABCDC3C9862544EA99FDF5BD /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactormodel.hpp; path = ql/models/shortrate/onefactormodel.hpp; sourceTree = SOURCE_ROOT; };
		ABD331CB8A6E431AA6E347E4 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = asianoption.cpp; path = ql/instruments/asianoption.cpp; sourceTree = SOURCE_ROOT; };
		ABFEAC1C77714516BB076C72 /* /Users/heiner/git/QuantLib/ql/math/statistics/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/statistics/all.hpp; sourceTree = SOURCE_ROOT; };
		AC03321338E141CDBD63D359 /* /Users/heiner/git/QuantLib/ql/processes/g2process.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = g2process.hpp; path = ql/processes/g2process.hpp; sourceTree = SOURCE_ROOT; };
		AC1B0ABE0D274772A00AE5DE /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = business252.cpp; path = ql/time/daycounters/business252.cpp; sourceTree = SOURCE_ROOT; };
		AC24350F433A4BD093FDA1B1 /* /Users/heiner/git/QuantLib/test-suite/squarerootclvmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = squarerootclvmodel.hpp; path = "test-suite/squarerootclvmodel.hpp"; sourceTree = SOURCE_ROOT; };
		AC4C51D4DF97405B813D9D35 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmaffinemodelswapinnervalue.hpp; path = ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp; sourceTree = SOURCE_ROOT; };
		AC5D69BFB3BB457199322B33 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholessolver.cpp; path = ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp; sourceTree = SOURCE_ROOT; };
		AC605C3728104B1B924F7C0D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commodity.hpp; path = ql/experimental/commodities/commodity.hpp; sourceTree = SOURCE_ROOT; };
		AC6EB7DD846C4381BEC86CBD /* /Users/heiner/git/QuantLib/test-suite/cdsoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cdsoption.cpp; path = "test-suite/cdsoption.cpp"; sourceTree = SOURCE_ROOT; };
		AC78B52A018A4318A74EE6C2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductcashrebate.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp; sourceTree = SOURCE_ROOT; };
		AC79F51F3AF145D487419820 /* /Users/heiner/git/QuantLib/ql/discretizedasset.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedasset.hpp; path = ql/discretizedasset.hpp; sourceTree = SOURCE_ROOT; };
		AC8C1A51F2964293ABEAE9C4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/binomialengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialengine.hpp; path = ql/pricingengines/vanilla/binomialengine.hpp; sourceTree = SOURCE_ROOT; };
		AC8E27135FED4EED8217C609 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = firstderivativeop.hpp; path = ql/methods/finitedifferences/operators/firstderivativeop.hpp; sourceTree = SOURCE_ROOT; };
		AC9EE13790B546268241AE36 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bondhelpers.hpp; path = ql/termstructures/yield/bondhelpers.hpp; sourceTree = SOURCE_ROOT; };
		ACAA3D574B714EDBA0999E75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductcaplet.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp; sourceTree = SOURCE_ROOT; };
		ACAEFAB9CE1A4A1D905856DE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmamericanstepcondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp; sourceTree = SOURCE_ROOT; };
		ACBB973FB15C41B598016E8B /* /Users/heiner/git/QuantLib/ql/termstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = termstructure.hpp; path = ql/termstructure.hpp; sourceTree = SOURCE_ROOT; };
		ACBF1F27A4964852A020D451 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytictwoassetcorrelationengine.cpp; path = ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp; sourceTree = SOURCE_ROOT; };
		ACC78179E4E049F7B0F66548 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcliquetengine.hpp; path = ql/pricingengines/cliquet/analyticcliquetengine.hpp; sourceTree = SOURCE_ROOT; };
		ACC8F9D064FA4CFEAA57B319 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrinterpolatedsmilesection.hpp; path = ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		ACDDD40EDBF84DA0B962A0F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/mclongstaffschwartzengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mclongstaffschwartzengine.hpp; path = ql/pricingengines/mclongstaffschwartzengine.hpp; sourceTree = SOURCE_ROOT; };
		ACF3841E5B194995815C87EE /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/mcbasket/all.hpp; sourceTree = SOURCE_ROOT; };
		AD2EFD1A9B9F4913B2A64BC2 /* /Users/heiner/git/QuantLib/ql/methods/lattices/bsmlattice.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bsmlattice.hpp; path = ql/methods/lattices/bsmlattice.hpp; sourceTree = SOURCE_ROOT; };
		AD362F8FF2724F89987D1E16 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/ranluxuniformrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ranluxuniformrng.hpp; path = ql/math/randomnumbers/ranluxuniformrng.hpp; sourceTree = SOURCE_ROOT; };
		AD45894BEBFC4666B6645DEC /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedconstraint.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = projectedconstraint.hpp; path = ql/math/optimization/projectedconstraint.hpp; sourceTree = SOURCE_ROOT; };
		AD478E4B54594A148BB2567A /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonmodel.hpp; path = ql/models/equity/hestonmodel.hpp; sourceTree = SOURCE_ROOT; };
		AD57A6B34B3B4A93B9DE38EE /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticdoublebarrierengine.hpp; path = ql/experimental/barrieroption/analyticdoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		AD68BD7F5C9646DB97CCDC3B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mchestonhullwhiteengine.hpp; path = ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp; sourceTree = SOURCE_ROOT; };
		AD78F23E96404A35BAD0FEE3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = doublebarrieroption.cpp; path = ql/experimental/barrieroption/doublebarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		AD822126242F4AB08EB60FDA /* /Users/heiner/git/QuantLib/ql/position.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = position.hpp; path = ql/position.hpp; sourceTree = SOURCE_ROOT; };
		ADA62BF1FB264451ABC0EBD3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/credit/all.hpp; sourceTree = SOURCE_ROOT; };
		ADAD904E41A84D629880F56D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = primitivepolynomials.hpp; path = ql/math/randomnumbers/primitivepolynomials.hpp; sourceTree = SOURCE_ROOT; };
		ADC8962152B34362B4058F07 /* /Users/heiner/git/QuantLib/ql/currency.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = currency.hpp; path = ql/currency.hpp; sourceTree = SOURCE_ROOT; };
		ADCEABE53B4348878E5578ED /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitalcmsspreadcoupon.cpp; path = ql/experimental/coupons/digitalcmsspreadcoupon.cpp; sourceTree = SOURCE_ROOT; };
		ADD146E58F0640769A677B0F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = smilesection.hpp; path = ql/termstructures/volatility/smilesection.hpp; sourceTree = SOURCE_ROOT; };
		ADF18E0C09374ABC9CCA304D /* /Users/heiner/git/QuantLib/test-suite/integrals.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integrals.hpp; path = "test-suite/integrals.hpp"; sourceTree = SOURCE_ROOT; };
		ADF442DB62D84267A393A32B /* /Users/heiner/git/QuantLib/ql/currencies/europe.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = europe.hpp; path = ql/currencies/europe.hpp; sourceTree = SOURCE_ROOT; };
		ADFF26E9D95C479D8F9E402F /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = independentcopula.hpp; path = ql/math/copulas/independentcopula.hpp; sourceTree = SOURCE_ROOT; };
		AE47A1200A6047869FB2AD59 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noarbsabrinterpolatedsmilesection.hpp; path = ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		AE841B8A1F8C4653B9649EE0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabr.hpp; path = ql/termstructures/volatility/sabr.hpp; sourceTree = SOURCE_ROOT; };
		AE8741D349294CA6A240D207 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonslvmcmodel.hpp; path = ql/experimental/models/hestonslvmcmodel.hpp; sourceTree = SOURCE_ROOT; };
		AE8EBA97C98E41BDB0E4F7A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateiballand.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp; sourceTree = SOURCE_ROOT; };
		AEA0FE89472B4831B8FE0E36 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplex.hpp; path = ql/math/optimization/simplex.hpp; sourceTree = SOURCE_ROOT; };
		AEA1B960D02A49C9B95DD8C5 /* /Users/heiner/git/QuantLib/ql/math/interpolations/cubicinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cubicinterpolation.hpp; path = ql/math/interpolations/cubicinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		AEA2E8380D9C414F9501D87A /* /Users/heiner/git/QuantLib/ql/currencies/america.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = america.hpp; path = ql/currencies/america.hpp; sourceTree = SOURCE_ROOT; };
		AEB551E599E1488A83D16606 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdvanillaengine.cpp; path = ql/pricingengines/vanilla/fdvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		AEE8964BA0704D1C9E6902D9 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = singapore.cpp; path = ql/time/calendars/singapore.cpp; sourceTree = SOURCE_ROOT; };
		AEEC24CFE96842789B77C16A /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hullwhiteprocess.hpp; path = ql/processes/hullwhiteprocess.hpp; sourceTree = SOURCE_ROOT; };
		AEFD384D848B44FFB8F8F7EA /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = generalizedhullwhite.hpp; path = ql/experimental/shortrate/generalizedhullwhite.hpp; sourceTree = SOURCE_ROOT; };
		AEFD4115335B45CA9C9016D9 /* /Users/heiner/git/QuantLib/Examples/MarketModels/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/MarketModels/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		AF03AFA8CF534B92ACB03C08 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralntdengine.hpp; path = ql/experimental/credit/integralntdengine.hpp; sourceTree = SOURCE_ROOT; };
		AF0B1C49D9DC4305B322F053 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = coxingersollross.cpp; path = ql/models/shortrate/onefactormodels/coxingersollross.cpp; sourceTree = SOURCE_ROOT; };
		AF133D2B4C364D9A92D8D628 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = southafrica.hpp; path = ql/time/calendars/southafrica.hpp; sourceTree = SOURCE_ROOT; };
		AF17F6FE1AC943BDBB095E5B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaform.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = alphaform.hpp; path = ql/models/marketmodels/models/alphaform.hpp; sourceTree = SOURCE_ROOT; };
		AF19DC99E4814EFAA773E6F9 /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makeswaption.hpp; path = ql/instruments/makeswaption.hpp; sourceTree = SOURCE_ROOT; };
		AF24F9D9462D4A4488BA74D8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dsmilesection.hpp; path = ql/termstructures/volatility/gaussian1dsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		AF386F34BA904165BD23F26D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativersg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inversecumulativersg.hpp; path = ql/math/randomnumbers/inversecumulativersg.hpp; sourceTree = SOURCE_ROOT; };
		AF4DB7D72E1F4F50AEC39DFB /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = convolvedstudentt.hpp; path = ql/experimental/math/convolvedstudentt.hpp; sourceTree = SOURCE_ROOT; };
		AF54DCDCC4FE45B1A56F507E /* /Users/heiner/git/QuantLib/test-suite/daycounters.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = daycounters.cpp; path = "test-suite/daycounters.cpp"; sourceTree = SOURCE_ROOT; };
		AF56DFDD5A6449889F2859D6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdsimpleextoujumpswingengine.hpp; path = ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp; sourceTree = SOURCE_ROOT; };
		AF6A9CEF94D94D35B0F4FD85 /* /Users/heiner/git/QuantLib/test-suite/cashflows.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cashflows.hpp; path = "test-suite/cashflows.hpp"; sourceTree = SOURCE_ROOT; };
		AF8A0F5865A346409BFB8B97 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletalphacalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodel_smmcapletalphacalibration.hpp; path = "test-suite/marketmodel_smmcapletalphacalibration.hpp"; sourceTree = SOURCE_ROOT; };
		AFA29F60264248CC9884C314 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyoptionlethelpers.hpp; path = ql/experimental/inflation/yoyoptionlethelpers.hpp; sourceTree = SOURCE_ROOT; };
		AFA690CC379C43F188A0E376 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantocouponpricer.cpp; path = ql/experimental/coupons/quantocouponpricer.cpp; sourceTree = SOURCE_ROOT; };
		AFB0955304B84A648412DDBB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = qrdecomposition.hpp; path = ql/math/matrixutilities/qrdecomposition.hpp; sourceTree = SOURCE_ROOT; };
		AFB4A1B73C5A413DB010D706 /* /Users/heiner/git/QuantLib/ql/time/calendars/nullcalendar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nullcalendar.hpp; path = ql/time/calendars/nullcalendar.hpp; sourceTree = SOURCE_ROOT; };
		AFB883CFF9B14A468F28EAC4 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/indexes/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		AFBE1C06B51B495D91F51B31 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdsimpleextoujumpswingengine.cpp; path = ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp; sourceTree = SOURCE_ROOT; };
		AFC294CF772A477894885047 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmscoupon.hpp; path = ql/cashflows/cmscoupon.hpp; sourceTree = SOURCE_ROOT; };
		AFCBD89783DC457BA71F90CF /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = coxingersollross.hpp; path = ql/models/shortrate/onefactormodels/coxingersollross.hpp; sourceTree = SOURCE_ROOT; };
		AFD824CE80F3491CBBCC3DA9 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/aucpi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = aucpi.hpp; path = ql/indexes/inflation/aucpi.hpp; sourceTree = SOURCE_ROOT; };
		AFDF074A4708499AB2D0F07B /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = correlationstructure.hpp; path = ql/experimental/credit/correlationstructure.hpp; sourceTree = SOURCE_ROOT; };
		AFE0AD37258D4AF98FB61E2C /* /Users/heiner/git/QuantLib/test-suite/himalayaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = himalayaoption.hpp; path = "test-suite/himalayaoption.hpp"; sourceTree = SOURCE_ROOT; };
		AFE7C46721254F3A99E6A782 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stock.cpp; path = ql/instruments/stock.cpp; sourceTree = SOURCE_ROOT; };
		AFFB901C235C43A382A5DB1E /* /Users/heiner/git/QuantLib/ql/math/interpolations/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/interpolations/all.hpp; sourceTree = SOURCE_ROOT; };
		B007A6224359439FB086186D /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lattice.hpp; path = ql/methods/lattices/lattice.hpp; sourceTree = SOURCE_ROOT; };
		B036FFBA271F479694448B5E /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/mcbasket/all.hpp; sourceTree = SOURCE_ROOT; };
		B0414D060DF94021BBDEC847 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdeshortrate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pdeshortrate.hpp; path = ql/methods/finitedifferences/pdeshortrate.hpp; sourceTree = SOURCE_ROOT; };
		B048AB4C6C3D4CD297DE4725 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm3dimsolver.cpp; path = ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp; sourceTree = SOURCE_ROOT; };
		B06E2E2A16CF423C8D5ED831 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ninepointlinearop.hpp; path = ql/methods/finitedifferences/operators/ninepointlinearop.hpp; sourceTree = SOURCE_ROOT; };
		B07B05945B4D498FA38CE223 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extouwithjumpsprocess.hpp; path = ql/experimental/processes/extouwithjumpsprocess.hpp; sourceTree = SOURCE_ROOT; };
		B0A377056FC845D59A44516C /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedasset.cpp; path = ql/discretizedasset.cpp; sourceTree = SOURCE_ROOT; };
		B0B9E62750494339A6AF7A34 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedcallablefixedratebond.cpp; path = ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp; sourceTree = SOURCE_ROOT; };
		B0C644BC651947709C1FA4E7 /* /Users/heiner/git/QuantLib/test-suite/gjrgarchmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gjrgarchmodel.cpp; path = "test-suite/gjrgarchmodel.cpp"; sourceTree = SOURCE_ROOT; };
		B0CD22AC6D93454CA9367F91 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = baroneadesiwhaleyengine.cpp; path = ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp; sourceTree = SOURCE_ROOT; };
		B0D964939CB846C19050F176 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = projectedcostfunction.cpp; path = ql/math/optimization/projectedcostfunction.cpp; sourceTree = SOURCE_ROOT; };
		B0E63FC4F29A4F6D8906F578 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcdatmvolcurve.cpp; path = ql/experimental/volatility/abcdatmvolcurve.cpp; sourceTree = SOURCE_ROOT; };
		B0E95597B0F94A888F34E81A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pde.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pde.hpp; path = ql/methods/finitedifferences/pde.hpp; sourceTree = SOURCE_ROOT; };
		B10A74D01E8F4DA0B59F6802 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = shibor.hpp; path = ql/indexes/ibor/shibor.hpp; sourceTree = SOURCE_ROOT; };
		B11556FCEAD24B4B8BA2C043 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kahalesmilesection.hpp; path = ql/termstructures/volatility/kahalesmilesection.hpp; sourceTree = SOURCE_ROOT; };
		B119647C44314BEB8B4B4FBF /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = callablebondconstantvol.cpp; path = ql/experimental/callablebonds/callablebondconstantvol.cpp; sourceTree = SOURCE_ROOT; };
		B125775433FC4E95B839E276 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = survivalprobabilitystructure.cpp; path = ql/termstructures/credit/survivalprobabilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		B13FDA62D0CA478E8106FA39 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmdif.hpp; path = ql/math/optimization/lmdif.hpp; sourceTree = SOURCE_ROOT; };
		B153E1B565DD475185AF28A5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskyassetswap.cpp; path = ql/experimental/credit/riskyassetswap.cpp; sourceTree = SOURCE_ROOT; };
		B165474E091F4411829E8331 /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = differentialevolution.cpp; path = ql/math/optimization/differentialevolution.cpp; sourceTree = SOURCE_ROOT; };
		B174565433DE4FAC80ACB9C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cotswapfromfwdcorrelation.cpp; path = ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp; sourceTree = SOURCE_ROOT; };
		B1AF77D0E5244261B58D8472 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gemanroncoroniprocess.hpp; path = ql/experimental/processes/gemanroncoroniprocess.hpp; sourceTree = SOURCE_ROOT; };
		B1B134E4DEEA41A1B0BE8466 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticwriterextensibleoptionengine.hpp; path = ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		B1B172A46B934B2BBED3DDC2 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = floatingratebond.hpp; path = ql/instruments/bonds/floatingratebond.hpp; sourceTree = SOURCE_ROOT; };
		B1B71DC2CDDD4DFFA30DE45C /* /Users/heiner/git/QuantLib/ql/exchangerate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exchangerate.hpp; path = ql/exchangerate.hpp; sourceTree = SOURCE_ROOT; };
		B1C1667AE1A34924B3881256 /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dataparsers.hpp; path = ql/utilities/dataparsers.hpp; sourceTree = SOURCE_ROOT; };
		B1C8ADD53F054494918514A0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytictwoassetbarrierengine.hpp; path = ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		B1CA308F0E82491DBD0BF23C /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = generalizedornsteinuhlenbeckprocess.hpp; path = ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp; sourceTree = SOURCE_ROOT; };
		B1CC7A444E264026B25F1E7B /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constraint.hpp; path = ql/math/optimization/constraint.hpp; sourceTree = SOURCE_ROOT; };
		B200164722C94439AE092710 /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = g2process.cpp; path = ql/processes/g2process.cpp; sourceTree = SOURCE_ROOT; };
		B204DD88CE5E4CD39BE66C5B /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stochasticprocessarray.cpp; path = ql/processes/stochasticprocessarray.cpp; sourceTree = SOURCE_ROOT; };
		B21FB2F2B47140229DD9F71A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdconditions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdconditions.hpp; path = ql/pricingengines/vanilla/fdconditions.hpp; sourceTree = SOURCE_ROOT; };
		B22C94CC3910494AAD7E9A08 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eonia.cpp; path = ql/indexes/ibor/eonia.cpp; sourceTree = SOURCE_ROOT; };
		B22EC89F8DB74B23848FB1AB /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commodityunitcost.cpp; path = ql/experimental/commodities/commodityunitcost.cpp; sourceTree = SOURCE_ROOT; };
		B2469D8C38A64B84BCC1FCF0 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytichestonhullwhiteengine.cpp; path = ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp; sourceTree = SOURCE_ROOT; };
		B24E5C5F838641D088D67C95 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = primitivepolynomials.hpp; path = ql/math/randomnumbers/primitivepolynomials.hpp; sourceTree = SOURCE_ROOT; };
		B250ACAC8D7F4FAF91C1814A /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedornsteinuhlenbeckprocess.cpp; path = ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp; sourceTree = SOURCE_ROOT; };
		B25834502FB54970BA2CA2EF /* /Users/heiner/git/QuantLib/test-suite/quantooption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantooption.hpp; path = "test-suite/quantooption.hpp"; sourceTree = SOURCE_ROOT; };
		B2699E71D7984632B4752A53 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendamericanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fddividendamericanengine.hpp; path = ql/pricingengines/vanilla/fddividendamericanengine.hpp; sourceTree = SOURCE_ROOT; };
		B26DEB4D76D24FEE91BBCF2D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmbatessolver.hpp; path = ql/methods/finitedifferences/solvers/fdmbatessolver.hpp; sourceTree = SOURCE_ROOT; };
		B27D796D12524EA8AF12D8A9 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantobarrieroption.cpp; path = ql/instruments/quantobarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		B2D2BD85532D4C669EF331D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = upperboundengine.hpp; path = ql/models/marketmodels/callability/upperboundengine.hpp; sourceTree = SOURCE_ROOT; };
		B3100E437D5A45938D90B5E8 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackdeltacalculator.cpp; path = ql/experimental/fx/blackdeltacalculator.cpp; sourceTree = SOURCE_ROOT; };
		B3429F3FF99C4E81B4D33399 /* /Users/heiner/git/QuantLib/ql/time/daycounters/one.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = one.hpp; path = ql/time/daycounters/one.hpp; sourceTree = SOURCE_ROOT; };
		B3465A9864C64B35A5EA09D8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = localvoltermstructure.cpp; path = ql/termstructures/volatility/equityfx/localvoltermstructure.cpp; sourceTree = SOURCE_ROOT; };
		B366BBF1B7FC45C7A609CF21 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = expm.hpp; path = ql/experimental/math/expm.hpp; sourceTree = SOURCE_ROOT; };
		B36F771D7CC64E59B39C2A9F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pagodaoption.hpp; path = ql/experimental/exoticoptions/pagodaoption.hpp; sourceTree = SOURCE_ROOT; };
		B371906CB81644D4B2A31CDA /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = armijo.hpp; path = ql/math/optimization/armijo.hpp; sourceTree = SOURCE_ROOT; };
		B388D14F31EB4199BC4A7093 /* /Users/heiner/git/QuantLib/Examples/ConvertibleBonds/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/ConvertibleBonds/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B3926A6D01764346B80569F3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdsimpleklugeextouvppengine.hpp; path = ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp; sourceTree = SOURCE_ROOT; };
		B39B67E665D5432EB1E8CA04 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = midpointcdsengine.cpp; path = ql/pricingengines/credit/midpointcdsengine.cpp; sourceTree = SOURCE_ROOT; };
		B3C098C0F4A749778909A285 /* /Users/heiner/git/QuantLib/test-suite/varianceoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = varianceoption.cpp; path = "test-suite/varianceoption.cpp"; sourceTree = SOURCE_ROOT; };
		B3C34178606D4800B9E4BD27 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = genericlsregression.hpp; path = ql/methods/montecarlo/genericlsregression.hpp; sourceTree = SOURCE_ROOT; };
		B3F1ED9E2BC54F09A8D66C47 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = montecarlocatbondengine.cpp; path = ql/experimental/catbonds/montecarlocatbondengine.cpp; sourceTree = SOURCE_ROOT; };
		B3F7AE2F227345D3B7C9C28A /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicouponpricer.hpp; path = ql/cashflows/cpicouponpricer.hpp; sourceTree = SOURCE_ROOT; };
		B401CE88B6A04C3F9FCB442D /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = america.cpp; path = ql/currencies/america.cpp; sourceTree = SOURCE_ROOT; };
		B40CB3E2AC8D42B886165202 /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = saudiarabia.hpp; path = ql/time/calendars/saudiarabia.hpp; sourceTree = SOURCE_ROOT; };
		B41383F2843B447D80DB6C54 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lsmbasissystem.cpp; path = ql/methods/montecarlo/lsmbasissystem.cpp; sourceTree = SOURCE_ROOT; };
		B41E82D433494B5EAAC1FA29 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/variancegamma/all.hpp; sourceTree = SOURCE_ROOT; };
		B421DE84457E4E4D87701EA1 /* /Users/heiner/git/QuantLib/ql/math/transformedgrid.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = transformedgrid.hpp; path = ql/math/transformedgrid.hpp; sourceTree = SOURCE_ROOT; };
		B42DA3DC686141E88BB02770 /* /Users/heiner/git/QuantLib/ql/currencies/asia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = asia.hpp; path = ql/currencies/asia.hpp; sourceTree = SOURCE_ROOT; };
		B449EAD48BCD45D2ABCBA530 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdextoujumpvanillaengine.hpp; path = ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		B45AF044834040E292560A02 /* /Users/heiner/git/QuantLib/ql/time/period.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = period.cpp; path = ql/time/period.cpp; sourceTree = SOURCE_ROOT; };
		B45D732372CE45EE93A22517 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = equityfxvolsurface.hpp; path = ql/experimental/volatility/equityfxvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		B46C8E72E2454370A63E4A57 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/chflibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = chflibor.hpp; path = ql/indexes/ibor/chflibor.hpp; sourceTree = SOURCE_ROOT; };
		B492856BAE0740279C08855E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/stepconditions/all.hpp; sourceTree = SOURCE_ROOT; };
		B4AD575F96A348C688AD700F /* /Users/heiner/git/QuantLib/test-suite/markovfunctional.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = markovfunctional.cpp; path = "test-suite/markovfunctional.cpp"; sourceTree = SOURCE_ROOT; };
		B4B3E332F6FC456682BE49CF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytichestonhullwhiteengine.hpp; path = ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp; sourceTree = SOURCE_ROOT; };
		B4C5C1E7340341B6B964217D /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicouponpricer.hpp; path = ql/cashflows/cpicouponpricer.hpp; sourceTree = SOURCE_ROOT; };
		B4CE47ED79DD4A03980CD733 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmzabrop.hpp; path = ql/experimental/finitedifferences/fdmzabrop.hpp; sourceTree = SOURCE_ROOT; };
		B4D643808AAE421C88C777B2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmbermudanstepcondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp; sourceTree = SOURCE_ROOT; };
		B4D7DF7E99B54A5995A169EB /* /Users/heiner/git/QuantLib/ql/quantlib.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantlib.hpp; path = ql/quantlib.hpp; sourceTree = SOURCE_ROOT; };
		B4E2DE7C03FB48E0874EEFCD /* Bonds */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Bonds; sourceTree = BUILT_PRODUCTS_DIR; };
		B4E34BA846F945ACBF2C469A /* /Users/heiner/git/QuantLib/ql/pricingengines/mcsimulation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcsimulation.hpp; path = ql/pricingengines/mcsimulation.hpp; sourceTree = SOURCE_ROOT; };
		B4EC4F4AEAA24604AA765FC8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nothingexercisevalue.hpp; path = ql/models/marketmodels/callability/nothingexercisevalue.hpp; sourceTree = SOURCE_ROOT; };
		B4F30E36C7664F46BAAD4890 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackdeltacalculator.hpp; path = ql/experimental/fx/blackdeltacalculator.hpp; sourceTree = SOURCE_ROOT; };
		B4F3873B0F314FB19A675CEB /* /Users/heiner/git/QuantLib/test-suite/optionletstripper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optionletstripper.cpp; path = "test-suite/optionletstripper.cpp"; sourceTree = SOURCE_ROOT; };
		B507DEF8AB55475E93A6FA5E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmstepconditioncomposite.cpp; path = ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp; sourceTree = SOURCE_ROOT; };
		B50992BF377D41F99589011D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eurlibor.hpp; path = ql/indexes/ibor/eurlibor.hpp; sourceTree = SOURCE_ROOT; };
		B50F0A949E6E4C6893AF532D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskneutraldensitycalculator.cpp; path = ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp; sourceTree = SOURCE_ROOT; };
		B50F0F3B039945A4A117AC68 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = norway.hpp; path = ql/time/calendars/norway.hpp; sourceTree = SOURCE_ROOT; };
		B518FF65101142B0A898F30D /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hazardratestructure.hpp; path = ql/termstructures/credit/hazardratestructure.hpp; sourceTree = SOURCE_ROOT; };
		B5193D26DA20410DAFD41B79 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepcoterminalswaps.cpp; path = ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp; sourceTree = SOURCE_ROOT; };
		B52FA47BDA4040FC90E6B6B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fwdperiodadapter.cpp; path = ql/models/marketmodels/models/fwdperiodadapter.cpp; sourceTree = SOURCE_ROOT; };
		B53D4C05A5D14C3486D705DD /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basketoption.cpp; path = ql/instruments/basketoption.cpp; sourceTree = SOURCE_ROOT; };
		B549293533334666852A1308 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = callablebond.cpp; path = ql/experimental/callablebonds/callablebond.cpp; sourceTree = SOURCE_ROOT; };
		B54A4B6A5E0648608126E53D /* /Users/heiner/git/QuantLib/test-suite/inflationcapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcapfloor.hpp; path = "test-suite/inflationcapfloor.hpp"; sourceTree = SOURCE_ROOT; };
		B5515232A2384692B8DD0C34 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmexpcorrmodel.hpp; path = ql/legacy/libormarketmodels/lmexpcorrmodel.hpp; sourceTree = SOURCE_ROOT; };
		B55E116AD91B4390A5255A91 /* /Users/heiner/git/QuantLib/test-suite/nthtodefault.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nthtodefault.hpp; path = "test-suite/nthtodefault.hpp"; sourceTree = SOURCE_ROOT; };
		B561260C71FC4EAF92A43270 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillaswap.hpp; path = ql/instruments/vanillaswap.hpp; sourceTree = SOURCE_ROOT; };
		B56D6919B8384F4C8136B308 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = overnightindexedswap.hpp; path = ql/instruments/overnightindexedswap.hpp; sourceTree = SOURCE_ROOT; };
		B579729F2E774E319B0C64E1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedblackvariancesurface.cpp; path = ql/experimental/volatility/extendedblackvariancesurface.cpp; sourceTree = SOURCE_ROOT; };
		B5944E362F0F4957AB44137A /* /Users/heiner/git/QuantLib/ql/math/interpolations/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/interpolations/all.hpp; sourceTree = SOURCE_ROOT; };
		B59DDE1136BA4041B2F5DFFE /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twofactormodel.hpp; path = ql/models/shortrate/twofactormodel.hpp; sourceTree = SOURCE_ROOT; };
		B5A39FE90CA94DE7BCA43D07 /* /Users/heiner/git/QuantLib/ql/time/timeunit.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timeunit.hpp; path = ql/time/timeunit.hpp; sourceTree = SOURCE_ROOT; };
		B5B4630856FE4A87BFD5CA85 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recursivelossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = recursivelossmodel.hpp; path = ql/experimental/credit/recursivelossmodel.hpp; sourceTree = SOURCE_ROOT; };
		B5B8A3A567E24273B290352D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm1dimsolver.hpp; path = ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp; sourceTree = SOURCE_ROOT; };
		B5BDAAD00174427BAB192CBE /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kronrodintegral.hpp; path = ql/math/integrals/kronrodintegral.hpp; sourceTree = SOURCE_ROOT; };
		B5C04DCB081C4689B0BF9F5D /* /Users/heiner/git/QuantLib/ql/math/solvers1d/bisection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bisection.hpp; path = ql/math/solvers1d/bisection.hpp; sourceTree = SOURCE_ROOT; };
		B5F805DCF7BB477F889C6216 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = complexchooseroption.cpp; path = ql/experimental/exoticoptions/complexchooseroption.cpp; sourceTree = SOURCE_ROOT; };
		B5FCC3CB126141F78CB50F01 /* /Users/heiner/git/QuantLib/ql/legacy/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/legacy/all.hpp; sourceTree = SOURCE_ROOT; };
		B606EBEFB894490AB7C91CAF /* /Users/heiner/git/QuantLib/ql/math/interpolations/abcdinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdinterpolation.hpp; path = ql/math/interpolations/abcdinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		B6110D77B38B4975AA95A6B0 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stulzengine.hpp; path = ql/pricingengines/basket/stulzengine.hpp; sourceTree = SOURCE_ROOT; };
		B653FC6C464049F9B98B12AD /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = interestrate.cpp; path = ql/interestrate.cpp; sourceTree = SOURCE_ROOT; };
		B67160DEB6E849F792649E3F /* /Users/heiner/git/QuantLib/ql/indexes/inflation/frhicp.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = frhicp.hpp; path = ql/indexes/inflation/frhicp.hpp; sourceTree = SOURCE_ROOT; };
		B67ED76395F248D7942DCF2E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcoupon.cpp; path = ql/cashflows/inflationcoupon.cpp; sourceTree = SOURCE_ROOT; };
		B6852774A4FF43D5B657389B /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nonstandardswap.cpp; path = ql/instruments/nonstandardswap.cpp; sourceTree = SOURCE_ROOT; };
		B69398B52CB74E5C8EE5FB10 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolateddefaultdensitycurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolateddefaultdensitycurve.hpp; path = ql/termstructures/credit/interpolateddefaultdensitycurve.hpp; sourceTree = SOURCE_ROOT; };
		B6A8968718834784A031568F /* /Users/heiner/git/QuantLib/ql/math/interpolations/sabrinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrinterpolation.hpp; path = ql/math/interpolations/sabrinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		B6B68C09BF844359A83CD195 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = haganirregularswaptionengine.hpp; path = ql/experimental/swaptions/haganirregularswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		B6C45B96BF03486A917A1F32 /* /Users/heiner/git/QuantLib/ql/config.msvc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = config.msvc.hpp; path = ql/config.msvc.hpp; sourceTree = SOURCE_ROOT; };
		B6D41C232ED74412905FA95C /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = irregularswap.hpp; path = ql/experimental/swaptions/irregularswap.hpp; sourceTree = SOURCE_ROOT; };
		B6F8167157244EFAAC44DFBF /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantovanillaoption.cpp; path = ql/instruments/quantovanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		B6F895E42B844785BE26248F /* /Users/heiner/git/QuantLib/ql/math/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/all.hpp; sourceTree = SOURCE_ROOT; };
		B6FBFB20E0E94C25AC05419E /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationhelpers.cpp; path = ql/termstructures/inflation/inflationhelpers.cpp; sourceTree = SOURCE_ROOT; };
		B71CB4B773C54A609E69805D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticsimplechooserengine.cpp; path = ql/experimental/exoticoptions/analyticsimplechooserengine.cpp; sourceTree = SOURCE_ROOT; };
		B7366D80E5D0495693DED4E8 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = qrdecomposition.cpp; path = ql/math/matrixutilities/qrdecomposition.cpp; sourceTree = SOURCE_ROOT; };
		B74256C6D5474B47B21EEBB6 /* /Users/heiner/git/QuantLib/ql/instruments/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/instruments/all.hpp; sourceTree = SOURCE_ROOT; };
		B7469D596DA94D15907DB0CC /* /Users/heiner/git/QuantLib/test-suite/blackformula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackformula.hpp; path = "test-suite/blackformula.hpp"; sourceTree = SOURCE_ROOT; };
		B7477FF05E0F45339ABA8FA4 /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = barrieroption.cpp; path = "test-suite/barrieroption.cpp"; sourceTree = SOURCE_ROOT; };
		B764E97B95C24B75AE40A676 /* /Users/heiner/git/QuantLib/ql/math/optimization/problem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = problem.hpp; path = ql/math/optimization/problem.hpp; sourceTree = SOURCE_ROOT; };
		B766B0F954E04316B07973C6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonfwdop.cpp; path = ql/experimental/finitedifferences/fdmhestonfwdop.cpp; sourceTree = SOURCE_ROOT; };
		B7887FF2901C4BA0B04ECA61 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitylatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultprobabilitylatentmodel.hpp; path = ql/experimental/credit/defaultprobabilitylatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		B794DF8B11024636AD8C82F3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmexpextouinnervaluecalculator.hpp; path = ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp; sourceTree = SOURCE_ROOT; };
		B79DDF87D5EC4A28977007E0 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = binomialtree.cpp; path = ql/methods/lattices/binomialtree.cpp; sourceTree = SOURCE_ROOT; };
		B7A27999278A45E5AA52599E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditycashflow.cpp; path = ql/experimental/commodities/commoditycashflow.cpp; sourceTree = SOURCE_ROOT; };
		B7AC15262B254130BB5C0997 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = impliedstddevquote.cpp; path = ql/quotes/impliedstddevquote.cpp; sourceTree = SOURCE_ROOT; };
		B7B86E377CCA4F6381EF4C64 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = iborindex.hpp; path = ql/indexes/iborindex.hpp; sourceTree = SOURCE_ROOT; };
		B7BABD33024E41F08C45A6D7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exponentialjump1dmesher.hpp; path = ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		B7BD1370F3664C2993346D3D /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basketoption.cpp; path = "test-suite/basketoption.cpp"; sourceTree = SOURCE_ROOT; };
		B7BF422BA645481DA085E48E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = equityfxvolsurface.cpp; path = ql/experimental/volatility/equityfxvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		B7C2EA6BE9404866A15A937B /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = indexmanager.cpp; path = ql/indexes/indexmanager.cpp; sourceTree = SOURCE_ROOT; };
		B7DDE0E3C93D48D4B0BA95D4 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/zacpi.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zacpi.hpp; path = ql/indexes/inflation/zacpi.hpp; sourceTree = SOURCE_ROOT; };
		B8165DC968D345A0A97679D8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/cranknicolson.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cranknicolson.hpp; path = ql/methods/finitedifferences/cranknicolson.hpp; sourceTree = SOURCE_ROOT; };
		B82D339477284700B1B9D197 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capflooredinflationcoupon.hpp; path = ql/cashflows/capflooredinflationcoupon.hpp; sourceTree = SOURCE_ROOT; };
		B83A182C7D0E4547A37F37C7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsmarket.hpp; path = ql/termstructures/volatility/swaption/cmsmarket.hpp; sourceTree = SOURCE_ROOT; };
		B83F9E4575B54E839AD8F901 /* /Users/heiner/git/QuantLib/ql/patterns/singleton.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = singleton.hpp; path = ql/patterns/singleton.hpp; sourceTree = SOURCE_ROOT; };
		B84735E400F34B0AB03C9156 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestonvanillaengine.hpp; path = ql/pricingengines/vanilla/fdhestonvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		B87317F2996A4C3AB4CF32DB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmbatessolver.hpp; path = ql/methods/finitedifferences/solvers/fdmbatessolver.hpp; sourceTree = SOURCE_ROOT; };
		B876879D0CD3486AA06EED06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localvoltermstructure.hpp; path = ql/termstructures/volatility/equityfx/localvoltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		B890A813252E4597B1D208E4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zeroyieldstructure.cpp; path = ql/termstructures/yield/zeroyieldstructure.cpp; sourceTree = SOURCE_ROOT; };
		B8A4A80FA3384C56AABF5C9E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholesop.cpp; path = ql/methods/finitedifferences/operators/fdmblackscholesop.cpp; sourceTree = SOURCE_ROOT; };
		B8BD1D10613D4E30A4F61BF7 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mchullwhiteengine.hpp; path = ql/pricingengines/capfloor/mchullwhiteengine.hpp; sourceTree = SOURCE_ROOT; };
		B8CA9CA7AB7E488A81E77707 /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraphelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bootstraphelper.hpp; path = ql/termstructures/bootstraphelper.hpp; sourceTree = SOURCE_ROOT; };
		B8E6CE85DBE343EABFCF9AC9 /* /Users/heiner/git/QuantLib/test-suite/quantlibbenchmark.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantlibbenchmark.cpp; path = "test-suite/quantlibbenchmark.cpp"; sourceTree = SOURCE_ROOT; };
		B8E8B099D48247ABA220A1D0 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = rebatedexercise.cpp; path = ql/rebatedexercise.cpp; sourceTree = SOURCE_ROOT; };
		B9032A5DB2E044F68F2D081E /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmdif.hpp; path = ql/math/optimization/lmdif.hpp; sourceTree = SOURCE_ROOT; };
		B9067D73479B45439DAA8A3A /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditysettings.hpp; path = ql/experimental/commodities/commoditysettings.hpp; sourceTree = SOURCE_ROOT; };
		B92148B6CC9C48C997001CD4 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliedstddevquote.hpp; path = ql/quotes/impliedstddevquote.hpp; sourceTree = SOURCE_ROOT; };
		B929152FDB514197B303D1E1 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kinterpolatedyoyoptionletvolatilitysurface.hpp; path = ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp; sourceTree = SOURCE_ROOT; };
		B929B6A190034AB18D3E35E8 /* /Users/heiner/git/QuantLib/test-suite/cashflows.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cashflows.cpp; path = "test-suite/cashflows.cpp"; sourceTree = SOURCE_ROOT; };
		B9446841FBB347DFBA158509 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation2d.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kernelinterpolation2d.hpp; path = ql/math/interpolations/kernelinterpolation2d.hpp; sourceTree = SOURCE_ROOT; };
		B9648FF11F3B47ABAE4032DF /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcapfloorengine.hpp; path = ql/pricingengines/capfloor/analyticcapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		B98CEBA7C17040B39FDB6450 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = floatingratebond.cpp; path = ql/instruments/bonds/floatingratebond.cpp; sourceTree = SOURCE_ROOT; };
		B9A58F12A8764638845C9D80 /* /Users/heiner/git/QuantLib/test-suite/blackformula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackformula.cpp; path = "test-suite/blackformula.cpp"; sourceTree = SOURCE_ROOT; };
		B9B83B6D3F8840069AA133C9 /* /Users/heiner/git/QuantLib/test-suite/swapforwardmappings.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapforwardmappings.cpp; path = "test-suite/swapforwardmappings.cpp"; sourceTree = SOURCE_ROOT; };
		B9BD0009BD29436484889FB4 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcaplethomocalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel_smmcaplethomocalibration.cpp; path = "test-suite/marketmodel_smmcaplethomocalibration.cpp"; sourceTree = SOURCE_ROOT; };
		B9BD14AA60C2486BA0AF5D9E /* /Users/heiner/git/QuantLib/ql/index.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = index.cpp; path = ql/index.cpp; sourceTree = SOURCE_ROOT; };
		B9F3A226A89A426E8F4C8507 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletcoterminalmaxhomogeneity.hpp; path = ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp; sourceTree = SOURCE_ROOT; };
		B9F6501A28424F56B8ED5916 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/petroleumunitsofmeasure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = petroleumunitsofmeasure.hpp; path = ql/experimental/commodities/petroleumunitsofmeasure.hpp; sourceTree = SOURCE_ROOT; };
		BA10932859B94C22BCA38CE3 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedzeroinflationcurve.hpp; path = ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp; sourceTree = SOURCE_ROOT; };
		BA164468DE5F43A1A86EBB1B /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomlosslatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomlosslatentmodel.hpp; path = ql/experimental/credit/randomlosslatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		BA28A128AC0648258EEA37F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytich1hwengine.hpp; path = ql/pricingengines/vanilla/analytich1hwengine.hpp; sourceTree = SOURCE_ROOT; };
		BA29497919904BB3BFD8D73D /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmscoupon.cpp; path = ql/cashflows/cmscoupon.cpp; sourceTree = SOURCE_ROOT; };
		BA2C9E253CF4464FA69D79E7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sviinterpolatedsmilesection.hpp; path = ql/experimental/volatility/sviinterpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		BA2E433484CA4A30BE140CF7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/shoutcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = shoutcondition.hpp; path = ql/methods/finitedifferences/shoutcondition.hpp; sourceTree = SOURCE_ROOT; };
		BA378CB6AC8A4263A9D44B2A /* /Users/heiner/git/QuantLib/ql/math/integrals/simpsonintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simpsonintegral.hpp; path = ql/math/integrals/simpsonintegral.hpp; sourceTree = SOURCE_ROOT; };
		BA394D48A06343BBA140BA31 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makearithmeticaverageois.cpp; path = ql/experimental/averageois/makearithmeticaverageois.cpp; sourceTree = SOURCE_ROOT; };
		BA3B2834F66F4725AD8E6FF7 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hungary.hpp; path = ql/time/calendars/hungary.hpp; sourceTree = SOURCE_ROOT; };
		BA3C208E278544028C47F758 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = frankcopula.hpp; path = ql/math/copulas/frankcopula.hpp; sourceTree = SOURCE_ROOT; };
		BA3E2281F97247BB8ABC85B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdblackscholesbarrierengine.cpp; path = ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		BA497A62E0594F15B0300598 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestonvanillaengine.cpp; path = ql/pricingengines/vanilla/fdhestonvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		BA4B050C3667407A9F54C508 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eurlibor.hpp; path = ql/indexes/ibor/eurlibor.hpp; sourceTree = SOURCE_ROOT; };
		BA58ADB984184FC2BE47B749 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytic_discr_geom_av_price.cpp; path = ql/pricingengines/asian/analytic_discr_geom_av_price.cpp; sourceTree = SOURCE_ROOT; };
		BA67288F86B74CCE8DAC5D95 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bernsteinpolynomial.cpp; path = ql/math/bernsteinpolynomial.cpp; sourceTree = SOURCE_ROOT; };
		BA6D833CD7724703AC14F355 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedswap.hpp; path = ql/pricingengines/swap/discretizedswap.hpp; sourceTree = SOURCE_ROOT; };
		BA6E31F8583A4A699541D733 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = energyvanillaswap.cpp; path = ql/experimental/commodities/energyvanillaswap.cpp; sourceTree = SOURCE_ROOT; };
		BA75B617574C4B2A994F520C /* /Users/heiner/git/QuantLib/test-suite/blackdeltacalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackdeltacalculator.cpp; path = "test-suite/blackdeltacalculator.cpp"; sourceTree = SOURCE_ROOT; };
		BA83A09569E3497291A75A8E /* /Users/heiner/git/QuantLib/ql/handle.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = handle.hpp; path = ql/handle.hpp; sourceTree = SOURCE_ROOT; };
		BA89531499F2413588B73834 /* /Users/heiner/git/QuantLib/Examples/Swap/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/Swap/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BAA0B940E32E481795A0869C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackkarasinski.cpp; path = ql/models/shortrate/onefactormodels/blackkarasinski.cpp; sourceTree = SOURCE_ROOT; };
		BAA1BE77604D4EB398899C88 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmswapcurvestate.cpp; path = ql/models/marketmodels/curvestates/cmswapcurvestate.cpp; sourceTree = SOURCE_ROOT; };
		BAB2C7FB650C4E3E8BA1FE85 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdsimplebsswingengine.hpp; path = ql/pricingengines/vanilla/fdsimplebsswingengine.hpp; sourceTree = SOURCE_ROOT; };
		BABF7110FFBB4E5789D9F6EF /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = squarerootclvmodel.cpp; path = ql/experimental/models/squarerootclvmodel.cpp; sourceTree = SOURCE_ROOT; };
		BAC6949F392847CB8C648730 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackscholescalculator.hpp; path = ql/pricingengines/blackscholescalculator.hpp; sourceTree = SOURCE_ROOT; };
		BAC7CEA728FA460D83FC4578 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel_smm.cpp; path = "test-suite/marketmodel_smm.cpp"; sourceTree = SOURCE_ROOT; };
		BADC273A84444B8BA5F88B01 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = craigsneydscheme.hpp; path = ql/methods/finitedifferences/schemes/craigsneydscheme.hpp; sourceTree = SOURCE_ROOT; };
		BB086D5579D24802A295A5FF /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantooption.cpp; path = "test-suite/quantooption.cpp"; sourceTree = SOURCE_ROOT; };
		BB0CF4A6D6C34E7FB964F0FB /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sweden.cpp; path = ql/time/calendars/sweden.cpp; sourceTree = SOURCE_ROOT; };
		BB11AE20E37842DCA44FDD89 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsmarketcalibration.hpp; path = ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp; sourceTree = SOURCE_ROOT; };
		BB1B11DD00504A519720A3B0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmvppstepcondition.hpp; path = ql/experimental/finitedifferences/fdmvppstepcondition.hpp; sourceTree = SOURCE_ROOT; };
		BB35C423E8484015AC69CB31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticbsmhullwhiteengine.cpp; path = ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp; sourceTree = SOURCE_ROOT; };
		BB52D5B41396452C911ACC28 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedblackvariancecurve.hpp; path = ql/experimental/volatility/extendedblackvariancecurve.hpp; sourceTree = SOURCE_ROOT; };
		BB5FC21DF239448DB273E176 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskynotional.cpp; path = ql/experimental/catbonds/riskynotional.cpp; sourceTree = SOURCE_ROOT; };
		BB6B5EF143C344FE861557EA /* /Users/heiner/git/QuantLib/test-suite/quotes.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quotes.hpp; path = "test-suite/quotes.hpp"; sourceTree = SOURCE_ROOT; };
		BB727EB384C349E1A1C62426 /* /Users/heiner/git/QuantLib/test-suite/chooseroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = chooseroption.cpp; path = "test-suite/chooseroption.cpp"; sourceTree = SOURCE_ROOT; };
		BB76CBFD97784899B8121F75 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = kahalesmilesection.cpp; path = ql/termstructures/volatility/kahalesmilesection.cpp; sourceTree = SOURCE_ROOT; };
		BB826C6F13254708910AED02 /* /Users/heiner/git/QuantLib/ql/indexes/swap/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/indexes/swap/all.hpp; sourceTree = SOURCE_ROOT; };
		BB94E91F913D465A8BCF16E8 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonslvprocess.hpp; path = ql/experimental/processes/hestonslvprocess.hpp; sourceTree = SOURCE_ROOT; };
		BBB4FA942D1D49A293E3C14E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dswaptionvolatility.hpp; path = ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp; sourceTree = SOURCE_ROOT; };
		BBBA4F5A893F47AE8391718C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitofmeasureconversionmanager.hpp; path = ql/experimental/commodities/unitofmeasureconversionmanager.hpp; sourceTree = SOURCE_ROOT; };
		BBBC7E62F3A44575BA4C7742 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceuropeanengine.hpp; path = ql/pricingengines/vanilla/mceuropeanengine.hpp; sourceTree = SOURCE_ROOT; };
		BBC22BACABBF43A6AA998B31 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackcdsoptionengine.hpp; path = ql/experimental/credit/blackcdsoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		BBC5E341961644DE8449D7EB /* /Users/heiner/git/QuantLib/ql/math/statistics/convergencestatistics.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = convergencestatistics.hpp; path = ql/math/statistics/convergencestatistics.hpp; sourceTree = SOURCE_ROOT; };
		BBCB35684C43496A95EFC5C2 /* /Users/heiner/git/QuantLib/ql/quotes/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/quotes/all.hpp; sourceTree = SOURCE_ROOT; };
		BBD5940FE7554E59BAD4D865 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mc_discr_arith_av_strike.hpp; path = ql/pricingengines/asian/mc_discr_arith_av_strike.hpp; sourceTree = SOURCE_ROOT; };
		BBE6320C88084B0E8082F7E2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = shibor.hpp; path = ql/indexes/ibor/shibor.hpp; sourceTree = SOURCE_ROOT; };
		BBEA55E18A8F443CB93F0BE0 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaulttermstructure.hpp; path = ql/termstructures/defaulttermstructure.hpp; sourceTree = SOURCE_ROOT; };
		BC0832B0E2A64379939B3BA7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsnapshotcondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp; sourceTree = SOURCE_ROOT; };
		BC186081314641D9A992AE74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepcoterminalswaps.hpp; path = ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp; sourceTree = SOURCE_ROOT; };
		BC1ED00FE55144AA9E574E4D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pseudosqrt.hpp; path = ql/math/matrixutilities/pseudosqrt.hpp; sourceTree = SOURCE_ROOT; };
		BC25E1E22F1947F89A3F8457 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipath.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multipath.hpp; path = ql/methods/montecarlo/multipath.hpp; sourceTree = SOURCE_ROOT; };
		BC2E20DC79E24ED597227BC1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhullwhiteop.hpp; path = ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp; sourceTree = SOURCE_ROOT; };
		BC3478A7E3A94527A8DB26C7 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = independentcopula.cpp; path = ql/math/copulas/independentcopula.cpp; sourceTree = SOURCE_ROOT; };
		BC3A95E90CDD4727B7119C37 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = overnightindexedswap.cpp; path = ql/instruments/overnightindexedswap.cpp; sourceTree = SOURCE_ROOT; };
		BC59B318083B4BEBB1A54871 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmextoujumpsolver.hpp; path = ql/experimental/finitedifferences/fdmextoujumpsolver.hpp; sourceTree = SOURCE_ROOT; };
		BC59BDD31FC34390AC6EAF5D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductcaplet.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp; sourceTree = SOURCE_ROOT; };
		BC62AC17873D449BA0E84CFC /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = barrieroption.cpp; path = ql/instruments/barrieroption.cpp; sourceTree = SOURCE_ROOT; };
		BC7459EDA652483485CAEECA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fixedlocalvolsurface.hpp; path = ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		BC7FC53D093E4FD189D32366 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpibond.hpp; path = ql/instruments/bonds/cpibond.hpp; sourceTree = SOURCE_ROOT; };
		BC90477AED7A4622ADC8252B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmmnormaldriftcalculator.cpp; path = ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp; sourceTree = SOURCE_ROOT; };
		BC970F97D5B34814B8B0F6B7 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalcmsspreadpricer.cpp; path = ql/experimental/coupons/lognormalcmsspreadpricer.cpp; sourceTree = SOURCE_ROOT; };
		BCA6DC1AC5F044F7BFC60041 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardrateagreement.cpp; path = ql/instruments/forwardrateagreement.cpp; sourceTree = SOURCE_ROOT; };
		BCAFA7654B9E4FB0A297C873 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvoltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrvoltermstructure.hpp; path = ql/experimental/volatility/sabrvoltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		BCB5AB691FE2489D94A19CED /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskyassetswap.hpp; path = ql/experimental/credit/riskyassetswap.hpp; sourceTree = SOURCE_ROOT; };
		BCCB0A19B1A64BC88E9D1E65 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhestonvariancemesher.cpp; path = ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp; sourceTree = SOURCE_ROOT; };
		BCCDD44B92E745F49C1BA409 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twoassetbarrieroption.hpp; path = ql/experimental/exoticoptions/twoassetbarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		BD044407708E40E581FC8176 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmstepconditioncomposite.hpp; path = ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp; sourceTree = SOURCE_ROOT; };
		BD10D5D43F9D40A49168E833 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fwdtocotswapadapter.cpp; path = ql/models/marketmodels/models/fwdtocotswapadapter.cpp; sourceTree = SOURCE_ROOT; };
		BD16C9D39F074C03AB0AA7D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdblackscholesasianengine.cpp; path = ql/pricingengines/asian/fdblackscholesasianengine.cpp; sourceTree = SOURCE_ROOT; };
		BD31A73E8D36443D947188A3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmornsteinuhlenbeckop.hpp; path = ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp; sourceTree = SOURCE_ROOT; };
		BD35949C9F0042BA958D0EF2 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = proxyibor.cpp; path = ql/experimental/coupons/proxyibor.cpp; sourceTree = SOURCE_ROOT; };
		BD3C69F575624B41802395B4 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bbsw.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bbsw.hpp; path = ql/indexes/ibor/bbsw.hpp; sourceTree = SOURCE_ROOT; };
		BD5CA40902C847A495C1EF1A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/capfloor/all.hpp; sourceTree = SOURCE_ROOT; };
		BD619FA10F914796A1AADA84 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralcdoengine.hpp; path = ql/experimental/credit/integralcdoengine.hpp; sourceTree = SOURCE_ROOT; };
		BD78B95663C7495D878E0888 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/indexes/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		BD7A29C5DE754D36AE71B940 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = brazil.cpp; path = ql/time/calendars/brazil.cpp; sourceTree = SOURCE_ROOT; };
		BD7DC57E56E94B0388C406F8 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cvaswapengine.cpp; path = ql/pricingengines/swap/cvaswapengine.cpp; sourceTree = SOURCE_ROOT; };
		BD845D548D7F49F796B51A2B /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = expm.hpp; path = ql/experimental/math/expm.hpp; sourceTree = SOURCE_ROOT; };
		BD9E52F5234046C7B89822D1 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bivariatenormaldistribution.hpp; path = ql/math/distributions/bivariatenormaldistribution.hpp; sourceTree = SOURCE_ROOT; };
		BDB0118783E34978A2DB9525 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillaswap.hpp; path = ql/instruments/vanillaswap.hpp; sourceTree = SOURCE_ROOT; };
		BDB22E2411274C5BAB2E8842 /* /Users/heiner/git/QuantLib/ql/default.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = default.hpp; path = ql/default.hpp; sourceTree = SOURCE_ROOT; };
		BDB2FB2E81704944916F2A9E /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mfstateprocess.cpp; path = ql/processes/mfstateprocess.cpp; sourceTree = SOURCE_ROOT; };
		BDB49D3066194EF8B483C700 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = atmsmilesection.hpp; path = ql/termstructures/volatility/atmsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		BDBA9E6A046C487CBE26FB76 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseyoyinflationcurve.hpp; path = ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp; sourceTree = SOURCE_ROOT; };
		BDC337B2B3CC4E7CA54E6EB9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpivolatilitystructure.hpp; path = ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		BDC4CE8BC556468BA3B1C27C /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcontinuouspartialfloatinglookback.cpp; path = ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp; sourceTree = SOURCE_ROOT; };
		BDD3CCC1C5EB447A9E8B054B /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cliquetoption.cpp; path = ql/instruments/cliquetoption.cpp; sourceTree = SOURCE_ROOT; };
		BDE2CAF99F0A4A84814BC376 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = knuthuniformrng.hpp; path = ql/math/randomnumbers/knuthuniformrng.hpp; sourceTree = SOURCE_ROOT; };
		BDE45FB7BEA14F4385100A27 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpibond.cpp; path = ql/instruments/bonds/cpibond.cpp; sourceTree = SOURCE_ROOT; };
		BDF42F6089B042B09C3467D3 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsratebond.cpp; path = ql/instruments/bonds/cmsratebond.cpp; sourceTree = SOURCE_ROOT; };
		BDF7CB9A7EC442DA8EB19F52 /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealingfunctors.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hybridsimulatedannealingfunctors.hpp; path = ql/experimental/math/hybridsimulatedannealingfunctors.hpp; sourceTree = SOURCE_ROOT; };
		BE1B9FB2EA6F4876882BAEF2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpivolatilitystructure.cpp; path = ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		BE1EE072DE9142FA92D63552 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bumpinstrumentjacobian.cpp; path = ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp; sourceTree = SOURCE_ROOT; };
		BE39102C3F1B4D848AFA34DF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vegabumpcluster.cpp; path = ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp; sourceTree = SOURCE_ROOT; };
		BE4AC2DE17A64227A9CC408C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flatvol.hpp; path = ql/models/marketmodels/models/flatvol.hpp; sourceTree = SOURCE_ROOT; };
		BE4E0AF9FDFC4185B6FD21E3 /* /Users/heiner/git/QuantLib/ql/cashflows/duration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = duration.hpp; path = ql/cashflows/duration.hpp; sourceTree = SOURCE_ROOT; };
		BE543F179BC646AD9FE846F8 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/credit/all.hpp; sourceTree = SOURCE_ROOT; };
		BE55879DD9E64BD4BDA677E4 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = projectedcostfunction.cpp; path = ql/math/optimization/projectedcostfunction.cpp; sourceTree = SOURCE_ROOT; };
		BE728F6EED744C91AC5F1517 /* /Users/heiner/git/QuantLib/test-suite/chooseroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = chooseroption.hpp; path = "test-suite/chooseroption.hpp"; sourceTree = SOURCE_ROOT; };
		BE8E695DB8D949519D355F04 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = numericaldifferentiation.hpp; path = ql/experimental/math/numericaldifferentiation.hpp; sourceTree = SOURCE_ROOT; };
		BE9664309BF5457AA70CF400 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmlinexpvolmodel.cpp; path = ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp; sourceTree = SOURCE_ROOT; };
		BEB9F9BF52614B3E8CB21632 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sensitivityanalysis.hpp; path = ql/experimental/risk/sensitivityanalysis.hpp; sourceTree = SOURCE_ROOT; };
		BED6A15075EF477289405206 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dnonstandardswaptionengine.cpp; path = ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		BEE758B59CFD4CA38B80338B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalforwardratesanalysis.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = historicalforwardratesanalysis.hpp; path = ql/models/marketmodels/historicalforwardratesanalysis.hpp; sourceTree = SOURCE_ROOT; };
		BEEC6B8611DE454BA3F5EF5E /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stulzengine.cpp; path = ql/pricingengines/basket/stulzengine.cpp; sourceTree = SOURCE_ROOT; };
		BEF1F65FCD744B5F89BB3E7D /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makeswaption.cpp; path = ql/instruments/makeswaption.cpp; sourceTree = SOURCE_ROOT; };
		BF051AF4297448C5833026AA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bermudanswaptionexercisevalue.hpp; path = ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp; sourceTree = SOURCE_ROOT; };
		BF0A759D43714BB5A3B7E7C3 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapspreadindex.hpp; path = ql/experimental/coupons/swapspreadindex.hpp; sourceTree = SOURCE_ROOT; };
		BF11F5B8632948C1915786D5 /* /Users/heiner/git/QuantLib/ql/money.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = money.cpp; path = ql/money.cpp; sourceTree = SOURCE_ROOT; };
		BF17180CE92840D1BD740FFE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = parametricexerciseadapter.cpp; path = ql/models/marketmodels/callability/parametricexerciseadapter.cpp; sourceTree = SOURCE_ROOT; };
		BF1BFAC58CE643D5B42E58C2 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = parametricexercise.hpp; path = ql/methods/montecarlo/parametricexercise.hpp; sourceTree = SOURCE_ROOT; };
		BF268E2861134FD5B5452B13 /* /Users/heiner/git/QuantLib/test-suite/squarerootclvmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = squarerootclvmodel.cpp; path = "test-suite/squarerootclvmodel.cpp"; sourceTree = SOURCE_ROOT; };
		BF428DD412B148C6963CBDB2 /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = interestrate.cpp; path = ql/interestrate.cpp; sourceTree = SOURCE_ROOT; };
		BF44455AEBFE4CD08B90FDBA /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1djamshidianswaptionengine.hpp; path = ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		BF597126D2CD48C0B88FD74B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiproductcomposite.hpp; path = ql/models/marketmodels/products/multiproductcomposite.hpp; sourceTree = SOURCE_ROOT; };
		BF739A0452B1461FAE15C25D /* FittedBondCurve */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = FittedBondCurve; sourceTree = BUILT_PRODUCTS_DIR; };
		BF771D37C5184BED8B273BA6 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcliquetengine.hpp; path = ql/pricingengines/cliquet/analyticcliquetengine.hpp; sourceTree = SOURCE_ROOT; };
		BF80F97BB4584331B05465A6 /* /Users/heiner/git/QuantLib/ql/pricingengines/genericmodelengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = genericmodelengine.hpp; path = ql/pricingengines/genericmodelengine.hpp; sourceTree = SOURCE_ROOT; };
		BFA4EB7012C34C84A52BFA50 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = perturbativebarrieroptionengine.cpp; path = ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp; sourceTree = SOURCE_ROOT; };
		BFD0D9B7BF444DFDA0233817 /* /Users/heiner/git/QuantLib/ql/math/optimization/problem.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = problem.hpp; path = ql/math/optimization/problem.hpp; sourceTree = SOURCE_ROOT; };
		BFDC7F9BAADE4C4AB7B55B60 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmswapcurvestate.hpp; path = ql/models/marketmodels/curvestates/cmswapcurvestate.hpp; sourceTree = SOURCE_ROOT; };
		BFDD8788F6DD4B06A74AB83E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = collectnodedata.hpp; path = ql/models/marketmodels/callability/collectnodedata.hpp; sourceTree = SOURCE_ROOT; };
		BFEC9561893E4239AFC7F60C /* /Users/heiner/git/QuantLib/test-suite/forwardoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardoption.hpp; path = "test-suite/forwardoption.hpp"; sourceTree = SOURCE_ROOT; };
		C000305B6D38444E8F25E926 /* /Users/heiner/git/QuantLib/ql/quotes/derivedquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = derivedquote.hpp; path = ql/quotes/derivedquote.hpp; sourceTree = SOURCE_ROOT; };
		C03C2F5E620542A5A96073FD /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mexico.hpp; path = ql/time/calendars/mexico.hpp; sourceTree = SOURCE_ROOT; };
		C05684EE5E774112A0E73514 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizeddoublebarrieroption.cpp; path = ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		C05E95828B7F4B53AE66BA6B /* /Users/heiner/git/QuantLib/ql/math/interpolations/bilinearinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bilinearinterpolation.hpp; path = ql/math/interpolations/bilinearinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		C05EEF6645CB463DBA384D99 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmextoujumpop.cpp; path = ql/experimental/finitedifferences/fdmextoujumpop.cpp; sourceTree = SOURCE_ROOT; };
		C068828EFF9942E38F58DE24 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdsimpleklugeextouvppengine.cpp; path = ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp; sourceTree = SOURCE_ROOT; };
		C071F05007D44D1F916A25DF /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackswaptionengine.cpp; path = ql/pricingengines/swaption/blackswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		C08CB5334D424344A021C737 /* /Users/heiner/git/QuantLib/test-suite/sampledcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sampledcurve.cpp; path = "test-suite/sampledcurve.cpp"; sourceTree = SOURCE_ROOT; };
		C098CF7674F04306B8D79BE7 /* /Users/heiner/git/QuantLib/ql/math/interpolations/linearinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = linearinterpolation.hpp; path = ql/math/interpolations/linearinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		C0B933CE5A8A4FED9232D218 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = digitalcmscoupon.cpp; path = ql/cashflows/digitalcmscoupon.cpp; sourceTree = SOURCE_ROOT; };
		C0C2ADE63BEE4752BA07147C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/constrainedevolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constrainedevolver.hpp; path = ql/models/marketmodels/constrainedevolver.hpp; sourceTree = SOURCE_ROOT; };
		C0D2591D61EF483790D9C13B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackswaptionengine.cpp; path = ql/pricingengines/swaption/blackswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		C0D74A2F51CE40D29F0A0F20 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonblackvolsurface.cpp; path = ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		C0F8A44D969A444692A88649 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = atmsmilesection.cpp; path = ql/termstructures/volatility/atmsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		C11F8C87B15B4DF6AAE08312 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = amortizingfloatingratebond.cpp; path = ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp; sourceTree = SOURCE_ROOT; };
		C1243F4D7AA746F8B97F51B0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sabrinterpolatedsmilesection.cpp; path = ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		C1249EF7B19B439CAA05F211 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = linesearch.cpp; path = ql/math/optimization/linesearch.cpp; sourceTree = SOURCE_ROOT; };
		C12A317B5F2340699D3F3B31 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = normalfwdratepc.hpp; path = ql/models/marketmodels/evolvers/normalfwdratepc.hpp; sourceTree = SOURCE_ROOT; };
		C13C294210B24A57B86C405F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlinearopcomposite.hpp; path = ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp; sourceTree = SOURCE_ROOT; };
		C13C92F348764676BEAC3762 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = india.cpp; path = ql/time/calendars/india.cpp; sourceTree = SOURCE_ROOT; };
		C1420BF60CEB42D6BD88D40A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basisincompleteordered.cpp; path = ql/math/matrixutilities/basisincompleteordered.cpp; sourceTree = SOURCE_ROOT; };
		C15833BC55AE4DA1A7DCCD57 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmornsteinuhlenbeckop.hpp; path = ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp; sourceTree = SOURCE_ROOT; };
		C158E16275794D7A8913C1C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepcoinitialswaps.hpp; path = ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp; sourceTree = SOURCE_ROOT; };
		C16B49A2DC5142198AF3F470 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductswaption.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp; sourceTree = SOURCE_ROOT; };
		C18C072594FE42D381C3A8A9 /* /Users/heiner/git/QuantLib/ql/models/equity/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/equity/all.hpp; sourceTree = SOURCE_ROOT; };
		C1B9E4B4EF20454AA01804A8 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdatmvolcurve.hpp; path = ql/experimental/volatility/abcdatmvolcurve.hpp; sourceTree = SOURCE_ROOT; };
		C1BD392DF4194B18BA41A26C /* /Users/heiner/git/QuantLib/ql/termstructures/yield/impliedtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliedtermstructure.hpp; path = ql/termstructures/yield/impliedtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		C1D3989DD603411B9F532F0E /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = israel.cpp; path = ql/time/calendars/israel.cpp; sourceTree = SOURCE_ROOT; };
		C1D4365D1BC84F8A9BC30160 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsratebond.hpp; path = ql/instruments/bonds/cmsratebond.hpp; sourceTree = SOURCE_ROOT; };
		C1E48BA7199848D09934D513 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tridiagonaloperator.hpp; path = ql/methods/finitedifferences/tridiagonaloperator.hpp; sourceTree = SOURCE_ROOT; };
		C1EC63722FA5417986E7BAEC /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = canada.cpp; path = ql/time/calendars/canada.cpp; sourceTree = SOURCE_ROOT; };
		C1F2F0806C674837B49F949B /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = callablebondvolstructure.cpp; path = ql/experimental/callablebonds/callablebondvolstructure.cpp; sourceTree = SOURCE_ROOT; };
		C1F64F6F624E488C856B3285 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmg2solver.hpp; path = ql/methods/finitedifferences/solvers/fdmg2solver.hpp; sourceTree = SOURCE_ROOT; };
		C1F782B6EA4D48608EDE4B6F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sobolrsg.hpp; path = ql/math/randomnumbers/sobolrsg.hpp; sourceTree = SOURCE_ROOT; };
		C2198BF0D96D47C09D2E9343 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationtermstructure.cpp; path = ql/termstructures/inflationtermstructure.cpp; sourceTree = SOURCE_ROOT; };
		C21B23D8DC5F4199B28AD58B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fd2dblackscholesvanillaengine.cpp; path = ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		C228DF4AD6D945878A8C969C /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mclongstaffschwartzpathengine.hpp; path = ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp; sourceTree = SOURCE_ROOT; };
		C23441D9E03A4B20801DC763 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = coupon.cpp; path = ql/cashflows/coupon.cpp; sourceTree = SOURCE_ROOT; };
		C24B4881C506427CA90F1225 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callablebond.hpp; path = ql/experimental/callablebonds/callablebond.hpp; sourceTree = SOURCE_ROOT; };
		C259BDB1BB4C46799C4CEA68 /* /Users/heiner/git/QuantLib/test-suite/utilities.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = utilities.hpp; path = "test-suite/utilities.hpp"; sourceTree = SOURCE_ROOT; };
		C26361DA785D48BCBA2B3301 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/exercisestrategy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exercisestrategy.hpp; path = ql/methods/montecarlo/exercisestrategy.hpp; sourceTree = SOURCE_ROOT; };
		C2971CA90B3F41569759AE31 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = garch.cpp; path = ql/models/volatility/garch.cpp; sourceTree = SOURCE_ROOT; };
		C2A21C2D3A154E12B8D76AF8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaulttype.hpp; path = ql/experimental/credit/defaulttype.hpp; sourceTree = SOURCE_ROOT; };
		C2A314CDCCAD44078767FC9D /* /Users/heiner/git/QuantLib/ql/math/optimization/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/optimization/all.hpp; sourceTree = SOURCE_ROOT; };
		C2A807E0DE2746FDAF3A0E99 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gridmodellocalvolsurface.cpp; path = ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		C2A89CDA517E4A658C931B1C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/parallelevolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = parallelevolver.hpp; path = ql/methods/finitedifferences/parallelevolver.hpp; sourceTree = SOURCE_ROOT; };
		C2D70448790445B38E8FB0FB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmcorrmodel.cpp; path = ql/legacy/libormarketmodels/lmcorrmodel.cpp; sourceTree = SOURCE_ROOT; };
		C2DAA40E8B89452BA9E2662A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmhullwhiteparam.hpp; path = ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp; sourceTree = SOURCE_ROOT; };
		C2ED065A783E4669A26F34A6 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mt19937uniformrng.cpp; path = ql/math/randomnumbers/mt19937uniformrng.cpp; sourceTree = SOURCE_ROOT; };
		C300AE2612664BF08C58DD45 /* /Users/heiner/git/QuantLib/test-suite/spreadoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadoption.hpp; path = "test-suite/spreadoption.hpp"; sourceTree = SOURCE_ROOT; };
		C301B93155D44BF8B23211C9 /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sampledcurve.cpp; path = ql/math/sampledcurve.cpp; sourceTree = SOURCE_ROOT; };
		C31113BF89E24F8493B1EAE6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multiproductcomposite.cpp; path = ql/models/marketmodels/products/multiproductcomposite.cpp; sourceTree = SOURCE_ROOT; };
		C3192E9EBD9F42BEB28062F3 /* /Users/heiner/git/QuantLib/ql/legacy/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/legacy/all.hpp; sourceTree = SOURCE_ROOT; };
		C31F0912709F47C78D051037 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = euriborswap.cpp; path = ql/indexes/swap/euriborswap.cpp; sourceTree = SOURCE_ROOT; };
		C32982A1C08A46F9B54FDFE4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepoptionlets.hpp; path = ql/models/marketmodels/products/multistep/multistepoptionlets.hpp; sourceTree = SOURCE_ROOT; };
		C34EF21E72BD454381DD6202 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcliquetengine.cpp; path = ql/pricingengines/cliquet/analyticcliquetengine.cpp; sourceTree = SOURCE_ROOT; };
		C35A5051132F4FBAA72D36BC /* /Users/heiner/git/QuantLib/ql/instruments/swaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaption.hpp; path = ql/instruments/swaption.hpp; sourceTree = SOURCE_ROOT; };
		C372715858074CCE84AE46E7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsimpleswingcondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp; sourceTree = SOURCE_ROOT; };
		C3A07511F3F744F89C11D69B /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsspreadcoupon.cpp; path = ql/experimental/coupons/cmsspreadcoupon.cpp; sourceTree = SOURCE_ROOT; };
		C3A58563E630447BAA571AA8 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basketoption.cpp; path = ql/instruments/basketoption.cpp; sourceTree = SOURCE_ROOT; };
		C3AA9E29396D4260B1F680A0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = spreadedoptionletvol.cpp; path = ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp; sourceTree = SOURCE_ROOT; };
		C3ABE427B30C406DA0A21909 /* /Users/heiner/git/QuantLib/ql/experimental/risk/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/risk/all.hpp; sourceTree = SOURCE_ROOT; };
		C3B696713DF546AAB42CC01A /* /Users/heiner/git/QuantLib/ql/instruments/stock.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stock.hpp; path = ql/instruments/stock.hpp; sourceTree = SOURCE_ROOT; };
		C3B918000A55428D9C6986F4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = doublebarrieroption.cpp; path = ql/experimental/barrieroption/doublebarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		C3B9E44B266843E285192941 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vanillaswap.cpp; path = ql/instruments/vanillaswap.cpp; sourceTree = SOURCE_ROOT; };
		C3CFFA922F6447F1BE6B65B6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = midpointcdoengine.hpp; path = ql/experimental/credit/midpointcdoengine.hpp; sourceTree = SOURCE_ROOT; };
		C3D034E65461488BA34CBFDE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlinearop.hpp; path = ql/methods/finitedifferences/operators/fdmlinearop.hpp; sourceTree = SOURCE_ROOT; };
		C3D06DBCE29641219AE71B0F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextousolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmklugeextousolver.hpp; path = ql/experimental/finitedifferences/fdmklugeextousolver.hpp; sourceTree = SOURCE_ROOT; };
		C3D5EF54BB1D4B1AB079333F /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365nl.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = actual365nl.hpp; path = ql/time/daycounters/actual365nl.hpp; sourceTree = SOURCE_ROOT; };
		C3E4AE3437B94B0CA133D498 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bfgs.cpp; path = ql/math/optimization/bfgs.cpp; sourceTree = SOURCE_ROOT; };
		C3E6B7DCD0054D909A4AF387 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energyvanillaswap.hpp; path = ql/experimental/commodities/energyvanillaswap.hpp; sourceTree = SOURCE_ROOT; };
		C3E780AD60FC400B9936A6CF /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fftvanillaengine.cpp; path = ql/experimental/variancegamma/fftvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		C3E7B3388CAA47E3B457FC24 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = indonesia.hpp; path = ql/time/calendars/indonesia.hpp; sourceTree = SOURCE_ROOT; };
		C3FD528C1A6A4C629DF74980 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = plackettcopula.cpp; path = ql/math/copulas/plackettcopula.cpp; sourceTree = SOURCE_ROOT; };
		C408D9DB58E24CE8A4F851CC /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jointstochasticprocess.cpp; path = ql/processes/jointstochasticprocess.cpp; sourceTree = SOURCE_ROOT; };
		C42BC6C673464C8C95FFA5CB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmlinexpcorrmodel.cpp; path = ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp; sourceTree = SOURCE_ROOT; };
		C42FF2D43B394C1B84CCF88A /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = alimikhailhaqcopula.hpp; path = ql/math/copulas/alimikhailhaqcopula.hpp; sourceTree = SOURCE_ROOT; };
		C43D882D73C74484B522C469 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = creditdefaultswap.cpp; path = ql/instruments/creditdefaultswap.cpp; sourceTree = SOURCE_ROOT; };
		C43F3D06A527485BA2C08D70 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = histogram.hpp; path = ql/math/statistics/histogram.hpp; sourceTree = SOURCE_ROOT; };
		C445FBC75F96436D8B4A5227 /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = matrix.cpp; path = ql/math/matrix.cpp; sourceTree = SOURCE_ROOT; };
		C472443F95C14F87A35BAE8A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = yoyinflationoptionletvolatilitystructure.cpp; path = ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		C47BFF0137DE44BFA5582E08 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/duffsdeviceinnerproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = duffsdeviceinnerproduct.hpp; path = ql/models/marketmodels/duffsdeviceinnerproduct.hpp; sourceTree = SOURCE_ROOT; };
		C48BDCAC95814A1887C3CC62 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcpagodaengine.hpp; path = ql/experimental/exoticoptions/mcpagodaengine.hpp; sourceTree = SOURCE_ROOT; };
		C49F5A8A6AD54DE79394B07A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdm1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm1dmesher.hpp; path = ql/methods/finitedifferences/meshers/fdm1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		C4A3B6F3C48A4BAD80E7F541 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = localvoltermstructure.cpp; path = ql/termstructures/volatility/equityfx/localvoltermstructure.cpp; sourceTree = SOURCE_ROOT; };
		C4B1B5D4C18B47DEB57A58D3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bjerksundstenslandengine.cpp; path = ql/pricingengines/vanilla/bjerksundstenslandengine.cpp; sourceTree = SOURCE_ROOT; };
		C4BFD541C396498A9E525CCC /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardstructure.cpp; path = ql/termstructures/yield/forwardstructure.cpp; sourceTree = SOURCE_ROOT; };
		C4D2108CD7DA48E8803A9F7B /* /Users/heiner/git/QuantLib/test-suite/operators.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = operators.hpp; path = "test-suite/operators.hpp"; sourceTree = SOURCE_ROOT; };
		C4F3313E080C405C8926F965 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmscoupon.hpp; path = ql/cashflows/cmscoupon.hpp; sourceTree = SOURCE_ROOT; };
		C4F7AAA03BF845AEAEA4D893 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jumpdiffusionengine.cpp; path = ql/pricingengines/vanilla/jumpdiffusionengine.cpp; sourceTree = SOURCE_ROOT; };
		C51BCD2ED7EF4AD28423011F /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dividendbarrieroption.hpp; path = ql/instruments/dividendbarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		C51C27D7BDA441F8881705D1 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussiannoncentralchisquaredpolynomial.cpp; path = ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp; sourceTree = SOURCE_ROOT; };
		C52DE0662ED54651A26357D4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolcube.cpp; path = ql/termstructures/volatility/swaption/swaptionvolcube.cpp; sourceTree = SOURCE_ROOT; };
		C53CF7ED1B02425F94F3A2F4 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcapfloorengine.cpp; path = ql/pricingengines/capfloor/analyticcapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		C559C41117724AC098D3B3C7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = glued1dmesher.hpp; path = ql/experimental/finitedifferences/glued1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		C55BAE076F3D4669B1FB0A97 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathgenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathgenerator.hpp; path = ql/methods/montecarlo/pathgenerator.hpp; sourceTree = SOURCE_ROOT; };
		C566B9295FE6458CA2CB4230 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dswaptionengine.hpp; path = ql/pricingengines/swaption/gaussian1dswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		C567ED9F13FF485BAC9118D3 /* /Users/heiner/git/QuantLib/test-suite/rounding.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rounding.hpp; path = "test-suite/rounding.hpp"; sourceTree = SOURCE_ROOT; };
		C58EBD5D118A49CB9A7CE177 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateipc.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp; sourceTree = SOURCE_ROOT; };
		C598B98A420B4F86823CFECE /* /Users/heiner/git/QuantLib/test-suite/asianoptions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = asianoptions.hpp; path = "test-suite/asianoptions.hpp"; sourceTree = SOURCE_ROOT; };
		C5A1112C7686486D8DF3BA8B /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zigguratrng.hpp; path = ql/experimental/math/zigguratrng.hpp; sourceTree = SOURCE_ROOT; };
		C5B288C3FEDC483C977FE774 /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = batesmodel.cpp; path = "test-suite/batesmodel.cpp"; sourceTree = SOURCE_ROOT; };
		C5B7BBC829324F95BDD5F260 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newton.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = newton.hpp; path = ql/math/solvers1d/newton.hpp; sourceTree = SOURCE_ROOT; };
		C5D5D74ADC8945E2992CF928 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = euribor.hpp; path = ql/indexes/ibor/euribor.hpp; sourceTree = SOURCE_ROOT; };
		C5E20133064842FD876203A3 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardmeasureprocess.cpp; path = ql/processes/forwardmeasureprocess.cpp; sourceTree = SOURCE_ROOT; };
		C6001021A5174D93ACBEB552 /* /Users/heiner/git/QuantLib/ql/instruments/stock.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = stock.hpp; path = ql/instruments/stock.hpp; sourceTree = SOURCE_ROOT; };
		C609C31A2EF14BD4BD2C60E2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmhullwhiteparam.hpp; path = ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp; sourceTree = SOURCE_ROOT; };
		C619A7F417284EC4B49D6C14 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdatmvolcurve.hpp; path = ql/experimental/volatility/abcdatmvolcurve.hpp; sourceTree = SOURCE_ROOT; };
		C6201A04ABE64E12904908DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = nothingexercisevalue.cpp; path = ql/models/marketmodels/callability/nothingexercisevalue.cpp; sourceTree = SOURCE_ROOT; };
		C6214F79D0054B8484AE705C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bsmoperator.hpp; path = ql/methods/finitedifferences/bsmoperator.hpp; sourceTree = SOURCE_ROOT; };
		C63831D2F9104D51AAEB4418 /* /Users/heiner/git/QuantLib/test-suite/amortizingbond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = amortizingbond.cpp; path = "test-suite/amortizingbond.cpp"; sourceTree = SOURCE_ROOT; };
		C64115D907D24B1587FE9CB9 /* /Users/heiner/git/QuantLib/ql/utilities/null_deleter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = null_deleter.hpp; path = ql/utilities/null_deleter.hpp; sourceTree = SOURCE_ROOT; };
		C6422DA41EA543168FCC6823 /* /Users/heiner/git/QuantLib/ql/time/weekday.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = weekday.hpp; path = ql/time/weekday.hpp; sourceTree = SOURCE_ROOT; };
		C66A1771BACD4D6B85DAAEAC /* /Users/heiner/git/QuantLib/ql/qldefines.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = qldefines.hpp; path = ql/qldefines.hpp; sourceTree = SOURCE_ROOT; };
		C67BBD8D07114495949FC146 /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = finland.cpp; path = ql/time/calendars/finland.cpp; sourceTree = SOURCE_ROOT; };
		C681B5583A704BAD88444FEB /* /Users/heiner/git/QuantLib/test-suite/swapforwardmappings.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapforwardmappings.hpp; path = "test-suite/swapforwardmappings.hpp"; sourceTree = SOURCE_ROOT; };
		C6A5E436D8144E3390111B2A /* /Users/heiner/git/QuantLib/ql/experimental/math/laplaceinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = laplaceinterpolation.hpp; path = ql/experimental/math/laplaceinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		C6B8AC13E3A84A948F85DA21 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vegastressedblackscholesprocess.cpp; path = ql/experimental/processes/vegastressedblackscholesprocess.cpp; sourceTree = SOURCE_ROOT; };
		C6BAB37563C242A7B2AA01C3 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = oceania.hpp; path = ql/currencies/oceania.hpp; sourceTree = SOURCE_ROOT; };
		C6BE55CAD400473D95A7514C /* /Users/heiner/git/QuantLib/ql/discretizedasset.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedasset.hpp; path = ql/discretizedasset.hpp; sourceTree = SOURCE_ROOT; };
		C6BF71F3166E46C4A898E888 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sobolbrownianbridgersg.hpp; path = ql/math/randomnumbers/sobolbrownianbridgersg.hpp; sourceTree = SOURCE_ROOT; };
		C6D24E3E36404C46AA2050B1 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = japan.hpp; path = ql/time/calendars/japan.hpp; sourceTree = SOURCE_ROOT; };
		C6E861446AEF4A46A892B442 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmconstwrappercorrmodel.hpp; path = ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp; sourceTree = SOURCE_ROOT; };
		C6EFE03A57B24FC782D9DA72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdvol.hpp; path = ql/models/marketmodels/models/abcdvol.hpp; sourceTree = SOURCE_ROOT; };
		C6F7EA625F5140B5A4DA3B73 /* /Users/heiner/git/QuantLib/ql/compounding.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compounding.hpp; path = ql/compounding.hpp; sourceTree = SOURCE_ROOT; };
		C70A46E4A0854EBCA6D2C273 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedconvertible.hpp; path = ql/experimental/convertiblebonds/discretizedconvertible.hpp; sourceTree = SOURCE_ROOT; };
		C70CD15AC49243F0B0FC1914 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = timehomogeneousforwardcorrelation.cpp; path = ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp; sourceTree = SOURCE_ROOT; };
		C713E5D7B9AF485F8DA983F0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdklugeextouspreadengine.cpp; path = ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp; sourceTree = SOURCE_ROOT; };
		C7179A1DC646467EBD34B9DE /* /Users/heiner/git/QuantLib/ql/experimental/averageois/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/averageois/all.hpp; sourceTree = SOURCE_ROOT; };
		C718F55022BC41CA9C2D582A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardforwardmappings.cpp; path = ql/models/marketmodels/forwardforwardmappings.cpp; sourceTree = SOURCE_ROOT; };
		C72383B2794848A7AE45CD4D /* /Users/heiner/git/QuantLib/ql/math/interpolations/bicubicsplineinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bicubicsplineinterpolation.hpp; path = ql/math/interpolations/bicubicsplineinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		C728527A34AA4E119F3A17F7 /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fixedratebondforward.hpp; path = ql/instruments/fixedratebondforward.hpp; sourceTree = SOURCE_ROOT; };
		C7426F7BD63A4130B0ACED25 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = subperiodcoupons.cpp; path = ql/experimental/coupons/subperiodcoupons.cpp; sourceTree = SOURCE_ROOT; };
		C74E2222C9F746FE8001E472 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = japan.cpp; path = ql/time/calendars/japan.cpp; sourceTree = SOURCE_ROOT; };
		C7736EB25DD74FDEA63B117F /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/quantoengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantoengine.hpp; path = ql/pricingengines/quanto/quantoengine.hpp; sourceTree = SOURCE_ROOT; };
		C7778C1AC5AB4416A9E7AB4A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticdigitalamericanengine.hpp; path = ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp; sourceTree = SOURCE_ROOT; };
		C77F374414EB451FB5EF4512 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bsmrndcalculator.hpp; path = ql/experimental/finitedifferences/bsmrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		C78BCF16190F435784BBA616 /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = observable.cpp; path = ql/patterns/observable.cpp; sourceTree = SOURCE_ROOT; };
		C7A809D4BE3A4781A999BFC5 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseyoyoptionletvolatility.hpp; path = ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp; sourceTree = SOURCE_ROOT; };
		C7B3F35481014013A851090B /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedbinomialtree.cpp; path = ql/experimental/lattices/extendedbinomialtree.cpp; sourceTree = SOURCE_ROOT; };
		C7B889154A6346B7A5D2B07C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = paymentterm.hpp; path = ql/experimental/commodities/paymentterm.hpp; sourceTree = SOURCE_ROOT; };
		C7BE89C8852D40BE84C8FA3A /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stochasticprocess.cpp; path = ql/stochasticprocess.cpp; sourceTree = SOURCE_ROOT; };
		C7C4E7C03C7049DEBAAF0655 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = czechrepublic.hpp; path = ql/time/calendars/czechrepublic.hpp; sourceTree = SOURCE_ROOT; };
		C7C5FF51EDC04F23A5720E39 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lsstrategy.hpp; path = ql/models/marketmodels/callability/lsstrategy.hpp; sourceTree = SOURCE_ROOT; };
		C7C73ACECA71410BA003FC6A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/onefactoroperator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactoroperator.hpp; path = ql/methods/finitedifferences/onefactoroperator.hpp; sourceTree = SOURCE_ROOT; };
		C7CA2F936EE8460FA187C1CD /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussiannoncentralchisquaredpolynomial.hpp; path = ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp; sourceTree = SOURCE_ROOT; };
		C7CE240645C248878239ACFC /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = midpointcdsengine.cpp; path = ql/pricingengines/credit/midpointcdsengine.cpp; sourceTree = SOURCE_ROOT; };
		C7F686EF653B49B7B8DA8334 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitalcoupon.hpp; path = ql/cashflows/digitalcoupon.hpp; sourceTree = SOURCE_ROOT; };
		C7FA05A78AE646658F759F82 /* /Users/heiner/git/QuantLib/test-suite/instruments.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = instruments.cpp; path = "test-suite/instruments.cpp"; sourceTree = SOURCE_ROOT; };
		C8018946E6D343DB985B948E /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lookbackoption.cpp; path = ql/instruments/lookbackoption.cpp; sourceTree = SOURCE_ROOT; };
		C82E7D5C6D2543A0AC1043C3 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackscholesprocess.hpp; path = ql/processes/blackscholesprocess.hpp; sourceTree = SOURCE_ROOT; };
		C83A2DB0771C497389CB7024 /* /Users/heiner/git/QuantLib/ql/time/calendars/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/time/calendars/all.hpp; sourceTree = SOURCE_ROOT; };
		C858008CA65243A5A1CF84CF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/products/multistep/all.hpp; sourceTree = SOURCE_ROOT; };
		C85FAF3B38A14EE5A7B6CF2F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dminus.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dminus.hpp; path = ql/methods/finitedifferences/dminus.hpp; sourceTree = SOURCE_ROOT; };
		C86A0286AD2D4B12BF509C48 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pseudorootfacade.hpp; path = ql/models/marketmodels/models/pseudorootfacade.hpp; sourceTree = SOURCE_ROOT; };
		C86E0F54245A4096A0475A3A /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = brazil.hpp; path = ql/time/calendars/brazil.hpp; sourceTree = SOURCE_ROOT; };
		C8704CE34698452DBC718445 /* /Users/heiner/git/QuantLib/ql/patterns/curiouslyrecurring.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = curiouslyrecurring.hpp; path = ql/patterns/curiouslyrecurring.hpp; sourceTree = SOURCE_ROOT; };
		C88930A8DFFA4636A584AB40 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flatsmilesection.hpp; path = ql/termstructures/volatility/flatsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		C88A4595AB164A9794F23516 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = treeswapengine.cpp; path = ql/pricingengines/swap/treeswapengine.cpp; sourceTree = SOURCE_ROOT; };
		C88DE54CA5514C318623B96E /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicoupon.hpp; path = ql/cashflows/cpicoupon.hpp; sourceTree = SOURCE_ROOT; };
		C8CBABBB3C7B4E4DA1EAEF59 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = optionletvolatilitystructure.cpp; path = ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		C8CC435E2FDF43059CC58989 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tapcorrelations.cpp; path = ql/math/matrixutilities/tapcorrelations.cpp; sourceTree = SOURCE_ROOT; };
		C8D8D8F7DF9A4F0BB0EA525A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmndimsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmndimsolver.hpp; path = ql/methods/finitedifferences/solvers/fdmndimsolver.hpp; sourceTree = SOURCE_ROOT; };
		C8DA599B389F42B3A43D89FB /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticperformanceengine.cpp; path = ql/pricingengines/cliquet/analyticperformanceengine.cpp; sourceTree = SOURCE_ROOT; };
		C90A824266CC45AEA6F9CFD1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = latticerules.hpp; path = ql/math/randomnumbers/latticerules.hpp; sourceTree = SOURCE_ROOT; };
		C90DE2A6253548D58CB84000 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1djamshidianswaptionengine.cpp; path = ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		C9147513FD5F4CD68488253C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sparseilupreconditioner.cpp; path = ql/math/matrixutilities/sparseilupreconditioner.cpp; sourceTree = SOURCE_ROOT; };
		C91DB88C547B495C99CEB66A /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussiancopula.cpp; path = ql/math/copulas/gaussiancopula.cpp; sourceTree = SOURCE_ROOT; };
		C922CA8999F74674BB85FBB8 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardrateagreement.cpp; path = ql/instruments/forwardrateagreement.cpp; sourceTree = SOURCE_ROOT; };
		C92EF899ECBD43E9A530B983 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackcallablebondengine.hpp; path = ql/experimental/callablebonds/blackcallablebondengine.hpp; sourceTree = SOURCE_ROOT; };
		C966D6D26E624106A29049A3 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewisezeroinflationcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisezeroinflationcurve.hpp; path = ql/termstructures/inflation/piecewisezeroinflationcurve.hpp; sourceTree = SOURCE_ROOT; };
		C97C8CA22CD149F688285DED /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = symmetricschurdecomposition.hpp; path = ql/math/matrixutilities/symmetricschurdecomposition.hpp; sourceTree = SOURCE_ROOT; };
		C9929185E8934B69BF84CF6F /* /Users/heiner/git/QuantLib/ql/pricingengines/mclongstaffschwartzengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mclongstaffschwartzengine.hpp; path = ql/pricingengines/mclongstaffschwartzengine.hpp; sourceTree = SOURCE_ROOT; };
		C99CC793A8AA47C580A11A51 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = amortizingfixedratebond.hpp; path = ql/experimental/amortizingbonds/amortizingfixedratebond.hpp; sourceTree = SOURCE_ROOT; };
		C9B4D205A50D4BD6B504AA9E /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = oceania.cpp; path = ql/currencies/oceania.cpp; sourceTree = SOURCE_ROOT; };
		C9B92A4EBCDA4E448B4FFAC3 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = armijo.cpp; path = ql/math/optimization/armijo.cpp; sourceTree = SOURCE_ROOT; };
		C9B933142A07435A9067ABDA /* /Users/heiner/git/QuantLib/test-suite/extensibleoptions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extensibleoptions.cpp; path = "test-suite/extensibleoptions.cpp"; sourceTree = SOURCE_ROOT; };
		C9CF7D2430B24395A876923E /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pool.cpp; path = ql/experimental/credit/pool.cpp; sourceTree = SOURCE_ROOT; };
		C9D9B2417902475A8820BB29 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constantoptionletvol.cpp; path = ql/termstructures/volatility/optionlet/constantoptionletvol.cpp; sourceTree = SOURCE_ROOT; };
		C9DBCA7DEDED46D8B52B74C5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = baroneadesiwhaleyengine.hpp; path = ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp; sourceTree = SOURCE_ROOT; };
		C9F8D012E56745BBA9B12232 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmmesherintegral.cpp; path = ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp; sourceTree = SOURCE_ROOT; };
		CA01A46FFDA943728A407914 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaulttermstructure.cpp; path = ql/termstructures/defaulttermstructure.cpp; sourceTree = SOURCE_ROOT; };
		CA0216EB608647B48F2FAC69 /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = businessdayconvention.hpp; path = ql/time/businessdayconvention.hpp; sourceTree = SOURCE_ROOT; };
		CA06A22CA90843B19FBB5F9B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/trlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = trlibor.hpp; path = ql/indexes/ibor/trlibor.hpp; sourceTree = SOURCE_ROOT; };
		CA0D8999BF6B4FD3A696EFEB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multisteptarn.cpp; path = ql/models/marketmodels/products/multistep/multisteptarn.cpp; sourceTree = SOURCE_ROOT; };
		CA13E94B6F504640BEA07797 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationlossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basecorrelationlossmodel.hpp; path = ql/experimental/credit/basecorrelationlossmodel.hpp; sourceTree = SOURCE_ROOT; };
		CA202303B3D8469899788EE3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdratepc.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp; sourceTree = SOURCE_ROOT; };
		CA2CB2DA94E048B0BD9EA5F1 /* /Users/heiner/git/QuantLib/ql/math/interpolations/lagrangeinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lagrangeinterpolation.hpp; path = ql/math/interpolations/lagrangeinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		CA2F7798AB214F09941E750C /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = segmentintegral.cpp; path = ql/math/integrals/segmentintegral.cpp; sourceTree = SOURCE_ROOT; };
		CA3CDA1778F7497B9EE8ED44 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmextoujumpsolver.cpp; path = ql/experimental/finitedifferences/fdmextoujumpsolver.cpp; sourceTree = SOURCE_ROOT; };
		CA447438AA524531A4CD46BF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = alphafinder.cpp; path = ql/models/marketmodels/models/alphafinder.cpp; sourceTree = SOURCE_ROOT; };
		CA47E0CA010B4E3EA149EC15 /* /Users/heiner/git/QuantLib/ql/methods/lattices/tree.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tree.hpp; path = ql/methods/lattices/tree.hpp; sourceTree = SOURCE_ROOT; };
		CA486A2BA9C6470497FB48F5 /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dividendvanillaoption.cpp; path = ql/instruments/dividendvanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		CA594C40E5F34478A7F6FFE9 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hullwhite.hpp; path = ql/models/shortrate/onefactormodels/hullwhite.hpp; sourceTree = SOURCE_ROOT; };
		CA6F6593373F44A1A9CC091B /* /Users/heiner/git/QuantLib/test-suite/doublebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = doublebarrieroption.cpp; path = "test-suite/doublebarrieroption.cpp"; sourceTree = SOURCE_ROOT; };
		CA7B9AEC2380480084F84A97 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackscholescalculator.cpp; path = ql/pricingengines/blackscholescalculator.cpp; sourceTree = SOURCE_ROOT; };
		CA88A2A5A29D4E678FE5FF5E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmmeshercomposite.hpp; path = ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp; sourceTree = SOURCE_ROOT; };
		CA8F69DC94A24133819048C4 /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = asianoptions.cpp; path = "test-suite/asianoptions.cpp"; sourceTree = SOURCE_ROOT; };
		CA9311EB03CA4CA7990F76B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = isdacdsengine.hpp; path = ql/pricingengines/credit/isdacdsengine.hpp; sourceTree = SOURCE_ROOT; };
		CA9972246E4D46778D1C3AE0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/capfloor/all.hpp; sourceTree = SOURCE_ROOT; };
		CA9DF1A59F994FEC85F7BBD4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vannavolgabarrierengine.cpp; path = ql/experimental/barrieroption/vannavolgabarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		CAA86505255F45F7B4C13C5B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = smilesectionutils.cpp; path = ql/termstructures/volatility/smilesectionutils.cpp; sourceTree = SOURCE_ROOT; };
		CAB554D605B442B79CA2C483 /* /Users/heiner/git/QuantLib/ql/settings.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = settings.hpp; path = ql/settings.hpp; sourceTree = SOURCE_ROOT; };
		CAC3BCEF3310411BA298FF3E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepcoterminalswaptions.hpp; path = ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp; sourceTree = SOURCE_ROOT; };
		CAE8E839FDC645B3B688E95C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel.cpp; path = ql/models/marketmodels/marketmodel.cpp; sourceTree = SOURCE_ROOT; };
		CAF901D04E9B44438E541BB7 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = coshestonengine.hpp; path = ql/pricingengines/vanilla/coshestonengine.hpp; sourceTree = SOURCE_ROOT; };
		CB015412DCEB4AA69CFA2BC8 /* /Users/heiner/git/QuantLib/ql/money.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = money.cpp; path = ql/money.cpp; sourceTree = SOURCE_ROOT; };
		CB1D060ED8234D13BD01449A /* /Users/heiner/git/QuantLib/ql/payoff.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = payoff.hpp; path = ql/payoff.hpp; sourceTree = SOURCE_ROOT; };
		CB2270382F424FB2842A1B8E /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bootstraptraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bootstraptraits.hpp; path = ql/termstructures/yield/bootstraptraits.hpp; sourceTree = SOURCE_ROOT; };
		CB2499D605FE454B95756848 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fixedratecoupon.hpp; path = ql/cashflows/fixedratecoupon.hpp; sourceTree = SOURCE_ROOT; };
		CB3076AD1335437686D2724C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodelvolprocess.hpp; path = ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp; sourceTree = SOURCE_ROOT; };
		CB377B1A2F584C87A06CFF49 /* GlobalOptimizer */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = GlobalOptimizer; sourceTree = BUILT_PRODUCTS_DIR; };
		CB37B599A3E1487CA02F6D99 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditycurve.hpp; path = ql/experimental/commodities/commoditycurve.hpp; sourceTree = SOURCE_ROOT; };
		CB4CE852560546758E25D3F3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zabr.cpp; path = ql/experimental/volatility/zabr.cpp; sourceTree = SOURCE_ROOT; };
		CB945F1D8AE54834A50D0DDD /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = treeswaptionengine.cpp; path = ql/pricingengines/swaption/treeswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		CB96AC31C0C148A6BB6CAEC5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmtimedepdirichletboundary.cpp; path = ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp; sourceTree = SOURCE_ROOT; };
		CB9BC82B5CCB44258462D7A4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dnonstandardswaptionengine.cpp; path = ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		CBA4690E9D224B279A3D46DF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepforwards.cpp; path = ql/models/marketmodels/products/multistep/multistepforwards.cpp; sourceTree = SOURCE_ROOT; };
		CBA839F351B14FD6A3A17154 /* /Users/heiner/git/QuantLib/ql/math/ode/adaptiverungekutta.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = adaptiverungekutta.hpp; path = ql/math/ode/adaptiverungekutta.hpp; sourceTree = SOURCE_ROOT; };
		CBADD508D1E94CAFA603F553 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/swaption/all.hpp; sourceTree = SOURCE_ROOT; };
		CBB3DDCEC0E14B9FBB85A060 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonslvprocess.cpp; path = ql/experimental/processes/hestonslvprocess.cpp; sourceTree = SOURCE_ROOT; };
		CBC2955EBA19438196C530E1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gmres.cpp; path = ql/math/matrixutilities/gmres.cpp; sourceTree = SOURCE_ROOT; };
		CBEC3E3B67CA4C94B5F86E03 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zigguratrng.cpp; path = ql/experimental/math/zigguratrng.cpp; sourceTree = SOURCE_ROOT; };
		CBF02E9A34804FD6B37EDDD5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = uniformgridmesher.hpp; path = ql/methods/finitedifferences/meshers/uniformgridmesher.hpp; sourceTree = SOURCE_ROOT; };
		CBF9DB2E87EA46338BA6F45D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sparseilupreconditioner.hpp; path = ql/math/matrixutilities/sparseilupreconditioner.hpp; sourceTree = SOURCE_ROOT; };
		CC14BA45EDBA4E528322BD2B /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicapfloor.hpp; path = ql/instruments/cpicapfloor.hpp; sourceTree = SOURCE_ROOT; };
		CC2486FB46F447E5A6BB8CF7 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hullwhite.hpp; path = ql/models/shortrate/onefactormodels/hullwhite.hpp; sourceTree = SOURCE_ROOT; };
		CC280486D159429CBABCE984 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bernsteinpolynomial.hpp; path = ql/math/bernsteinpolynomial.hpp; sourceTree = SOURCE_ROOT; };
		CC2D8B640E114521A2A7142E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisemultiproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwisemultiproduct.hpp; path = ql/models/marketmodels/pathwisemultiproduct.hpp; sourceTree = SOURCE_ROOT; };
		CC3E1FA31FE24BCA834A6D06 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytic_cont_geom_av_price.cpp; path = ql/pricingengines/asian/analytic_cont_geom_av_price.cpp; sourceTree = SOURCE_ROOT; };
		CC46F4AA6D3D4DAAAD1C31D2 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = norway.cpp; path = ql/time/calendars/norway.cpp; sourceTree = SOURCE_ROOT; };
		CC4967E508154FB8957494B1 /* /Users/heiner/git/QuantLib/ql/time/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/time/all.hpp; sourceTree = SOURCE_ROOT; };
		CC4CCEC0AAF142F7A12DDAD7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/volatility/optionlet/all.hpp; sourceTree = SOURCE_ROOT; };
		CC4F8B65C46D4CD4BCDFF8D9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrvolsurface.hpp; path = ql/experimental/volatility/sabrvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		CC614E68900E4C2FBA6D5144 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spreadedhazardratecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadedhazardratecurve.hpp; path = ql/experimental/credit/spreadedhazardratecurve.hpp; sourceTree = SOURCE_ROOT; };
		CC78D792F1AE41CF8C98FC17 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedcoxingersollross.cpp; path = ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp; sourceTree = SOURCE_ROOT; };
		CC7EC90E51174E7B91304BFA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volatilityinterpolationspecifier.hpp; path = ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp; sourceTree = SOURCE_ROOT; };
		CC9E687DF9A24D26B2661C69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = triggeredswapexercise.hpp; path = ql/models/marketmodels/callability/triggeredswapexercise.hpp; sourceTree = SOURCE_ROOT; };
		CCA2F79442154547B1F7DB31 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadedswaptionvol.hpp; path = ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp; sourceTree = SOURCE_ROOT; };
		CCBBEEDB04DE4F7595A5FD06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsmarketcalibration.cpp; path = ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp; sourceTree = SOURCE_ROOT; };
		CCC69D69AE014E81AC2991F7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskyassetswapoption.cpp; path = ql/experimental/credit/riskyassetswapoption.cpp; sourceTree = SOURCE_ROOT; };
		CCCEE106382E41BBB23F98E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhullwhitesolver.hpp; path = ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp; sourceTree = SOURCE_ROOT; };
		CCCF6D50A00B4C71A0D7CFC0 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = polynomialmathfunction.cpp; path = ql/math/polynomialmathfunction.cpp; sourceTree = SOURCE_ROOT; };
		CCD3885D6B9041EC92CFDAA4 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralcdsengine.hpp; path = ql/pricingengines/credit/integralcdsengine.hpp; sourceTree = SOURCE_ROOT; };
		CD0DA34120EA471395FD6B8B /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = batesmodel.cpp; path = "test-suite/batesmodel.cpp"; sourceTree = SOURCE_ROOT; };
		CD252DA6F5D147429496FBCA /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskyassetswapoption.hpp; path = ql/experimental/credit/riskyassetswapoption.hpp; sourceTree = SOURCE_ROOT; };
		CD36B2B92D404DFA925E056C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalcmswapratepc.hpp; path = ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp; sourceTree = SOURCE_ROOT; };
		CD3744AF35E349F6A4B4DE39 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaultdensitystructure.cpp; path = ql/termstructures/credit/defaultdensitystructure.cpp; sourceTree = SOURCE_ROOT; };
		CD40C67377FA4E5B96670D46 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = btp.hpp; path = ql/instruments/bonds/btp.hpp; sourceTree = SOURCE_ROOT; };
		CD441640113542B6964B7CA6 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = russia.hpp; path = ql/time/calendars/russia.hpp; sourceTree = SOURCE_ROOT; };
		CD45EB149E344E6D955AAB29 /* quantlib-test-suite */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "quantlib-test-suite"; sourceTree = BUILT_PRODUCTS_DIR; };
		CD65A1289EA84479977E9841 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedhazardratecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedhazardratecurve.hpp; path = ql/termstructures/credit/interpolatedhazardratecurve.hpp; sourceTree = SOURCE_ROOT; };
		CD7CCFB59D784E7D86AACF87 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = basketgeneratingengine.hpp; path = ql/pricingengines/swaption/basketgeneratingengine.hpp; sourceTree = SOURCE_ROOT; };
		CDA7A4CD37D44C8988C56F31 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jpylibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jpylibor.hpp; path = ql/indexes/ibor/jpylibor.hpp; sourceTree = SOURCE_ROOT; };
		CDE0326A96794CAE9E0FCB34 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholesfwdop.cpp; path = ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp; sourceTree = SOURCE_ROOT; };
		CDE5847593BA4F989B75089E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sabr.cpp; path = ql/termstructures/volatility/sabr.cpp; sourceTree = SOURCE_ROOT; };
		CDEC498029624FC491CC7813 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = parametricexercise.cpp; path = ql/methods/montecarlo/parametricexercise.cpp; sourceTree = SOURCE_ROOT; };
		CDF10DFA56C543E4A729FD60 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcpathbasketengine.cpp; path = ql/experimental/mcbasket/mcpathbasketengine.cpp; sourceTree = SOURCE_ROOT; };
		CDF5C030FD834AD4A15959C2 /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = particleswarmoptimization.cpp; path = ql/experimental/math/particleswarmoptimization.cpp; sourceTree = SOURCE_ROOT; };
		CDFDD7CBCC7B45DAB65FF6B1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmdividendhandler.cpp; path = ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp; sourceTree = SOURCE_ROOT; };
		CE09B311529345768743EF2C /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/barrieroption/all.hpp; sourceTree = SOURCE_ROOT; };
		CE14ABBCC12C48D0B222E5B6 /* /Users/heiner/git/QuantLib/test-suite/assetswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = assetswap.cpp; path = "test-suite/assetswap.cpp"; sourceTree = SOURCE_ROOT; };
		CE2939A8422D4DD19C450D99 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedhazardratecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedhazardratecurve.hpp; path = ql/termstructures/credit/interpolatedhazardratecurve.hpp; sourceTree = SOURCE_ROOT; };
		CE4710B912D74594BDC4AD35 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localvolrndcalculator.hpp; path = ql/experimental/finitedifferences/localvolrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		CE519827D7B04C44BC8C5289 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = himalayaoption.hpp; path = ql/experimental/exoticoptions/himalayaoption.hpp; sourceTree = SOURCE_ROOT; };
		CE6D7B7214E44C1DB9E87A7B /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quadratic.cpp; path = ql/math/quadratic.cpp; sourceTree = SOURCE_ROOT; };
		CE7556CE3C334C5EA6F3FD45 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsimplestoragecondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp; sourceTree = SOURCE_ROOT; };
		CE8CDF7276C444A2AAF39BEE /* /Users/heiner/git/QuantLib/ql/pricingengines/mcsimulation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcsimulation.hpp; path = ql/pricingengines/mcsimulation.hpp; sourceTree = SOURCE_ROOT; };
		CEA1646CF24F4E6CAEBE5ECB /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = normalclvmodel.cpp; path = ql/experimental/models/normalclvmodel.cpp; sourceTree = SOURCE_ROOT; };
		CEB72580375849A48DFBF5A4 /* /Users/heiner/git/QuantLib/test-suite/termstructures.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = termstructures.hpp; path = "test-suite/termstructures.hpp"; sourceTree = SOURCE_ROOT; };
		CEBF3278B17A48C6B1F20E4B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomizedlds.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomizedlds.hpp; path = ql/math/randomnumbers/randomizedlds.hpp; sourceTree = SOURCE_ROOT; };
		CED50A6AF1AD4496ADAD13D9 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedornsteinuhlenbeckprocess.hpp; path = ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp; sourceTree = SOURCE_ROOT; };
		CEE78CDF60F94DE8B8624400 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = noexceptlocalvolsurface.hpp; path = ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		CEE94EF0FC0940D484AEF6E9 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bondfunctions.cpp; path = ql/pricingengines/bond/bondfunctions.cpp; sourceTree = SOURCE_ROOT; };
		CEF0C963AFFA4189A9105E39 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lineartsrpricer.cpp; path = ql/cashflows/lineartsrpricer.cpp; sourceTree = SOURCE_ROOT; };
		CEFBD4E0B0BC4ABC9282FCA1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticbsmhullwhiteengine.hpp; path = ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp; sourceTree = SOURCE_ROOT; };
		CF1C10EB299C420DA131436E /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hybridhestonhullwhiteprocess.hpp; path = ql/processes/hybridhestonhullwhiteprocess.hpp; sourceTree = SOURCE_ROOT; };
		CF1C4D36BC8C49E1A9FDC0F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = baroneadesiwhaleyengine.cpp; path = ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp; sourceTree = SOURCE_ROOT; };
		CF2545A861B342F48483829C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmdividendhandler.cpp; path = ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp; sourceTree = SOURCE_ROOT; };
		CF2CC3B0DD5D40579324661F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmdupire1dop.hpp; path = ql/experimental/finitedifferences/fdmdupire1dop.hpp; sourceTree = SOURCE_ROOT; };
		CF335E9A03E54255A0B112FB /* /Users/heiner/git/QuantLib/test-suite/defaultprobabilitycurves.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultprobabilitycurves.hpp; path = "test-suite/defaultprobabilitycurves.hpp"; sourceTree = SOURCE_ROOT; };
		CF3620CBE0884862824B6296 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionconstantvol.hpp; path = ql/termstructures/volatility/swaption/swaptionconstantvol.hpp; sourceTree = SOURCE_ROOT; };
		CF3A31896C6C4FA6A58D1051 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletcoterminalperiodic.hpp; path = ql/models/marketmodels/models/capletcoterminalperiodic.hpp; sourceTree = SOURCE_ROOT; };
		CF3F8C7477684882A35ED24B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmswaptionengine.cpp; path = ql/legacy/libormarketmodels/lfmswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		CF582A0C5B684C969735B5D3 /* /Users/heiner/git/QuantLib/test-suite/matrices.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = matrices.hpp; path = "test-suite/matrices.hpp"; sourceTree = SOURCE_ROOT; };
		CF60C117A2FD4021A316694D /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = irregularswaption.hpp; path = ql/experimental/swaptions/irregularswaption.hpp; sourceTree = SOURCE_ROOT; };
		CF6BC0286D1F4153B4BE7A05 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onefactorcopula.hpp; path = ql/experimental/credit/onefactorcopula.hpp; sourceTree = SOURCE_ROOT; };
		CF6D8FB3F75D4377887547A5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fwdperiodadapter.hpp; path = ql/models/marketmodels/models/fwdperiodadapter.hpp; sourceTree = SOURCE_ROOT; };
		CF6E4BEA8BD24727BEEE6B75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductinversefloater.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp; sourceTree = SOURCE_ROOT; };
		CF8B78E0AEC14E90989E9938 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmzabrop.cpp; path = ql/experimental/finitedifferences/fdmzabrop.cpp; sourceTree = SOURCE_ROOT; };
		CF930318F70B4575A81BF414 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmextoujumpmodelinnervalue.hpp; path = ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp; sourceTree = SOURCE_ROOT; };
		CF9378513B5345EA8098F7CD /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralengine.cpp; path = ql/pricingengines/vanilla/integralengine.cpp; sourceTree = SOURCE_ROOT; };
		CF9AAAB9B5C34C998C2DE93B /* /Users/heiner/git/QuantLib/test-suite/covariance.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = covariance.cpp; path = "test-suite/covariance.cpp"; sourceTree = SOURCE_ROOT; };
		CFB45DA77D934D9683E061C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sobolbrowniangenerator.cpp; path = ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp; sourceTree = SOURCE_ROOT; };
		CFBD4D96C2444B0A8FF2CFE0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = squarerootprocessrndcalculator.cpp; path = ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		CFBD708F1E804A50B17F4F75 /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = interpolations.cpp; path = "test-suite/interpolations.cpp"; sourceTree = SOURCE_ROOT; };
		CFBE5E80243146B6BE365402 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dswaptionengine.hpp; path = ql/pricingengines/swaption/gaussian1dswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		CFD2C51036DF430198E45C97 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = barrieroption.cpp; path = ql/instruments/barrieroption.cpp; sourceTree = SOURCE_ROOT; };
		CFD76507F92842CE921D7F2B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmtermoperator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bsmtermoperator.hpp; path = ql/methods/finitedifferences/bsmtermoperator.hpp; sourceTree = SOURCE_ROOT; };
		CFE7B78BF1AB40E38E8C2F6D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimpleswingcondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp; sourceTree = SOURCE_ROOT; };
		CFF7BD1483054118A6F36A64 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = maxcopula.hpp; path = ql/math/copulas/maxcopula.hpp; sourceTree = SOURCE_ROOT; };
		CFFBF04C146D4E039CD710E1 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = armijo.cpp; path = ql/math/optimization/armijo.cpp; sourceTree = SOURCE_ROOT; };
		D00749DBADCB47368B5411D7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticsimplechooserengine.hpp; path = ql/experimental/exoticoptions/analyticsimplechooserengine.hpp; sourceTree = SOURCE_ROOT; };
		D023E37495314B43903E1FA5 /* /Users/heiner/git/QuantLib/ql/position.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = position.cpp; path = ql/position.cpp; sourceTree = SOURCE_ROOT; };
		D03436046A4E456293802185 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoycapfloortermpricesurface.hpp; path = ql/experimental/inflation/yoycapfloortermpricesurface.hpp; sourceTree = SOURCE_ROOT; };
		D05492FA17AF4D21B4FA675E /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackscholesprocess.hpp; path = ql/processes/blackscholesprocess.hpp; sourceTree = SOURCE_ROOT; };
		D05E325A6FC24EE0914D3A92 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exerciseadapter.hpp; path = ql/models/marketmodels/products/multistep/exerciseadapter.hpp; sourceTree = SOURCE_ROOT; };
		D06672A665054D34A66AE6A8 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = catbond.cpp; path = ql/experimental/catbonds/catbond.cpp; sourceTree = SOURCE_ROOT; };
		D06DDECC6EAB43FA9424FDB7 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jpylibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jpylibor.hpp; path = ql/indexes/ibor/jpylibor.hpp; sourceTree = SOURCE_ROOT; };
		D0809A1639DA4D92913A6F5E /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = indexedcashflow.hpp; path = ql/cashflows/indexedcashflow.hpp; sourceTree = SOURCE_ROOT; };
		D08343D661A942099DA0198E /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = americanpayoffathit.hpp; path = ql/pricingengines/americanpayoffathit.hpp; sourceTree = SOURCE_ROOT; };
		D0944B30976E4964BD646064 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = everestoption.cpp; path = ql/experimental/exoticoptions/everestoption.cpp; sourceTree = SOURCE_ROOT; };
		D0A20E8B008C4AF49EA77056 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multisteppathwisewrapper.cpp; path = ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp; sourceTree = SOURCE_ROOT; };
		D0AE37D984D1457A9B0C0AD6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constantcpivolatility.cpp; path = ql/termstructures/volatility/inflation/constantcpivolatility.cpp; sourceTree = SOURCE_ROOT; };
		D0B14E4BEC3E4B37BE838525 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sabrvolsurface.cpp; path = ql/experimental/volatility/sabrvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		D0B5BEE0689C476CB27DBB94 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = oneassetoption.hpp; path = ql/instruments/oneassetoption.hpp; sourceTree = SOURCE_ROOT; };
		D0BDF8F509A848DAA4357855 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = paymentterm.cpp; path = ql/experimental/commodities/paymentterm.cpp; sourceTree = SOURCE_ROOT; };
		D0C8F1C0E3D64D42A47C7DDF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticeuropeanmargrabeengine.cpp; path = ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp; sourceTree = SOURCE_ROOT; };
		D0C9D8E786504E29B7903CD2 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gjrgarchprocess.cpp; path = ql/processes/gjrgarchprocess.cpp; sourceTree = SOURCE_ROOT; };
		D0D457BADED04EC396308F35 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sabrsmilesection.hpp; path = ql/termstructures/volatility/sabrsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		D0D95CF4A79F48DF8199A134 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaultevent.cpp; path = ql/experimental/credit/defaultevent.cpp; sourceTree = SOURCE_ROOT; };
		D0D9EF1C20B940B7B1E3BBEA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = upperboundengine.cpp; path = ql/models/marketmodels/callability/upperboundengine.cpp; sourceTree = SOURCE_ROOT; };
		D0EF24D2FD77419AAD8D2B34 /* /Users/heiner/git/QuantLib/ql/math/fastfouriertransform.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fastfouriertransform.hpp; path = ql/math/fastfouriertransform.hpp; sourceTree = SOURCE_ROOT; };
		D0F2B20110BF4DAB800B0D71 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/centrallimitgaussianrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = centrallimitgaussianrng.hpp; path = ql/math/randomnumbers/centrallimitgaussianrng.hpp; sourceTree = SOURCE_ROOT; };
		D0FAF608770B4B0DB942FD66 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = catrisk.cpp; path = ql/experimental/catbonds/catrisk.cpp; sourceTree = SOURCE_ROOT; };
		D105D3C4E87045A29A8BD2BA /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = imm.cpp; path = ql/time/imm.cpp; sourceTree = SOURCE_ROOT; };
		D121FF8B464F4FE7988D8142 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerocouponbond.hpp; path = ql/instruments/bonds/zerocouponbond.hpp; sourceTree = SOURCE_ROOT; };
		D124E5D036F6404DAD963BB5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = normalfwdratepc.hpp; path = ql/models/marketmodels/evolvers/normalfwdratepc.hpp; sourceTree = SOURCE_ROOT; };
		D1303ABFEEEF430696B73E74 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = recoveryratequote.hpp; path = ql/experimental/credit/recoveryratequote.hpp; sourceTree = SOURCE_ROOT; };
		D13DA7C867D44867820FA515 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mchimalayaengine.hpp; path = ql/experimental/exoticoptions/mchimalayaengine.hpp; sourceTree = SOURCE_ROOT; };
		D14832EFF76F40C9A40E9EAD /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mcdiscreteasianengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcdiscreteasianengine.hpp; path = ql/pricingengines/asian/mcdiscreteasianengine.hpp; sourceTree = SOURCE_ROOT; };
		D15721A22C804C7DA2A68C92 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmvppstepcondition.cpp; path = ql/experimental/finitedifferences/fdmvppstepcondition.cpp; sourceTree = SOURCE_ROOT; };
		D1587B58D50846A68680D6BF /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathmultiassetoption.hpp; path = ql/experimental/mcbasket/pathmultiassetoption.hpp; sourceTree = SOURCE_ROOT; };
		D1599BD5F7044CABAF058058 /* /Users/heiner/git/QuantLib/Examples/MultidimIntegral/MultidimIntegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = MultidimIntegral.cpp; path = Examples/MultidimIntegral/MultidimIntegral.cpp; sourceTree = SOURCE_ROOT; };
		D15F282FEE3C46C79DA5BBE9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/tibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tibor.hpp; path = ql/indexes/ibor/tibor.hpp; sourceTree = SOURCE_ROOT; };
		D15FE05F4A7D49FB8F5FAF9D /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hongkong.cpp; path = ql/time/calendars/hongkong.cpp; sourceTree = SOURCE_ROOT; };
		D1689EC535664DB092FD628C /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = haltonrsg.hpp; path = ql/math/randomnumbers/haltonrsg.hpp; sourceTree = SOURCE_ROOT; };
		D16ABEE23A6A43509563EF47 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = glued1dmesher.cpp; path = ql/experimental/finitedifferences/glued1dmesher.cpp; sourceTree = SOURCE_ROOT; };
		D17068B72BC44F7982B33ED8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/products/onestep/all.hpp; sourceTree = SOURCE_ROOT; };
		D17E2B23AE244CFAA1F8D7C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcd.cpp; path = ql/termstructures/volatility/abcd.cpp; sourceTree = SOURCE_ROOT; };
		D18A5CCCBFA44763B44A2841 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pagodaoption.cpp; path = ql/experimental/exoticoptions/pagodaoption.cpp; sourceTree = SOURCE_ROOT; };
		D19023D40BC3472FBA428ED6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exponentialjump1dmesher.cpp; path = ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp; sourceTree = SOURCE_ROOT; };
		D1CDE9B7B3E7443492959A80 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcpagodaengine.hpp; path = ql/experimental/exoticoptions/mcpagodaengine.hpp; sourceTree = SOURCE_ROOT; };
		D1CF12C8AFF04B6099CC1ED5 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcbarrierengine.cpp; path = ql/pricingengines/barrier/mcbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		D1D3F97D451D4C409C524F8C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bsmrndcalculator.cpp; path = ql/experimental/finitedifferences/bsmrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		D1D4FDBDE1E9467396549E59 /* /Users/heiner/git/QuantLib/Examples/GlobalOptimizer/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/GlobalOptimizer/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		D204326B81A34D219C398CA3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vannavolgabarrierengine.cpp; path = ql/experimental/barrieroption/vannavolgabarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		D2172497C0F0487D81DAF5CA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmbatesop.hpp; path = ql/methods/finitedifferences/operators/fdmbatesop.hpp; sourceTree = SOURCE_ROOT; };
		D22715C41A124C8E84123E01 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = variancegammamodel.cpp; path = ql/experimental/variancegamma/variancegammamodel.cpp; sourceTree = SOURCE_ROOT; };
		D2296F44E5B242A7BA4D37E0 /* /Users/heiner/git/QuantLib/test-suite/gaussianquadratures.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussianquadratures.cpp; path = "test-suite/gaussianquadratures.cpp"; sourceTree = SOURCE_ROOT; };
		D22C5118244F44BFB5001FD8 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = everestoption.hpp; path = ql/experimental/exoticoptions/everestoption.hpp; sourceTree = SOURCE_ROOT; };
		D230FA6B60954E0FBBC53393 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniform1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = uniform1dmesher.hpp; path = ql/methods/finitedifferences/meshers/uniform1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		D255C81650934E49AC01A0A8 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = overnightindexedcoupon.hpp; path = ql/cashflows/overnightindexedcoupon.hpp; sourceTree = SOURCE_ROOT; };
		D25C8C1146D046688B39932B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestonhullwhitevanillaengine.hpp; path = ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		D26E1F04B62946E98B810825 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = accountingengine.hpp; path = ql/models/marketmodels/accountingengine.hpp; sourceTree = SOURCE_ROOT; };
		D27CAE725DF04898BD3245C3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdsimpleextoustorageengine.cpp; path = ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp; sourceTree = SOURCE_ROOT; };
		D28BE3C76BFB444988D92C40 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nonstandardswaption.hpp; path = ql/instruments/nonstandardswaption.hpp; sourceTree = SOURCE_ROOT; };
		D290AEF05BD24F11B4DDC6EB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/solvers/all.hpp; sourceTree = SOURCE_ROOT; };
		D2EC4BAED7BD42E1BEFF6AF0 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pascaltriangle.cpp; path = ql/math/pascaltriangle.cpp; sourceTree = SOURCE_ROOT; };
		D302F1109A0840EFBE9F6AFE /* /Users/heiner/git/QuantLib/ql/quotes/derivedquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = derivedquote.hpp; path = ql/quotes/derivedquote.hpp; sourceTree = SOURCE_ROOT; };
		D30926903E444A8C8E9F47E5 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/zibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zibor.hpp; path = ql/indexes/ibor/zibor.hpp; sourceTree = SOURCE_ROOT; };
		D30DA5DAF947473682372B1F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmarithmeticaveragecondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp; sourceTree = SOURCE_ROOT; };
		D33CB2BDAE3D4358931C3213 /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = conundrumpricer.hpp; path = ql/cashflows/conundrumpricer.hpp; sourceTree = SOURCE_ROOT; };
		D34748420BCF4F72A96C06AF /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpibond.hpp; path = ql/instruments/bonds/cpibond.hpp; sourceTree = SOURCE_ROOT; };
		D37938D108BA4FED92F25680 /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = germany.hpp; path = ql/time/calendars/germany.hpp; sourceTree = SOURCE_ROOT; };
		D3A3CE421AA64B4F804BC1B1 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/yield/all.hpp; sourceTree = SOURCE_ROOT; };
		D3B9FF9308DD4A6D8E533DA2 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basisincompleteordered.cpp; path = ql/math/matrixutilities/basisincompleteordered.cpp; sourceTree = SOURCE_ROOT; };
		D3D4E1AAC10D4BA287428DBC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmdupire1dop.cpp; path = ql/experimental/finitedifferences/fdmdupire1dop.cpp; sourceTree = SOURCE_ROOT; };
		D3D519C5365D483296146E77 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaulttermstructure.cpp; path = ql/termstructures/defaulttermstructure.cpp; sourceTree = SOURCE_ROOT; };
		D3DF01CE85524892A08E2417 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedsurvivalprobabilitycurve.hpp; path = ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp; sourceTree = SOURCE_ROOT; };
		D40BA15CF79241169F99A304 /* /Users/heiner/git/QuantLib/ql/methods/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/all.hpp; sourceTree = SOURCE_ROOT; };
		D41D6A1FD98C45688FC45491 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mclongstaffschwartzpathengine.hpp; path = ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp; sourceTree = SOURCE_ROOT; };
		D425BEFB36E545449F28B9B0 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/nodedata.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nodedata.hpp; path = ql/methods/montecarlo/nodedata.hpp; sourceTree = SOURCE_ROOT; };
		D433A4C741EB401AB383D40C /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = chfliborswap.cpp; path = ql/indexes/swap/chfliborswap.cpp; sourceTree = SOURCE_ROOT; };
		D437666561D24ACF906BEE4F /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = linesearch.hpp; path = ql/math/optimization/linesearch.hpp; sourceTree = SOURCE_ROOT; };
		D44169D38F32446198000ED7 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energyfuture.hpp; path = ql/experimental/commodities/energyfuture.hpp; sourceTree = SOURCE_ROOT; };
		D4433127F3A5436A9678392E /* /Users/heiner/git/QuantLib/ql/indexes/inflation/euhicp.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = euhicp.hpp; path = ql/indexes/inflation/euhicp.hpp; sourceTree = SOURCE_ROOT; };
		D44D2B49A1124F23A09A4A99 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitymatrix.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolatilitymatrix.cpp; path = "test-suite/swaptionvolatilitymatrix.cpp"; sourceTree = SOURCE_ROOT; };
		D45A1C3C9E9C4463BE35110B /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = filonintegral.hpp; path = ql/math/integrals/filonintegral.hpp; sourceTree = SOURCE_ROOT; };
		D4618719AB6B497CBA3DC875 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdebsm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pdebsm.hpp; path = ql/methods/finitedifferences/pdebsm.hpp; sourceTree = SOURCE_ROOT; };
		D462DAC79A9341E885C3773A /* /Users/heiner/git/QuantLib/Examples/CVAIRS/CVAIRS.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = CVAIRS.cpp; path = Examples/CVAIRS/CVAIRS.cpp; sourceTree = SOURCE_ROOT; };
		D474DD8879F34F6DB0260497 /* /Users/heiner/git/QuantLib/ql/handle.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = handle.hpp; path = ql/handle.hpp; sourceTree = SOURCE_ROOT; };
		D47D9D9608164FBABAC1D1DB /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = generalizedhullwhite.cpp; path = ql/experimental/shortrate/generalizedhullwhite.cpp; sourceTree = SOURCE_ROOT; };
		D4980C5A346647268762CA98 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytictwoassetcorrelationengine.cpp; path = ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp; sourceTree = SOURCE_ROOT; };
		D4A2C591901545FDA68534BE /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gbpliborswap.cpp; path = ql/indexes/swap/gbpliborswap.cpp; sourceTree = SOURCE_ROOT; };
		D4B08D3C7DCF475CB3BD0029 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathmultiassetoption.cpp; path = ql/experimental/mcbasket/pathmultiassetoption.cpp; sourceTree = SOURCE_ROOT; };
		D4B3F2E3255C48238CF2CC9F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/commodities/all.hpp; sourceTree = SOURCE_ROOT; };
		D4C3AE1873FB49459FFB373B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = himalayaoption.hpp; path = ql/experimental/exoticoptions/himalayaoption.hpp; sourceTree = SOURCE_ROOT; };
		D4C5E3A5332343DEB85309D1 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ukraine.cpp; path = ql/time/calendars/ukraine.cpp; sourceTree = SOURCE_ROOT; };
		D4CBD100C7DA47D2ACA55775 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = localvolrndcalculator.cpp; path = ql/experimental/finitedifferences/localvolrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		D4CF0A6E8B564D4BA60EADA9 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vegastressedblackscholesprocess.cpp; path = ql/experimental/processes/vegastressedblackscholesprocess.cpp; sourceTree = SOURCE_ROOT; };
		D4DE54F583E548C493925866 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = historicalratesanalysis.hpp; path = ql/models/marketmodels/historicalratesanalysis.hpp; sourceTree = SOURCE_ROOT; };
		D4EC9DDAF46643549C39DE1F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepratchet.cpp; path = ql/models/marketmodels/products/multistep/multistepratchet.cpp; sourceTree = SOURCE_ROOT; };
		D4EE30FBC4AD4240BB709B95 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = latticersg.hpp; path = ql/math/randomnumbers/latticersg.hpp; sourceTree = SOURCE_ROOT; };
		D4F3C13884BE4D96A9FBA607 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makecms.hpp; path = ql/instruments/makecms.hpp; sourceTree = SOURCE_ROOT; };
		D4FB719D832241CD985032A0 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplex.hpp; path = ql/math/optimization/simplex.hpp; sourceTree = SOURCE_ROOT; };
		D4FD705F05874B83A97EDD6E /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = argentina.hpp; path = ql/time/calendars/argentina.hpp; sourceTree = SOURCE_ROOT; };
		D503969D02524AFCBEEE6618 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardvaluequote.hpp; path = ql/quotes/forwardvaluequote.hpp; sourceTree = SOURCE_ROOT; };
		D524CA771616428E8AEA7855 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/usdlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = usdlibor.hpp; path = ql/indexes/ibor/usdlibor.hpp; sourceTree = SOURCE_ROOT; };
		D542E96BAABB4AB6BAF445A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmmdriftcalculator.hpp; path = ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp; sourceTree = SOURCE_ROOT; };
		D549D76E86634A28B8E33C45 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discounter.cpp; path = ql/models/marketmodels/discounter.cpp; sourceTree = SOURCE_ROOT; };
		D55EB8E6210A4E36B567D816 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dategenerationrule.hpp; path = ql/time/dategenerationrule.hpp; sourceTree = SOURCE_ROOT; };
		D569AF9941FB4E74A50D7A71 /* /Users/heiner/git/QuantLib/test-suite/doublebinaryoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = doublebinaryoption.hpp; path = "test-suite/doublebinaryoption.hpp"; sourceTree = SOURCE_ROOT; };
		D573F4802EDF4F8384F1A9CC /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = duration.cpp; path = ql/cashflows/duration.cpp; sourceTree = SOURCE_ROOT; };
		D57733A156A64FA4B1C128B1 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = averagebmacoupon.hpp; path = ql/cashflows/averagebmacoupon.hpp; sourceTree = SOURCE_ROOT; };
		D58B015E995A423F99BA15D0 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedcallablefixedratebond.hpp; path = ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp; sourceTree = SOURCE_ROOT; };
		D5C0B1CD60AD4B2FAB2D35D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwisediscounter.hpp; path = ql/models/marketmodels/pathwisediscounter.hpp; sourceTree = SOURCE_ROOT; };
		D5C16FE44D96443F949F97F8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = historicalratesanalysis.hpp; path = ql/models/marketmodels/historicalratesanalysis.hpp; sourceTree = SOURCE_ROOT; };
		D5DE58C101FB48A186A631B4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = curvestate.cpp; path = ql/models/marketmodels/curvestate.cpp; sourceTree = SOURCE_ROOT; };
		D5E678C1BC3449B6AD878E74 /* /Users/heiner/git/QuantLib/ql/math/optimization/costfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = costfunction.hpp; path = ql/math/optimization/costfunction.hpp; sourceTree = SOURCE_ROOT; };
		D5E68829F28F4A639CD6E211 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = argentina.cpp; path = ql/time/calendars/argentina.cpp; sourceTree = SOURCE_ROOT; };
		D5E86A1F7E214D72A12E0049 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/interpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedsmilesection.hpp; path = ql/termstructures/volatility/interpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		D5F80D3EB8E2423196974456 /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basketoption.cpp; path = "test-suite/basketoption.cpp"; sourceTree = SOURCE_ROOT; };
		D62FAE78552C405A9581CA27 /* /Users/heiner/git/QuantLib/test-suite/piecewiseyieldcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewiseyieldcurve.cpp; path = "test-suite/piecewiseyieldcurve.cpp"; sourceTree = SOURCE_ROOT; };
		D62FF41162614F19B77385A8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onefactorstudentcopula.cpp; path = ql/experimental/credit/onefactorstudentcopula.cpp; sourceTree = SOURCE_ROOT; };
		D6318C4CFE3E415285EC4A1B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepcoterminalswaptions.cpp; path = ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp; sourceTree = SOURCE_ROOT; };
		D63296BE5E3D4941B46B5BD6 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = iceland.cpp; path = ql/time/calendars/iceland.cpp; sourceTree = SOURCE_ROOT; };
		D6340B6412BE4CF58EF872A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sobolbrowniangenerator.hpp; path = ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp; sourceTree = SOURCE_ROOT; };
		D663142D32D644068C1440C6 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = libormarketmodel.hpp; path = "test-suite/libormarketmodel.hpp"; sourceTree = SOURCE_ROOT; };
		D67364B4D8244BADA3DCA8F0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/saddlepointlossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = saddlepointlossmodel.hpp; path = ql/experimental/credit/saddlepointlossmodel.hpp; sourceTree = SOURCE_ROOT; };
		D678752894894836892DFA12 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedswaption.cpp; path = ql/pricingengines/swaption/discretizedswaption.cpp; sourceTree = SOURCE_ROOT; };
		D693F6F7863A4A2A8C597334 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mchullwhiteengine.cpp; path = ql/pricingengines/capfloor/mchullwhiteengine.cpp; sourceTree = SOURCE_ROOT; };
		D699ED832DD949E2A244B39C /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cdsoption.cpp; path = ql/experimental/credit/cdsoption.cpp; sourceTree = SOURCE_ROOT; };
		D6A667E2C79F4EBFAED5DA63 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mchestonhullwhiteengine.cpp; path = ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp; sourceTree = SOURCE_ROOT; };
		D6AF6F74898E43FEBA9F6B1C /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capfloor.cpp; path = ql/instruments/capfloor.cpp; sourceTree = SOURCE_ROOT; };
		D6C6A6BA4B8442E3B8A71D6B /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = couponpricer.hpp; path = ql/cashflows/couponpricer.hpp; sourceTree = SOURCE_ROOT; };
		D6C70C6312B94AB9B85677F3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskybond.hpp; path = ql/experimental/credit/riskybond.hpp; sourceTree = SOURCE_ROOT; };
		D6D42984924547DA80B36056 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepswap.cpp; path = ql/models/marketmodels/products/multistep/multistepswap.cpp; sourceTree = SOURCE_ROOT; };
		D6D9128EBF084AD789947E78 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = callablebond.cpp; path = ql/experimental/callablebonds/callablebond.cpp; sourceTree = SOURCE_ROOT; };
		D6EAD93B3D504D0D9DD8C4EF /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = china.cpp; path = ql/time/calendars/china.cpp; sourceTree = SOURCE_ROOT; };
		D6ED6B1EBD104A398200424B /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = issuer.hpp; path = ql/experimental/credit/issuer.hpp; sourceTree = SOURCE_ROOT; };
		D6EF1CCD5FD84F228286E1DD /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = modifiedcraigsneydscheme.hpp; path = ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp; sourceTree = SOURCE_ROOT; };
		D6F1455604A14AD0AC2975C5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholesop.hpp; path = ql/methods/finitedifferences/operators/fdmblackscholesop.hpp; sourceTree = SOURCE_ROOT; };
		D6F7B9B50ECA44E180A5D39D /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = conundrumpricer.hpp; path = ql/cashflows/conundrumpricer.hpp; sourceTree = SOURCE_ROOT; };
		D70E3F747605443D96BB0F64 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationtraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationtraits.hpp; path = ql/termstructures/inflation/inflationtraits.hpp; sourceTree = SOURCE_ROOT; };
		D718CCCF90974573B2E49F9B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedcapfloor.hpp; path = ql/pricingengines/capfloor/discretizedcapfloor.hpp; sourceTree = SOURCE_ROOT; };
		D727AD511FC345A4B7CFB396 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/operators/all.hpp; sourceTree = SOURCE_ROOT; };
		D755BFF3BFE74F0B93A32515 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = localvolsurface.hpp; path = ql/termstructures/volatility/equityfx/localvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		D772CE8750084F6CB71ED307 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = treecallablebondengine.cpp; path = ql/experimental/callablebonds/treecallablebondengine.cpp; sourceTree = SOURCE_ROOT; };
		D775EB719F344795812D44CF /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integral.cpp; path = ql/math/integrals/integral.cpp; sourceTree = SOURCE_ROOT; };
		D77B5FECB7614D83B5F8EA8D /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = timeunit.cpp; path = ql/time/timeunit.cpp; sourceTree = SOURCE_ROOT; };
		D77CCB342F52469BA0BF189D /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marshallolkincopula.cpp; path = ql/math/copulas/marshallolkincopula.cpp; sourceTree = SOURCE_ROOT; };
		D78E4B9F244F44ABB8B85AA8 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kernelinterpolation.hpp; path = ql/math/interpolations/kernelinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		D7B7C835A5184521B1876361 /* /Users/heiner/git/QuantLib/ql/utilities/vectors.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vectors.hpp; path = ql/utilities/vectors.hpp; sourceTree = SOURCE_ROOT; };
		D7C2302456024246A306F440 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticpdfhestonengine.cpp; path = ql/experimental/exoticoptions/analyticpdfhestonengine.cpp; sourceTree = SOURCE_ROOT; };
		D7C9F35152454D0A843A9249 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolmatrix.cpp; path = ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp; sourceTree = SOURCE_ROOT; };
		D7CA63827A5E432A8599280D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackvolsurface.cpp; path = ql/experimental/volatility/blackvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		D7D5A38950E94B47995A6265 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateeulerconstrained.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp; sourceTree = SOURCE_ROOT; };
		D7D6A56A20D243A8BB0366CD /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = galamboscopula.cpp; path = ql/math/copulas/galamboscopula.cpp; sourceTree = SOURCE_ROOT; };
		D7E929FBCCFE49B7BDD17193 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swapindex.hpp; path = ql/indexes/swapindex.hpp; sourceTree = SOURCE_ROOT; };
		D7E9DDD11580418FB0F884F5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fwdtocotswapadapter.cpp; path = ql/models/marketmodels/models/fwdtocotswapadapter.cpp; sourceTree = SOURCE_ROOT; };
		D7F1CA80AACD4742ABA604F0 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = argentina.cpp; path = ql/time/calendars/argentina.cpp; sourceTree = SOURCE_ROOT; };
		D802FE11F74745C094018280 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = markovfunctional.hpp; path = ql/models/shortrate/onefactormodels/markovfunctional.hpp; sourceTree = SOURCE_ROOT; };
		D80B8BAA84D84894A9AF422C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onefactormodel.cpp; path = ql/models/shortrate/onefactormodel.cpp; sourceTree = SOURCE_ROOT; };
		D812BF84750847AD8AC5264E /* /Users/heiner/git/QuantLib/ql/instruments/bonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/instruments/bonds/all.hpp; sourceTree = SOURCE_ROOT; };
		D83BF42162724DF68D66243B /* /Users/heiner/git/QuantLib/ql/math/integrals/twodimensionalintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twodimensionalintegral.hpp; path = ql/math/integrals/twodimensionalintegral.hpp; sourceTree = SOURCE_ROOT; };
		D8599B741C8148F8B83FCD27 /* /Users/heiner/git/QuantLib/test-suite/schedule.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = schedule.cpp; path = "test-suite/schedule.cpp"; sourceTree = SOURCE_ROOT; };
		D863D4E05DCF471B8A2A3A20 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = euriborswap.hpp; path = ql/indexes/swap/euriborswap.hpp; sourceTree = SOURCE_ROOT; };
		D867B19C09B1497DAF2A9586 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalcmsspreadpricer.cpp; path = ql/experimental/coupons/lognormalcmsspreadpricer.cpp; sourceTree = SOURCE_ROOT; };
		D8696C7972C74D85B799E540 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcouponpricer.hpp; path = ql/cashflows/inflationcouponpricer.hpp; sourceTree = SOURCE_ROOT; };
		D86FE1CE5975487585FB7798 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sviinterpolation.hpp; path = ql/experimental/volatility/sviinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		D8754615BDE54FF481184F19 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/drifttermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = drifttermstructure.hpp; path = ql/termstructures/yield/drifttermstructure.hpp; sourceTree = SOURCE_ROOT; };
		D87B20EB0AB8493C9AC55C58 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonslvprocess.cpp; path = ql/experimental/processes/hestonslvprocess.cpp; sourceTree = SOURCE_ROOT; };
		D87B36086B8A471A8538338F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticeuropeanmargrabeengine.hpp; path = ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp; sourceTree = SOURCE_ROOT; };
		D891921273F044059529D75C /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bondfunctions.cpp; path = ql/pricingengines/bond/bondfunctions.cpp; sourceTree = SOURCE_ROOT; };
		D8A5E1A9B33149A08350AFDE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cmsmarketcalibration.cpp; path = ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp; sourceTree = SOURCE_ROOT; };
		D8A60C65E6C54331A8450AEB /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = poland.hpp; path = ql/time/calendars/poland.hpp; sourceTree = SOURCE_ROOT; };
		D8B6143BC89C4C3D82777E90 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmvppstepconditionfactory.cpp; path = ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp; sourceTree = SOURCE_ROOT; };
		D8C8517E94B84EE89D11678F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepcoterminalswaps.cpp; path = ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp; sourceTree = SOURCE_ROOT; };
		D8CA54AE1BFF47769CC67834 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/stepconditions/all.hpp; sourceTree = SOURCE_ROOT; };
		D8CA7B6B7698407CACA9C704 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm3dimsolver.cpp; path = ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp; sourceTree = SOURCE_ROOT; };
		D8D2616ED26E4A989EF4B68D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = paymentterm.cpp; path = ql/experimental/commodities/paymentterm.cpp; sourceTree = SOURCE_ROOT; };
		D8D73301E8F6476E8BC1D3C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmmdriftcalculator.cpp; path = ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp; sourceTree = SOURCE_ROOT; };
		D8FEA9CEB7E34857B261F359 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = simplecashflow.cpp; path = ql/cashflows/simplecashflow.cpp; sourceTree = SOURCE_ROOT; };
		D90E8A66EE2149EB8F4A296E /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ukraine.hpp; path = ql/time/calendars/ukraine.hpp; sourceTree = SOURCE_ROOT; };
		D91AF6371FCB486A907FD7C3 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = averagebmacoupon.cpp; path = ql/cashflows/averagebmacoupon.cpp; sourceTree = SOURCE_ROOT; };
		D92F27C29D06469987CFB2CE /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/amortizingbonds/all.hpp; sourceTree = SOURCE_ROOT; };
		D947BCA7DFC84F138AF1BDB2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = parametricexerciseadapter.hpp; path = ql/models/marketmodels/callability/parametricexerciseadapter.hpp; sourceTree = SOURCE_ROOT; };
		D9682067AF634F1FBE22A8CB /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makeswaption.hpp; path = ql/instruments/makeswaption.hpp; sourceTree = SOURCE_ROOT; };
		D96928523E134F7D854C5EA9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = secondderivativeop.cpp; path = ql/methods/finitedifferences/operators/secondderivativeop.cpp; sourceTree = SOURCE_ROOT; };
		D96C2A0BD99E45D39227DE9B /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = businessdayconvention.cpp; path = ql/time/businessdayconvention.cpp; sourceTree = SOURCE_ROOT; };
		D96FB027AC224043B2A75DF3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultevent.hpp; path = ql/experimental/credit/defaultevent.hpp; sourceTree = SOURCE_ROOT; };
		D9778A0D95814E9A8685EF7F /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = riskyassetswap.hpp; path = ql/experimental/credit/riskyassetswap.hpp; sourceTree = SOURCE_ROOT; };
		D979EF3114B44EF19CE6FE42 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatorfactory.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = operatorfactory.hpp; path = ql/methods/finitedifferences/operatorfactory.hpp; sourceTree = SOURCE_ROOT; };
		D97AF2EB9A8B45AD8A9C6163 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = montecarlocatbondengine.hpp; path = ql/experimental/catbonds/montecarlocatbondengine.hpp; sourceTree = SOURCE_ROOT; };
		D983BC410DC84892AD9820C1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/factorspreadedhazardratecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = factorspreadedhazardratecurve.hpp; path = ql/experimental/credit/factorspreadedhazardratecurve.hpp; sourceTree = SOURCE_ROOT; };
		D98A6F2B9DF84350A704F909 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/credit/all.hpp; sourceTree = SOURCE_ROOT; };
		D99A696F867D43A9A2C38B24 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/earlyexercisepathpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = earlyexercisepathpricer.hpp; path = ql/methods/montecarlo/earlyexercisepathpricer.hpp; sourceTree = SOURCE_ROOT; };
		D9A0F8FEF32F473FB36D4E8F /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmvolmodel.cpp; path = ql/legacy/libormarketmodels/lmvolmodel.cpp; sourceTree = SOURCE_ROOT; };
		D9A35A9C586F44839A51DF3D /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = taiwan.hpp; path = ql/time/calendars/taiwan.hpp; sourceTree = SOURCE_ROOT; };
		D9AEF1BA52764E079EE43EAB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = callspecifiedmultiproduct.cpp; path = ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp; sourceTree = SOURCE_ROOT; };
		D9B1DD1143AB4D4493834841 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedswaption.hpp; path = ql/pricingengines/swaption/discretizedswaption.hpp; sourceTree = SOURCE_ROOT; };
		D9B7FCEF70F14971982EAD3C /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = chisquaredistribution.cpp; path = ql/math/distributions/chisquaredistribution.cpp; sourceTree = SOURCE_ROOT; };
		D9C28A6DBD9348EC997A1D5A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = himalayaoption.cpp; path = ql/experimental/exoticoptions/himalayaoption.cpp; sourceTree = SOURCE_ROOT; };
		D9E102131605421582AD33E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantoptionletvol.hpp; path = ql/termstructures/volatility/optionlet/constantoptionletvol.hpp; sourceTree = SOURCE_ROOT; };
		D9E63CA20B9543F1B1A5B10C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmmesherintegral.cpp; path = ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp; sourceTree = SOURCE_ROOT; };
		D9E981E9738E4A3C9ED8928E /* /Users/heiner/git/QuantLib/ql/time/daycounter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = daycounter.hpp; path = ql/time/daycounter.hpp; sourceTree = SOURCE_ROOT; };
		DA0BD58CAFEA47CE9D24E73C /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantooption.cpp; path = "test-suite/quantooption.cpp"; sourceTree = SOURCE_ROOT; };
		DA1DBC66D4C14EB792918C12 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = discretizedswaption.cpp; path = ql/pricingengines/swaption/discretizedswaption.cpp; sourceTree = SOURCE_ROOT; };
		DA1E4B2D41D849AC82B671D2 /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cliquetoption.hpp; path = ql/instruments/cliquetoption.hpp; sourceTree = SOURCE_ROOT; };
		DA212D12CC75489F8BA6145A /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bivariatestudenttdistribution.cpp; path = ql/math/distributions/bivariatestudenttdistribution.cpp; sourceTree = SOURCE_ROOT; };
		DA332EF10F6C4E9286EA05D3 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = indexedcashflow.cpp; path = ql/cashflows/indexedcashflow.cpp; sourceTree = SOURCE_ROOT; };
		DA45287B420E49AD8A29EB8B /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraperror.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bootstraperror.hpp; path = ql/termstructures/bootstraperror.hpp; sourceTree = SOURCE_ROOT; };
		DA4AFC90D7674A7F992C0407 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = business252.cpp; path = ql/time/daycounters/business252.cpp; sourceTree = SOURCE_ROOT; };
		DA4B5010EEDD48AC9DE145CC /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/sample.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sample.hpp; path = ql/methods/montecarlo/sample.hpp; sourceTree = SOURCE_ROOT; };
		DA5D8D668E0244E890B6A179 /* /Users/heiner/git/QuantLib/ql/cashflows/replication.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = replication.hpp; path = ql/cashflows/replication.hpp; sourceTree = SOURCE_ROOT; };
		DA6C2A3B3F9A49DC830CDCFF /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = midpointcdsengine.hpp; path = ql/pricingengines/credit/midpointcdsengine.hpp; sourceTree = SOURCE_ROOT; };
		DA74C5F5D4A645258CF598E3 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = kirkspreadoptionengine.cpp; path = ql/experimental/exoticoptions/kirkspreadoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		DA7C3CDE166D4EA2A860E8BE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = continuousarithmeticasianlevyengine.cpp; path = ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp; sourceTree = SOURCE_ROOT; };
		DA8FF97316694F348E8DC50B /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = forwardvaluequote.cpp; path = ql/quotes/forwardvaluequote.cpp; sourceTree = SOURCE_ROOT; };
		DAA5330878B94246B43B4519 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/termstructures/yield/all.hpp; sourceTree = SOURCE_ROOT; };
		DAA65F9F09A94F5E9BA81090 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdg2swaptionengine.cpp; path = ql/pricingengines/swaption/fdg2swaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		DAAE9AA77C734CCA9E75C9F6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callspecifiedmultiproduct.hpp; path = ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp; sourceTree = SOURCE_ROOT; };
		DAE0230ED71E43368F70E398 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fftvariancegammaengine.hpp; path = ql/experimental/variancegamma/fftvariancegammaengine.hpp; sourceTree = SOURCE_ROOT; };
		DAE65BFA239344AEA3D177C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sabrsmilesection.cpp; path = ql/termstructures/volatility/sabrsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		DB12BABCD84842619753BD75 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = liborforwardmodel.cpp; path = ql/legacy/libormarketmodels/liborforwardmodel.cpp; sourceTree = SOURCE_ROOT; };
		DB2C904AB843420A92427478 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomizedlds.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomizedlds.hpp; path = ql/math/randomnumbers/randomizedlds.hpp; sourceTree = SOURCE_ROOT; };
		DB33C9F418A0473283A1B1BC /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/bond/all.hpp; sourceTree = SOURCE_ROOT; };
		DB4748D9352F498EB8B39C86 /* /Users/heiner/git/QuantLib/ql/time/date.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = date.cpp; path = ql/time/date.cpp; sourceTree = SOURCE_ROOT; };
		DB5381FB1FFD4309BE15072B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdvanillaengine.hpp; path = ql/pricingengines/vanilla/fdvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		DB6278DC42684F5CBDBC5975 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dzero.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dzero.hpp; path = ql/methods/finitedifferences/dzero.hpp; sourceTree = SOURCE_ROOT; };
		DB6B6EA812864F68AFB7DEB2 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = indexmanager.hpp; path = ql/indexes/indexmanager.hpp; sourceTree = SOURCE_ROOT; };
		DB70C5DC74974B929DB585B4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = impliciteulerscheme.hpp; path = ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp; sourceTree = SOURCE_ROOT; };
		DBA37B2A815A441DB4F8C755 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = getcovariance.hpp; path = ql/math/matrixutilities/getcovariance.hpp; sourceTree = SOURCE_ROOT; };
		DBB7028F940B4D368A45B0B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardengine.hpp; path = ql/pricingengines/forward/forwardengine.hpp; sourceTree = SOURCE_ROOT; };
		DBC49BED7438495E9393C58D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zeroyieldstructure.hpp; path = ql/termstructures/yield/zeroyieldstructure.hpp; sourceTree = SOURCE_ROOT; };
		DBCC48078638440BBE4CE73D /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = futuresconvadjustmentquote.hpp; path = ql/quotes/futuresconvadjustmentquote.hpp; sourceTree = SOURCE_ROOT; };
		DBCDAFE75F2F4393A855A87D /* /Users/heiner/git/QuantLib/ql/math/copulas/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/copulas/all.hpp; sourceTree = SOURCE_ROOT; };
		DBD8B1060C0F49B7BE901F83 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/piecewisedefaultcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisedefaultcurve.hpp; path = ql/termstructures/credit/piecewisedefaultcurve.hpp; sourceTree = SOURCE_ROOT; };
		DBE63BD4607243FAACC45A1D /* /Users/heiner/git/QuantLib/ql/index.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = index.cpp; path = ql/index.cpp; sourceTree = SOURCE_ROOT; };
		DBEC4D85F81342E8B450D9D4 /* /Users/heiner/git/QuantLib/ql/settings.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = settings.hpp; path = ql/settings.hpp; sourceTree = SOURCE_ROOT; };
		DC0BEDD53D3F42AE804B5ABE /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capflooredcoupon.hpp; path = ql/cashflows/capflooredcoupon.hpp; sourceTree = SOURCE_ROOT; };
		DC0EB1774E24470D9EDB8F9C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmarithmeticaveragecondition.hpp; path = ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp; sourceTree = SOURCE_ROOT; };
		DC11E6D8F86845CBA34ECFC9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/models/all.hpp; sourceTree = SOURCE_ROOT; };
		DC271D524B664F07B09B56A8 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/mcvarianceswapengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcvarianceswapengine.hpp; path = ql/pricingengines/forward/mcvarianceswapengine.hpp; sourceTree = SOURCE_ROOT; };
		DC335895F88F4BE9AB4EFA0A /* /Users/heiner/git/QuantLib/test-suite/margrabeoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = margrabeoption.cpp; path = "test-suite/margrabeoption.cpp"; sourceTree = SOURCE_ROOT; };
		DC3F9AF3BAAE48B6B438BC1A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = triggeredswapexercise.cpp; path = ql/models/marketmodels/callability/triggeredswapexercise.cpp; sourceTree = SOURCE_ROOT; };
		DC40619392534AE782083FD9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = glued1dmesher.hpp; path = ql/experimental/finitedifferences/glued1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		DC4B3936C0434087A2F43764 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = interestratevolsurface.cpp; path = ql/experimental/volatility/interestratevolsurface.cpp; sourceTree = SOURCE_ROOT; };
		DC58BF8184B3402C98F77459 /* quantlib-benchmark */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "quantlib-benchmark"; sourceTree = BUILT_PRODUCTS_DIR; };
		DC6E0CD1002346F7BB819B87 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimple2dextousolver.hpp; path = ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp; sourceTree = SOURCE_ROOT; };
		DC86CFD3C1784454A7516515 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoyinflationoptionletvolatilitystructure2.hpp; path = ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp; sourceTree = SOURCE_ROOT; };
		DC8E690C8A0146588924B5F8 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fftvariancegammaengine.cpp; path = ql/experimental/variancegamma/fftvariancegammaengine.cpp; sourceTree = SOURCE_ROOT; };
		DC963F7F12DA4185A6172610 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimple3dextoujumpsolver.hpp; path = ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp; sourceTree = SOURCE_ROOT; };
		DCAA6E8C800F47F4958FC7FF /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makecapfloor.cpp; path = ql/instruments/makecapfloor.cpp; sourceTree = SOURCE_ROOT; };
		DCAECD7850184F4180796704 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/americancondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = americancondition.hpp; path = ql/methods/finitedifferences/americancondition.hpp; sourceTree = SOURCE_ROOT; };
		DCC0B71814F04550A05AA609 /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = endcriteria.hpp; path = ql/math/optimization/endcriteria.hpp; sourceTree = SOURCE_ROOT; };
		DCC37ED588B74243B928B0F6 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = convertiblebond.hpp; path = ql/experimental/convertiblebonds/convertiblebond.hpp; sourceTree = SOURCE_ROOT; };
		DCCAF8C554244D2FB9F68DDB /* /Users/heiner/git/QuantLib/ql/timegrid.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timegrid.hpp; path = ql/timegrid.hpp; sourceTree = SOURCE_ROOT; };
		DCCC9F6214174C5A90BBFEB1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmlinexpvolmodel.hpp; path = ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp; sourceTree = SOURCE_ROOT; };
		DCCD1DBBB5F3487C95DE8911 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stock.cpp; path = ql/instruments/stock.cpp; sourceTree = SOURCE_ROOT; };
		DCDBDB4FE08C42A7B34FEC74 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmextendedornsteinuhlenbeckop.cpp; path = ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp; sourceTree = SOURCE_ROOT; };
		DCE1DBD55B4543C0B36895F3 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jointstochasticprocess.hpp; path = ql/processes/jointstochasticprocess.hpp; sourceTree = SOURCE_ROOT; };
		DCEDFEBE20FF409DB7BA23B8 /* /Users/heiner/git/QuantLib/test-suite/partialtimebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = partialtimebarrieroption.hpp; path = "test-suite/partialtimebarrieroption.hpp"; sourceTree = SOURCE_ROOT; };
		DCFB35CFE17B4C4FB7FA7048 /* /Users/heiner/git/QuantLib/test-suite/lazyobject.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lazyobject.cpp; path = "test-suite/lazyobject.cpp"; sourceTree = SOURCE_ROOT; };
		DD0B4C1A81914A948C0EE4EC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = atmsmilesection.cpp; path = ql/termstructures/volatility/atmsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		DD21D378B9E545E9B1651A6F /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/inflation/all.hpp; sourceTree = SOURCE_ROOT; };
		DD23F3500FD6451099C6C21D /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = normaldistribution.hpp; path = ql/math/distributions/normaldistribution.hpp; sourceTree = SOURCE_ROOT; };
		DD2DD2BFCA5F4B22A3233806 /* /Users/heiner/git/QuantLib/ql/currencies/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/currencies/all.hpp; sourceTree = SOURCE_ROOT; };
		DD370370E58A42D9BDF305F1 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = variancegammamodel.hpp; path = ql/experimental/variancegamma/variancegammamodel.hpp; sourceTree = SOURCE_ROOT; };
		DD3E4F8CE70642DD88E980B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mceuropeanbasketengine.cpp; path = ql/pricingengines/basket/mceuropeanbasketengine.cpp; sourceTree = SOURCE_ROOT; };
		DD3ECEF5E3674807A5223FC4 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcontinuousfloatinglookback.hpp; path = ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp; sourceTree = SOURCE_ROOT; };
		DD42447AB13542C7B26D9050 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = continuousarithmeticasianvecerengine.cpp; path = ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp; sourceTree = SOURCE_ROOT; };
		DD451C01F4CB4E7EA09302EE /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = thirty360.cpp; path = ql/time/daycounters/thirty360.cpp; sourceTree = SOURCE_ROOT; };
		DD49A86FA5D14A848809B130 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionvolmatrix.cpp; path = ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp; sourceTree = SOURCE_ROOT; };
		DD523F0D69F9417D9986B916 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackcdsoptionengine.hpp; path = ql/experimental/credit/blackcdsoptionengine.hpp; sourceTree = SOURCE_ROOT; };
		DD5C571DB1D1423B9A769154 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zabrinterpolation.hpp; path = ql/experimental/volatility/zabrinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		DD6C4B83C23B457D965AE63C /* /Users/heiner/git/QuantLib/test-suite/creditdefaultswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = creditdefaultswap.cpp; path = "test-suite/creditdefaultswap.cpp"; sourceTree = SOURCE_ROOT; };
		DD7D2AE9AD1F4576B784E9C1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmextoujumpop.hpp; path = ql/experimental/finitedifferences/fdmextoujumpop.hpp; sourceTree = SOURCE_ROOT; };
		DD96D845AF6E4A07A31DA1EE /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = interestrateindex.cpp; path = ql/indexes/interestrateindex.cpp; sourceTree = SOURCE_ROOT; };
		DD9A7E3DA36340DFB9BE444B /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackformula.hpp; path = ql/pricingengines/blackformula.hpp; sourceTree = SOURCE_ROOT; };
		DDA7BAD99FD44A6DAECDD5F3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = correlationstructure.hpp; path = ql/experimental/credit/correlationstructure.hpp; sourceTree = SOURCE_ROOT; };
		DE068E04466E494BA8A612D8 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = interestrateindex.cpp; path = ql/indexes/interestrateindex.cpp; sourceTree = SOURCE_ROOT; };
		DE1F4C76BC4E49FDB4F74276 /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonprocess.cpp; path = ql/processes/hestonprocess.cpp; sourceTree = SOURCE_ROOT; };
		DE48C6135C6E4CD99B6F2446 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = singleproductcomposite.cpp; path = ql/models/marketmodels/products/singleproductcomposite.cpp; sourceTree = SOURCE_ROOT; };
		DE564380F75B4C3FB1E03FED /* /Users/heiner/git/QuantLib/Examples/CallableBonds/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/CallableBonds/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		DE606117DA7C4BE08B32A3CA /* /Users/heiner/git/QuantLib/test-suite/functions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = functions.hpp; path = "test-suite/functions.hpp"; sourceTree = SOURCE_ROOT; };
		DE75DBB778DF422D93CD7587 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multisteptarn.hpp; path = ql/models/marketmodels/products/multistep/multisteptarn.hpp; sourceTree = SOURCE_ROOT; };
		DE8BAB7C832A4CF994D16C65 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepoptionlets.cpp; path = ql/models/marketmodels/products/multistep/multistepoptionlets.cpp; sourceTree = SOURCE_ROOT; };
		DE98755773D940C891E1425C /* /Users/heiner/git/QuantLib/ql/timegrid.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timegrid.hpp; path = ql/timegrid.hpp; sourceTree = SOURCE_ROOT; };
		DE9F4F448CAC48929A40921A /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = irregularswap.hpp; path = ql/experimental/swaptions/irregularswap.hpp; sourceTree = SOURCE_ROOT; };
		DEB147DB617048B6B5ADDBCB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tqreigendecomposition.cpp; path = ql/math/matrixutilities/tqreigendecomposition.cpp; sourceTree = SOURCE_ROOT; };
		DEC801AE5DFA473A8A9C9081 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = montecarlocatbondengine.hpp; path = ql/experimental/catbonds/montecarlocatbondengine.hpp; sourceTree = SOURCE_ROOT; };
		DED01AA6EE1A4568B73DE485 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = correlationstructure.cpp; path = ql/experimental/credit/correlationstructure.cpp; sourceTree = SOURCE_ROOT; };
		DED832A73A974D229E924982 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/convertiblebonds/all.hpp; sourceTree = SOURCE_ROOT; };
		DEFBDA44A4384D89839A5FDF /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = goldstein.cpp; path = ql/math/optimization/goldstein.cpp; sourceTree = SOURCE_ROOT; };
		DF0590D31B6A4F54A1D23BD4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = jamshidianswaptionengine.hpp; path = ql/pricingengines/swaption/jamshidianswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		DF35DCBD7496457280F56411 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcontinuousfloatinglookback.cpp; path = ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp; sourceTree = SOURCE_ROOT; };
		DF64ECA5380F4F62B4BF026B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdsimpleextoustorageengine.cpp; path = ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp; sourceTree = SOURCE_ROOT; };
		DFB1CC809D594217B89D8968 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepswap.cpp; path = ql/models/marketmodels/products/multistep/multistepswap.cpp; sourceTree = SOURCE_ROOT; };
		DFF5D8BA0D4B4EF0A8D5D77D /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedcoxingersollross.hpp; path = ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp; sourceTree = SOURCE_ROOT; };
		DFF80E4284174143A2FCCF11 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/coupons/all.hpp; sourceTree = SOURCE_ROOT; };
		E01D76F0C9214006B38FB79A /* /Users/heiner/git/QuantLib/Examples/CallableBonds/CallableBonds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = CallableBonds.cpp; path = Examples/CallableBonds/CallableBonds.cpp; sourceTree = SOURCE_ROOT; };
		E021CFFC8DC54719BB43B3EB /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fixedratebond.hpp; path = ql/instruments/bonds/fixedratebond.hpp; sourceTree = SOURCE_ROOT; };
		E0287AE132DC4821B93D3101 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvoldiscrete.hpp; path = ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp; sourceTree = SOURCE_ROOT; };
		E03169157B38462D966A9860 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmarithmeticaveragecondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp; sourceTree = SOURCE_ROOT; };
		E037431804DE4DE0A7EE5464 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dividendbarrieroption.cpp; path = ql/instruments/dividendbarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		E0588BEDDF4546719F6B6335 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm2dimsolver.hpp; path = ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp; sourceTree = SOURCE_ROOT; };
		E06A3ADA50B546C7B32B387D /* Replication */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Replication; sourceTree = BUILT_PRODUCTS_DIR; };
		E085CB478CDA42DEB262EE6A /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedbinomialtree.hpp; path = ql/experimental/lattices/extendedbinomialtree.hpp; sourceTree = SOURCE_ROOT; };
		E098DF0433044C8CBCF77CE8 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicapfloorengines.hpp; path = ql/experimental/inflation/cpicapfloorengines.hpp; sourceTree = SOURCE_ROOT; };
		E09A39AA423E450E9C0D1705 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pascaltriangle.hpp; path = ql/math/pascaltriangle.hpp; sourceTree = SOURCE_ROOT; };
		E0A880CBAE9E4760BE186ADF /* /Users/heiner/git/QuantLib/test-suite/varianceswaps.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = varianceswaps.hpp; path = "test-suite/varianceswaps.hpp"; sourceTree = SOURCE_ROOT; };
		E0A93936B4EA4704AE8ED718 /* /Users/heiner/git/QuantLib/ql/math/interpolations/forwardflatinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardflatinterpolation.hpp; path = ql/math/interpolations/forwardflatinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		E0C8C68A64AF4099B2258DAC /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = asia.cpp; path = ql/currencies/asia.cpp; sourceTree = SOURCE_ROOT; };
		E0CF809E111E42479ED6CBC3 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussiancopulapolicy.hpp; path = ql/experimental/math/gaussiancopulapolicy.hpp; sourceTree = SOURCE_ROOT; };
		E0E5635A6E7D49C6A3E5EC62 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdklugeextouspreadengine.cpp; path = ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp; sourceTree = SOURCE_ROOT; };
		E0FBD99787CA47D9AD0C9CBB /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integral.hpp; path = ql/math/integrals/integral.hpp; sourceTree = SOURCE_ROOT; };
		E116586844C74D12994F8C1A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/binomialdoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = binomialdoublebarrierengine.hpp; path = ql/experimental/barrieroption/binomialdoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		E13165BE777B4F898272CAA8 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = payoffs.cpp; path = ql/instruments/payoffs.cpp; sourceTree = SOURCE_ROOT; };
		E134DAF1B3474CC5BDBCC43C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantity.hpp; path = ql/experimental/commodities/quantity.hpp; sourceTree = SOURCE_ROOT; };
		E139CFB04DEF4E09B749532B /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tapcorrelations.cpp; path = ql/math/matrixutilities/tapcorrelations.cpp; sourceTree = SOURCE_ROOT; };
		E142A8A7D1CF4BCD83336A33 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolcube2.hpp; path = ql/termstructures/volatility/swaption/swaptionvolcube2.hpp; sourceTree = SOURCE_ROOT; };
		E145D61DBD4E440AB0F98C37 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dswaptionvolatility.cpp; path = ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp; sourceTree = SOURCE_ROOT; };
		E153A18889C343D99725FA5A /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dategenerationrule.cpp; path = ql/time/dategenerationrule.cpp; sourceTree = SOURCE_ROOT; };
		E15FC3278B854B2B801AC682 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = constantoptionletvol.cpp; path = ql/termstructures/volatility/optionlet/constantoptionletvol.cpp; sourceTree = SOURCE_ROOT; };
		E169E53EE83B418FAB4D65EE /* /Users/heiner/git/QuantLib/test-suite/rangeaccrual.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = rangeaccrual.cpp; path = "test-suite/rangeaccrual.cpp"; sourceTree = SOURCE_ROOT; };
		E16A2477F38347ABA500E3D5 /* /Users/heiner/git/QuantLib/test-suite/doublebinaryoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = doublebinaryoption.cpp; path = "test-suite/doublebinaryoption.cpp"; sourceTree = SOURCE_ROOT; };
		E17A1ADB508846B49C4D3AFB /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/randomnumbers/all.hpp; sourceTree = SOURCE_ROOT; };
		E17DC22669D94A1F9B7E3CE6 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedblackscholesprocess.hpp; path = ql/experimental/processes/extendedblackscholesprocess.hpp; sourceTree = SOURCE_ROOT; };
		E18369325B304C5AA120E584 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = choleskydecomposition.cpp; path = ql/math/matrixutilities/choleskydecomposition.cpp; sourceTree = SOURCE_ROOT; };
		E1A6EBF1B6B04C8184129907 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepswaption.cpp; path = ql/models/marketmodels/products/multistep/multistepswaption.cpp; sourceTree = SOURCE_ROOT; };
		E1AB727DC5DD458F9DA602D9 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = irregularswaption.cpp; path = ql/experimental/swaptions/irregularswaption.cpp; sourceTree = SOURCE_ROOT; };
		E1AF042C79AF466E84ECE0AB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdcalibration.hpp; path = ql/termstructures/volatility/abcdcalibration.hpp; sourceTree = SOURCE_ROOT; };
		E1C197A64DFC4D9684B3762E /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcontinuouspartialfloatinglookback.hpp; path = ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp; sourceTree = SOURCE_ROOT; };
		E1CE1724D7E54A94B089D6A9 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lecuyeruniformrng.cpp; path = ql/math/randomnumbers/lecuyeruniformrng.cpp; sourceTree = SOURCE_ROOT; };
		E1E707C5E74D47A9A7BFF9B6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = smmdriftcalculator.cpp; path = ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp; sourceTree = SOURCE_ROOT; };
		E1EC998672FE47BCACDAB154 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralcdsengine.cpp; path = ql/pricingengines/credit/integralcdsengine.cpp; sourceTree = SOURCE_ROOT; };
		E1F92A6AB7284B498C4379E7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepcoterminalswaptions.cpp; path = ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp; sourceTree = SOURCE_ROOT; };
		E2040684F77B492DAA7F7DA2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mcdiscreteasianengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcdiscreteasianengine.hpp; path = ql/pricingengines/asian/mcdiscreteasianengine.hpp; sourceTree = SOURCE_ROOT; };
		E20FAE785B2B47D892810370 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = geometricbrownianprocess.hpp; path = ql/processes/geometricbrownianprocess.hpp; sourceTree = SOURCE_ROOT; };
		E20FFB0ABA8A4265A4F1DD61 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/products/pathwise/all.hpp; sourceTree = SOURCE_ROOT; };
		E2185C48DFEC49189634A5D9 /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = utilities.cpp; path = "test-suite/utilities.cpp"; sourceTree = SOURCE_ROOT; };
		E220226BB4E1457DB0AF4F4B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flatvol.cpp; path = ql/models/marketmodels/models/flatvol.cpp; sourceTree = SOURCE_ROOT; };
		E230681BC2E843D8997DAA71 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = amortizingcmsratebond.hpp; path = ql/experimental/amortizingbonds/amortizingcmsratebond.hpp; sourceTree = SOURCE_ROOT; };
		E23D913B257B4E29956DCD97 /* /Users/heiner/git/QuantLib/test-suite/capfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capfloor.hpp; path = "test-suite/capfloor.hpp"; sourceTree = SOURCE_ROOT; };
		E249943D39D24C21956DFD9C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmfixedvolmodel.cpp; path = ql/legacy/libormarketmodels/lmfixedvolmodel.cpp; sourceTree = SOURCE_ROOT; };
		E250638626E64E63B6BA3935 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmlocalvolfwdop.cpp; path = ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp; sourceTree = SOURCE_ROOT; };
		E25A45CA3EEF48BA90B3B492 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timehomogeneousforwardcorrelation.hpp; path = ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp; sourceTree = SOURCE_ROOT; };
		E265CE40B2DE4D9DB240C7B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/zerocondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zerocondition.hpp; path = ql/methods/finitedifferences/zerocondition.hpp; sourceTree = SOURCE_ROOT; };
		E270E7F962ED4830A8D4E3C2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ninepointlinearop.hpp; path = ql/methods/finitedifferences/operators/ninepointlinearop.hpp; sourceTree = SOURCE_ROOT; };
		E278707C1FE94AE3B8BAA273 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = choleskydecomposition.hpp; path = ql/math/matrixutilities/choleskydecomposition.hpp; sourceTree = SOURCE_ROOT; };
		E28DDDC98BC84CF58CBA3048 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzocr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nzocr.hpp; path = ql/indexes/ibor/nzocr.hpp; sourceTree = SOURCE_ROOT; };
		E2966E03EA904BC9A96484FF /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = noarbsabrabsprobs.cpp; path = ql/experimental/volatility/noarbsabrabsprobs.cpp; sourceTree = SOURCE_ROOT; };
		E29C6027AE71430D9AFFED69 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gumbelcopula.cpp; path = ql/math/copulas/gumbelcopula.cpp; sourceTree = SOURCE_ROOT; };
		E2A46116D2F442469D12BAD1 /* /Users/heiner/git/QuantLib/ql/math/integrals/simpsonintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simpsonintegral.hpp; path = ql/math/integrals/simpsonintegral.hpp; sourceTree = SOURCE_ROOT; };
		E2ACAC07B2644FAE94CC07F0 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/barrier/all.hpp; sourceTree = SOURCE_ROOT; };
		E2B0D2191E864DBA8A79CC6F /* /Users/heiner/git/QuantLib/test-suite/himalayaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = himalayaoption.cpp; path = "test-suite/himalayaoption.cpp"; sourceTree = SOURCE_ROOT; };
		E2BB2A89F14B45748065C774 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendamericanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fddividendamericanengine.hpp; path = ql/pricingengines/vanilla/fddividendamericanengine.hpp; sourceTree = SOURCE_ROOT; };
		E2C5AD4AC82C47C79DE46471 /* /Users/heiner/git/QuantLib/ql/math/interpolations/xabrinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = xabrinterpolation.hpp; path = ql/math/interpolations/xabrinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		E2C5F2B061CF4A7E8263610B /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mc_discr_geom_av_price.cpp; path = ql/pricingengines/asian/mc_discr_geom_av_price.cpp; sourceTree = SOURCE_ROOT; };
		E2C7D4444DB14BC087D60F12 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = onestepoptionlets.hpp; path = ql/models/marketmodels/products/onestep/onestepoptionlets.hpp; sourceTree = SOURCE_ROOT; };
		E2D00CDB292A4DB6936E5784 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bivariatenormaldistribution.cpp; path = ql/math/distributions/bivariatenormaldistribution.cpp; sourceTree = SOURCE_ROOT; };
		E2D7BC0DCE7243D689A5AB25 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = noarbsabr.cpp; path = ql/experimental/volatility/noarbsabr.cpp; sourceTree = SOURCE_ROOT; };
		E2ECA52069914938B58AEEE3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = doublebarriertype.cpp; path = ql/experimental/barrieroption/doublebarriertype.cpp; sourceTree = SOURCE_ROOT; };
		E2F8CBE72FBE436683A35463 /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonprocess.hpp; path = ql/processes/hestonprocess.hpp; sourceTree = SOURCE_ROOT; };
		E31BF51D3E8C49C88653A6E7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdminnervaluecalculator.cpp; path = ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp; sourceTree = SOURCE_ROOT; };
		E31D8B6E52F048A387819FAE /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mc_discr_arith_av_price.cpp; path = ql/pricingengines/asian/mc_discr_arith_av_price.cpp; sourceTree = SOURCE_ROOT; };
		E347569198F54A9E8A3CAD94 /* /Users/heiner/git/QuantLib/test-suite/extensibleoptions.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extensibleoptions.hpp; path = "test-suite/extensibleoptions.hpp"; sourceTree = SOURCE_ROOT; };
		E35F82CB868145A296C15F32 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussianlhplossmodel.hpp; path = ql/experimental/credit/gaussianlhplossmodel.hpp; sourceTree = SOURCE_ROOT; };
		E368865D428B482A9A471936 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepswaption.hpp; path = ql/models/marketmodels/products/multistep/multistepswaption.hpp; sourceTree = SOURCE_ROOT; };
		E38DDE91A20A46FD9396AE34 /* /Users/heiner/git/QuantLib/test-suite/tracing.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tracing.hpp; path = "test-suite/tracing.hpp"; sourceTree = SOURCE_ROOT; };
		E3B2BF1867A94DFCA16B72F6 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bernsteinpolynomial.cpp; path = ql/math/bernsteinpolynomial.cpp; sourceTree = SOURCE_ROOT; };
		E3BD5FFB87A342A5B5BDD543 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/seklibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = seklibor.hpp; path = ql/indexes/ibor/seklibor.hpp; sourceTree = SOURCE_ROOT; };
		E3D17A97AFC64A6F9ECCE544 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = squarerootprocess.hpp; path = ql/processes/squarerootprocess.hpp; sourceTree = SOURCE_ROOT; };
		E3D23A9983444EECA86256B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdm1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm1dmesher.hpp; path = ql/methods/finitedifferences/meshers/fdm1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		E3D70E07B5734024B5129E9F /* /Users/heiner/git/QuantLib/ql/indexes/ibor/aonia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = aonia.hpp; path = ql/indexes/ibor/aonia.hpp; sourceTree = SOURCE_ROOT; };
		E3E56377F4F14344950DD04B /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = averagetype.hpp; path = ql/instruments/averagetype.hpp; sourceTree = SOURCE_ROOT; };
		E3EBC928E9B4467699AE4214 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sparseilupreconditioner.hpp; path = ql/math/matrixutilities/sparseilupreconditioner.hpp; sourceTree = SOURCE_ROOT; };
		E3FD0A7F2BA046EFB0438034 /* /Users/heiner/git/QuantLib/test-suite/solvers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = solvers.hpp; path = "test-suite/solvers.hpp"; sourceTree = SOURCE_ROOT; };
		E4170E4EAECA4D64A953C56A /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multidimquadrature.hpp; path = ql/experimental/math/multidimquadrature.hpp; sourceTree = SOURCE_ROOT; };
		E419F983F59348BEB5AAC075 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vasicek.cpp; path = ql/models/shortrate/onefactormodels/vasicek.cpp; sourceTree = SOURCE_ROOT; };
		E41EB056159E496DB9D4827B /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedbarrieroption.hpp; path = ql/pricingengines/barrier/discretizedbarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		E41F708C299A449E8BC4C52A /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedbinomialtree.hpp; path = ql/experimental/lattices/extendedbinomialtree.hpp; sourceTree = SOURCE_ROOT; };
		E4228FE1168148B98923E2B7 /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussiancopula.hpp; path = ql/math/copulas/gaussiancopula.hpp; sourceTree = SOURCE_ROOT; };
		E42B5D4CA3D448109EC8EE1E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsimple2dbssolver.cpp; path = ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp; sourceTree = SOURCE_ROOT; };
		E4523F0899B449BDAC23270A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmdirichletboundary.cpp; path = ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp; sourceTree = SOURCE_ROOT; };
		E4591463297743B8AA38BFD8 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = holderextensibleoption.cpp; path = ql/experimental/exoticoptions/holderextensibleoption.cpp; sourceTree = SOURCE_ROOT; };
		E460B05EFE9B46BC8227AA9F /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/cliquet/all.hpp; sourceTree = SOURCE_ROOT; };
		E468733F1F48401AB28A3E96 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = modifiedcraigsneydscheme.hpp; path = ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp; sourceTree = SOURCE_ROOT; };
		E473C9A088484E028ED4DD1C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendshoutengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fddividendshoutengine.hpp; path = ql/pricingengines/vanilla/fddividendshoutengine.hpp; sourceTree = SOURCE_ROOT; };
		E47C8B229D85406C9D5B47D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalcotswapratepc.hpp; path = ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp; sourceTree = SOURCE_ROOT; };
		E484FBBDE50948B18080BE48 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = qrdecomposition.hpp; path = ql/math/matrixutilities/qrdecomposition.hpp; sourceTree = SOURCE_ROOT; };
		E4B96CE8CB3C4FA797ACF49D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepinversefloater.hpp; path = ql/models/marketmodels/products/multistep/multistepinversefloater.hpp; sourceTree = SOURCE_ROOT; };
		E4F264B723A54674A729B4B9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonrndcalculator.hpp; path = ql/experimental/finitedifferences/hestonrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		E4F9F52781F44785A3959F60 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholesmultistrikemesher.cpp; path = ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp; sourceTree = SOURCE_ROOT; };
		E51A1E04FC25433EA969CD3E /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lastfixingquote.hpp; path = ql/quotes/lastfixingquote.hpp; sourceTree = SOURCE_ROOT; };
		E51C4042C2914362AA0564A4 /* /Users/heiner/git/QuantLib/ql/errors.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = errors.cpp; path = ql/errors.cpp; sourceTree = SOURCE_ROOT; };
		E51CF59DFBEB4ABE983B4F66 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1djamshidianswaptionengine.hpp; path = ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		E5267F76D1894ED1B0D8004C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = baroneadesiwhaleyengine.hpp; path = ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp; sourceTree = SOURCE_ROOT; };
		E52D17423F244186B62A746B /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = randomdefaultmodel.cpp; path = ql/experimental/credit/randomdefaultmodel.cpp; sourceTree = SOURCE_ROOT; };
		E57741C875934FD6A55B2CC3 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmvolmodel.cpp; path = ql/legacy/libormarketmodels/lmvolmodel.cpp; sourceTree = SOURCE_ROOT; };
		E579AF70990647848B1A7C5D /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fixedratebond.cpp; path = ql/instruments/bonds/fixedratebond.cpp; sourceTree = SOURCE_ROOT; };
		E57C9371DEBC489B8CDB170F /* /Users/heiner/git/QuantLib/ql/experimental/credit/loss.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = loss.hpp; path = ql/experimental/credit/loss.hpp; sourceTree = SOURCE_ROOT; };
		E58861BDE79D44699C0DB610 /* /Users/heiner/git/QuantLib/ql/models/shortrate/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/shortrate/all.hpp; sourceTree = SOURCE_ROOT; };
		E58AF359CCF84C8F991C766F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonfwdop.hpp; path = ql/experimental/finitedifferences/fdmhestonfwdop.hpp; sourceTree = SOURCE_ROOT; };
		E5B0360DA5B347F498CE1D50 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onestepcoinitialswaps.cpp; path = ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp; sourceTree = SOURCE_ROOT; };
		E5B3A8F9FC3B408180D2C436 /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = slovakia.cpp; path = ql/time/calendars/slovakia.cpp; sourceTree = SOURCE_ROOT; };
		E5FBE8681F104DE8B1CC0319 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makecms.cpp; path = ql/instruments/makecms.cpp; sourceTree = SOURCE_ROOT; };
		E5FE7982931E4760A6C1790E /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exchangeratemanager.cpp; path = ql/currencies/exchangeratemanager.cpp; sourceTree = SOURCE_ROOT; };
		E647B74B54464C989B16D450 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsimple2dbssolver.cpp; path = ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp; sourceTree = SOURCE_ROOT; };
		E64E626EA40540E7B391B013 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepnothing.hpp; path = ql/models/marketmodels/products/multistep/multistepnothing.hpp; sourceTree = SOURCE_ROOT; };
		E6703FCE644B42538977DE30 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpibond.cpp; path = ql/instruments/bonds/cpibond.cpp; sourceTree = SOURCE_ROOT; };
		E69E4ADC2BBF4C72AA58016D /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationhelpers.hpp; path = ql/termstructures/inflation/inflationhelpers.hpp; sourceTree = SOURCE_ROOT; };
		E6A946D29B4D4D85A3C71F5E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zabrinterpolation.hpp; path = ql/experimental/volatility/zabrinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		E6CC0652D1A74FFFB1D51B7E /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardmeasureprocess.hpp; path = ql/processes/forwardmeasureprocess.hpp; sourceTree = SOURCE_ROOT; };
		E6EE2C877EEC44DF93148E31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mcamericanengine.cpp; path = ql/pricingengines/vanilla/mcamericanengine.cpp; sourceTree = SOURCE_ROOT; };
		E6EF9B0222A24D48A9B4A54F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commodity.cpp; path = ql/experimental/commodities/commodity.cpp; sourceTree = SOURCE_ROOT; };
		E6F08A40D1304395AFB069CC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = proxygreekengine.hpp; path = ql/models/marketmodels/proxygreekengine.hpp; sourceTree = SOURCE_ROOT; };
		E7118F7BBF0A4297BD7EB5A6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bermudanswaptionexercisevalue.cpp; path = ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp; sourceTree = SOURCE_ROOT; };
		E71501587608460AA3B5B1FA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmdividendhandler.hpp; path = ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp; sourceTree = SOURCE_ROOT; };
		E739D98C0DC24333AA7CAA9F /* /Users/heiner/git/QuantLib/ql/types.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = types.hpp; path = ql/types.hpp; sourceTree = SOURCE_ROOT; };
		E75FE7B431B841BC989AEF88 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdextoujumpvanillaengine.cpp; path = ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp; sourceTree = SOURCE_ROOT; };
		E76D81957C214476AC7333D9 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = romania.hpp; path = ql/time/calendars/romania.hpp; sourceTree = SOURCE_ROOT; };
		E77BF42C71AD41BFB1ACC845 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = secondordermixedderivativeop.cpp; path = ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp; sourceTree = SOURCE_ROOT; };
		E796EDD7CB3E4FA0B9BDC05B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/modtriplebandlinearop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = modtriplebandlinearop.hpp; path = ql/experimental/finitedifferences/modtriplebandlinearop.hpp; sourceTree = SOURCE_ROOT; };
		E797130A3B674AC6A67EE812 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = continuousarithmeticasianvecerengine.hpp; path = ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp; sourceTree = SOURCE_ROOT; };
		E7ADC72FA8A5452189D476DD /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = simplecashflow.hpp; path = ql/cashflows/simplecashflow.hpp; sourceTree = SOURCE_ROOT; };
		E7B27B7AD79F4F5480A9AE66 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = haganirregularswaptionengine.hpp; path = ql/experimental/swaptions/haganirregularswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		E7B99A6DDBD44D93865B2B7D /* /Users/heiner/git/QuantLib/ql/pricingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pricingengine.hpp; path = ql/pricingengine.hpp; sourceTree = SOURCE_ROOT; };
		E7DD1752F7764383A261D496 /* /Users/heiner/git/QuantLib/ql/math/functional.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = functional.hpp; path = ql/math/functional.hpp; sourceTree = SOURCE_ROOT; };
		E7DE9917168C4E3CB81A7C0A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhullwhitesolver.cpp; path = ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp; sourceTree = SOURCE_ROOT; };
		E7DF0FAE8DBC484CBE0C24F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticperformanceengine.hpp; path = ql/pricingengines/cliquet/analyticperformanceengine.hpp; sourceTree = SOURCE_ROOT; };
		E80C22D0454C470DA229ADC4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgainterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vannavolgainterpolation.hpp; path = ql/experimental/barrieroption/vannavolgainterpolation.hpp; sourceTree = SOURCE_ROOT; };
		E81603FD9C954DD2B068E240 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/lookback/all.hpp; sourceTree = SOURCE_ROOT; };
		E84852B79F63477F8EB3ABAE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcomplexchooserengine.cpp; path = ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp; sourceTree = SOURCE_ROOT; };
		E84E389B7B284E0A87FCFE5A /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackformula.cpp; path = ql/pricingengines/blackformula.cpp; sourceTree = SOURCE_ROOT; };
		E865D7B2CE3541CDAC620A3F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mtbrowniangenerator.hpp; path = ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp; sourceTree = SOURCE_ROOT; };
		E86EF64B70D844AA97DC674E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatortraits.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = operatortraits.hpp; path = ql/methods/finitedifferences/operatortraits.hpp; sourceTree = SOURCE_ROOT; };
		E8919E3BEDE34578BA58CAAB /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = calibrationhelper.cpp; path = ql/models/calibrationhelper.cpp; sourceTree = SOURCE_ROOT; };
		E8AF2AD378014949AE82150C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/evolvers/volprocesses/all.hpp; sourceTree = SOURCE_ROOT; };
		E8BA00E2F7214E41A12B2A78 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = iceland.hpp; path = ql/time/calendars/iceland.hpp; sourceTree = SOURCE_ROOT; };
		E8CCC8A2407F4C67AE7C2A34 /* /Users/heiner/git/QuantLib/test-suite/speedlevel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = speedlevel.hpp; path = "test-suite/speedlevel.hpp"; sourceTree = SOURCE_ROOT; };
		E8D0257D5AB140A49E2E810B /* /Users/heiner/git/QuantLib/test-suite/volatilitymodels.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volatilitymodels.hpp; path = "test-suite/volatilitymodels.hpp"; sourceTree = SOURCE_ROOT; };
		E8DB09A2D75F43BA9893275E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = accountingengine.cpp; path = ql/models/marketmodels/accountingengine.cpp; sourceTree = SOURCE_ROOT; };
		E8DC356654A14F9A8CD2BD89 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lossdistribution.hpp; path = ql/experimental/credit/lossdistribution.hpp; sourceTree = SOURCE_ROOT; };
		E8DF6D34B4A54B6B8800E366 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = historicalratesanalysis.cpp; path = ql/models/marketmodels/historicalratesanalysis.cpp; sourceTree = SOURCE_ROOT; };
		E8E8190FE7824CA0B2251024 /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = futures.cpp; path = ql/instruments/futures.cpp; sourceTree = SOURCE_ROOT; };
		E8FB4A160929435C96681DF9 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commoditycurve.hpp; path = ql/experimental/commodities/commoditycurve.hpp; sourceTree = SOURCE_ROOT; };
		E8FBA8AA37334AE28A71BFAE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energybasisswap.hpp; path = ql/experimental/commodities/energybasisswap.hpp; sourceTree = SOURCE_ROOT; };
		E8FD524900564051A1910917 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackvariancesurface.cpp; path = ql/termstructures/volatility/equityfx/blackvariancesurface.cpp; sourceTree = SOURCE_ROOT; };
		E908627AA7B64DB1A622AC88 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/shortrate/all.hpp; sourceTree = SOURCE_ROOT; };
		E91ABF6CD04E4F38A80BE4B2 /* /Users/heiner/git/QuantLib/ql/qldefines.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = qldefines.hpp; path = ql/qldefines.hpp; sourceTree = SOURCE_ROOT; };
		E92405522C8A4582AD8136A8 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dmodel.cpp; path = ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp; sourceTree = SOURCE_ROOT; };
		E9275B41CF2E46FBACF8D00B /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bmaswap.hpp; path = ql/instruments/bmaswap.hpp; sourceTree = SOURCE_ROOT; };
		E927A9B618D54D6AB05A156A /* /Users/heiner/git/QuantLib/ql/math/quadratic.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quadratic.hpp; path = ql/math/quadratic.hpp; sourceTree = SOURCE_ROOT; };
		E942C76A9A30418BAF4BFAB3 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = callablebondvolstructure.cpp; path = ql/experimental/callablebonds/callablebondvolstructure.cpp; sourceTree = SOURCE_ROOT; };
		E94CAC1FA4584E49B05263E8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/evolvers/all.hpp; sourceTree = SOURCE_ROOT; };
		E956560BEF5844AA9321FD9B /* /Users/heiner/git/QuantLib/ql/patterns/visitor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = visitor.hpp; path = ql/patterns/visitor.hpp; sourceTree = SOURCE_ROOT; };
		E95854AD9A4C4918B6A452A7 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gsr.cpp; path = ql/models/shortrate/onefactormodels/gsr.cpp; sourceTree = SOURCE_ROOT; };
		E9728AB088E7475FB6A2EE6B /* /Users/heiner/git/QuantLib/ql/math/lexicographicalview.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lexicographicalview.hpp; path = ql/math/lexicographicalview.hpp; sourceTree = SOURCE_ROOT; };
		E9733B5F074C4ED6BA8DDDBB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discretizedvanillaoption.hpp; path = ql/pricingengines/vanilla/discretizedvanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		E99579EDBF4B4749BF8893ED /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = americanpayoffathit.cpp; path = ql/pricingengines/americanpayoffathit.cpp; sourceTree = SOURCE_ROOT; };
		E99A1451E88F42A1B35474AF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodel.hpp; path = ql/models/marketmodels/marketmodel.hpp; sourceTree = SOURCE_ROOT; };
		E9B479BCEDDE45B88D5A5E5F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/spreadoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadoption.hpp; path = ql/experimental/exoticoptions/spreadoption.hpp; sourceTree = SOURCE_ROOT; };
		E9B86027B9404CD7A6B82736 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = ninepointlinearop.cpp; path = ql/methods/finitedifferences/operators/ninepointlinearop.cpp; sourceTree = SOURCE_ROOT; };
		E9CFA560B0BB41BBAAF4432F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multiproductonestep.hpp; path = ql/models/marketmodels/products/multiproductonestep.hpp; sourceTree = SOURCE_ROOT; };
		E9DB70074A6049DC83381D0B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = equityfxvolsurface.hpp; path = ql/experimental/volatility/equityfxvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		E9DD08B4BF1D4B5198AB514A /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mc_discr_geom_av_price.cpp; path = ql/pricingengines/asian/mc_discr_geom_av_price.cpp; sourceTree = SOURCE_ROOT; };
		E9F43C5357ED476FAF55534A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmklugeextouop.cpp; path = ql/experimental/finitedifferences/fdmklugeextouop.cpp; sourceTree = SOURCE_ROOT; };
		E9F721CE9B614D2480AB583B /* BermudanSwaption */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = BermudanSwaption; sourceTree = BUILT_PRODUCTS_DIR; };
		EA07ED2E66094B6DA0558237 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = italy.hpp; path = ql/time/calendars/italy.hpp; sourceTree = SOURCE_ROOT; };
		EA0CDC3203D0434596F4C6C8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdsimpleextoujumpswingengine.cpp; path = ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp; sourceTree = SOURCE_ROOT; };
		EA11E71ED2174A71B0AC034B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdsimpleextoustorageengine.hpp; path = ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp; sourceTree = SOURCE_ROOT; };
		EA1B0014403D47019E158440 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = independentcopula.hpp; path = ql/math/copulas/independentcopula.hpp; sourceTree = SOURCE_ROOT; };
		EA2384DA0CD245A7B45E6E2C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interestratevolsurface.hpp; path = ql/experimental/volatility/interestratevolsurface.hpp; sourceTree = SOURCE_ROOT; };
		EA2427D260134FEDBA3480A3 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = armijo.hpp; path = ql/math/optimization/armijo.hpp; sourceTree = SOURCE_ROOT; };
		EA33917D7899479C8B9030ED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlinearoplayout.hpp; path = ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp; sourceTree = SOURCE_ROOT; };
		EA446F805EE746078B9F29AD /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = incrementalstatistics.cpp; path = ql/math/statistics/incrementalstatistics.cpp; sourceTree = SOURCE_ROOT; };
		EA88BAF2927D41B7A3EE2611 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackvoltermstructure.cpp; path = ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp; sourceTree = SOURCE_ROOT; };
		EAA5B23B68E547789FB2F4BD /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = svismilesection.cpp; path = ql/experimental/volatility/svismilesection.cpp; sourceTree = SOURCE_ROOT; };
		EAA6CA6FAB634675AB1F6128 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pseudorootfacade.cpp; path = ql/models/marketmodels/models/pseudorootfacade.cpp; sourceTree = SOURCE_ROOT; };
		EAB644E2FB0741819530780D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lfmprocess.cpp; path = ql/legacy/libormarketmodels/lfmprocess.cpp; sourceTree = SOURCE_ROOT; };
		EAC34C86287E474396038A1B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = partialtimebarrieroption.cpp; path = ql/experimental/exoticoptions/partialtimebarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		EAC6E7F6A65B4C13B4C20384 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaultdensitystructure.hpp; path = ql/termstructures/credit/defaultdensitystructure.hpp; sourceTree = SOURCE_ROOT; };
		EAC72A209EBF4EBD879037FB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = svddfwdratepc.cpp; path = ql/models/marketmodels/evolvers/svddfwdratepc.cpp; sourceTree = SOURCE_ROOT; };
		EAC9891831B64251917996ED /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdhestondoublebarrierengine.hpp; path = ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		EACA292749AD436296F2C3E1 /* /Users/heiner/git/QuantLib/ql/models/equity/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/equity/all.hpp; sourceTree = SOURCE_ROOT; };
		EACEE39FB59F4B9FAB1ABFE0 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dategenerationrule.cpp; path = ql/time/dategenerationrule.cpp; sourceTree = SOURCE_ROOT; };
		EAFAF8DB56704A39B8DA9C19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = accountingengine.hpp; path = ql/models/marketmodels/accountingengine.hpp; sourceTree = SOURCE_ROOT; };
		EAFE56C014EE45DCAE05F6FF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlinearop.hpp; path = ql/methods/finitedifferences/operators/fdmlinearop.hpp; sourceTree = SOURCE_ROOT; };
		EB14BDDF7E5D4862BCEBBE36 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmindicesonboundary.hpp; path = ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp; sourceTree = SOURCE_ROOT; };
		EB1843651AC24250BF53D0BC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = volatilityinterpolationspecifierabcd.cpp; path = ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp; sourceTree = SOURCE_ROOT; };
		EB25C422FFDF4196A76828F2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelparametricexercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = marketmodelparametricexercise.hpp; path = ql/models/marketmodels/callability/marketmodelparametricexercise.hpp; sourceTree = SOURCE_ROOT; };
		EB459487FBA74F13937F3B65 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = endeulerdiscretization.hpp; path = ql/processes/endeulerdiscretization.hpp; sourceTree = SOURCE_ROOT; };
		EB47D97533C94136BCF33061 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = continuousarithmeticasianvecerengine.hpp; path = ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp; sourceTree = SOURCE_ROOT; };
		EB4E624A0A1C4A95A4F1BCE8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sonia.hpp; path = ql/indexes/ibor/sonia.hpp; sourceTree = SOURCE_ROOT; };
		EB4F2601E0EE4808ACAC34C1 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = haganirregularswaptionengine.cpp; path = ql/experimental/swaptions/haganirregularswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		EB5E303C3C3A4F9AAF86D621 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhullwhiteswaptionengine.cpp; path = ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp; sourceTree = SOURCE_ROOT; };
		EB742ECD46C64B81852ACDF6 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/indexes/ibor/all.hpp; sourceTree = SOURCE_ROOT; };
		EB869A8586C54C219FF2DA86 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timebasket.hpp; path = ql/cashflows/timebasket.hpp; sourceTree = SOURCE_ROOT; };
		EB88F397A1CD40A0BE361A1D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmbackwardsolver.hpp; path = ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp; sourceTree = SOURCE_ROOT; };
		EB8D9653A71D4D1896635818 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskybond.cpp; path = ql/experimental/credit/riskybond.cpp; sourceTree = SOURCE_ROOT; };
		EB90710828C64C55B0CB4821 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/exercisevalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = exercisevalue.hpp; path = ql/models/marketmodels/callability/exercisevalue.hpp; sourceTree = SOURCE_ROOT; };
		EB9DEC213AC64F3AB4AA888A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmprocess.hpp; path = ql/legacy/libormarketmodels/lfmprocess.hpp; sourceTree = SOURCE_ROOT; };
		EBA0048CE3754B47815D3A96 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateballand.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp; sourceTree = SOURCE_ROOT; };
		EBB8F1C2841A472F9EBF4ECB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = abcdvol.cpp; path = ql/models/marketmodels/models/abcdvol.cpp; sourceTree = SOURCE_ROOT; };
		EBBB23DC23F54EEA8A803320 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dfloatfloatswaptionengine.hpp; path = ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		EBBBBD5A96AB4A328A5BCC30 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/petroleumunitsofmeasure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = petroleumunitsofmeasure.hpp; path = ql/experimental/commodities/petroleumunitsofmeasure.hpp; sourceTree = SOURCE_ROOT; };
		EBC0FD7C062A4B9DA4755E7A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmsnapshotcondition.cpp; path = ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp; sourceTree = SOURCE_ROOT; };
		EBCA0FB195E14C64929E37ED /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwiseproductswaption.hpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp; sourceTree = SOURCE_ROOT; };
		EBCFCFB0A1B142AD85150CA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/duffsdeviceinnerproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = duffsdeviceinnerproduct.hpp; path = ql/models/marketmodels/duffsdeviceinnerproduct.hpp; sourceTree = SOURCE_ROOT; };
		EBE1072F57D045FEB6144B2E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticptdhestonengine.hpp; path = ql/pricingengines/vanilla/analyticptdhestonengine.hpp; sourceTree = SOURCE_ROOT; };
		EBE612A953964891B1B287D6 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = poland.cpp; path = ql/time/calendars/poland.cpp; sourceTree = SOURCE_ROOT; };
		EC0335B3FFF14F71A6291F44 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = calendar.cpp; path = ql/time/calendar.cpp; sourceTree = SOURCE_ROOT; };
		EC0A7CA3EF7A48D3B08E3C6C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analytictwoassetbarrierengine.cpp; path = ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		EC0F380776C44333B4160297 /* /Users/heiner/git/QuantLib/ql/math/interpolations/extrapolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extrapolation.hpp; path = ql/math/interpolations/extrapolation.hpp; sourceTree = SOURCE_ROOT; };
		EC16FB7FB0BC4085A72FB966 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = discounter.hpp; path = ql/models/marketmodels/discounter.hpp; sourceTree = SOURCE_ROOT; };
		EC1A83D17BE64BC9930CA2E5 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = brazil.hpp; path = ql/time/calendars/brazil.hpp; sourceTree = SOURCE_ROOT; };
		EC26C8C88B8641D7AF1A85CA /* /Users/heiner/git/QuantLib/ql/pricingengines/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/all.hpp; sourceTree = SOURCE_ROOT; };
		EC2BE9340E024A9EB3C5A613 /* /Users/heiner/git/QuantLib/ql/math/matrix.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = matrix.hpp; path = ql/math/matrix.hpp; sourceTree = SOURCE_ROOT; };
		EC50D95183754F51BD429BC7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletcoterminalswaptioncalibration.hpp; path = ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp; sourceTree = SOURCE_ROOT; };
		EC5BA0EFC5E04FF2A5FEAEB3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = spreadedswaptionvol.cpp; path = ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp; sourceTree = SOURCE_ROOT; };
		EC7E18E6E0604F94984B94A3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/interpolatedsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedsmilesection.hpp; path = ql/termstructures/volatility/interpolatedsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		EC7EA256AC3F4F1D922C796B /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tcopulapolicy.hpp; path = ql/experimental/math/tcopulapolicy.hpp; sourceTree = SOURCE_ROOT; };
		EC7EF43F5E744F189F08A4C4 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = creditriskplus.hpp; path = ql/experimental/risk/creditriskplus.hpp; sourceTree = SOURCE_ROOT; };
		EC8BC8C1AE9D45CDAA4E608B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = continuousarithmeticasianvecerengine.cpp; path = ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp; sourceTree = SOURCE_ROOT; };
		EC9BB6D7E4B54A17AE1B8AEB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmmcurvestate.hpp; path = ql/models/marketmodels/curvestates/lmmcurvestate.hpp; sourceTree = SOURCE_ROOT; };
		ECBDA2BC3FAF4690ADCD5EFD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/callability/all.hpp; sourceTree = SOURCE_ROOT; };
		ECCD7820AC1D409C860E98E2 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapspreadindex.cpp; path = ql/experimental/coupons/swapspreadindex.cpp; sourceTree = SOURCE_ROOT; };
		ECDADD0581CE465E8D9B8596 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonmodel.cpp; path = ql/models/equity/hestonmodel.cpp; sourceTree = SOURCE_ROOT; };
		ECDB4D852EF24D20B7CC150E /* /Users/heiner/git/QuantLib/ql/experimental/models/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/models/all.hpp; sourceTree = SOURCE_ROOT; };
		ECF76C5A82D444BAA7EFBFEB /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = averagebmacoupon.hpp; path = ql/cashflows/averagebmacoupon.hpp; sourceTree = SOURCE_ROOT; };
		ECFD4009D2F848E684EA1A5D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = wulinyongdoublebarrierengine.hpp; path = ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		ED1C3C79F8FA4D4490563388 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vanillaoption.cpp; path = ql/instruments/vanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		ED23B48D837F4CC4B68B9525 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = floatingratecoupon.cpp; path = ql/cashflows/floatingratecoupon.cpp; sourceTree = SOURCE_ROOT; };
		ED3927D25BDF435E9795FBD9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzdlibor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nzdlibor.hpp; path = ql/indexes/ibor/nzdlibor.hpp; sourceTree = SOURCE_ROOT; };
		ED4E597170964B3CA39BE7CF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdstepconditionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdstepconditionengine.hpp; path = ql/pricingengines/vanilla/fdstepconditionengine.hpp; sourceTree = SOURCE_ROOT; };
		ED54E48ACD924E3F923B753D /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/shortrate/twofactormodels/all.hpp; sourceTree = SOURCE_ROOT; };
		ED6EFAEF006441B5B27E8E2F /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sensitivityanalysis.cpp; path = ql/experimental/risk/sensitivityanalysis.cpp; sourceTree = SOURCE_ROOT; };
		ED76C85ADA1242C09D2EB59E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsimpleprocess1dmesher.hpp; path = ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp; sourceTree = SOURCE_ROOT; };
		ED794940AEF64EB4AA356227 /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdheston.cpp; path = "test-suite/fdheston.cpp"; sourceTree = SOURCE_ROOT; };
		ED7AB3EAF0464970A96A738C /* /Users/heiner/git/QuantLib/test-suite/twoassetbarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twoassetbarrieroption.hpp; path = "test-suite/twoassetbarrieroption.hpp"; sourceTree = SOURCE_ROOT; };
		ED9055FBCE714D1EA651F017 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticcontinuousfixedlookback.cpp; path = ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp; sourceTree = SOURCE_ROOT; };
		ED938153AB0B4A779345CA01 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = shortratemodels.hpp; path = "test-suite/shortratemodels.hpp"; sourceTree = SOURCE_ROOT; };
		ED96FEDBBCB649718DD73CA1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pathwiseproductswap.cpp; path = ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp; sourceTree = SOURCE_ROOT; };
		ED9BC6773D4141069CD909B9 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmextlinexpvolmodel.cpp; path = ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp; sourceTree = SOURCE_ROOT; };
		EDA0F1F0E1D14B269111157A /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = claytoncopula.cpp; path = ql/math/copulas/claytoncopula.cpp; sourceTree = SOURCE_ROOT; };
		EDAB7EE2447142B1BCDEB4F1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = integralntdengine.cpp; path = ql/experimental/credit/integralntdengine.cpp; sourceTree = SOURCE_ROOT; };
		EDBA6CB3C5BD46BF8D0DFA50 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = claim.cpp; path = ql/instruments/claim.cpp; sourceTree = SOURCE_ROOT; };
		EDC5447BD7B34E29B0631E7B /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = studenttdistribution.cpp; path = ql/math/distributions/studenttdistribution.cpp; sourceTree = SOURCE_ROOT; };
		EDD4BC41B3EC499D9ACCD73E /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = trinomialtree.hpp; path = ql/methods/lattices/trinomialtree.hpp; sourceTree = SOURCE_ROOT; };
		EDE059763CA8402A8CE53061 /* /Users/heiner/git/QuantLib/ql/instruments/forward.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forward.hpp; path = ql/instruments/forward.hpp; sourceTree = SOURCE_ROOT; };
		EDE5249095BC4B6D936CBC58 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitofmeasureconversionmanager.cpp; path = ql/experimental/commodities/unitofmeasureconversionmanager.cpp; sourceTree = SOURCE_ROOT; };
		EDF7E6CFEC7145B4A0ED08FC /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fixedratecoupon.hpp; path = ql/cashflows/fixedratecoupon.hpp; sourceTree = SOURCE_ROOT; };
		EDFA2154E72E4809AC3B9446 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantobarrieroption.hpp; path = ql/instruments/quantobarrieroption.hpp; sourceTree = SOURCE_ROOT; };
		EE086E568B294715919593AC /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quadratic.cpp; path = ql/math/quadratic.cpp; sourceTree = SOURCE_ROOT; };
		EE0BC8C396A444B989860C0C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussian1dswaptionvolatility.cpp; path = ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp; sourceTree = SOURCE_ROOT; };
		EE32606E110D44638BC6EACB /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = floatingratecoupon.hpp; path = ql/cashflows/floatingratecoupon.hpp; sourceTree = SOURCE_ROOT; };
		EE4707822FA34D02BD35155B /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multiassetoption.cpp; path = ql/instruments/multiassetoption.cpp; sourceTree = SOURCE_ROOT; };
		EE5760FBB4F44EFC9D083272 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = energyfuture.hpp; path = ql/experimental/commodities/energyfuture.hpp; sourceTree = SOURCE_ROOT; };
		EE63F1F862A7403A95D56B66 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dividendbarrieroption.cpp; path = ql/instruments/dividendbarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		EE76ADB6B11B4E1F8F85C694 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = batesmodel.cpp; path = ql/models/equity/batesmodel.cpp; sourceTree = SOURCE_ROOT; };
		EE7BFF012F9B4D1A95435A0B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralengine.hpp; path = ql/pricingengines/vanilla/integralengine.hpp; sourceTree = SOURCE_ROOT; };
		EE8938A4D0F24DE6915EB95E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = upperboundengine.cpp; path = ql/models/marketmodels/callability/upperboundengine.cpp; sourceTree = SOURCE_ROOT; };
		EE9593FFE4EA442B93C31AC3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = kahalesmilesection.cpp; path = ql/termstructures/volatility/kahalesmilesection.cpp; sourceTree = SOURCE_ROOT; };
		EEA062CEA5EB48BEADEAB989 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/modtriplebandlinearop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = modtriplebandlinearop.hpp; path = ql/experimental/finitedifferences/modtriplebandlinearop.hpp; sourceTree = SOURCE_ROOT; };
		EEA2F20075004C7794583371 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = americanoption.cpp; path = "test-suite/americanoption.cpp"; sourceTree = SOURCE_ROOT; };
		EEA4392F5B2F4093810BC56E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmboundaryconditionset.hpp; path = ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp; sourceTree = SOURCE_ROOT; };
		EEAFF26C659C4CB297EBB5E5 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackswaptionengine.hpp; path = ql/pricingengines/swaption/blackswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		EEB45EBFFE6345F1A0D0D9BD /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticvariancegammaengine.cpp; path = ql/experimental/variancegamma/analyticvariancegammaengine.cpp; sourceTree = SOURCE_ROOT; };
		EEB52976AB7A413189716ED9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackvariancecurve.cpp; path = ql/termstructures/volatility/equityfx/blackvariancecurve.cpp; sourceTree = SOURCE_ROOT; };
		EEC894FD8A7542E0A0DFB7D9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmklugeextouop.hpp; path = ql/experimental/finitedifferences/fdmklugeextouop.hpp; sourceTree = SOURCE_ROOT; };
		EEC985238EB84C1F899BD995 /* /Users/heiner/git/QuantLib/test-suite/digitalcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitalcoupon.hpp; path = "test-suite/digitalcoupon.hpp"; sourceTree = SOURCE_ROOT; };
		EECCEA3EF1104082B83CEEF8 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = treecapfloorengine.cpp; path = ql/pricingengines/capfloor/treecapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		EECDFEBF1E2D44EFAD23EB08 /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/quanto/all.hpp; sourceTree = SOURCE_ROOT; };
		EECF1A749B80475D9782EE77 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sabr.cpp; path = ql/termstructures/volatility/sabr.cpp; sourceTree = SOURCE_ROOT; };
		EEECE02EA8AE43DB8C3415B8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = singleproductcomposite.cpp; path = ql/models/marketmodels/products/singleproductcomposite.cpp; sourceTree = SOURCE_ROOT; };
		EF11AEC76CFD4CF3AC3019B5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pagodaoption.cpp; path = ql/experimental/exoticoptions/pagodaoption.cpp; sourceTree = SOURCE_ROOT; };
		EF1A8F52199E4373AFA0718B /* /Users/heiner/git/QuantLib/test-suite/doublebarrieroption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = doublebarrieroption.hpp; path = "test-suite/doublebarrieroption.hpp"; sourceTree = SOURCE_ROOT; };
		EF1EDED894E94111ABC89F73 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = tqreigendecomposition.hpp; path = ql/math/matrixutilities/tqreigendecomposition.hpp; sourceTree = SOURCE_ROOT; };
		EF4CC717A2844319B1F9BA15 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = spreadedoptionletvol.hpp; path = ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp; sourceTree = SOURCE_ROOT; };
		EF4D56CF89EA417C9F3C1AD9 /* /Users/heiner/git/QuantLib/ql/math/optimization/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/optimization/all.hpp; sourceTree = SOURCE_ROOT; };
		EF55112ED172471BACFF0D50 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = vanillavppoption.cpp; path = ql/experimental/finitedifferences/vanillavppoption.cpp; sourceTree = SOURCE_ROOT; };
		EF5E6182765841FCA1816E05 /* /Users/heiner/git/QuantLib/ql/experimental/credit/constantlosslatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantlosslatentmodel.hpp; path = ql/experimental/credit/constantlosslatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		EF6139D6F93A41E685E93A72 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/exoticoptions/all.hpp; sourceTree = SOURCE_ROOT; };
		EF74202677CB485AAA3F87D8 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gaussianorthogonalpolynomial.cpp; path = ql/math/integrals/gaussianorthogonalpolynomial.cpp; sourceTree = SOURCE_ROOT; };
		EF91077BE69049C094EECA31 /* /Users/heiner/git/QuantLib/test-suite/curvestates.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = curvestates.cpp; path = "test-suite/curvestates.cpp"; sourceTree = SOURCE_ROOT; };
		EFACB444DFD647F1B5D63569 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = onefactorgaussiancopula.cpp; path = ql/experimental/credit/onefactorgaussiancopula.cpp; sourceTree = SOURCE_ROOT; };
		EFACC3E9A3684323BED78B43 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmaffinemodeltermstructure.hpp; path = ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp; sourceTree = SOURCE_ROOT; };
		EFC1315B1ACE49F480B00530 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/shoutcondition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = shoutcondition.hpp; path = ql/methods/finitedifferences/shoutcondition.hpp; sourceTree = SOURCE_ROOT; };
		EFCE7D7BC6A04565816F4D95 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticdigitalamericanengine.cpp; path = ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp; sourceTree = SOURCE_ROOT; };
		EFCF0AD66FAD4400A81021E6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twoassetcorrelationoption.hpp; path = ql/experimental/exoticoptions/twoassetcorrelationoption.hpp; sourceTree = SOURCE_ROOT; };
		EFF44AAC7B7941CE8C54E5F0 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = arithmeticaverageois.cpp; path = ql/experimental/averageois/arithmeticaverageois.cpp; sourceTree = SOURCE_ROOT; };
		EFFC7F9C386C47B6AE1CDD25 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = recoveryratemodel.cpp; path = ql/experimental/credit/recoveryratemodel.cpp; sourceTree = SOURCE_ROOT; };
		EFFF9ED5DA064D26A3E83AAF /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cashflowvectors.hpp; path = ql/cashflows/cashflowvectors.hpp; sourceTree = SOURCE_ROOT; };
		F003ED0639644B4B9538F728 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticbinarybarrierengine.cpp; path = ql/pricingengines/barrier/analyticbinarybarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		F0062F403396494A8D953889 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpiswap.hpp; path = ql/instruments/cpiswap.hpp; sourceTree = SOURCE_ROOT; };
		F00B78A25C05442FA4176FFB /* /Users/heiner/git/QuantLib/ql/indexes/region.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = region.hpp; path = ql/indexes/region.hpp; sourceTree = SOURCE_ROOT; };
		F02B164BAF024A4681DD913F /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lmdif.cpp; path = ql/math/optimization/lmdif.cpp; sourceTree = SOURCE_ROOT; };
		F02B507E9474498A93FB7BBF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisemultiproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pathwisemultiproduct.hpp; path = ql/models/marketmodels/pathwisemultiproduct.hpp; sourceTree = SOURCE_ROOT; };
		F047A8FF02A34B8895964FD6 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = simpledaycounter.cpp; path = ql/time/daycounters/simpledaycounter.cpp; sourceTree = SOURCE_ROOT; };
		F04F28A3FB534DFBA2F37CBE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = lognormalfwdrateeulerconstrained.cpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp; sourceTree = SOURCE_ROOT; };
		F070E86BA9AE4ED3AAE6298B /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = floatfloatswaption.hpp; path = ql/instruments/floatfloatswaption.hpp; sourceTree = SOURCE_ROOT; };
		F07AE9820BD04447B7491FED /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = richardsonextrapolation.cpp; path = ql/math/richardsonextrapolation.cpp; sourceTree = SOURCE_ROOT; };
		F08506CB518A46439DE7CF84 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitycube.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = swaptionvolatilitycube.hpp; path = "test-suite/swaptionvolatilitycube.hpp"; sourceTree = SOURCE_ROOT; };
		F0940DCE8C764052BBF7E2CC /* /Users/heiner/git/QuantLib/test-suite/riskneutraldensitycalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskneutraldensitycalculator.cpp; path = "test-suite/riskneutraldensitycalculator.cpp"; sourceTree = SOURCE_ROOT; };
		F0959D8DB77948A493CB08E9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = compositeproduct.hpp; path = ql/models/marketmodels/products/compositeproduct.hpp; sourceTree = SOURCE_ROOT; };
		F09CE2270CF84F878050A664 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanhestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mceuropeanhestonengine.hpp; path = ql/pricingengines/vanilla/mceuropeanhestonengine.hpp; sourceTree = SOURCE_ROOT; };
		F0A013C221C247CABB97945B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticdividendeuropeanengine.cpp; path = ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp; sourceTree = SOURCE_ROOT; };
		F0A0BBF8FD614C24AEABDA86 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepnothing.hpp; path = ql/models/marketmodels/products/multistep/multistepnothing.hpp; sourceTree = SOURCE_ROOT; };
		F0BBD7CFF1B143999DA3CEF6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdextoujumpvanillaengine.hpp; path = ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		F0E277F634574B469BAE10FE /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = averagetype.hpp; path = ql/instruments/averagetype.hpp; sourceTree = SOURCE_ROOT; };
		F0E78E1AB29C4127B3E77BC9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpivolatilitystructure.hpp; path = ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		F0EC821A79B840B198FC3535 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillavppoption.hpp; path = ql/experimental/finitedifferences/vanillavppoption.hpp; sourceTree = SOURCE_ROOT; };
		F0EE71A275434CF29A7322B2 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = stickyratchet.cpp; path = ql/instruments/stickyratchet.cpp; sourceTree = SOURCE_ROOT; };
		F103067B9B474C6BB654FC0C /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicapfloor.hpp; path = ql/instruments/cpicapfloor.hpp; sourceTree = SOURCE_ROOT; };
		F11B550894424D4085F15DFB /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = g2process.cpp; path = ql/processes/g2process.cpp; sourceTree = SOURCE_ROOT; };
		F11FE76728E04190801C982D /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = batesprocess.hpp; path = ql/processes/batesprocess.hpp; sourceTree = SOURCE_ROOT; };
		F121792F6D814CA9BEF6A4DE /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/g2swaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = g2swaptionengine.hpp; path = ql/pricingengines/swaption/g2swaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		F12556F45E3845E68615EE9F /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = switzerland.hpp; path = ql/time/calendars/switzerland.hpp; sourceTree = SOURCE_ROOT; };
		F1328A9FB52049FC81F647C3 /* /Users/heiner/git/QuantLib/ql/math/integrals/twodimensionalintegral.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = twodimensionalintegral.hpp; path = ql/math/integrals/twodimensionalintegral.hpp; sourceTree = SOURCE_ROOT; };
		F13586AF765340AD9122229F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcd.hpp; path = ql/termstructures/volatility/abcd.hpp; sourceTree = SOURCE_ROOT; };
		F14411E4B71C49DF83766416 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = floatingratebond.hpp; path = ql/instruments/bonds/floatingratebond.hpp; sourceTree = SOURCE_ROOT; };
		F1512D3858394C2589800FAE /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = libor.cpp; path = ql/indexes/ibor/libor.cpp; sourceTree = SOURCE_ROOT; };
		F15C2D8F2B874F88AFF0CF68 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = survivalprobabilitystructure.hpp; path = ql/termstructures/credit/survivalprobabilitystructure.hpp; sourceTree = SOURCE_ROOT; };
		F15CCEC4587845389EE577B5 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticdoublebarrierengine.cpp; path = ql/experimental/barrieroption/analyticdoublebarrierengine.cpp; sourceTree = SOURCE_ROOT; };
		F188DE7D37894F48B1FEAE0B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zeroyieldstructure.hpp; path = ql/termstructures/yield/zeroyieldstructure.hpp; sourceTree = SOURCE_ROOT; };
		F18FF5ED56734EFA8195BF0D /* /Users/heiner/git/QuantLib/ql/time/period.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = period.hpp; path = ql/time/period.hpp; sourceTree = SOURCE_ROOT; };
		F19D0F97666C4418B4A8A5CA /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mfstateprocess.cpp; path = ql/processes/mfstateprocess.cpp; sourceTree = SOURCE_ROOT; };
		F19FFEAC8BEC4605B3093B9F /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = distribution.cpp; path = ql/experimental/credit/distribution.cpp; sourceTree = SOURCE_ROOT; };
		F1A3A0DF2399429DB78F1478 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonmodelhelper.hpp; path = ql/models/equity/hestonmodelhelper.hpp; sourceTree = SOURCE_ROOT; };
		F1B3AD8D544E4EA1A5F68B70 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = margrabeoption.hpp; path = ql/experimental/exoticoptions/margrabeoption.hpp; sourceTree = SOURCE_ROOT; };
		F1B7B8C859534C1FA130417D /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mchullwhiteengine.hpp; path = ql/pricingengines/capfloor/mchullwhiteengine.hpp; sourceTree = SOURCE_ROOT; };
		F1C34D0FBC83431184906D8E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdblackscholesbarrierengine.hpp; path = ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		F1C56449EFB3464AB8980ADE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaptionpseudojacobian.cpp; path = ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp; sourceTree = SOURCE_ROOT; };
		F1DB6C869CF74716832FA910 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticwriterextensibleoptionengine.cpp; path = ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp; sourceTree = SOURCE_ROOT; };
		F1E3EDF37B5E4D3E896255A2 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fixedratebond.cpp; path = ql/instruments/bonds/fixedratebond.cpp; sourceTree = SOURCE_ROOT; };
		F1F45D877134441F9E142298 /* /Users/heiner/git/QuantLib/test-suite/rangeaccrual.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rangeaccrual.hpp; path = "test-suite/rangeaccrual.hpp"; sourceTree = SOURCE_ROOT; };
		F21110AA94974CB2BBC422F1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditysettings.cpp; path = ql/experimental/commodities/commoditysettings.cpp; sourceTree = SOURCE_ROOT; };
		F212F399DF654E98A443A21B /* /Users/heiner/git/QuantLib/test-suite/linearleastsquaresregression.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = linearleastsquaresregression.hpp; path = "test-suite/linearleastsquaresregression.hpp"; sourceTree = SOURCE_ROOT; };
		F216636F5A274CB891C26697 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = defaultprobabilitykey.cpp; path = ql/experimental/credit/defaultprobabilitykey.cpp; sourceTree = SOURCE_ROOT; };
		F21801B891164FFB91F743D7 /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bmaindex.cpp; path = ql/indexes/bmaindex.cpp; sourceTree = SOURCE_ROOT; };
		F218BC79F72B4A8CA1989A01 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = flatsmilesection.cpp; path = ql/termstructures/volatility/flatsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		F219A0D75A1245D79F709766 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cpicapfloorengines.cpp; path = ql/experimental/inflation/cpicapfloorengines.cpp; sourceTree = SOURCE_ROOT; };
		F22770BBB863495193073781 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = thirty360.cpp; path = ql/time/daycounters/thirty360.cpp; sourceTree = SOURCE_ROOT; };
		F25860B997B34ACE899D87E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm1dimsolver.cpp; path = ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp; sourceTree = SOURCE_ROOT; };
		F25D78948D0547D68D754ADC /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticcontinuouspartialfloatinglookback.hpp; path = ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp; sourceTree = SOURCE_ROOT; };
		F26FC54ED7DC43E49E5314D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepswap.hpp; path = ql/models/marketmodels/products/multistep/multistepswap.hpp; sourceTree = SOURCE_ROOT; };
		F2713AB6A31640F48E6EFF57 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bacheliercapfloorengine.hpp; path = ql/pricingengines/capfloor/bacheliercapfloorengine.hpp; sourceTree = SOURCE_ROOT; };
		F276D49C9DEF4196A231C251 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = liborforwardmodel.hpp; path = ql/legacy/libormarketmodels/liborforwardmodel.hpp; sourceTree = SOURCE_ROOT; };
		F27BE73B08494B09942AC256 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zigguratrng.hpp; path = ql/experimental/math/zigguratrng.hpp; sourceTree = SOURCE_ROOT; };
		F2874767D0374579AB2258A7 /* /Users/heiner/git/QuantLib/test-suite/autocovariances.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = autocovariances.hpp; path = "test-suite/autocovariances.hpp"; sourceTree = SOURCE_ROOT; };
		F28DB4978D76465CAA028BD6 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = creditriskplus.hpp; path = ql/experimental/risk/creditriskplus.hpp; sourceTree = SOURCE_ROOT; };
		F2ABDCF1A9D34BB9B1F8FCB2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmswaptionengine.hpp; path = ql/legacy/libormarketmodels/lfmswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		F2AD7E7DF7F9462583C33015 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nodedataprovider.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = nodedataprovider.hpp; path = ql/models/marketmodels/callability/nodedataprovider.hpp; sourceTree = SOURCE_ROOT; };
		F2B2BF3AA94D483D8A5E87EE /* /Users/heiner/git/QuantLib/ql/rebatedexercise.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rebatedexercise.hpp; path = ql/rebatedexercise.hpp; sourceTree = SOURCE_ROOT; };
		F2B9B07DBD1548409F2B1533 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = leastsquare.hpp; path = ql/math/optimization/leastsquare.hpp; sourceTree = SOURCE_ROOT; };
		F2BB84E22AA84213876167D2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = proxygreekengine.hpp; path = ql/models/marketmodels/proxygreekengine.hpp; sourceTree = SOURCE_ROOT; };
		F2C0F92A6AA94D479A1ECB07 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = coxingersollross.hpp; path = ql/models/shortrate/onefactormodels/coxingersollross.hpp; sourceTree = SOURCE_ROOT; };
		F2C82B702A894A1A84CF3780 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vasicek.hpp; path = ql/models/shortrate/onefactormodels/vasicek.hpp; sourceTree = SOURCE_ROOT; };
		F2D78CA48CFC4748B6AE7BAC /* /Users/heiner/git/QuantLib/ql/math/distributions/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/distributions/all.hpp; sourceTree = SOURCE_ROOT; };
		F2D977DE16A84AFEB0BBACA2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticptdhestonengine.hpp; path = ql/pricingengines/vanilla/analyticptdhestonengine.hpp; sourceTree = SOURCE_ROOT; };
		F2DFC1263D4C4869843A38ED /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcapfloor.hpp; path = ql/instruments/inflationcapfloor.hpp; sourceTree = SOURCE_ROOT; };
		F2E54603B98B4D419761A72A /* /Users/heiner/git/QuantLib/ql/models/parameter.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = parameter.hpp; path = ql/models/parameter.hpp; sourceTree = SOURCE_ROOT; };
		F2E5E48AE3794E08A2D0728C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = slovakia.cpp; path = ql/time/calendars/slovakia.cpp; sourceTree = SOURCE_ROOT; };
		F2E848EC864C40E8B58C4B4C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gsr.cpp; path = ql/models/shortrate/onefactormodels/gsr.cpp; sourceTree = SOURCE_ROOT; };
		F3035B2DBDF34ECEBE10CE24 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmblackscholessolver.cpp; path = ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp; sourceTree = SOURCE_ROOT; };
		F329D278676C4189AADAE52E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdsimpleklugeextouvppengine.cpp; path = ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp; sourceTree = SOURCE_ROOT; };
		F337B60C74D64515B0F57724 /* /Users/heiner/git/QuantLib/ql/experimental/math/farliegumbelmorgensterncopularng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = farliegumbelmorgensterncopularng.hpp; path = ql/experimental/math/farliegumbelmorgensterncopularng.hpp; sourceTree = SOURCE_ROOT; };
		F354500820EF4BF59E595148 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = polynomialmathfunction.hpp; path = ql/math/polynomialmathfunction.hpp; sourceTree = SOURCE_ROOT; };
		F35ACE45A6874A2683EBD0C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepnothing.cpp; path = ql/models/marketmodels/products/multistep/multistepnothing.cpp; sourceTree = SOURCE_ROOT; };
		F364286E4E3543CB8AAA2B4B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = volcube.hpp; path = ql/experimental/volatility/volcube.hpp; sourceTree = SOURCE_ROOT; };
		F36DFA3AC37F47A386D3303B /* /Users/heiner/git/QuantLib/ql/money.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = money.hpp; path = ql/money.hpp; sourceTree = SOURCE_ROOT; };
		F370AC3939B84D5082CF7798 /* MarketModels */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = MarketModels; sourceTree = BUILT_PRODUCTS_DIR; };
		F37A69B285DF4C0BAC842F04 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = squarerootprocessrndcalculator.hpp; path = ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp; sourceTree = SOURCE_ROOT; };
		F37D4E59DEFC43F285940360 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = averagebmacoupon.cpp; path = ql/cashflows/averagebmacoupon.cpp; sourceTree = SOURCE_ROOT; };
		F390710A05214AC19FA39DBE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = craigsneydscheme.cpp; path = ql/methods/finitedifferences/schemes/craigsneydscheme.cpp; sourceTree = SOURCE_ROOT; };
		F3A35E78FE60479993161E69 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = hestonslvfdmmodel.hpp; path = ql/experimental/models/hestonslvfdmmodel.hpp; sourceTree = SOURCE_ROOT; };
		F3AF4B684EB74245851F3DAC /* /Users/heiner/git/QuantLib/test-suite/inflationcapflooredcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcapflooredcoupon.cpp; path = "test-suite/inflationcapflooredcoupon.cpp"; sourceTree = SOURCE_ROOT; };
		F3B24FA6DBCB4BBE8A7EBC62 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zabr.cpp; path = ql/experimental/volatility/zabr.cpp; sourceTree = SOURCE_ROOT; };
		F3B7B3D71C1C45CC9F9DE6A8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = kahalesmilesection.hpp; path = ql/termstructures/volatility/kahalesmilesection.hpp; sourceTree = SOURCE_ROOT; };
		F3BAAE10D8C14E4AB5B274A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analyticbinarybarrierengine.hpp; path = ql/pricingengines/barrier/analyticbinarybarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		F3C45C38C1814C1C8E09DCC0 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitedkingdom.hpp; path = ql/time/calendars/unitedkingdom.hpp; sourceTree = SOURCE_ROOT; };
		F3D55DFDCC4E4A2093F2D7DE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = utilities.cpp; path = ql/models/marketmodels/utilities.cpp; sourceTree = SOURCE_ROOT; };
		F3F0BCE8BF1C45609727CE90 /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = deltavolquote.cpp; path = ql/experimental/fx/deltavolquote.cpp; sourceTree = SOURCE_ROOT; };
		F3F98D1C01564510B38CDE15 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lmcorrmodel.hpp; path = ql/legacy/libormarketmodels/lmcorrmodel.hpp; sourceTree = SOURCE_ROOT; };
		F3FA57023A3E459895DAB52A /* /Users/heiner/git/QuantLib/test-suite/brownianbridge.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = brownianbridge.cpp; path = "test-suite/brownianbridge.cpp"; sourceTree = SOURCE_ROOT; };
		F3FC0FBC30244AE8A1AE64D9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = localvolsurface.cpp; path = ql/termstructures/volatility/equityfx/localvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		F406BBCB0D0A447187CB94E6 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = extendedornsteinuhlenbeckprocess.cpp; path = ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp; sourceTree = SOURCE_ROOT; };
		F4237DAE73374F0CB5304A0D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fddividendengine.hpp; path = ql/pricingengines/vanilla/fddividendengine.hpp; sourceTree = SOURCE_ROOT; };
		F42A4630C5DA424A9195DDAD /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = creditdefaultswap.hpp; path = ql/instruments/creditdefaultswap.hpp; sourceTree = SOURCE_ROOT; };
		F42C832CB31B4D7784EA9733 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interpolatedsurvivalprobabilitycurve.hpp; path = ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp; sourceTree = SOURCE_ROOT; };
		F45C17DB2BDA4925B0FF742E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/correlations/all.hpp; sourceTree = SOURCE_ROOT; };
		F4667A478C76460A85FA52CA /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralntdengine.hpp; path = ql/experimental/credit/integralntdengine.hpp; sourceTree = SOURCE_ROOT; };
		F46A3A2085A7486FA1EFF410 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lineartsrpricer.hpp; path = ql/cashflows/lineartsrpricer.hpp; sourceTree = SOURCE_ROOT; };
		F47AF65474A94AB0981A41C4 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = survivalprobabilitystructure.cpp; path = ql/termstructures/credit/survivalprobabilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		F48856416BA04453A6A03278 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdeshortrate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pdeshortrate.hpp; path = ql/methods/finitedifferences/pdeshortrate.hpp; sourceTree = SOURCE_ROOT; };
		F49DF284E5CE4B82B0CC1733 /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dividendvanillaoption.hpp; path = ql/instruments/dividendvanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		F49EDE6AF6EB46C4BB5C13BA /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = noarbsabrsmilesection.cpp; path = ql/experimental/volatility/noarbsabrsmilesection.cpp; sourceTree = SOURCE_ROOT; };
		F4BE630AD0404AC1ACFF4DD4 /* /Users/heiner/git/QuantLib/test-suite/autocovariances.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = autocovariances.cpp; path = "test-suite/autocovariances.cpp"; sourceTree = SOURCE_ROOT; };
		F4BECE987B66457EB4474562 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = europeanoption.cpp; path = ql/instruments/europeanoption.cpp; sourceTree = SOURCE_ROOT; };
		F4D35B33AC47465C891CF487 /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = midpointcdoengine.hpp; path = ql/experimental/credit/midpointcdoengine.hpp; sourceTree = SOURCE_ROOT; };
		F4D42CE0D5F44CFCBF3705C7 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = southkorea.hpp; path = ql/time/calendars/southkorea.hpp; sourceTree = SOURCE_ROOT; };
		F4D6CE52C6484A2F9BEA568D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodeldifferences.cpp; path = ql/models/marketmodels/marketmodeldifferences.cpp; sourceTree = SOURCE_ROOT; };
		F4D7CCB2AE70451186C58559 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gjrgarchprocess.hpp; path = ql/processes/gjrgarchprocess.hpp; sourceTree = SOURCE_ROOT; };
		F4E0D2A8BC8B438889108AE6 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = indonesia.cpp; path = ql/time/calendars/indonesia.cpp; sourceTree = SOURCE_ROOT; };
		F4FBE19BEEDE47A0B64E5529 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = localvolrndcalculator.cpp; path = ql/experimental/finitedifferences/localvolrndcalculator.cpp; sourceTree = SOURCE_ROOT; };
		F504B6A85A7446728CA653CE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonop.hpp; path = ql/methods/finitedifferences/operators/fdmhestonop.hpp; sourceTree = SOURCE_ROOT; };
		F5099B0087854DF0880E9C31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbermudanengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdbermudanengine.hpp; path = ql/pricingengines/vanilla/fdbermudanengine.hpp; sourceTree = SOURCE_ROOT; };
		F51866CC83C84B52B7664B71 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = floatfloatswap.cpp; path = ql/instruments/floatfloatswap.cpp; sourceTree = SOURCE_ROOT; };
		F529D7723BCA461A9E800253 /* /Users/heiner/git/QuantLib/test-suite/creditriskplus.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = creditriskplus.hpp; path = "test-suite/creditriskplus.hpp"; sourceTree = SOURCE_ROOT; };
		F53517174B364F8FBF384D99 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = coterminalswapcurvestate.hpp; path = ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp; sourceTree = SOURCE_ROOT; };
		F54BB7762D994B0EAC0152B4 /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = rangeaccrual.hpp; path = ql/cashflows/rangeaccrual.hpp; sourceTree = SOURCE_ROOT; };
		F54E3C0E123C4D3CA8F7E7DF /* /Users/heiner/git/QuantLib/ql/time/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/time/all.hpp; sourceTree = SOURCE_ROOT; };
		F55299F0B0434F78AB56D786 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = faurersg.hpp; path = ql/math/randomnumbers/faurersg.hpp; sourceTree = SOURCE_ROOT; };
		F553200DC7D04ACE896EAC7D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = ctsmmcapletcalibration.hpp; path = ql/models/marketmodels/models/ctsmmcapletcalibration.hpp; sourceTree = SOURCE_ROOT; };
		F55764BC14FB467B95D3629D /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = gjrgarchprocess.cpp; path = ql/processes/gjrgarchprocess.cpp; sourceTree = SOURCE_ROOT; };
		F582207E402542D89555D0C3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepswaption.hpp; path = ql/models/marketmodels/products/multistep/multistepswaption.hpp; sourceTree = SOURCE_ROOT; };
		F5A75660C8A243B09E87008F /* /Users/heiner/git/QuantLib/ql/cashflows/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/cashflows/all.hpp; sourceTree = SOURCE_ROOT; };
		F5B44CD589EA400FA63F4046 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fittedbonddiscountcurve.cpp; path = ql/termstructures/yield/fittedbonddiscountcurve.cpp; sourceTree = SOURCE_ROOT; };
		F5CA83EBEBC34228B6FCA862 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = commodityunitcost.hpp; path = ql/experimental/commodities/commodityunitcost.hpp; sourceTree = SOURCE_ROOT; };
		F5DB1B1C137A46FB944E0436 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = g2.hpp; path = ql/models/shortrate/twofactormodels/g2.hpp; sourceTree = SOURCE_ROOT; };
		F5F1423454FE42C6BFE9236F /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = unitedkingdom.cpp; path = ql/time/calendars/unitedkingdom.cpp; sourceTree = SOURCE_ROOT; };
		F5F96096F5F94FA5938C2BF5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = riskyassetswapoption.cpp; path = ql/experimental/credit/riskyassetswapoption.cpp; sourceTree = SOURCE_ROOT; };
		F6195788EBC448DB8EB8BDBA /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = creditdefaultswap.hpp; path = ql/instruments/creditdefaultswap.hpp; sourceTree = SOURCE_ROOT; };
		F6350A60CB7A4674ACC92B79 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/matrixutilities/all.hpp; sourceTree = SOURCE_ROOT; };
		F649D97EC38D4FA9A3F380A1 /* /Users/heiner/git/QuantLib/ql/time/calendar.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = calendar.hpp; path = ql/time/calendar.hpp; sourceTree = SOURCE_ROOT; };
		F6684F1511814E6D857D156E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcoupon.cpp; path = ql/cashflows/inflationcoupon.cpp; sourceTree = SOURCE_ROOT; };
		F683CE03DE7B4E8EB78C50B5 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmcovarproxy.hpp; path = ql/legacy/libormarketmodels/lfmcovarproxy.hpp; sourceTree = SOURCE_ROOT; };
		F6857F3CB38742AEA5B5B66B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = collectnodedata.hpp; path = ql/models/marketmodels/callability/collectnodedata.hpp; sourceTree = SOURCE_ROOT; };
		F68A7B6900814C579BAA8DF5 /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = eurliborswap.hpp; path = ql/indexes/swap/eurliborswap.hpp; sourceTree = SOURCE_ROOT; };
		F68C2DF5213F411FAD4A4A5C /* /Users/heiner/git/QuantLib/ql/experimental/math/laplaceinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = laplaceinterpolation.hpp; path = ql/experimental/math/laplaceinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		F6AF73885D1A4E34B0BB6AD5 /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = deltavolquote.hpp; path = ql/experimental/fx/deltavolquote.hpp; sourceTree = SOURCE_ROOT; };
		F6BF241FB63949F0AE12DC6D /* /Users/heiner/git/QuantLib/ql/pricingengines/latticeshortratemodelengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = latticeshortratemodelengine.hpp; path = ql/pricingengines/latticeshortratemodelengine.hpp; sourceTree = SOURCE_ROOT; };
		F6C6E7140E954349BA71E47C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/methods/finitedifferences/operators/all.hpp; sourceTree = SOURCE_ROOT; };
		F6C9480EF5324F1E825D1952 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bsmoperator.cpp; path = ql/methods/finitedifferences/bsmoperator.cpp; sourceTree = SOURCE_ROOT; };
		F6E2CC9A5C9749FE8C00F96F /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = asianoptions.cpp; path = "test-suite/asianoptions.cpp"; sourceTree = SOURCE_ROOT; };
		F6E7FE8F265548108664FD22 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmg2solver.hpp; path = ql/methods/finitedifferences/solvers/fdmg2solver.hpp; sourceTree = SOURCE_ROOT; };
		F6F1263CE1094E639D7020D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardperformanceengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = forwardperformanceengine.hpp; path = ql/pricingengines/forward/forwardperformanceengine.hpp; sourceTree = SOURCE_ROOT; };
		F6F51814C1B14A95ACAD80BB /* /Users/heiner/git/QuantLib/ql/patterns/lazyobject.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lazyobject.hpp; path = ql/patterns/lazyobject.hpp; sourceTree = SOURCE_ROOT; };
		F6F9EDCABD104562A4AF67EA /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipath.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multipath.hpp; path = ql/methods/montecarlo/multipath.hpp; sourceTree = SOURCE_ROOT; };
		F714070814F64D229A63901B /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = squarerootclvmodel.hpp; path = ql/experimental/models/squarerootclvmodel.hpp; sourceTree = SOURCE_ROOT; };
		F72A81DEA592441BAC582C3A /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = alimikhailhaqcopula.cpp; path = ql/math/copulas/alimikhailhaqcopula.cpp; sourceTree = SOURCE_ROOT; };
		F72D49CE6296465BA60A7AB8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmhullwhitesolver.cpp; path = ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp; sourceTree = SOURCE_ROOT; };
		F73D239006734A41AC271111 /* /Users/heiner/git/QuantLib/ql/time/daycounters/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/time/daycounters/all.hpp; sourceTree = SOURCE_ROOT; };
		F7415DE49E2C4E698F72943B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = analytictwoassetcorrelationengine.hpp; path = ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp; sourceTree = SOURCE_ROOT; };
		F75F1FB4349E48F48093A8FB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepratchet.hpp; path = ql/models/marketmodels/products/multistep/multistepratchet.hpp; sourceTree = SOURCE_ROOT; };
		F7741A8C2F274835A2F9E182 /* /Users/heiner/git/QuantLib/ql/math/interpolations/xabrinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = xabrinterpolation.hpp; path = ql/math/interpolations/xabrinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		F788261FDAB84252B93F937A /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = arithmeticoisratehelper.cpp; path = ql/experimental/averageois/arithmeticoisratehelper.cpp; sourceTree = SOURCE_ROOT; };
		F7D2800C780542EA85B3F5EE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/models/marketmodels/products/all.hpp; sourceTree = SOURCE_ROOT; };
		F7D960BFB3174395BCAEA0A8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = evolutiondescription.hpp; path = ql/models/marketmodels/evolutiondescription.hpp; sourceTree = SOURCE_ROOT; };
		F7E0DD7FB9B845B58DCA5506 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multiproductmultistep.cpp; path = ql/models/marketmodels/products/multiproductmultistep.cpp; sourceTree = SOURCE_ROOT; };
		F7E41A518F7F48E6BCA61D28 /* /Users/heiner/git/QuantLib/test-suite/cdo.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = cdo.cpp; path = "test-suite/cdo.cpp"; sourceTree = SOURCE_ROOT; };
		F7E454F273434F73B673FB9E /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/swap/all.hpp; sourceTree = SOURCE_ROOT; };
		F7E54AD333FF481AB555F8C2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fedfunds.cpp; path = ql/indexes/ibor/fedfunds.cpp; sourceTree = SOURCE_ROOT; };
		F7FCC6785A9743F48BE93A2B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhestonvariancemesher.hpp; path = ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp; sourceTree = SOURCE_ROOT; };
		F8023026C1C546528B315399 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multiproductonestep.cpp; path = ql/models/marketmodels/products/multiproductonestep.cpp; sourceTree = SOURCE_ROOT; };
		F8040D80FE9A423E9BD33EB6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmvppstepcondition.cpp; path = ql/experimental/finitedifferences/fdmvppstepcondition.cpp; sourceTree = SOURCE_ROOT; };
		F804AF156FDF448482416244 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = oneassetoption.cpp; path = ql/instruments/oneassetoption.cpp; sourceTree = SOURCE_ROOT; };
		F812A29F5A224B6A930CFD31 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmhullwhiteop.hpp; path = ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp; sourceTree = SOURCE_ROOT; };
		F8168CEF056549E7B9D2AC4A /* /Users/heiner/git/QuantLib/ql/quantlib.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = quantlib.hpp; path = ql/quantlib.hpp; sourceTree = SOURCE_ROOT; };
		F8202628BBBB4E43A8325472 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = multistepinversefloater.cpp; path = ql/models/marketmodels/products/multistep/multistepinversefloater.cpp; sourceTree = SOURCE_ROOT; };
		F855D574860140CB8FA1E33B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = liborforwardmodel.cpp; path = ql/legacy/libormarketmodels/liborforwardmodel.cpp; sourceTree = SOURCE_ROOT; };
		F858256C7AF544D8B8F47757 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomlosslatentmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomlosslatentmodel.hpp; path = ql/experimental/credit/randomlosslatentmodel.hpp; sourceTree = SOURCE_ROOT; };
		F85CB12C80C54EB5A75948F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcvanillaengine.hpp; path = ql/pricingengines/vanilla/mcvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		F86AA7250B84444A90656317 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = squarerootandersen.cpp; path = ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp; sourceTree = SOURCE_ROOT; };
		F8872C2659CA4DCC9E21ECFB /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = calibrationhelper.hpp; path = ql/models/calibrationhelper.hpp; sourceTree = SOURCE_ROOT; };
		F892B6DEE387486C966A0FA5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = upperboundengine.hpp; path = ql/models/marketmodels/callability/upperboundengine.hpp; sourceTree = SOURCE_ROOT; };
		F8A9AA8DF728418FA6950974 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlocalvolfwdop.hpp; path = ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp; sourceTree = SOURCE_ROOT; };
		F8BF5D5810A3467C80E456E5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = basket.cpp; path = ql/experimental/credit/basket.cpp; sourceTree = SOURCE_ROOT; };
		F8C7C20631954E4FAF33BFFD /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = callablebondconstantvol.hpp; path = ql/experimental/callablebonds/callablebondconstantvol.hpp; sourceTree = SOURCE_ROOT; };
		F8D93BD52840473284B88CF7 /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = europeanoption.cpp; path = "test-suite/europeanoption.cpp"; sourceTree = SOURCE_ROOT; };
		F8DE5BA863D24CE196BB6729 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdblackscholesrebateengine.hpp; path = ql/pricingengines/barrier/fdblackscholesrebateengine.hpp; sourceTree = SOURCE_ROOT; };
		F8F67CDE08A541B0A29ADCD9 /* /Users/heiner/git/QuantLib/ql/interestrate.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = interestrate.hpp; path = ql/interestrate.hpp; sourceTree = SOURCE_ROOT; };
		F8FF77F59F0F4A7E8038DD22 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = yoycapfloortermpricesurface.hpp; path = ql/experimental/inflation/yoycapfloortermpricesurface.hpp; sourceTree = SOURCE_ROOT; };
		F914BCE660F94695AEEED284 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mc_discr_arith_av_strike.cpp; path = ql/pricingengines/asian/mc_discr_arith_av_strike.cpp; sourceTree = SOURCE_ROOT; };
		F91AC6258071491FB240D1D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = timehomogeneousforwardcorrelation.hpp; path = ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp; sourceTree = SOURCE_ROOT; };
		F95839FAB6DA4CEDA160B6C3 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = steepestdescent.hpp; path = ql/math/optimization/steepestdescent.hpp; sourceTree = SOURCE_ROOT; };
		F96EBCDBF917478988BCF635 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = triplebandlinearop.cpp; path = ql/methods/finitedifferences/operators/triplebandlinearop.cpp; sourceTree = SOURCE_ROOT; };
		F98021BB0F974725980DDC76 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = unitofmeasureconversion.hpp; path = ql/experimental/commodities/unitofmeasureconversion.hpp; sourceTree = SOURCE_ROOT; };
		F982C1522A7040B693DC6283 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/parallelevolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = parallelevolver.hpp; path = ql/methods/finitedifferences/parallelevolver.hpp; sourceTree = SOURCE_ROOT; };
		F982E245BB614BB0BEA5E226 /* /Users/heiner/git/QuantLib/Examples/FRA/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/FRA/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F9845E26D89E401194938A68 /* /Users/heiner/git/QuantLib/ql/time/daycounters/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/time/daycounters/all.hpp; sourceTree = SOURCE_ROOT; };
		F98C377F1C1A4BD997047298 /* /Users/heiner/git/QuantLib/ql/math/beta.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = beta.hpp; path = ql/math/beta.hpp; sourceTree = SOURCE_ROOT; };
		F9908E23B95245F49E4F5E81 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fftvanillaengine.hpp; path = ql/experimental/variancegamma/fftvanillaengine.hpp; sourceTree = SOURCE_ROOT; };
		F9C0127AF1EA4ED99D1A9FB3 /* /Users/heiner/git/QuantLib/test-suite/period.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = period.cpp; path = "test-suite/period.cpp"; sourceTree = SOURCE_ROOT; };
		F9C3AF5CAE5B45DDA02DE982 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = pseudosqrt.cpp; path = ql/math/matrixutilities/pseudosqrt.cpp; sourceTree = SOURCE_ROOT; };
		F9C59F2F7FE441C5B431DA3D /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = zerocouponbond.cpp; path = ql/instruments/bonds/zerocouponbond.cpp; sourceTree = SOURCE_ROOT; };
		F9CE014162BB4CE1B6ADB5E4 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makearithmeticaverageois.hpp; path = ql/experimental/averageois/makearithmeticaverageois.hpp; sourceTree = SOURCE_ROOT; };
		F9E3AD7DD89445499DCC6AF1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = extendedblackvariancecurve.hpp; path = ql/experimental/volatility/extendedblackvariancecurve.hpp; sourceTree = SOURCE_ROOT; };
		F9EC573C03B4414AB0598957 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmsquarerootfwdop.hpp; path = ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp; sourceTree = SOURCE_ROOT; };
		F9EFD56C4157488AAA03F9F4 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gsr.hpp; path = ql/models/shortrate/onefactormodels/gsr.hpp; sourceTree = SOURCE_ROOT; };
		FA1625337EBE4D2A882C3E38 /* /Users/heiner/git/QuantLib/ql/grid.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = grid.hpp; path = ql/grid.hpp; sourceTree = SOURCE_ROOT; };
		FA1E27CEB67D4B2A97ED5904 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdminnervaluecalculator.hpp; path = ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp; sourceTree = SOURCE_ROOT; };
		FA22AF0AF2A249C7B0CC5D08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = analyticbsmhullwhiteengine.cpp; path = ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp; sourceTree = SOURCE_ROOT; };
		FA3A80D4EF35498CAD2FD26D /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mcbarrierengine.hpp; path = ql/pricingengines/barrier/mcbarrierengine.hpp; sourceTree = SOURCE_ROOT; };
		FA44354E5DB94C0FA29746B0 /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = factorial.cpp; path = ql/math/factorial.cpp; sourceTree = SOURCE_ROOT; };
		FA450171CABE48F4AF951DA9 /* /Users/heiner/git/QuantLib/ql/time/asx.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = asx.hpp; path = ql/time/asx.hpp; sourceTree = SOURCE_ROOT; };
		FA4B3E65FA6A4F13A4C9BEE6 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = sabrvolsurface.cpp; path = ql/experimental/volatility/sabrvolsurface.cpp; sourceTree = SOURCE_ROOT; };
		FA7226BBA00E42A4BFD8BC9B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussian1dnonstandardswaptionengine.hpp; path = ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		FA81CF4115B744F28B4A53E9 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = defaulttermstructure.hpp; path = ql/termstructures/defaulttermstructure.hpp; sourceTree = SOURCE_ROOT; };
		FA846D43C6924EB1A4E2DB84 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = qrdecomposition.cpp; path = ql/math/matrixutilities/qrdecomposition.cpp; sourceTree = SOURCE_ROOT; };
		FA8C8BF38D594D478D4C610A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lfmswaptionengine.hpp; path = ql/legacy/libormarketmodels/lfmswaptionengine.hpp; sourceTree = SOURCE_ROOT; };
		FA915512970641A19E691964 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdm3dimsolver.hpp; path = ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp; sourceTree = SOURCE_ROOT; };
		FAB048E068B0415BA601844C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = holderextensibleoption.cpp; path = ql/experimental/exoticoptions/holderextensibleoption.cpp; sourceTree = SOURCE_ROOT; };
		FAB551B1B25D4039BCF44819 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = vanillaoption.hpp; path = ql/instruments/vanillaoption.hpp; sourceTree = SOURCE_ROOT; };
		FABAD9319263451D80CF919F /* /Users/heiner/git/QuantLib/ql/experimental/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/all.hpp; sourceTree = SOURCE_ROOT; };
		FABFB2CFAB51459B94D8F602 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = capletcoterminalalphacalibration.hpp; path = ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp; sourceTree = SOURCE_ROOT; };
		FACF0ACB61754803A2254082 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = generalstatistics.cpp; path = ql/math/statistics/generalstatistics.cpp; sourceTree = SOURCE_ROOT; };
		FAD58312BADE4E4EB4F0D91D /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = makecapfloor.hpp; path = ql/instruments/makecapfloor.hpp; sourceTree = SOURCE_ROOT; };
		FADBE2EC163744D792A81300 /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = calibrationhelper.cpp; path = ql/models/calibrationhelper.cpp; sourceTree = SOURCE_ROOT; };
		FAE7D81084F8492FB38A2F0E /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = finland.hpp; path = ql/time/calendars/finland.hpp; sourceTree = SOURCE_ROOT; };
		FAEB7026FBBF4D26A02EEEBA /* /Users/heiner/git/QuantLib/test-suite/tqreigendecomposition.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = tqreigendecomposition.cpp; path = "test-suite/tqreigendecomposition.cpp"; sourceTree = SOURCE_ROOT; };
		FAEE2475BE084F84ADE50D72 /* LatentModel */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = LatentModel; sourceTree = BUILT_PRODUCTS_DIR; };
		FAFB5A9A76254A76A057032D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewisezerospreadedtermstructure.hpp; path = ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp; sourceTree = SOURCE_ROOT; };
		FB12D268F8B54C2D86234AD5 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/pricingengines/capfloor/all.hpp; sourceTree = SOURCE_ROOT; };
		FB162405E4E241E8BD1042BC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = commoditypricinghelpers.cpp; path = ql/experimental/commodities/commoditypricinghelpers.cpp; sourceTree = SOURCE_ROOT; };
		FB46F928BCE44457BF26FD4F /* /Users/heiner/git/QuantLib/test-suite/quotes.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quotes.cpp; path = "test-suite/quotes.cpp"; sourceTree = SOURCE_ROOT; };
		FB4F633E5BEA4D8AB8DEB339 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = makecms.cpp; path = ql/instruments/makecms.cpp; sourceTree = SOURCE_ROOT; };
		FB5F28398C534509947B1543 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmaffinemodelswapinnervalue.hpp; path = ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp; sourceTree = SOURCE_ROOT; };
		FB65257584B84FBE8BF744BE /* /Users/heiner/git/QuantLib/test-suite/everestoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = everestoption.hpp; path = "test-suite/everestoption.hpp"; sourceTree = SOURCE_ROOT; };
		FB6C1685918F4F98849420D6 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletcalibration.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = marketmodel_smmcapletcalibration.cpp; path = "test-suite/marketmodel_smmcapletcalibration.cpp"; sourceTree = SOURCE_ROOT; };
		FB7CDD4BF26944E29E3567CE /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = target.cpp; path = ql/time/calendars/target.cpp; sourceTree = SOURCE_ROOT; };
		FB8B696E177A4B8DB503DF33 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdhestonrebateengine.cpp; path = ql/pricingengines/barrier/fdhestonrebateengine.cpp; sourceTree = SOURCE_ROOT; };
		FBA1951F3D1E4F7A90693E43 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmstepconditioncomposite.hpp; path = ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp; sourceTree = SOURCE_ROOT; };
		FBAB6CE56D4A45C58F348481 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mtbrowniangenerator.cpp; path = ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp; sourceTree = SOURCE_ROOT; };
		FBCA0DF2897A4CD8ABBDEA41 /* /Users/heiner/git/QuantLib/ql/math/statistics/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/math/statistics/all.hpp; sourceTree = SOURCE_ROOT; };
		FBF9956033D14106A8250DF3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrsmilesection.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = zabrsmilesection.hpp; path = ql/experimental/volatility/zabrsmilesection.hpp; sourceTree = SOURCE_ROOT; };
		FBFCDB2AF3394A7DA95A1646 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatinterpolation.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = backwardflatinterpolation.hpp; path = ql/math/interpolations/backwardflatinterpolation.hpp; sourceTree = SOURCE_ROOT; };
		FC0256F1C0F448EC8DFB92A5 /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = differentialevolution.cpp; path = ql/math/optimization/differentialevolution.cpp; sourceTree = SOURCE_ROOT; };
		FC076640D0CC4E67BF58B871 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swapbasissystem.cpp; path = ql/models/marketmodels/callability/swapbasissystem.cpp; sourceTree = SOURCE_ROOT; };
		FC19D4F9AD464CB2B287335D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdm2dblackscholesop.cpp; path = ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp; sourceTree = SOURCE_ROOT; };
		FC286D05F8A84E8E98025498 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = quantobarrieroption.cpp; path = ql/instruments/quantobarrieroption.cpp; sourceTree = SOURCE_ROOT; };
		FC47A9C47B634FC4956C301B /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bicgstab.hpp; path = ql/math/matrixutilities/bicgstab.hpp; sourceTree = SOURCE_ROOT; };
		FC5BB6F2783B453092DB0B8C /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonslvfdmmodel.cpp; path = ql/experimental/models/hestonslvfdmmodel.cpp; sourceTree = SOURCE_ROOT; };
		FC5F012F03314820A43B9910 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = endeulerdiscretization.cpp; path = ql/processes/endeulerdiscretization.cpp; sourceTree = SOURCE_ROOT; };
		FC65B5C30B9141CDA8B5EB10 /* /Users/heiner/git/QuantLib/test-suite/rounding.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = rounding.cpp; path = "test-suite/rounding.cpp"; sourceTree = SOURCE_ROOT; };
		FC6E1F48DB97438296561A9A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmmeshercomposite.cpp; path = ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp; sourceTree = SOURCE_ROOT; };
		FC77A210617643AEA173E8EA /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = randomdefaultmodel.hpp; path = ql/experimental/credit/randomdefaultmodel.hpp; sourceTree = SOURCE_ROOT; };
		FC891863FF9E40B2A457F64C /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackscholescalculator.cpp; path = ql/pricingengines/blackscholescalculator.cpp; sourceTree = SOURCE_ROOT; };
		FCBCEF86AC3341B98BEC6C7C /* /Users/heiner/git/QuantLib/test-suite/inflationcpicapfloor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcpicapfloor.cpp; path = "test-suite/inflationcpicapfloor.cpp"; sourceTree = SOURCE_ROOT; };
		FCDF86EDEA234595B02E68CE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = mchestonhullwhiteengine.hpp; path = ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp; sourceTree = SOURCE_ROOT; };
		FCEC5CDB8BDB41F6878283C3 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multidimquadrature.hpp; path = ql/experimental/math/multidimquadrature.hpp; sourceTree = SOURCE_ROOT; };
		FCF61BA65ED640ADB43FBCBA /* /Users/heiner/git/QuantLib/test-suite/dividendoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = dividendoption.hpp; path = "test-suite/dividendoption.hpp"; sourceTree = SOURCE_ROOT; };
		FD08367E6159469B94E6004C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = sobolbrowniangenerator.hpp; path = ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp; sourceTree = SOURCE_ROOT; };
		FD0C6CA4A50C40AE9DEE841B /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cmsspreadcoupon.hpp; path = ql/experimental/coupons/cmsspreadcoupon.hpp; sourceTree = SOURCE_ROOT; };
		FD13B2695F29448FA596B5DB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = continuousarithmeticasianlevyengine.cpp; path = ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp; sourceTree = SOURCE_ROOT; };
		FD2E123CB7AF414CBABCB82C /* /Users/heiner/git/QuantLib/test-suite/inflationcpicapfloor.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = inflationcpicapfloor.hpp; path = "test-suite/inflationcpicapfloor.hpp"; sourceTree = SOURCE_ROOT; };
		FD44CCF03BD246FEA6127860 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = japan.hpp; path = ql/time/calendars/japan.hpp; sourceTree = SOURCE_ROOT; };
		FD4BC3F2E89F41FFBEB2345C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eurlibor.cpp; path = ql/indexes/ibor/eurlibor.cpp; sourceTree = SOURCE_ROOT; };
		FD4D1198DC3B41FDA89F92F2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capfloortermvolatilitystructure.cpp; path = ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp; sourceTree = SOURCE_ROOT; };
		FD53A05CF0CC42F1AE754D73 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = eonia.cpp; path = ql/indexes/ibor/eonia.cpp; sourceTree = SOURCE_ROOT; };
		FD56E4F24C50464EBFFDDC7F /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lookbackoption.hpp; path = ql/instruments/lookbackoption.hpp; sourceTree = SOURCE_ROOT; };
		FD5E2891C74646939DA477D5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdmlinearoplayout.cpp; path = ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp; sourceTree = SOURCE_ROOT; };
		FD62D91946594A7A9C005ECE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/pricingperiod.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = pricingperiod.hpp; path = ql/experimental/commodities/pricingperiod.hpp; sourceTree = SOURCE_ROOT; };
		FD6373654DCC450BA8B9D925 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = blackvolsurface.hpp; path = ql/experimental/volatility/blackvolsurface.hpp; sourceTree = SOURCE_ROOT; };
		FD6C5D1C2FB947439197C3DB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewiseconstantvariance.cpp; path = ql/models/marketmodels/models/piecewiseconstantvariance.cpp; sourceTree = SOURCE_ROOT; };
		FD85DA5652C64FB1870F4CF4 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = jumpdiffusion.cpp; path = "test-suite/jumpdiffusion.cpp"; sourceTree = SOURCE_ROOT; };
		FD97EC3D717D41AAAA8FA37E /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mc_discr_arith_av_price.cpp; path = ql/pricingengines/asian/mc_discr_arith_av_price.cpp; sourceTree = SOURCE_ROOT; };
		FD9CD071D7E141978284AC2C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdklugeextouspreadengine.hpp; path = ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp; sourceTree = SOURCE_ROOT; };
		FDC47B752F2C412396433CE6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmblackscholessolver.hpp; path = ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp; sourceTree = SOURCE_ROOT; };
		FDD8FBEA0AA14774A70493AB /* /Users/heiner/git/QuantLib/ql/math/solvers1d/falseposition.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = falseposition.hpp; path = ql/math/solvers1d/falseposition.hpp; sourceTree = SOURCE_ROOT; };
		FDDEDFFA4AF34E2E981A19E3 /* /Users/heiner/git/QuantLib/test-suite/swaption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swaption.cpp; path = "test-suite/swaption.cpp"; sourceTree = SOURCE_ROOT; };
		FDE121172E504413B615E1E1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = hestonexpansionengine.cpp; path = ql/pricingengines/vanilla/hestonexpansionengine.cpp; sourceTree = SOURCE_ROOT; };
		FDE1E8DEBF484F6182E9547F /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = flatforward.hpp; path = ql/termstructures/yield/flatforward.hpp; sourceTree = SOURCE_ROOT; };
		FDEB4D504FE64A64BD0456AB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewiseyieldcurve.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = piecewiseyieldcurve.hpp; path = ql/termstructures/yield/piecewiseyieldcurve.hpp; sourceTree = SOURCE_ROOT; };
		FDED2DAA866D40E486C6F31C /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = dividendvanillaoption.cpp; path = ql/instruments/dividendvanillaoption.cpp; sourceTree = SOURCE_ROOT; };
		FE0F3D999E914043916940DD /* /Users/heiner/git/QuantLib/Examples/CVAIRS/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = Examples/CVAIRS/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		FE11375E997041429EBFC9B2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = exerciseadapter.cpp; path = ql/models/marketmodels/products/multistep/exerciseadapter.cpp; sourceTree = SOURCE_ROOT; };
		FE153250506C42A3A1C22FF9 /* /Users/heiner/git/QuantLib/test-suite/piecewisezerospreadedtermstructure.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = piecewisezerospreadedtermstructure.cpp; path = "test-suite/piecewisezerospreadedtermstructure.cpp"; sourceTree = SOURCE_ROOT; };
		FE30DBDC3C924704ACCC626D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lecuyeruniformrng.hpp; path = ql/math/randomnumbers/lecuyeruniformrng.hpp; sourceTree = SOURCE_ROOT; };
		FE3D86CFA6D943958231134B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = blackcapfloorengine.cpp; path = ql/pricingengines/capfloor/blackcapfloorengine.cpp; sourceTree = SOURCE_ROOT; };
		FE50154D20BB418E9EDDF377 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = fdblackscholesrebateengine.cpp; path = ql/pricingengines/barrier/fdblackscholesrebateengine.cpp; sourceTree = SOURCE_ROOT; };
		FE5345BA33E24C80AE849165 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationcapfloorengines.cpp; path = ql/pricingengines/inflation/inflationcapfloorengines.cpp; sourceTree = SOURCE_ROOT; };
		FE53913D92304D0D9B62AE53 /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = digitaliborcoupon.hpp; path = ql/cashflows/digitaliborcoupon.hpp; sourceTree = SOURCE_ROOT; };
		FE60A17DA7B64E06A5F8FA29 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = region.cpp; path = ql/indexes/region.cpp; sourceTree = SOURCE_ROOT; };
		FE83EAE0C6964AFC88D0FD4F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = multistepswap.hpp; path = ql/models/marketmodels/products/multistep/multistepswap.hpp; sourceTree = SOURCE_ROOT; };
		FE87706A04124E93AE818D74 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = integralcdoengine.hpp; path = ql/experimental/credit/integralcdoengine.hpp; sourceTree = SOURCE_ROOT; };
		FE9899E360424EB297F79547 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/all.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = all.hpp; path = ql/experimental/finitedifferences/all.hpp; sourceTree = SOURCE_ROOT; };
		FE9F2B80249246CCA06C1ACE /* /Users/heiner/git/QuantLib/test-suite/garch.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = garch.hpp; path = "test-suite/garch.hpp"; sourceTree = SOURCE_ROOT; };
		FED1B62979E24E43A3A7B8A3 /* /Users/heiner/git/QuantLib/ql/version.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = version.hpp; path = ql/version.hpp; sourceTree = SOURCE_ROOT; };
		FEDA3FEC565845518E6EEB8E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdshoutengine.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdshoutengine.hpp; path = ql/pricingengines/vanilla/fdshoutengine.hpp; sourceTree = SOURCE_ROOT; };
		FEE6DB57B8214465B20C4D72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = abcdvol.hpp; path = ql/models/marketmodels/models/abcdvol.hpp; sourceTree = SOURCE_ROOT; };
		FEF562EAD37443E2A5E9A41A /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = constantestimator.hpp; path = ql/models/volatility/constantestimator.hpp; sourceTree = SOURCE_ROOT; };
		FEFACDDDBFA54AF484E2CC03 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = capflooredinflationcoupon.cpp; path = ql/cashflows/capflooredinflationcoupon.cpp; sourceTree = SOURCE_ROOT; };
		FF115E5ED538463985FE53CA /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = cpicapfloortermpricesurface.hpp; path = ql/experimental/inflation/cpicapfloortermpricesurface.hpp; sourceTree = SOURCE_ROOT; };
		FF22544FF8DE4D38A6344ACE /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/path.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = path.hpp; path = ql/methods/montecarlo/path.hpp; sourceTree = SOURCE_ROOT; };
		FF2C6A3F962442CAB31D1A43 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = proxyibor.cpp; path = ql/experimental/coupons/proxyibor.cpp; sourceTree = SOURCE_ROOT; };
		FF3479BF062D4C62ABC9E745 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = lognormalfwdrateipc.hpp; path = ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp; sourceTree = SOURCE_ROOT; };
		FF362D6F88F74CD29F206120 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = bicgstab.cpp; path = ql/math/matrixutilities/bicgstab.cpp; sourceTree = SOURCE_ROOT; };
		FF3901C5C7EE4F1DAD99E1C0 /* /Users/heiner/git/QuantLib/ql/time/weekday.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = weekday.hpp; path = ql/time/weekday.hpp; sourceTree = SOURCE_ROOT; };
		FF3C9978E03645D588A1E5CC /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = saudiarabia.cpp; path = ql/time/calendars/saudiarabia.cpp; sourceTree = SOURCE_ROOT; };
		FF3F527D6E064408803B13D0 /* /Users/heiner/git/QuantLib/ql/models/model.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = model.hpp; path = ql/models/model.hpp; sourceTree = SOURCE_ROOT; };
		FF4BCE3E09D744CDA62143B1 /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = conjugategradient.cpp; path = ql/math/optimization/conjugategradient.cpp; sourceTree = SOURCE_ROOT; };
		FF5572FCCE4D4F618EAE9F84 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = gaussiannoncentralchisquaredpolynomial.hpp; path = ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp; sourceTree = SOURCE_ROOT; };
		FF7B633A0CA24DAD885C6934 /* /Users/heiner/git/QuantLib/test-suite/catbonds.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = catbonds.hpp; path = "test-suite/catbonds.hpp"; sourceTree = SOURCE_ROOT; };
		FF7C906CB2444472A0D6CB83 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = mceverestengine.cpp; path = ql/experimental/exoticoptions/mceverestengine.cpp; sourceTree = SOURCE_ROOT; };
		FFA93C29144544A5ADB04605 /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = swap.cpp; path = ql/instruments/swap.cpp; sourceTree = SOURCE_ROOT; };
		FFB28E478538491C95E87247 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = inflationindex.cpp; path = ql/indexes/inflationindex.cpp; sourceTree = SOURCE_ROOT; };
		FFB7BE9EE3A1463CA41A40AB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdmlinearopcomposite.hpp; path = ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp; sourceTree = SOURCE_ROOT; };
		FFCA88E7579C46F2885C490E /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.cpp; fileEncoding = 4; name = convertiblebonds.cpp; path = "test-suite/convertiblebonds.cpp"; sourceTree = SOURCE_ROOT; };
		FFCDB3FCF279426FAEAFF5C5 /* /Users/heiner/git/QuantLib/test-suite/fdheston.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = fdheston.hpp; path = "test-suite/fdheston.hpp"; sourceTree = SOURCE_ROOT; };
		FFE5C8DEBD9E4B868CE9658F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = faurersg.hpp; path = ql/math/randomnumbers/faurersg.hpp; sourceTree = SOURCE_ROOT; };
		FFFE4659475342278E17AE0D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bkbm.hpp */ = {isa = PBXFileReference; explicitFileType = sourcecode.cpp.h; fileEncoding = 4; name = bkbm.hpp; path = ql/indexes/ibor/bkbm.hpp; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
		105486C860494E4686896684 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				76CDB78A6CC3403983C9D109 /* /Users/heiner/git/QuantLib/Examples/GlobalOptimizer/GlobalOptimizer.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1926B465859B44F18B70E623 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1B28043E50704478BE655A71 /* /Users/heiner/git/QuantLib/Examples/Bonds/Bonds.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1F1C711D90584A0CA811E62B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A1E834AE3270412386B0EDD1 /* /Users/heiner/git/QuantLib/Examples/FRA/FRA.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		20A3C543695E4228829A93F5 = {
			isa = PBXGroup;
			children = (
				E0C2DB93C8604F688A63592A /* ALL_BUILD */,
				5E29FB09D5BC4758B73E734B /* ZERO_CHECK */,
				8A1B0B84BD2745DFA963C492 /* BasketLosses */,
				9BC96E70D5EC42E58A757B3C /* BermudanSwaption */,
				2F3FBE7EEF9A489E8096B407 /* Bonds */,
				831E4DE59FEA47D0906C0AEC /* CallableBonds */,
				566D25A5E53444F980F44C52 /* CDS */,
				4D34F303834A46FDA7E0C2B8 /* ConvertibleBonds */,
				FF841CAC94F649B19A39C1F8 /* CVAIRS */,
				8B6898D579C34E6095285F04 /* DiscreteHedging */,
				3CE6360CBC9C4DC39F2A8696 /* EquityOption */,
				2FBE8629CD184413A508FDF0 /* FittedBondCurve */,
				DD6A66A9BB274C7B82466896 /* FRA */,
				EE8D0FB632794B5EB2142B08 /* Gaussian1dModels */,
				D8659567561B4FD7960F2FB5 /* GlobalOptimizer */,
				AFDCA07787E842819ACF4B49 /* LatentModel */,
				28103519E5C246FA8513DC01 /* MarketModels */,
				52CE853060B84E638B3CD1C0 /* MultidimIntegral */,
				672DD33098C04AD19DBD8A77 /* Replication */,
				7FC6A9413B54462DBB1276BD /* Repo */,
				336742C432B148E385154D35 /* SwapValuation */,
				80D291BC0D4A438B88D0FBAA /* QuantLib_Static */,
				FBF07C22C5334949A99082F0 /* QuantLib */,
				832F9BB04359470298D34357 /* quantlib-benchmark */,
				DF8A4AD6D23A42778167BCD3 /* quantlib-test-suite */,
				2EF04F0F30074CF58D69908D /* Products */,
			);
			sourceTree = "<group>";
		};
		28103519E5C246FA8513DC01 /* MarketModels */ = {
			isa = PBXGroup;
			children = (
				73082107CE40404BBF54DE37 /* Source Files */,
				AEFD4115335B45CA9C9016D9 /* /Users/heiner/git/QuantLib/Examples/MarketModels/CMakeLists.txt */,
			);
			name = MarketModels;
			sourceTree = "<group>";
		};
		2DD558EAF3A049F4A987DD3E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				290E9953E31B4339804B9D54 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */,
				F6E2CC9A5C9749FE8C00F96F /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */,
				7CA5559C431D447685931BAE /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */,
				B7BD1370F3664C2993346D3D /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */,
				C5B288C3FEDC483C977FE774 /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */,
				62D70AE3DFDB407EAF87C31A /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */,
				47ADE1A3C7F847EA876D7347 /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */,
				1DCB4F45348647D687AC1849 /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */,
				923DA78E608A45938D325D87 /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */,
				6F77AEACE4F145E5818D7134 /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */,
				A2C02865DB924784B5CD8FE4 /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */,
				CFBD708F1E804A50B17F4F75 /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */,
				9A33ED317BFF40019193D257 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */,
				21832C57373E47919CC254C4 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */,
				91F4EE17F5254BA8AECFE44F /* /Users/heiner/git/QuantLib/test-suite/main.cpp */,
				624985C8D54A49D2BBF559EE /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */,
				BAC7CEA728FA460D83FC4578 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */,
				B8E6CE85DBE343EABFCF9AC9 /* /Users/heiner/git/QuantLib/test-suite/quantlibbenchmark.cpp */,
				BB086D5579D24802A295A5FF /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */,
				7C55A9C4A5F549D29B59EE93 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */,
				96BFFCC989544D92A7297D69 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */,
				E2185C48DFEC49189634A5D9 /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2EF04F0F30074CF58D69908D /* Products */ = {
			isa = PBXGroup;
			children = (
				8F9E4AEB8E3B40E8859424EC /* BasketLosses */,
				E9F721CE9B614D2480AB583B /* BermudanSwaption */,
				B4E2DE7C03FB48E0874EEFCD /* Bonds */,
				8BE5B3FEE1AC408CB6875AD8 /* CallableBonds */,
				671A1FDFF3C64725A8121969 /* CDS */,
				68F995DC882A45E699AC4DFA /* ConvertibleBonds */,
				87CB9B462ECC451191015B0F /* CVAIRS */,
				5E61A279ABBB4D99B6515E9E /* DiscreteHedging */,
				62155971204D401485956828 /* EquityOption */,
				BF739A0452B1461FAE15C25D /* FittedBondCurve */,
				6C7027831CB84376BF4D8B7C /* FRA */,
				4BF58A4ADE854667943EFFAE /* Gaussian1dModels */,
				CB377B1A2F584C87A06CFF49 /* GlobalOptimizer */,
				FAEE2475BE084F84ADE50D72 /* LatentModel */,
				F370AC3939B84D5082CF7798 /* MarketModels */,
				01A1AD65871644688181B1E4 /* MultidimIntegral */,
				E06A3ADA50B546C7B32B387D /* Replication */,
				0EC7BBD61B374E9C8550DD60 /* Repo */,
				157DCCDBF1524E4C9CA51DF1 /* SwapValuation */,
				413E22ABE4974928A0B93F06 /* QuantLib */,
				8531DAB31D7E478D84112930 /* QuantLib_Static */,
				DC58BF8184B3402C98F77459 /* quantlib-benchmark */,
				CD45EB149E344E6D955AAB29 /* quantlib-test-suite */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		2F3FBE7EEF9A489E8096B407 /* Bonds */ = {
			isa = PBXGroup;
			children = (
				1926B465859B44F18B70E623 /* Source Files */,
				7FC97741BC9347A7BE5C0124 /* /Users/heiner/git/QuantLib/Examples/Bonds/CMakeLists.txt */,
			);
			name = Bonds;
			sourceTree = "<group>";
		};
		2FBE8629CD184413A508FDF0 /* FittedBondCurve */ = {
			isa = PBXGroup;
			children = (
				F52F75370EB54FF382C0D654 /* Source Files */,
				5A891BDB6325481FAA954E17 /* /Users/heiner/git/QuantLib/Examples/FittedBondCurve/CMakeLists.txt */,
			);
			name = FittedBondCurve;
			sourceTree = "<group>";
		};
		3259B0E91A40462D857F29FC /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		336742C432B148E385154D35 /* SwapValuation */ = {
			isa = PBXGroup;
			children = (
				F1752ADF02BF41DD80537D75 /* Source Files */,
				BA89531499F2413588B73834 /* /Users/heiner/git/QuantLib/Examples/Swap/CMakeLists.txt */,
			);
			name = SwapValuation;
			sourceTree = "<group>";
		};
		3CE6360CBC9C4DC39F2A8696 /* EquityOption */ = {
			isa = PBXGroup;
			children = (
				DF2FFF4189544F60811F3CED /* Source Files */,
				8E66C6DC99EF493A94D1D0D9 /* /Users/heiner/git/QuantLib/Examples/EquityOption/CMakeLists.txt */,
			);
			name = EquityOption;
			sourceTree = "<group>";
		};
		44D91EEA4C7B4CF0B2C2D69E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				46B6AC528BC64A1A9B1CE76A /* /Users/heiner/git/QuantLib/Examples/BasketLosses/BasketLosses.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		4D34F303834A46FDA7E0C2B8 /* ConvertibleBonds */ = {
			isa = PBXGroup;
			children = (
				D648B556012B4DED8BDA77ED /* Source Files */,
				B388D14F31EB4199BC4A7093 /* /Users/heiner/git/QuantLib/Examples/ConvertibleBonds/CMakeLists.txt */,
			);
			name = ConvertibleBonds;
			sourceTree = "<group>";
		};
		52CE853060B84E638B3CD1C0 /* MultidimIntegral */ = {
			isa = PBXGroup;
			children = (
				CE943F7EDFBF42A8A194DB53 /* Source Files */,
				57EDA17ACADD4EA3A4F31601 /* /Users/heiner/git/QuantLib/Examples/MultidimIntegral/CMakeLists.txt */,
			);
			name = MultidimIntegral;
			sourceTree = "<group>";
		};
		566D25A5E53444F980F44C52 /* CDS */ = {
			isa = PBXGroup;
			children = (
				8907EB3AE2B84979BC694702 /* Source Files */,
				A3A7028AA7B5414DA097844D /* /Users/heiner/git/QuantLib/Examples/CDS/CMakeLists.txt */,
			);
			name = CDS;
			sourceTree = "<group>";
		};
		58358BA7DEA34444B0BD6107 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				13A4B015E76E4BAE83559E92 /* /Users/heiner/git/QuantLib/ql/auto_link.hpp */,
				76DF11C47B2F4D56A92790FD /* /Users/heiner/git/QuantLib/ql/cashflow.hpp */,
				F5A75660C8A243B09E87008F /* /Users/heiner/git/QuantLib/ql/cashflows/all.hpp */,
				ECF76C5A82D444BAA7EFBFEB /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.hpp */,
				89DCB589D6C6415896865327 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.hpp */,
				9ABC8BD57CBA447B8A4D2C2A /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.hpp */,
				1FEC683DF2054C419EC4B055 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.hpp */,
				10D8F4106BFD4DEC85276ECD /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.hpp */,
				C4F3313E080C405C8926F965 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.hpp */,
				D6F7B9B50ECA44E180A5D39D /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.hpp */,
				404F704BB8A14EAA9EBB96B0 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.hpp */,
				0786A405ADB444D9BA31E377 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.hpp */,
				384528CC394141AABD3A8DF3 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.hpp */,
				B3F7AE2F227345D3B7C9C28A /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.hpp */,
				21B7E6408AD6474BA3541236 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.hpp */,
				5E59274A6531484B9BD826F2 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.hpp */,
				5807078F5CCB4AC48FCAE96C /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.hpp */,
				AAE0242B7312464A928E39AA /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.hpp */,
				BE4E0AF9FDFC4185B6FD21E3 /* /Users/heiner/git/QuantLib/ql/cashflows/duration.hpp */,
				EDF7E6CFEC7145B4A0ED08FC /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.hpp */,
				EE32606E110D44638BC6EACB /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.hpp */,
				7299EB922E374B81BC3F6E06 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.hpp */,
				D0809A1639DA4D92913A6F5E /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.hpp */,
				96851528B8DC47C3B662C064 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.hpp */,
				D8696C7972C74D85B799E540 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.hpp */,
				3D32B8FB0B40482ABB8AF6D9 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.hpp */,
				D255C81650934E49AC01A0A8 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.hpp */,
				99CC978BF1AD4EBFBF03A7B7 /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.hpp */,
				DA5D8D668E0244E890B6A179 /* /Users/heiner/git/QuantLib/ql/cashflows/replication.hpp */,
				E7ADC72FA8A5452189D476DD /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.hpp */,
				EB869A8586C54C219FF2DA86 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.hpp */,
				2793E3FFB99F437BB032896A /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.hpp */,
				92E3347D50A74C0FB8C02F75 /* /Users/heiner/git/QuantLib/ql/compounding.hpp */,
				21151765720D4ABBBE335ECC /* /Users/heiner/git/QuantLib/ql/config.ansi.hpp */,
				85D9BFE75C544C9396F32B51 /* /Users/heiner/git/QuantLib/ql/config.mingw.hpp */,
				2603CEA4AD744AAFB63CD2C6 /* /Users/heiner/git/QuantLib/ql/config.msvc.hpp */,
				8A928DB22A3140BFAA27A7AC /* /Users/heiner/git/QuantLib/ql/config.sun.hpp */,
				1F3E2AE3A6E0424E901FD9A6 /* /Users/heiner/git/QuantLib/ql/currencies/africa.hpp */,
				DD2DD2BFCA5F4B22A3233806 /* /Users/heiner/git/QuantLib/ql/currencies/all.hpp */,
				AEA2E8380D9C414F9501D87A /* /Users/heiner/git/QuantLib/ql/currencies/america.hpp */,
				6A412B937D3E456785AECB2E /* /Users/heiner/git/QuantLib/ql/currencies/asia.hpp */,
				0050A765092448B69AE08D2E /* /Users/heiner/git/QuantLib/ql/currencies/europe.hpp */,
				595D94BE61F341DD9D3D18E8 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.hpp */,
				3A795BDA1EC84BE7802E2BD9 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.hpp */,
				ADC8962152B34362B4058F07 /* /Users/heiner/git/QuantLib/ql/currency.hpp */,
				7C6562E7E6E64AF28B1ABD6E /* /Users/heiner/git/QuantLib/ql/default.hpp */,
				C6BE55CAD400473D95A7514C /* /Users/heiner/git/QuantLib/ql/discretizedasset.hpp */,
				0D86200326D840D6B39CBDFC /* /Users/heiner/git/QuantLib/ql/errors.hpp */,
				6FDFA8FB45224EFAAADFE701 /* /Users/heiner/git/QuantLib/ql/event.hpp */,
				B1B71DC2CDDD4DFFA30DE45C /* /Users/heiner/git/QuantLib/ql/exchangerate.hpp */,
				2DD3A078E433410C9E526AD2 /* /Users/heiner/git/QuantLib/ql/exercise.hpp */,
				831074BE34F0457F8C34FAF0 /* /Users/heiner/git/QuantLib/ql/experimental/all.hpp */,
				7F0217D93CD74A758383C731 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/all.hpp */,
				E230681BC2E843D8997DAA71 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.hpp */,
				C99CC793A8AA47C580A11A51 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.hpp */,
				3C717C6BA2FD4013A0CF6FE8 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp */,
				C7179A1DC646467EBD34B9DE /* /Users/heiner/git/QuantLib/ql/experimental/averageois/all.hpp */,
				317E7C15525542BAABC2613A /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.hpp */,
				3B20F91A32644467A8287F9E /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.hpp */,
				735EEFFE46234EE797145AF8 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.hpp */,
				F9CE014162BB4CE1B6ADB5E4 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.hpp */,
				CE09B311529345768743EF2C /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/all.hpp */,
				AB5E69FC3F1847D98851AA65 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp */,
				0E703DA19A354A11ADB74C14 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.hpp */,
				8BE41E89A22F4A40ADCC9E24 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/binomialdoublebarrierengine.hpp */,
				97B7EC46C5EE4FA196CE941E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp */,
				4C840355F82644308F63A42A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.hpp */,
				2A5A0C5E2D5E428EBAA56988 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.hpp */,
				10E0A8A58DCB44D2B35624AA /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp */,
				7399E73B2AC64227955AF15B /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.hpp */,
				9196BCF5C4C24827ADCD69ED /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.hpp */,
				72708D0A909743C8A22C4A1D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp */,
				E80C22D0454C470DA229ADC4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgainterpolation.hpp */,
				95CB3D0961A941DE82AFF000 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp */,
				0FC09BF9F69940C598DDF43A /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/all.hpp */,
				C92EF899ECBD43E9A530B983 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.hpp */,
				C24B4881C506427CA90F1225 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.hpp */,
				8DC2A60E01364F0FB4D60433 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.hpp */,
				107C9665122E48798120A3C7 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.hpp */,
				70C34D46817D4B3C8A7C4778 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp */,
				38DF819012F3471CB17EBFF9 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.hpp */,
				51E298E42D3F48FC81932F4A /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/all.hpp */,
				215C7BD962724D1E8385DF38 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.hpp */,
				16A957CDC16942E4A1D34686 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.hpp */,
				DEC801AE5DFA473A8A9C9081 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.hpp */,
				3600F69AF0D14C44BEDD358F /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.hpp */,
				A137354145DF45E4A232F46B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/all.hpp */,
				97B2D01DBF8E4A9CBA07EEA8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.hpp */,
				97B1835C7AE944DCA1F0F889 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.hpp */,
				CB37B599A3E1487CA02F6D99 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.hpp */,
				081B5F1116444E1083BB000F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.hpp */,
				86FEDA313A5541219186183D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.hpp */,
				B9067D73479B45439DAA8A3A /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.hpp */,
				4EA4229741544AFAA2703C8F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.hpp */,
				F5CA83EBEBC34228B6FCA862 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.hpp */,
				0E34226B688145C9A39405FB /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.hpp */,
				E8FBA8AA37334AE28A71BFAE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.hpp */,
				0B8232FF7E414011AF04ED55 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.hpp */,
				D44169D38F32446198000ED7 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.hpp */,
				8890E648DDB94CBAB626AAEF /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.hpp */,
				877CA413095046968566C6D3 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.hpp */,
				8B5678EF928B4B10A3BA5D81 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/exchangecontract.hpp */,
				91F3AF24FEC0401AA42667BD /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.hpp */,
				EBBBBD5A96AB4A328A5BCC30 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/petroleumunitsofmeasure.hpp */,
				FD62D91946594A7A9C005ECE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/pricingperiod.hpp */,
				20FB6CC959A5416EBD4B9D0C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.hpp */,
				94228A9C624D4E4BA898948D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.hpp */,
				F98021BB0F974725980DDC76 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.hpp */,
				BBBA4F5A893F47AE8391718C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.hpp */,
				043A0CB10D7A4AE6B6261A10 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/all.hpp */,
				2B542FB132FF47558E7D9DD7 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/binomialconvertibleengine.hpp */,
				03FB7B9C2FC8493283EE496F /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.hpp */,
				C70A46E4A0854EBCA6D2C273 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.hpp */,
				018EDDBF02C64B22B0608163 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/tflattice.hpp */,
				8D9420B56EAA48C3ACE84B69 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/all.hpp */,
				3CBD39AE46844EBB8C425584 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.hpp */,
				072485EAF284432C817B7E9F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.hpp */,
				4646FE4CF61D48DFA2A80485 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.hpp */,
				A3EABA2643A24A42A08A20EA /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.hpp */,
				31860A377AFE4B24955525C7 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.hpp */,
				90638B3ECF0D471F8181E7CF /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.hpp */,
				32A12C15A68145BAA3818E3D /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.hpp */,
				BF0A759D43714BB5A3B7E7C3 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.hpp */,
				ADA62BF1FB264451ABC0EBD3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/all.hpp */,
				CA13E94B6F504640BEA07797 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationlossmodel.hpp */,
				172AFFA3A0044ECB97D0ED76 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.hpp */,
				7D81B65667AC4FA893D6DCFA /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.hpp */,
				0723B6F0F1BA4BBDA7BD4A13 /* /Users/heiner/git/QuantLib/ql/experimental/credit/binomiallossmodel.hpp */,
				DD523F0D69F9417D9986B916 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.hpp */,
				8531FDF381FF4D87B178C72C /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.hpp */,
				A84E21395FDB4C35944C6ED5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.hpp */,
				EF5E6182765841FCA1816E05 /* /Users/heiner/git/QuantLib/ql/experimental/credit/constantlosslatentmodel.hpp */,
				DDA7BAD99FD44A6DAECDD5F3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.hpp */,
				D96FB027AC224043B2A75DF3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.hpp */,
				07DBDE33DEEB435492C923AB /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultlossmodel.hpp */,
				A8D0D33F7C5646598DF218AE /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.hpp */,
				0A597142A99E4B0383CA3FDF /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitylatentmodel.hpp */,
				C2A21C2D3A154E12B8D76AF8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.hpp */,
				8A92F57473E84302B40AAB55 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.hpp */,
				D983BC410DC84892AD9820C1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/factorspreadedhazardratecurve.hpp */,
				E35F82CB868145A296C15F32 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.hpp */,
				25BEAE356EA749E1A4C94018 /* /Users/heiner/git/QuantLib/ql/experimental/credit/homogeneouspooldef.hpp */,
				2D279C45ECA54996BD36A80D /* /Users/heiner/git/QuantLib/ql/experimental/credit/inhomogeneouspooldef.hpp */,
				BD619FA10F914796A1AADA84 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.hpp */,
				AF03AFA8CF534B92ACB03C08 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.hpp */,
				85A07F8878C749BEB31EAEEC /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.hpp */,
				873C7546280C49B09DB8935F /* /Users/heiner/git/QuantLib/ql/experimental/credit/loss.hpp */,
				156A7F1AEBD0409EB58D2F54 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.hpp */,
				C3CFFA922F6447F1BE6B65B6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.hpp */,
				6760D3404C744100BF024B92 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.hpp */,
				83E50653C6014524BB456E65 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.hpp */,
				18ADD40DAC0E471691A600C9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.hpp */,
				8C0B81633D0C442EA4837E63 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.hpp */,
				84AF38CE356D4C01839703F6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.hpp */,
				4EDD4F64EB554C8EA8B1B5E3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultlatentmodel.hpp */,
				4182F609B72F49428093D907 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.hpp */,
				F858256C7AF544D8B8F47757 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomlosslatentmodel.hpp */,
				0B3B4B839BF74819AF49C080 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.hpp */,
				011C5D77E6BC4AA5A5477AF3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.hpp */,
				6DF8182D5F564924AD6946E9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recursivelossmodel.hpp */,
				D9778A0D95814E9A8685EF7F /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.hpp */,
				5BBA4A2C946B45A7B968A596 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.hpp */,
				D6C70C6312B94AB9B85677F3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.hpp */,
				841BF0D5DD0C4384B351C6EB /* /Users/heiner/git/QuantLib/ql/experimental/credit/saddlepointlossmodel.hpp */,
				883DB8AD91554285B3DD1FAB /* /Users/heiner/git/QuantLib/ql/experimental/credit/spotlosslatentmodel.hpp */,
				2CAB410FBFEF43FEB0A34AA6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spreadedhazardratecurve.hpp */,
				1083C30C476D48ED960D18C6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.hpp */,
				21A8ED205B0E430EA0A65759 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/all.hpp */,
				A3F417B958AA468D94E8851E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp */,
				5B535E297F564F0290027268 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp */,
				981B6E8C481F4DFA810239B0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp */,
				D87B36086B8A471A8538338F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp */,
				AA0A6E6D81FB43E7AE4D2D84 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp */,
				04783D774A0E42048A110437 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp */,
				57FD8841CFF6400DBE87E7F7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.hpp */,
				D00749DBADCB47368B5411D7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.hpp */,
				3B76728258204835AA641669 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp */,
				0B36E78B96DC4FD8A3C4D1D0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp */,
				B1B134E4DEEA41A1B0BE8466 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp */,
				AB8E11A19B394F20AC4255A2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.hpp */,
				6F36DBE4D88E41FE9B28E3AE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.hpp */,
				5050536B78204E63AE3A38CB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp */,
				EB47D97533C94136BCF33061 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp */,
				D22C5118244F44BFB5001FD8 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.hpp */,
				CE519827D7B04C44BC8C5289 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.hpp */,
				50AC258CB96D4D50ACE26E8B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.hpp */,
				2FFED6DF933940E0982996E7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.hpp */,
				310472F71F20484BA6D61570 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.hpp */,
				9BE4659E38C6444DBA30281F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.hpp */,
				D13DA7C867D44867820FA515 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.hpp */,
				C48BDCAC95814A1887C3CC62 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.hpp */,
				47ADC69DD0CF4B61B64270B2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.hpp */,
				586D55DF025C4040B875960B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.hpp */,
				790B3E4DCD1E4CE4A95C03AA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.hpp */,
				E9B479BCEDDE45B88D5A5E5F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/spreadoption.hpp */,
				BCCDD44B92E745F49C1BA409 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.hpp */,
				5EF9807D44484F199326DF14 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.hpp */,
				976000574C5643D187CA99C2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.hpp */,
				83B6B660ADC2481D96029976 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/all.hpp */,
				C77F374414EB451FB5EF4512 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.hpp */,
				0345122C87FA4731BCF51B63 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp */,
				F0BBD7CFF1B143999DA3CEF6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp */,
				21EB3C45352A42D6ABF18BC9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp */,
				501E5BB588914365B9FC7A5E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp */,
				705E0614A6FE4EA8A568F065 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp */,
				CF2CC3B0DD5D40579324661F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.hpp */,
				AB84362EB10A48179367DCB2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp */,
				0FCD59D751F04AB09DABF0B1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp */,
				CF930318F70B4575A81BF414 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp */,
				DD7D2AE9AD1F4576B784E9C1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.hpp */,
				BC59B318083B4BEBB1A54871 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.hpp */,
				E58AF359CCF84C8F991C766F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.hpp */,
				2C5DC17ACCBD4E0CA8BAA21E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.hpp */,
				1A40E55E974A49AC8381DA82 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.hpp */,
				C3D06DBCE29641219AE71B0F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextousolver.hpp */,
				55FC659CC90043ABA6BEFE2A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp */,
				DC6E0CD1002346F7BB819B87 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp */,
				DC963F7F12DA4185A6172610 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp */,
				0BDCB7E89A314F6C8F9DA123 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp */,
				0DF02A582A1A4A8FAC176D13 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp */,
				7E371034EFC140BDB5BA85A3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp */,
				34E470715B9C4D41A994220C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.hpp */,
				1DD68E1ED46E4A01823AFB90 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp */,
				4362EEA024604D0C830483F8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.hpp */,
				30634B024CB84B18A4A9A682 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp */,
				9A9AB1CB86BC46EA81FC112F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp */,
				EA11E71ED2174A71B0AC034B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp */,
				6A60A7729CAC4B45A7FB810C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp */,
				36F175815CD845ABB3727D3D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.hpp */,
				C559C41117724AC098D3B3C7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.hpp */,
				E4F264B723A54674A729B4B9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.hpp */,
				CE4710B912D74594BDC4AD35 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.hpp */,
				EEA062CEA5EB48BEADEAB989 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/modtriplebandlinearop.hpp */,
				1CFB43F3B7C34A2D8BD905B1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp */,
				F37A69B285DF4C0BAC842F04 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp */,
				F0EC821A79B840B198FC3535 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.hpp */,
				17D7123A0D1E4D8D9A795DD9 /* /Users/heiner/git/QuantLib/ql/experimental/fx/all.hpp */,
				B4F30E36C7664F46BAAD4890 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.hpp */,
				4EA33D3E791947D2A28D8E2F /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.hpp */,
				95777BDC6ACA4051BEA857A8 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/all.hpp */,
				E098DF0433044C8CBCF77CE8 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.hpp */,
				FF115E5ED538463985FE53CA /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.hpp */,
				1C6B7D16662F4B5B94509D9A /* /Users/heiner/git/QuantLib/ql/experimental/inflation/genericindexes.hpp */,
				206F4E5D4D0F476796A5DD4F /* /Users/heiner/git/QuantLib/ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp */,
				B929152FDB514197B303D1E1 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp */,
				C7A809D4BE3A4781A999BFC5 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp */,
				855C1387866948B8ACB74D4D /* /Users/heiner/git/QuantLib/ql/experimental/inflation/polynomial2Dspline.hpp */,
				D03436046A4E456293802185 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.hpp */,
				DC86CFD3C1784454A7516515 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp */,
				203C32D6F15146728522BCEF /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.hpp */,
				39381CF1DD6D4491BC8AE297 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionletstripper.hpp */,
				46A1718015C14830B533BE99 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/all.hpp */,
				E41F708C299A449E8BC4C52A /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.hpp */,
				9C4033EEAF9A4D5C9A99BA1B /* /Users/heiner/git/QuantLib/ql/experimental/math/all.hpp */,
				006FAF95BFA04CE48594F2EC /* /Users/heiner/git/QuantLib/ql/experimental/math/claytoncopularng.hpp */,
				3251B5351A4641D99838E521 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.hpp */,
				BD845D548D7F49F796B51A2B /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.hpp */,
				F337B60C74D64515B0F57724 /* /Users/heiner/git/QuantLib/ql/experimental/math/farliegumbelmorgensterncopularng.hpp */,
				69159201FE9D4B908048FBC1 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.hpp */,
				2E77C6DF58C54E3B8E716E5E /* /Users/heiner/git/QuantLib/ql/experimental/math/frankcopularng.hpp */,
				E0CF809E111E42479ED6CBC3 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.hpp */,
				C7CA2F936EE8460FA187C1CD /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp */,
				6DE0C05B4ECC4211946C404C /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealing.hpp */,
				BDF7CB9A7EC442DA8EB19F52 /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealingfunctors.hpp */,
				96AB8FB7450144CE96D4AA65 /* /Users/heiner/git/QuantLib/ql/experimental/math/isotropicrandomwalk.hpp */,
				C6A5E436D8144E3390111B2A /* /Users/heiner/git/QuantLib/ql/experimental/math/laplaceinterpolation.hpp */,
				3F4C822065E44C58B387C9E4 /* /Users/heiner/git/QuantLib/ql/experimental/math/latentmodel.hpp */,
				1E93FDC8DFBA435DA3F3EF23 /* /Users/heiner/git/QuantLib/ql/experimental/math/levyflightdistribution.hpp */,
				7FECAE9146654BC083AAE86D /* /Users/heiner/git/QuantLib/ql/experimental/math/moorepenroseinverse.hpp */,
				A9C79FC1702D4D4C9245B1A9 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.hpp */,
				E4170E4EAECA4D64A953C56A /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.hpp */,
				7BFE197CB82E49568770FF59 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.hpp */,
				9250DC8C8FBF4EE39CAC714D /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.hpp */,
				93A8240A20974C97802D7181 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewisefunction.hpp */,
				129F6FBB7C8A4EF3865E8EC8 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.hpp */,
				2F0DC4312BE44C00B52162CB /* /Users/heiner/git/QuantLib/ql/experimental/math/polarstudenttrng.hpp */,
				3B8E19C55E4A40648E721544 /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.hpp */,
				C5A1112C7686486D8DF3BA8B /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.hpp */,
				970C9D165D4E45779790E409 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.hpp */,
				ACF3841E5B194995815C87EE /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/all.hpp */,
				77C820D3F00C448881A9C02D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp */,
				563C0B6A8C4F40F4851F75A4 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcamericanpathengine.hpp */,
				C228DF4AD6D945878A8C969C /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp */,
				8493C1938B0A413299D6A2EB /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.hpp */,
				541A4BF4DA4C43D69A8F87FA /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.hpp */,
				375F4E73DAE24A0DB23C8BBE /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathpayoff.hpp */,
				6BEAAA0CC2914B549BBC50DE /* /Users/heiner/git/QuantLib/ql/experimental/models/all.hpp */,
				99C7C7EB235F496EB2E497D2 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.hpp */,
				AE8741D349294CA6A240D207 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.hpp */,
				9CC50ED1175147199505142C /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.hpp */,
				F714070814F64D229A63901B /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.hpp */,
				381955D85B6E41FDA848292A /* /Users/heiner/git/QuantLib/ql/experimental/processes/all.hpp */,
				2A49F523811646918D43CB5F /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.hpp */,
				9033C7B09FE347AB8986C351 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp */,
				425E3B7566E845CABC1CDB63 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.hpp */,
				B1AF77D0E5244261B58D8472 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.hpp */,
				9B19F3A62AA64E798E90A8CB /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.hpp */,
				0E6A1F76AF29438EA60838CA /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.hpp */,
				5EEC90F5A54F434E89945CCA /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.hpp */,
				C3ABE427B30C406DA0A21909 /* /Users/heiner/git/QuantLib/ql/experimental/risk/all.hpp */,
				F28DB4978D76465CAA028BD6 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.hpp */,
				1ED3CE680ACB4A9491F7E980 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.hpp */,
				E908627AA7B64DB1A622AC88 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/all.hpp */,
				AEFD384D848B44FFB8F8F7EA /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.hpp */,
				B1CA308F0E82491DBD0BF23C /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp */,
				5509E21B1C674D40AA52EC10 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/all.hpp */,
				E7B27B7AD79F4F5480A9AE66 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.hpp */,
				B6D41C232ED74412905FA95C /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.hpp */,
				641F0DE58B004D17B1C8591D /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.hpp */,
				2039243F188F4FC08A05CC55 /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/all.hpp */,
				16DADCB2CB1A400DB75AD79F /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/multicurvesensitivities.hpp */,
				5DE96E90EB46415C85457C83 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/all.hpp */,
				8CF1B60AE5E9408FA2DAAE31 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.hpp */,
				64F75B21AECA4532B0A9BEB0 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.hpp */,
				4126751D8EE543A384FFFB6D /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.hpp */,
				DAE0230ED71E43368F70E398 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.hpp */,
				DD370370E58A42D9BDF305F1 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.hpp */,
				72257E21994D42788D10B25D /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.hpp */,
				1721036ED6284EDB8690A2B6 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/all.hpp */,
				93748A23EFB24809A3C061A7 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp */,
				99BCC8A0559F4D32B89641F0 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.hpp */,
				C1B9E4B4EF20454AA01804A8 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.hpp */,
				68C8EA6E1D8F4B1F92C45565 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/all.hpp */,
				55F8A7E191ED4B1DB033905C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.hpp */,
				FD6373654DCC450BA8B9D925 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.hpp */,
				E9DB70074A6049DC83381D0B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.hpp */,
				BB52D5B41396452C911ACC28 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.hpp */,
				280410D92EB2445B9B1E68D1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.hpp */,
				EA2384DA0CD245A7B45E6E2C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.hpp */,
				5032C87939704086915DCD88 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.hpp */,
				AE47A1200A6047869FB2AD59 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp */,
				397C036C2BAA4A61876A3457 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolation.hpp */,
				097A87976881441A9D0F20BC /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.hpp */,
				4DCCFC71C74B4BE7BFC53BE0 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.hpp */,
				BCAFA7654B9E4FB0A297C873 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvoltermstructure.hpp */,
				9501997CF8CC4A3DA98F121C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.hpp */,
				D86FE1CE5975487585FB7798 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolation.hpp */,
				8718127DB25846758EFF64D2 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.hpp */,
				5D01B3F38317489CAA497CCE /* /Users/heiner/git/QuantLib/ql/experimental/volatility/swaptionvolcube1a.hpp */,
				328C46B6F7A943179CFA6CE7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.hpp */,
				9483D46A2162452B832D78C8 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.hpp */,
				44D091046CB146E880B99457 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolatedsmilesection.hpp */,
				E6A946D29B4D4D85A3C71F5E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolation.hpp */,
				FBF9956033D14106A8250DF3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrsmilesection.hpp */,
				5DC320B78C1844BAB2CF2813 /* /Users/heiner/git/QuantLib/ql/grid.hpp */,
				D474DD8879F34F6DB0260497 /* /Users/heiner/git/QuantLib/ql/handle.hpp */,
				0D53F7091D864E9FAB11327C /* /Users/heiner/git/QuantLib/ql/index.hpp */,
				9D4E176933164C1EA783B3BA /* /Users/heiner/git/QuantLib/ql/indexes/all.hpp */,
				319C4FC84D344AD4976745C4 /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.hpp */,
				EB742ECD46C64B81852ACDF6 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/all.hpp */,
				E3D70E07B5734024B5129E9F /* /Users/heiner/git/QuantLib/ql/indexes/ibor/aonia.hpp */,
				7B28B4EDB0D94E8CA1BE4A10 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/audlibor.hpp */,
				75AAF712C88A42BFAAFE2453 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bbsw.hpp */,
				FFFE4659475342278E17AE0D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bkbm.hpp */,
				0F9760EC5A5544DEAA28A468 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cadlibor.hpp */,
				1B16C83B956B441092A55FF9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cdor.hpp */,
				5A8CCFFE0A4F4AD796C9513E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/chflibor.hpp */,
				476CD531B2D74AC786AD20BF /* /Users/heiner/git/QuantLib/ql/indexes/ibor/dkklibor.hpp */,
				31FB1E06604F499885CA4017 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.hpp */,
				81364E6A24A448799033D6D2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.hpp */,
				B50992BF377D41F99589011D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.hpp */,
				92C767B9CF0D48BA9161757F /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.hpp */,
				1AD26686352D4ECDA52DC02B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/gbplibor.hpp */,
				83B23BA335494617A309CCA2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jibar.hpp */,
				D06DDECC6EAB43FA9424FDB7 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jpylibor.hpp */,
				79F93382F9E64E2A8EAD3825 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.hpp */,
				8ACF40E2423A493693566B52 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzdlibor.hpp */,
				E28DDDC98BC84CF58CBA3048 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzocr.hpp */,
				E3BD5FFB87A342A5B5BDD543 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/seklibor.hpp */,
				BBE6320C88084B0E8082F7E2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.hpp */,
				2038E15E727748FCA8A0283B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.hpp */,
				1A5C5D3D80074019A0283F1E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/tibor.hpp */,
				CA06A22CA90843B19FBB5F9B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/trlibor.hpp */,
				D524CA771616428E8AEA7855 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/usdlibor.hpp */,
				455DCCA9285B4BCBA84206C8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/zibor.hpp */,
				B7B86E377CCA4F6381EF4C64 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.hpp */,
				2663B1315565475D9EB12D23 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.hpp */,
				AFB883CFF9B14A468F28EAC4 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/all.hpp */,
				03398F762C3B49F5B5E0B3E9 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/aucpi.hpp */,
				D4433127F3A5436A9678392E /* /Users/heiner/git/QuantLib/ql/indexes/inflation/euhicp.hpp */,
				591EE9370F3B4193BCA917E8 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/frhicp.hpp */,
				2066ACE363E3491F8E56C1D5 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/ukrpi.hpp */,
				82ADD96DB55942419A5C4C1D /* /Users/heiner/git/QuantLib/ql/indexes/inflation/uscpi.hpp */,
				37731B643F4F455DADF13A50 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/zacpi.hpp */,
				16F6BE11AEBF45BD89EE5A48 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.hpp */,
				1668962CA0C842FA894A0C7B /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.hpp */,
				6EDD4C731E40497DB81EAC98 /* /Users/heiner/git/QuantLib/ql/indexes/region.hpp */,
				BB826C6F13254708910AED02 /* /Users/heiner/git/QuantLib/ql/indexes/swap/all.hpp */,
				410758D877234208888C3C5A /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.hpp */,
				4596A3B5C05841A7884EF6B1 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.hpp */,
				56CF698855C7446DA904A35E /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.hpp */,
				0B1E73007DBB435DA63EEA77 /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.hpp */,
				7088029D239B45E6910A777B /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.hpp */,
				51F03999B46A4AFFB17B5BEE /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.hpp */,
				8DC3BD4BF23C4B2BB51835C2 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.hpp */,
				9F61E46887154C989D7ECE43 /* /Users/heiner/git/QuantLib/ql/instrument.hpp */,
				A3E712BCC43046AA9CF76D44 /* /Users/heiner/git/QuantLib/ql/instruments/all.hpp */,
				3D7EFA5BE4A74ED0A38DEFC2 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.hpp */,
				A836B87431DD46BEAD2854E1 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.hpp */,
				F0E277F634574B469BAE10FE /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.hpp */,
				92B740E45D8A4C0D9E03D106 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.hpp */,
				2B1EC6567163437988279F37 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.hpp */,
				A6506E37EE2E4C3791903FD7 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.hpp */,
				92A371B9FFF846C28D174736 /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.hpp */,
				426241327858466B983AC9A9 /* /Users/heiner/git/QuantLib/ql/instruments/bond.hpp */,
				A114B667EE3443CC92FC8252 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/all.hpp */,
				CD40C67377FA4E5B96670D46 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.hpp */,
				918799BAD27A4B738FABF88A /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.hpp */,
				D34748420BCF4F72A96C06AF /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.hpp */,
				24D1E1B6642A449C8ABD6BEE /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.hpp */,
				F14411E4B71C49DF83766416 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.hpp */,
				D121FF8B464F4FE7988D8142 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.hpp */,
				5E95CBC756F847289E3E31D1 /* /Users/heiner/git/QuantLib/ql/instruments/callabilityschedule.hpp */,
				0D3ABC142DE84BF0AF338EC4 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.hpp */,
				1F7982BBAA9444E0A2AF02C7 /* /Users/heiner/git/QuantLib/ql/instruments/claim.hpp */,
				7212DCA7A6FC4C0997BC2E2B /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.hpp */,
				1E07CD15FCBC46BA8FD1D07C /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.hpp */,
				F103067B9B474C6BB654FC0C /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.hpp */,
				33E208C8B1234D3E9ABCBF57 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.hpp */,
				F6195788EBC448DB8EB8BDBA /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.hpp */,
				C51BCD2ED7EF4AD28423011F /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.hpp */,
				669BE30BFC244881B08A7C87 /* /Users/heiner/git/QuantLib/ql/instruments/dividendschedule.hpp */,
				96FD8F812F7F4AAF8E489560 /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.hpp */,
				23B301A4F4D84EBE877834D2 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.hpp */,
				C728527A34AA4E119F3A17F7 /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.hpp */,
				6195256BB1E1439D87431CAC /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.hpp */,
				58E83F2E06A2415A9FB0028A /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.hpp */,
				12343F58A246433D9607866F /* /Users/heiner/git/QuantLib/ql/instruments/forward.hpp */,
				01A895D7E1D9433991C052FA /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.hpp */,
				5D30F52F09CB4243A7D8C4BC /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.hpp */,
				0EAE97D90582498688FDFD42 /* /Users/heiner/git/QuantLib/ql/instruments/futures.hpp */,
				3DB8082A875E4B34A21C6728 /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.hpp */,
				F2DFC1263D4C4869843A38ED /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.hpp */,
				FD56E4F24C50464EBFFDDC7F /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.hpp */,
				FAD58312BADE4E4EB4F0D91D /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.hpp */,
				9376CD25BC664543AF602667 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.hpp */,
				D4F3C13884BE4D96A9FBA607 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.hpp */,
				5C5DCD415BD94D40AEC950E8 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.hpp */,
				D9682067AF634F1FBE22A8CB /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.hpp */,
				0F611F1F7A0D43F4869E1A46 /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.hpp */,
				66F7DA50156A4173905DE054 /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.hpp */,
				7F2B3425A3A9479DBCE944F8 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.hpp */,
				90AC1769F4254830BD8149C7 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.hpp */,
				D28BE3C76BFB444988D92C40 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.hpp */,
				D0B5BEE0689C476CB27DBB94 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.hpp */,
				B56D6919B8384F4C8136B308 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.hpp */,
				445D6BAA886347A9B0FAFF66 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.hpp */,
				EDFA2154E72E4809AC3B9446 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.hpp */,
				A487F336C4834DA7A6C2D204 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.hpp */,
				3B2B8DC6DD134B4093281724 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.hpp */,
				5C3143EC201B44949F21B821 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.hpp */,
				C6001021A5174D93ACBEB552 /* /Users/heiner/git/QuantLib/ql/instruments/stock.hpp */,
				23EC16A20ADD4D5B942F129B /* /Users/heiner/git/QuantLib/ql/instruments/swap.hpp */,
				C35A5051132F4FBAA72D36BC /* /Users/heiner/git/QuantLib/ql/instruments/swaption.hpp */,
				A1C669B5633E4B58AE67B277 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.hpp */,
				A62DA6AE90344F048BE4ECE9 /* /Users/heiner/git/QuantLib/ql/instruments/vanillastorageoption.hpp */,
				BDB0118783E34978A2DB9525 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.hpp */,
				856C08DE39204F079F717F7F /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.hpp */,
				2D4146F034C840F884307B79 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.hpp */,
				1013C7E317734859BB8A9336 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.hpp */,
				555089153F934B66B8162847 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.hpp */,
				F8F67CDE08A541B0A29ADCD9 /* /Users/heiner/git/QuantLib/ql/interestrate.hpp */,
				B5FCC3CB126141F78CB50F01 /* /Users/heiner/git/QuantLib/ql/legacy/all.hpp */,
				4E944116FB3D48BE84ED1B11 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/all.hpp */,
				8DA5DDA144684793A5301851 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.hpp */,
				F683CE03DE7B4E8EB78C50B5 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.hpp */,
				C2DAA40E8B89452BA9E2662A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp */,
				EB9DEC213AC64F3AB4AA888A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.hpp */,
				FA8C8BF38D594D478D4C610A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.hpp */,
				F276D49C9DEF4196A231C251 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.hpp */,
				6040C789D51943FA8F8AE74C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp */,
				2D1465D3E40B43DFAD567B67 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp */,
				F3F98D1C01564510B38CDE15 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.hpp */,
				B5515232A2384692B8DD0C34 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.hpp */,
				184742B8090B474C81E9AB9C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp */,
				159C7E99B5BE4C84B798C84B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.hpp */,
				73B87055D4424CFA928632E8 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp */,
				DCCC9F6214174C5A90BBFEB1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp */,
				637358957AE64B0E8C6EC351 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.hpp */,
				7776B0B5D3B149C19B13FEE7 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.hpp */,
				377BB54AE5784F5296BABFF8 /* /Users/heiner/git/QuantLib/ql/math/all.hpp */,
				9B5574D462BE4AADA6D666EA /* /Users/heiner/git/QuantLib/ql/math/array.hpp */,
				7448BDC2438649EEB619D07B /* /Users/heiner/git/QuantLib/ql/math/autocovariance.hpp */,
				10D0F4E0B6FE4AC7A839D2AC /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.hpp */,
				03F1C99DF136489CAE671918 /* /Users/heiner/git/QuantLib/ql/math/beta.hpp */,
				8366F96498794CC1BC3A9B33 /* /Users/heiner/git/QuantLib/ql/math/bspline.hpp */,
				10885A55AC88450D8CE95C7E /* /Users/heiner/git/QuantLib/ql/math/comparison.hpp */,
				5E84265E375B49C09CEDC1A0 /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.hpp */,
				A9F0B52A31AF4A62B678EDBA /* /Users/heiner/git/QuantLib/ql/math/copulas/all.hpp */,
				97DAA14898584B8492AEF36B /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.hpp */,
				4422D562BB7147859D96800F /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.hpp */,
				BA3C208E278544028C47F758 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.hpp */,
				1F349D6887154916A732CAD0 /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.hpp */,
				A84862D9D8A74EC7AE18F526 /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.hpp */,
				A75E9FB37B5942C69DF28B88 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.hpp */,
				547BF916F72E49DC8E2A0FCC /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.hpp */,
				ADFF26E9D95C479D8F9E402F /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.hpp */,
				10C0F0403E774A51870140B0 /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.hpp */,
				08FFE35FF76D4743AD557FF6 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.hpp */,
				6D20F020E68048DB9CD42CAE /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.hpp */,
				5978B02CA15C40BCAD7E0ABC /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.hpp */,
				182B129400F849BB93BB6811 /* /Users/heiner/git/QuantLib/ql/math/curve.hpp */,
				ABC5160ACA4543A3BAFEFF9E /* /Users/heiner/git/QuantLib/ql/math/distributions/all.hpp */,
				38E44B6E4B4145DBBD0C4B52 /* /Users/heiner/git/QuantLib/ql/math/distributions/binomialdistribution.hpp */,
				503EB87E6783417A993EFBC5 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.hpp */,
				01EF93EB813748CA928ED54D /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.hpp */,
				3AEEAE2424A94A9B91962EEE /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.hpp */,
				8B99879D67FF472E9BBD2862 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.hpp */,
				8203F31205AC4D66B9FE27F3 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.hpp */,
				471506017255430A894BE728 /* /Users/heiner/git/QuantLib/ql/math/distributions/poissondistribution.hpp */,
				365B281EE9564ACB9E98D887 /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.hpp */,
				47235A96B3684FD9B1A8DEF0 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.hpp */,
				8D9D4C978AB44F3BBAE17401 /* /Users/heiner/git/QuantLib/ql/math/factorial.hpp */,
				88CFD5B6E13340B9BC044AE8 /* /Users/heiner/git/QuantLib/ql/math/fastfouriertransform.hpp */,
				E7DD1752F7764383A261D496 /* /Users/heiner/git/QuantLib/ql/math/functional.hpp */,
				408FEF8763844AE19A5D2817 /* /Users/heiner/git/QuantLib/ql/math/generallinearleastsquares.hpp */,
				582452318D24487FBD7A2F66 /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.hpp */,
				12142095DFC74786BA8B8655 /* /Users/heiner/git/QuantLib/ql/math/integrals/all.hpp */,
				79B336D5F2B54C5B8F78963F /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.hpp */,
				D45A1C3C9E9C4463BE35110B /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.hpp */,
				2326DE770EDC49568069AF3D /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.hpp */,
				7EA5C1BE78B84C41B7CFE557 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.hpp */,
				66B5117BE5C7442DA482423F /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.hpp */,
				82205B895B63492E8881520C /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.hpp */,
				1AA6336CCCC64DF7A605C1D6 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.hpp */,
				9B0C8F3E921B45919D7A1587 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.hpp */,
				BA378CB6AC8A4263A9D44B2A /* /Users/heiner/git/QuantLib/ql/math/integrals/simpsonintegral.hpp */,
				18ECB99B98A14F08826E72E5 /* /Users/heiner/git/QuantLib/ql/math/integrals/trapezoidintegral.hpp */,
				F1328A9FB52049FC81F647C3 /* /Users/heiner/git/QuantLib/ql/math/integrals/twodimensionalintegral.hpp */,
				606415A500F643F9A120BD8C /* /Users/heiner/git/QuantLib/ql/math/interpolation.hpp */,
				B606EBEFB894490AB7C91CAF /* /Users/heiner/git/QuantLib/ql/math/interpolations/abcdinterpolation.hpp */,
				B5944E362F0F4957AB44137A /* /Users/heiner/git/QuantLib/ql/math/interpolations/all.hpp */,
				9E399BDEBF7F4AD1AED08990 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatinterpolation.hpp */,
				068BFAE0042B4C0EAC099B9D /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatlinearinterpolation.hpp */,
				C72383B2794848A7AE45CD4D /* /Users/heiner/git/QuantLib/ql/math/interpolations/bicubicsplineinterpolation.hpp */,
				8206F6461B2148E2BB5172EE /* /Users/heiner/git/QuantLib/ql/math/interpolations/bilinearinterpolation.hpp */,
				2FA8804D7E834C57B96A0E29 /* /Users/heiner/git/QuantLib/ql/math/interpolations/convexmonotoneinterpolation.hpp */,
				AEA1B960D02A49C9B95DD8C5 /* /Users/heiner/git/QuantLib/ql/math/interpolations/cubicinterpolation.hpp */,
				EC0F380776C44333B4160297 /* /Users/heiner/git/QuantLib/ql/math/interpolations/extrapolation.hpp */,
				2E876584A5A745F1AD1F086C /* /Users/heiner/git/QuantLib/ql/math/interpolations/flatextrapolation2d.hpp */,
				E0A93936B4EA4704AE8ED718 /* /Users/heiner/git/QuantLib/ql/math/interpolations/forwardflatinterpolation.hpp */,
				83FC8104A91C45BA9041B312 /* /Users/heiner/git/QuantLib/ql/math/interpolations/interpolation2d.hpp */,
				6D0FB2D55E1B420CB242329A /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation.hpp */,
				448B1BB9DDCF4276A8A9E8D8 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation2d.hpp */,
				6806019B033B4F77A4719ADB /* /Users/heiner/git/QuantLib/ql/math/interpolations/lagrangeinterpolation.hpp */,
				02C11D0B74F04273ADA64C6E /* /Users/heiner/git/QuantLib/ql/math/interpolations/linearinterpolation.hpp */,
				206DFDFE040546FAB071DD11 /* /Users/heiner/git/QuantLib/ql/math/interpolations/loginterpolation.hpp */,
				5886C521F99C46B99CD22522 /* /Users/heiner/git/QuantLib/ql/math/interpolations/mixedinterpolation.hpp */,
				0AFAD612DA8A4006B0EA11F9 /* /Users/heiner/git/QuantLib/ql/math/interpolations/multicubicspline.hpp */,
				B6A8968718834784A031568F /* /Users/heiner/git/QuantLib/ql/math/interpolations/sabrinterpolation.hpp */,
				F7741A8C2F274835A2F9E182 /* /Users/heiner/git/QuantLib/ql/math/interpolations/xabrinterpolation.hpp */,
				50C2D54B4AEA449481B1FE2C /* /Users/heiner/git/QuantLib/ql/math/kernelfunctions.hpp */,
				E9728AB088E7475FB6A2EE6B /* /Users/heiner/git/QuantLib/ql/math/lexicographicalview.hpp */,
				3EF8DB795E0142058AE7ED4C /* /Users/heiner/git/QuantLib/ql/math/linearleastsquaresregression.hpp */,
				EC2BE9340E024A9EB3C5A613 /* /Users/heiner/git/QuantLib/ql/math/matrix.hpp */,
				F6350A60CB7A4674ACC92B79 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/all.hpp */,
				1724491C804C413B863A8616 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.hpp */,
				8CF51587C72144C9B6CBC9D9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.hpp */,
				E278707C1FE94AE3B8BAA273 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.hpp */,
				4A8CA30D159F4ACEAC0412F1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.hpp */,
				7A129B9AF7A04478AA492F66 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.hpp */,
				5C1E0FBB356A4F4893626F5D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.hpp */,
				BC1ED00FE55144AA9E574E4D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.hpp */,
				AFB0955304B84A648412DDBB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.hpp */,
				CBF9DB2E87EA46338BA6F45D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.hpp */,
				7BAC186CC9B64A86935EF2D1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparsematrix.hpp */,
				7E189848DA6A442DBCC40FCD /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.hpp */,
				C97C8CA22CD149F688285DED /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.hpp */,
				54EFB15EEC464AEFB59F6CD0 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.hpp */,
				EF1EDED894E94111ABC89F73 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.hpp */,
				504E81B25FCF4EAA8D70A2A6 /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.hpp */,
				CBA839F351B14FD6A3A17154 /* /Users/heiner/git/QuantLib/ql/math/ode/adaptiverungekutta.hpp */,
				442A6937474A44A2B9682880 /* /Users/heiner/git/QuantLib/ql/math/ode/all.hpp */,
				EF4D56CF89EA417C9F3C1AD9 /* /Users/heiner/git/QuantLib/ql/math/optimization/all.hpp */,
				B371906CB81644D4B2A31CDA /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.hpp */,
				5217F839CD8D42C7A14EDE44 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.hpp */,
				0CEE15A5370943B79135BB3F /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.hpp */,
				54236AA4ABDD441F9C694349 /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.hpp */,
				D5E678C1BC3449B6AD878E74 /* /Users/heiner/git/QuantLib/ql/math/optimization/costfunction.hpp */,
				805489C88BFF49C28E5AAB0C /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.hpp */,
				0B0E71A5D00941D6A5BFEE7F /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.hpp */,
				88ABE76D7A164A57A7DBA072 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.hpp */,
				F2B9B07DBD1548409F2B1533 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.hpp */,
				4B96FBD38BF94B3E81C1AB59 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.hpp */,
				849FAA9031944095AFD557AC /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.hpp */,
				1E8A3B0ABCF640939EEAB97A /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.hpp */,
				B9032A5DB2E044F68F2D081E /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.hpp */,
				8839E728851E41C5BF5B01C2 /* /Users/heiner/git/QuantLib/ql/math/optimization/method.hpp */,
				B764E97B95C24B75AE40A676 /* /Users/heiner/git/QuantLib/ql/math/optimization/problem.hpp */,
				AD45894BEBFC4666B6645DEC /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedconstraint.hpp */,
				9DB078129ECC43868CFCEF90 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.hpp */,
				3C5698944C404549A7D5D72D /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.hpp */,
				AEA0FE89472B4831B8FE0E36 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.hpp */,
				A83E08A8F6564F448E94D471 /* /Users/heiner/git/QuantLib/ql/math/optimization/simulatedannealing.hpp */,
				95B169DC3B254A7BA91106D4 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.hpp */,
				1AEDD3BE752449AB812CDF97 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.hpp */,
				E09A39AA423E450E9C0D1705 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.hpp */,
				AA7282BF35D441DAB37811A2 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.hpp */,
				7B2A70952E4D4C3BBD5D35EA /* /Users/heiner/git/QuantLib/ql/math/primenumbers.hpp */,
				E927A9B618D54D6AB05A156A /* /Users/heiner/git/QuantLib/ql/math/quadratic.hpp */,
				E17A1ADB508846B49C4D3AFB /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/all.hpp */,
				5AD07711DBB246E3A006E747 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/boxmullergaussianrng.hpp */,
				0080F4068E9F481FBF7D1C7F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/centrallimitgaussianrng.hpp */,
				FFE5C8DEBD9E4B868CE9658F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.hpp */,
				D1689EC535664DB092FD628C /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.hpp */,
				1DBFC0DBAD384C548C4FCBE2 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativerng.hpp */,
				00826A5C7EAC447391A548D6 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativersg.hpp */,
				BDE2CAF99F0A4A84814BC376 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.hpp */,
				D4EE30FBC4AD4240BB709B95 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.hpp */,
				C90A824266CC45AEA6F9CFD1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.hpp */,
				321A58ACB9434346B3B9E0A8 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.hpp */,
				4DDF08643F2244EE8BA263BD /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.hpp */,
				B24E5C5F838641D088D67C95 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.hpp */,
				CEBF3278B17A48C6B1F20E4B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomizedlds.hpp */,
				6DD1DB57576B443E934B91CC /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomsequencegenerator.hpp */,
				AD362F8FF2724F89987D1E16 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/ranluxuniformrng.hpp */,
				12B95B5E099A46B28ABA5B43 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/rngtraits.hpp */,
				A2409672F5474E29A3F1BBD5 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.hpp */,
				C6BF71F3166E46C4A898E888 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.hpp */,
				76D8FE90C6B34542ACBB13D1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.hpp */,
				AAFFDD48A5BD46BCA2F24EEA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.hpp */,
				1F1555B687124615BC0AB6FA /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.hpp */,
				3CFFED5A221F4511B1223B79 /* /Users/heiner/git/QuantLib/ql/math/rounding.hpp */,
				401E42171B4C4FB9BB58C46C /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.hpp */,
				5B85FA87A6534DC88B8B28A0 /* /Users/heiner/git/QuantLib/ql/math/solver1d.hpp */,
				417ABAFCECDF4445AE642775 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/all.hpp */,
				52BF3AB64F904E7B96972A01 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/bisection.hpp */,
				A9DAB2F045804718BADDCF42 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/brent.hpp */,
				73D81EB811F24138AF435191 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/falseposition.hpp */,
				5D5CC20A22B04BA18E37DD77 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/finitedifferencenewtonsafe.hpp */,
				A4F3CFD905654C9EB4ED49D3 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newton.hpp */,
				89BD68E8AF5B4CE2A6215E4E /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newtonsafe.hpp */,
				9114B8670B5F4536A1B46D52 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/ridder.hpp */,
				20CDE4554835429A96A37409 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/secant.hpp */,
				ABFEAC1C77714516BB076C72 /* /Users/heiner/git/QuantLib/ql/math/statistics/all.hpp */,
				333899114FD54848922D9826 /* /Users/heiner/git/QuantLib/ql/math/statistics/convergencestatistics.hpp */,
				622AC0B1E4B14FD5BB49A1EE /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.hpp */,
				40FEA2AFF4964E25B0F9D14D /* /Users/heiner/git/QuantLib/ql/math/statistics/gaussianstatistics.hpp */,
				52671152F31040BD905EDDF0 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.hpp */,
				C43F3D06A527485BA2C08D70 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.hpp */,
				36F585D3921742A888B1C0A3 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.hpp */,
				39EBF0242D6543EB8B9C4850 /* /Users/heiner/git/QuantLib/ql/math/statistics/riskstatistics.hpp */,
				9D82577522754202B4ACDE8E /* /Users/heiner/git/QuantLib/ql/math/statistics/sequencestatistics.hpp */,
				9C7AEA19164E44DF97488D31 /* /Users/heiner/git/QuantLib/ql/math/statistics/statistics.hpp */,
				B421DE84457E4E4D87701EA1 /* /Users/heiner/git/QuantLib/ql/math/transformedgrid.hpp */,
				968AE0CCB3F747119D63C3F4 /* /Users/heiner/git/QuantLib/ql/mathconstants.hpp */,
				0503E56FDE4D45ADB947A6B1 /* /Users/heiner/git/QuantLib/ql/methods/all.hpp */,
				01ECB4FEF26F4D8087314AC7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/all.hpp */,
				1A861E701A8E426CADEB7AB4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/americancondition.hpp */,
				11FFC12638AE41F6A1B76CD7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.hpp */,
				8A13ACBCC00349E19A9B70DC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.hpp */,
				16E4154BB1D94AA495D6BA54 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmtermoperator.hpp */,
				0B8C592F96C3425F85938A85 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/cranknicolson.hpp */,
				C85FAF3B38A14EE5A7B6CF2F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dminus.hpp */,
				4CFFDD70E3774269903C7F44 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplus.hpp */,
				A06309696D6E4B0EBC9D98F4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplusdminus.hpp */,
				DB6278DC42684F5CBDBC5975 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dzero.hpp */,
				5F254CCB76C64D3FB817916E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/expliciteuler.hpp */,
				482956E72AA841C1B0B2406C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/fdtypedefs.hpp */,
				9B6886294FA847799076A857 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/finitedifferencemodel.hpp */,
				293628F995F348EA90BA2EE8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/impliciteuler.hpp */,
				1D7D8BC474B34CB683A28638 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/all.hpp */,
				5284A354A92445EF8D0E2104 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp */,
				62A9B7B87147479A86287A20 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp */,
				E3D23A9983444EECA86256B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdm1dmesher.hpp */,
				05743A103E9942F7BA398F23 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp */,
				A95094536EBC41B1A15B3251 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp */,
				F7FCC6785A9743F48BE93A2B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp */,
				63A3308F068F4873B7BDBFF8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmesher.hpp */,
				0784532EE54F4E428990514E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp */,
				ED76C85ADA1242C09D2EB59E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp */,
				A95854D2A2324C7FB32FBBFF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/predefined1dmesher.hpp */,
				D230FA6B60954E0FBBC53393 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniform1dmesher.hpp */,
				9CDEB905D22E43829782EFC4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.hpp */,
				4E5BA1A846BC40C29126983A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/mixedscheme.hpp */,
				C7C73ACECA71410BA003FC6A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/onefactoroperator.hpp */,
				A95C52381C78405588226578 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatorfactory.hpp */,
				F6C6E7140E954349BA71E47C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/all.hpp */,
				667DED74FF0D4E2ABE17D197 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp */,
				509E6362B324492BAF5ED606 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.hpp */,
				3065AC836D134B8C9C9DEC52 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.hpp */,
				153C20F3B7DB4C0D991A6B88 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.hpp */,
				59F5DAB066324426B1619C78 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp */,
				F504B6A85A7446728CA653CE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.hpp */,
				BC2E20DC79E24ED597227BC1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp */,
				EAFE56C014EE45DCAE05F6FF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearop.hpp */,
				FFB7BE9EE3A1463CA41A40AB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp */,
				2FA74099041C4BF2887352AF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp */,
				9BBCBD62B1CD44B389B2CB24 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp */,
				C15833BC55AE4DA1A7DCCD57 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp */,
				22F2453C175A4240A89F18B5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.hpp */,
				B06E2E2A16CF423C8D5ED831 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.hpp */,
				2D77C9714F814494976091BA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.hpp */,
				13EE32FFB362484496A310BD /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp */,
				5EF3A59369E643DDB07161F4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.hpp */,
				A0EA6B4A02A34F149CA05D4F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatortraits.hpp */,
				C2A89CDA517E4A658C931B1C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/parallelevolver.hpp */,
				B0E95597B0F94A888F34E81A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pde.hpp */,
				D4618719AB6B497CBA3DC875 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdebsm.hpp */,
				B0414D060DF94021BBDEC847 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdeshortrate.hpp */,
				6FAA64AFA0AC433394B8CB56 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/all.hpp */,
				4BBAB747B1434479885400CB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp */,
				BADC273A84444B8BA5F88B01 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.hpp */,
				66FCAF4A2F324F9991E24012 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.hpp */,
				8403472BDDF14B11AE64096B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp */,
				8749E08292904401BB9EAA84 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp */,
				45BF80F2F6344A21892A5B8C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp */,
				E468733F1F48401AB28A3E96 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp */,
				EFC1315B1ACE49F480B00530 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/shoutcondition.hpp */,
				09161D2503254CAE8829ED4D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/all.hpp */,
				B5B8A3A567E24273B290352D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp */,
				386169C11EB54D1897E0C36C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp */,
				A4370E439FCD487C91E919E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp */,
				23CD614C13754219B0F00705 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp */,
				EB88F397A1CD40A0BE361A1D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp */,
				B26DEB4D76D24FEE91BBCF2D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.hpp */,
				709375F300BF4203915AB07D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp */,
				F6E7FE8F265548108664FD22 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.hpp */,
				01B5EBDE5C124A8C8C47387E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp */,
				07BBD3825CFA45FFAA808FA4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp */,
				3BF956232CF240D39B770893 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp */,
				9C99EEF73B144AD8B4F92387 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmndimsolver.hpp */,
				28EB960C9E2F4445872383D0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp */,
				15329A73D9F9420BB4E6E549 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp */,
				7CE6D35892D042E9A5BC9449 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepcondition.hpp */,
				D8CA54AE1BFF47769CC67834 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/all.hpp */,
				9E0EC08185E44111B81C09B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp */,
				DC0EB1774E24470D9EDB8F9C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp */,
				98BBC92C419E43F6B859BC99 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp */,
				366FAA87CDB74F3D8AA25199 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp */,
				CFE7B78BF1AB40E38E8C2F6D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp */,
				849A8B907B8C4A8EB7D66A3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp */,
				BD044407708E40E581FC8176 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp */,
				2873B7CD32184D4D974D7C13 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/trbdf2.hpp */,
				C1E48BA7199848D09934D513 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.hpp */,
				89E8A03418334F53B2F7A193 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/all.hpp */,
				FB5F28398C534509947B1543 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp */,
				EFACC3E9A3684323BED78B43 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp */,
				EEA4392F5B2F4093810BC56E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp */,
				5234E45F386647EF95AB76C6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp */,
				6D74E7CC5FA34BAF9363EAAA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp */,
				87F3E346FF2C4F028B954AC3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp */,
				77EF39FA294C498AB66F850F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp */,
				692BC2CD9C6C41F89A361721 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp */,
				905908B7D76E4A3692080253 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.hpp */,
				1E7D7267A6FB46FF886CC9D9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp */,
				E265CE40B2DE4D9DB240C7B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/zerocondition.hpp */,
				A56033A6B7A442D88AB86C24 /* /Users/heiner/git/QuantLib/ql/methods/lattices/all.hpp */,
				6CA49E69C9A04557BC9A2244 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.hpp */,
				AD2EFD1A9B9F4913B2A64BC2 /* /Users/heiner/git/QuantLib/ql/methods/lattices/bsmlattice.hpp */,
				3293303391D0467C9F0CA1F5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice.hpp */,
				59E82CDC049A4537ADB4C7BC /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice1d.hpp */,
				A98137FB01C24435A3857CD5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice2d.hpp */,
				CA47E0CA010B4E3EA149EC15 /* /Users/heiner/git/QuantLib/ql/methods/lattices/tree.hpp */,
				8CBC783FCFAC44EA859AD395 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.hpp */,
				56EC2F776DE447E28A9FAE43 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/all.hpp */,
				194903EBB6864508A1CB2666 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.hpp */,
				D99A696F867D43A9A2C38B24 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/earlyexercisepathpricer.hpp */,
				1649C7A2FDED408AA90658BC /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/exercisestrategy.hpp */,
				B3C34178606D4800B9E4BD27 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.hpp */,
				80BD2A9458AD4101960FA5B9 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/longstaffschwartzpathpricer.hpp */,
				51946D842F4E4500B7239848 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.hpp */,
				24C90E22B2074DF6969BA255 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/mctraits.hpp */,
				933669A4A4BD45838766946D /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/montecarlomodel.hpp */,
				F6F9EDCABD104562A4AF67EA /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipath.hpp */,
				4FFE538BAADE4AF4A8583933 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipathgenerator.hpp */,
				D425BEFB36E545449F28B9B0 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/nodedata.hpp */,
				BF1BFAC58CE643D5B42E58C2 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.hpp */,
				819A57E3D578457998B6467E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/path.hpp */,
				3F8302E774894BD890C50543 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathgenerator.hpp */,
				8DBDD6B4167B4CEC95EACE8F /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathpricer.hpp */,
				4676D63CA14845429F358622 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/sample.hpp */,
				6C24102F0D2B45AB93A4F34F /* /Users/heiner/git/QuantLib/ql/models/all.hpp */,
				F8872C2659CA4DCC9E21ECFB /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.hpp */,
				EACA292749AD436296F2C3E1 /* /Users/heiner/git/QuantLib/ql/models/equity/all.hpp */,
				1CC906549B0D4C19B541ED74 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.hpp */,
				572BAA5CF491423FB04A8D13 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.hpp */,
				01FA571CD9DF4A69BC507EBF /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.hpp */,
				F1A3A0DF2399429DB78F1478 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.hpp */,
				146C6198770F445591F70908 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.hpp */,
				EAFAF8DB56704A39B8DA9C19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.hpp */,
				4EB7A20C649B4D3B946FEBBC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/all.hpp */,
				8C5EE0FCABA145FA96C504EA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerator.hpp */,
				32C25FA8A66F4AB492B55D13 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/all.hpp */,
				23F82CCB7BA74F07A82739C2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp */,
				FD08367E6159469B94E6004C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp */,
				ECBDA2BC3FAF4690ADCD5EFD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/all.hpp */,
				6082AB03DB834B7AA54765AC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp */,
				BFDD8788F6DD4B06A74AB83E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.hpp */,
				90F518583BD8425A8AB52789 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/exercisevalue.hpp */,
				4DAF0FC9F5BA49AC82944EEE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.hpp */,
				6707DCC3324F4012B987A330 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelbasissystem.hpp */,
				69ED8530774E44DCA9220010 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelparametricexercise.hpp */,
				F2AD7E7DF7F9462583C33015 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nodedataprovider.hpp */,
				B4EC4F4AEAA24604AA765FC8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.hpp */,
				D947BCA7DFC84F138AF1BDB2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.hpp */,
				070486F6D0C647C5BA75A86C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.hpp */,
				1709618965664D998933B047 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.hpp */,
				53EA0BCC5D034711A0634E92 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.hpp */,
				CC9E687DF9A24D26B2661C69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.hpp */,
				F892B6DEE387486C966A0FA5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.hpp */,
				C0C2ADE63BEE4752BA07147C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/constrainedevolver.hpp */,
				F45C17DB2BDA4925B0FF742E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/all.hpp */,
				251405BD0CCB4950A3043BDD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp */,
				785C669A82EF4B0E90BDC1B3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.hpp */,
				F91AC6258071491FB240D1D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp */,
				60DAEE67FA4B4F7281A3B663 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.hpp */,
				11C5203317DF489DB3B9C53F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/all.hpp */,
				BFDC7F9BAADE4C4AB7B55B60 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.hpp */,
				9A11E01CE0DE4041903A2033 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp */,
				EC9BB6D7E4B54A17AE1B8AEB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.hpp */,
				7C36CFC5E30E43E7B8491A3F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.hpp */,
				230F348CB25E46B8A62050D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/all.hpp */,
				6ECC14CBDA7B41878EA43862 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp */,
				D542E96BAABB4AB6BAF445A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp */,
				49474A684FCE4588B4489775 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp */,
				0FD51DE83918413184860933 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp */,
				C47BFF0137DE44BFA5582E08 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/duffsdeviceinnerproduct.hpp */,
				F7D960BFB3174395BCAEA0A8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.hpp */,
				5BD0B787906641EDB8A60644 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolver.hpp */,
				A892E61901734B248B6DF7F6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/all.hpp */,
				93A6C958C1BC4638B9ABD048 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp */,
				8D4CE2E93AE84AB5A87ABC4A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp */,
				59F9513B467A40C0A1FF39A8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp */,
				14BEFCD8E78745BCA8825985 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp */,
				D7D5A38950E94B47995A6265 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp */,
				0A0D5CCE44B54D52B6BFCA83 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp */,
				C58EBD5D118A49CB9A7CE177 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp */,
				4E59B5CAE2074849B7B9DA7C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp */,
				CB3076AD1335437686D2724C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp */,
				C12A317B5F2340699D3F3B31 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.hpp */,
				1359BFEB792E45E78DD569E1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.hpp */,
				481D47204EF24D9086BAF9FC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/all.hpp */,
				289C55D86CB64F19863ADC8B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp */,
				A8C5176479EC44BE96EE549D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.hpp */,
				6D0749C204144F808341DE4B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalforwardratesanalysis.hpp */,
				D4DE54F583E548C493925866 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.hpp */,
				7292ADD5956848609CDBE431 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.hpp */,
				A65F3F9D0D454D7DBB04328B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.hpp */,
				C6EFE03A57B24FC782D9DA72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.hpp */,
				AB439C4599E24EC1A0C24FFA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/all.hpp */,
				62EA52435A234048BF914EA1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.hpp */,
				AF17F6FE1AC943BDBB095E5B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaform.hpp */,
				A2C319DEA1644FA4AE8231FF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.hpp */,
				786D10F263A0410B9F9C5261 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp */,
				8A05E7CA689947C6980E8FBD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp */,
				CF3A31896C6C4FA6A58D1051 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.hpp */,
				2DBD74D064B3475F920B549E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp */,
				8F96C3125D93407A9E6C084E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.hpp */,
				9CA214B9B1EF45F2A06B63C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.hpp */,
				BE4AC2DE17A64227A9CC408C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.hpp */,
				CF6D8FB3F75D4377887547A5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.hpp */,
				9951BC6A8FEE4731A0E5F693 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.hpp */,
				442D3212F535496AB8494F0F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp */,
				64C0A60F5C4B4E42BA303236 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.hpp */,
				C86A0286AD2D4B12BF509C48 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.hpp */,
				6ACFDC835DA745579901523A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp */,
				AA09FA3383024A4D995AD023 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp */,
				9C3B70081429458C9BC8A2AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/multiproduct.hpp */,
				53DC71E223AC4057A3CADCA5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.hpp */,
				D5C0B1CD60AD4B2FAB2D35D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.hpp */,
				99A245E1AEB74624AE5FC0A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/all.hpp */,
				47A0074BAC9044898F72B0FF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp */,
				7C042F7B902C48E384BF8179 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp */,
				615A98DAA6CD46A283D36BBB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp */,
				45BF546172F2408798CD7E14 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp */,
				F02B507E9474498A93FB7BBF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisemultiproduct.hpp */,
				1214530940EB4D3DA1F59689 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/piecewiseconstantcorrelation.hpp */,
				F7D2800C780542EA85B3F5EE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/all.hpp */,
				F0959D8DB77948A493CB08E9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.hpp */,
				23C1EB5408914FD2AF145CC6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.hpp */,
				1C924446EB7A4DD2B3E41CD0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.hpp */,
				E9CFA560B0BB41BBAAF4432F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.hpp */,
				3A0DA117B7AA475D91099651 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/all.hpp */,
				DAAE9AA77C734CCA9E75C9F6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp */,
				36623341F68F4F74A77CBEA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.hpp */,
				44BD92BE473E49C185A53AF0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.hpp */,
				C158E16275794D7A8913C1C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp */,
				88B9981154E04292AA66897C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp */,
				CAC3BCEF3310411BA298FF3E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp */,
				433C7BC2A9C9415D8914F522 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.hpp */,
				85333013E5F347D985F3BDDC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.hpp */,
				E64E626EA40540E7B391B013 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.hpp */,
				C32982A1C08A46F9B54FDFE4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.hpp */,
				32B880E80DE646D6A849DE12 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp */,
				64DC69D4080F492D85F5045C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp */,
				F75F1FB4349E48F48093A8FB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.hpp */,
				FE83EAE0C6964AFC88D0FD4F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.hpp */,
				E368865D428B482A9A471936 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.hpp */,
				DE75DBB778DF422D93CD7587 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.hpp */,
				D17068B72BC44F7982B33ED8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/all.hpp */,
				40981C9FE7DD46BC95BD762B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp */,
				835F1E7E30CE4A47B4015B19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp */,
				2B72E60B070C42D3846C589D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.hpp */,
				A4BF8AB027CD4E1899360FD7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.hpp */,
				E20FFB0ABA8A4265A4F1DD61 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/all.hpp */,
				8F249AA349D34404867291A3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp */,
				3C6D1A21514B40719710A5D2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp */,
				7EC12C696FD84A5FB5096461 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp */,
				CF6E4BEA8BD24727BEEE6B75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp */,
				640F5E312E67465A95C92E2E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp */,
				EBCA0FB195E14C64929E37ED /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp */,
				04CF43BB5C1F42598FB38CB3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.hpp */,
				F2BB84E22AA84213876167D2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.hpp */,
				A4A129FDC2434FE19E63CC48 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.hpp */,
				01C90914257542609C54B588 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.hpp */,
				06D9309E0D8546779BACBBC0 /* /Users/heiner/git/QuantLib/ql/models/model.hpp */,
				2AF5CC0002AC4553AC220633 /* /Users/heiner/git/QuantLib/ql/models/parameter.hpp */,
				2804DC094E704B358B175DE5 /* /Users/heiner/git/QuantLib/ql/models/shortrate/all.hpp */,
				996C944C340B44A59D24B631 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/all.hpp */,
				3DA6C46B93FC44D881D1783C /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.hpp */,
				16A5D5502D864A6595055134 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp */,
				4A33DF7078AA46D99B15AA8D /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.hpp */,
				42D7ABCFC40B41B2BA7DBC78 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/all.hpp */,
				9DC749499BE440A1B0817E1E /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.hpp */,
				F2C0F92A6AA94D479A1ECB07 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.hpp */,
				DFF5D8BA0D4B4EF0A8D5D77D /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp */,
				9864DB89BADE40A0A50E98A0 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp */,
				865ABE7B05434CC68463E5E2 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.hpp */,
				CA594C40E5F34478A7F6FFE9 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.hpp */,
				3E8B8B7DBCDE4F4CA91BD2CC /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.hpp */,
				F2C82B702A894A1A84CF3780 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.hpp */,
				A86D4505930A448EB1102E26 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.hpp */,
				8EA2546C5145406BA5C2ECAA /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/all.hpp */,
				F5DB1B1C137A46FB944E0436 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.hpp */,
				8021EC6E123E45E69D462C74 /* /Users/heiner/git/QuantLib/ql/models/volatility/all.hpp */,
				151A3FE7DFBC40779CC22FA8 /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.hpp */,
				75E240437BA940C4A73E4149 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.hpp */,
				9A16BBFB74D143849DAADD4A /* /Users/heiner/git/QuantLib/ql/models/volatility/garmanklass.hpp */,
				50DA254E6CA846609F0056D1 /* /Users/heiner/git/QuantLib/ql/models/volatility/simplelocalestimator.hpp */,
				F36DFA3AC37F47A386D3303B /* /Users/heiner/git/QuantLib/ql/money.hpp */,
				70C2C44214184735A9B2AEBE /* /Users/heiner/git/QuantLib/ql/numericalmethod.hpp */,
				1121774CC51D48F0AF557FA0 /* /Users/heiner/git/QuantLib/ql/option.hpp */,
				6D1B499FE48C4B02AC90182F /* /Users/heiner/git/QuantLib/ql/patterns/all.hpp */,
				A172580C67494F4B8C3F8893 /* /Users/heiner/git/QuantLib/ql/patterns/composite.hpp */,
				C8704CE34698452DBC718445 /* /Users/heiner/git/QuantLib/ql/patterns/curiouslyrecurring.hpp */,
				72ACB624368A41D499E818C9 /* /Users/heiner/git/QuantLib/ql/patterns/lazyobject.hpp */,
				65EA1E9FD21C4F069F1EBFEB /* /Users/heiner/git/QuantLib/ql/patterns/observable.hpp */,
				B83F9E4575B54E839AD8F901 /* /Users/heiner/git/QuantLib/ql/patterns/singleton.hpp */,
				E956560BEF5844AA9321FD9B /* /Users/heiner/git/QuantLib/ql/patterns/visitor.hpp */,
				82279085956945F49CAF6C20 /* /Users/heiner/git/QuantLib/ql/payoff.hpp */,
				AD822126242F4AB08EB60FDA /* /Users/heiner/git/QuantLib/ql/position.hpp */,
				6E89628B785848649872342A /* /Users/heiner/git/QuantLib/ql/prices.hpp */,
				1B13EF42B3AA494D98EC83A4 /* /Users/heiner/git/QuantLib/ql/pricingengine.hpp */,
				EC26C8C88B8641D7AF1A85CA /* /Users/heiner/git/QuantLib/ql/pricingengines/all.hpp */,
				6494790BA24E4AC8813ADB1A /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.hpp */,
				D08343D661A942099DA0198E /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.hpp */,
				6708D9F094FA4B78973EF235 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/all.hpp */,
				6F606644D6D148FEB55FE05F /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.hpp */,
				6E7DCB9038D84518A4DC02F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.hpp */,
				41257AF156914742B0CABEE3 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp */,
				9BFEEFD4A982499DB8293B7D /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.hpp */,
				1EFD1E8EF2A04B0BA23311D2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.hpp */,
				113CCB0442864053A2CE5AD6 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.hpp */,
				A201586FE2E84FEE9CE245DE /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.hpp */,
				D14832EFF76F40C9A40E9EAD /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mcdiscreteasianengine.hpp */,
				6FD73CC66A3041708E8D1DA8 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/all.hpp */,
				4C64FC5BB0084E7E91D28ADC /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.hpp */,
				F3BAAE10D8C14E4AB5B274A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.hpp */,
				445268C5B9134478831B6562 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/binomialbarrierengine.hpp */,
				E41EB056159E496DB9D4827B /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.hpp */,
				F1C34D0FBC83431184906D8E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp */,
				743F746F2849456BBF1D286C /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.hpp */,
				8A6ECAD6E17D47C5A366D8F6 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.hpp */,
				2DE966CC47E94DACAEB679F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.hpp */,
				FA3A80D4EF35498CAD2FD26D /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.hpp */,
				2F5F52928DDF49A3B3781D7E /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/all.hpp */,
				4D08FE947AEB4D66968A2349 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp */,
				46AB81EE212341A99261B2EF /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.hpp */,
				1D525C511B45433983560971 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.hpp */,
				0C68ADDFC226480E98B5AA7B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.hpp */,
				B6110D77B38B4975AA95A6B0 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.hpp */,
				7398026339D8450CAA75A068 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.hpp */,
				720FBE9F730C4F5F912EB6AF /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.hpp */,
				186593E18F9140898E951B7C /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.hpp */,
				2D66929F0BE04DECB6DDD604 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/all.hpp */,
				69A20A9F23A64817823DD8AF /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.hpp */,
				A171ABAA9979430A9BE81A54 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.hpp */,
				FB12D268F8B54C2D86234AD5 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/all.hpp */,
				B9648FF11F3B47ABAE4032DF /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.hpp */,
				F2713AB6A31640F48E6EFF57 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.hpp */,
				361FE08F8A004B28BF026134 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.hpp */,
				7BBE59DE58CD48E3BC6C7147 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.hpp */,
				7377DD6E545F4BDB87FDD2F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp */,
				B8BD1D10613D4E30A4F61BF7 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.hpp */,
				9634221BD0E84AB78B1605CE /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.hpp */,
				00334B34DB41479180383473 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/all.hpp */,
				BF771D37C5184BED8B273BA6 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.hpp */,
				10A18BA1029C44858437A128 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.hpp */,
				055CDFCCF6F044FAB50EC8E7 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.hpp */,
				99872BF8025B400F9A0F909C /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/all.hpp */,
				CCD3885D6B9041EC92CFDAA4 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.hpp */,
				CA9311EB03CA4CA7990F76B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.hpp */,
				61DCA77A1D5C4E44864A3AFB /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.hpp */,
				42889CBFDE394F48BDACD945 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/all.hpp */,
				DBB7028F940B4D368A45B0B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardengine.hpp */,
				F6F1263CE1094E639D7020D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardperformanceengine.hpp */,
				0B9FD75191694AD48DA07B5E /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/mcvarianceswapengine.hpp */,
				433AFC848D4A4DF08073AB9D /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/replicatingvarianceswapengine.hpp */,
				4EB6371652D64B5ABB72905E /* /Users/heiner/git/QuantLib/ql/pricingengines/genericmodelengine.hpp */,
				578334E8981A4E0AAC9BFDD1 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.hpp */,
				43C947F031E14CCDB9B1EA4D /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/all.hpp */,
				562F114C8C1745A4926FE890 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.hpp */,
				67EE9FB105E8466AB232EB88 /* /Users/heiner/git/QuantLib/ql/pricingengines/latticeshortratemodelengine.hpp */,
				E81603FD9C954DD2B068E240 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/all.hpp */,
				67BBF21C0B874A6FB3940B6E /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp */,
				DD3ECEF5E3674807A5223FC4 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp */,
				1190AF169B8347B5A1726B36 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp */,
				E1C197A64DFC4D9684B3762E /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp */,
				C9929185E8934B69BF84CF6F /* /Users/heiner/git/QuantLib/ql/pricingengines/mclongstaffschwartzengine.hpp */,
				CE8CDF7276C444A2AAF39BEE /* /Users/heiner/git/QuantLib/ql/pricingengines/mcsimulation.hpp */,
				47B0F928FC8F4A41BDA33ECC /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/all.hpp */,
				C7736EB25DD74FDEA63B117F /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/quantoengine.hpp */,
				F7E454F273434F73B673FB9E /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/all.hpp */,
				1975C20376534AECBC609138 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.hpp */,
				5486B0EA2B234FAEB22B1006 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.hpp */,
				BA6D833CD7724703AC14F355 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.hpp */,
				9FDE3AA0CC814B54AABA36D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.hpp */,
				CBADD508D1E94CAFA603F553 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/all.hpp */,
				350AC5D4BB55488BA2E56D3D /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.hpp */,
				6813103A8D4C4FA4819087C1 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.hpp */,
				5E8AFC64F3F546E1872A641A /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.hpp */,
				47BCBCADF29343FA910DB439 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.hpp */,
				2E5DD76D4C334BE4B715CB3B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp */,
				F121792F6D814CA9BEF6A4DE /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/g2swaptionengine.hpp */,
				EBBB23DC23F54EEA8A803320 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp */,
				BF44455AEBFE4CD08B90FDBA /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp */,
				FA7226BBA00E42A4BFD8BC9B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp */,
				C566B9295FE6458CA2CB4230 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.hpp */,
				DF0590D31B6A4F54A1D23BD4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.hpp */,
				20B34A404CC84F299016886C /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.hpp */,
				7F1AB4F3AF7848E4ADC03D2F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/all.hpp */,
				CEFBD4E0B0BC4ABC9282FCA1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp */,
				C7778C1AC5AB4416A9E7AB4A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp */,
				68C841EE4FBC4DF3916FF4B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp */,
				3328037AB0B444B68D635EAB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.hpp */,
				72D10E50977A44EDA4744A36 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.hpp */,
				BA28A128AC0648258EEA37F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.hpp */,
				4EF591466E51489CBEC25C29 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.hpp */,
				B4B3E332F6FC456682BE49CF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp */,
				F2D977DE16A84AFEB0BBACA2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.hpp */,
				E5267F76D1894ED1B0D8004C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp */,
				7983D5F7B2884DBAB337F70E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.hpp */,
				421FECA56D0B415D979BC16D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/binomialengine.hpp */,
				96304212CB594D9CAC1E178D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.hpp */,
				4822742F8BAB44B993A47D32 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.hpp */,
				648E51C6566F43EFAEE643FC /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.hpp */,
				689CEF58ADBA4135A2CE2B91 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdamericanengine.hpp */,
				26C1759FBC6D4AB79A4DF4BF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.hpp */,
				2B00B4D927AD4694A821B855 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbermudanengine.hpp */,
				3A666167FC2D408785D840FA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp */,
				B21FB2F2B47140229DD9F71A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdconditions.hpp */,
				B2699E71D7984632B4752A53 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendamericanengine.hpp */,
				F4237DAE73374F0CB5304A0D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendengine.hpp */,
				205906CF7C754A21BA7A99CB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendeuropeanengine.hpp */,
				E473C9A088484E028ED4DD1C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendshoutengine.hpp */,
				15D77F067E7E409D8CC5FD47 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdeuropeanengine.hpp */,
				D25C8C1146D046688B39932B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp */,
				B84735E400F34B0AB03C9156 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.hpp */,
				9013E5FEFAEE4DB98ABFF474 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdmultiperiodengine.hpp */,
				5645CB088CD54B89BE0BB3FE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdshoutengine.hpp */,
				1536005108314D03BDA2ADF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.hpp */,
				ED4E597170964B3CA39BE7CF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdstepconditionengine.hpp */,
				DB5381FB1FFD4309BE15072B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.hpp */,
				7675D3BE4C1F46E6B2C14753 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.hpp */,
				EE7BFF012F9B4D1A95435A0B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.hpp */,
				6EAD0323F83B4E61BB780A59 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.hpp */,
				10A5D5BDF21B4BDC8211B9B2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.hpp */,
				5767F6A70124419FB152E7F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.hpp */,
				6C568CB8FB7D490FABE540B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.hpp */,
				BBBC7E62F3A44575BA4C7742 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanengine.hpp */,
				8D29DAD2B819445099B943EE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp */,
				F09CE2270CF84F878050A664 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanhestonengine.hpp */,
				FCDF86EDEA234595B02E68CE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp */,
				6582773D54DC48B7BE287517 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcvanillaengine.hpp */,
				A92BDE9101F64BCD8A4B5C5B /* /Users/heiner/git/QuantLib/ql/processes/all.hpp */,
				F11FE76728E04190801C982D /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.hpp */,
				C82E7D5C6D2543A0AC1043C3 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.hpp */,
				EB459487FBA74F13937F3B65 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.hpp */,
				40B4A67E7C0D4FF58A45493F /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.hpp */,
				E6CC0652D1A74FFFB1D51B7E /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.hpp */,
				AC03321338E141CDBD63D359 /* /Users/heiner/git/QuantLib/ql/processes/g2process.hpp */,
				E20FAE785B2B47D892810370 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.hpp */,
				88D8A16B96364356879FCDA7 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.hpp */,
				8C5A52C69E484511BAEFB26C /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.hpp */,
				5E32EBE78A744F91ADD359CB /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.hpp */,
				E2F8CBE72FBE436683A35463 /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.hpp */,
				473A50817A1E4823B54C3B54 /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.hpp */,
				CF1C10EB299C420DA131436E /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.hpp */,
				DCE1DBD55B4543C0B36895F3 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.hpp */,
				042CD602A8B0479D958B4AAC /* /Users/heiner/git/QuantLib/ql/processes/merton76process.hpp */,
				AAD9C8A43C9D4BA3A47C9310 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.hpp */,
				403307713DEA49B6B1506046 /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.hpp */,
				2EC1D0E2A2FD49169C7B96CB /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.hpp */,
				5D5005AF88244A96B80C1DBF /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.hpp */,
				E91ABF6CD04E4F38A80BE4B2 /* /Users/heiner/git/QuantLib/ql/qldefines.hpp */,
				F8168CEF056549E7B9D2AC4A /* /Users/heiner/git/QuantLib/ql/quantlib.hpp */,
				A2EFFC104B2E4D29AF20BE05 /* /Users/heiner/git/QuantLib/ql/quote.hpp */,
				BBCB35684C43496A95EFC5C2 /* /Users/heiner/git/QuantLib/ql/quotes/all.hpp */,
				3B1091D647EB46BC84900281 /* /Users/heiner/git/QuantLib/ql/quotes/compositequote.hpp */,
				D302F1109A0840EFBE9F6AFE /* /Users/heiner/git/QuantLib/ql/quotes/derivedquote.hpp */,
				2E32A8C06DB94A9F8BE67CFC /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.hpp */,
				72D60290DDE34357862CE4AC /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.hpp */,
				D503969D02524AFCBEEE6618 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.hpp */,
				DBCC48078638440BBE4CE73D /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.hpp */,
				B92148B6CC9C48C997001CD4 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.hpp */,
				E51A1E04FC25433EA969CD3E /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.hpp */,
				975B26480F69436A8E929FAB /* /Users/heiner/git/QuantLib/ql/quotes/simplequote.hpp */,
				6440E1E3E9044F1CBBCC05B3 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.hpp */,
				CAB554D605B442B79CA2C483 /* /Users/heiner/git/QuantLib/ql/settings.hpp */,
				1AB18D26606743AC988D5564 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.hpp */,
				4C14482791F24ABA918E0EAF /* /Users/heiner/git/QuantLib/ql/termstructure.hpp */,
				14C72B60AEEB4A88AA1D9576 /* /Users/heiner/git/QuantLib/ql/termstructures/all.hpp */,
				DA45287B420E49AD8A29EB8B /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraperror.hpp */,
				79ECE982EC224AE0A720B483 /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraphelper.hpp */,
				D98A6F2B9DF84350A704F909 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/all.hpp */,
				119AC39C518B464FB8485DE1 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.hpp */,
				84156C187F794A57B3DDF033 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.hpp */,
				514B1BA529BF4B9D86DB343A /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.hpp */,
				B518FF65101142B0A898F30D /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.hpp */,
				B69398B52CB74E5C8EE5FB10 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolateddefaultdensitycurve.hpp */,
				CE2939A8422D4DD19C450D99 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedhazardratecurve.hpp */,
				F42C832CB31B4D7784EA9733 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp */,
				DBD8B1060C0F49B7BE901F83 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/piecewisedefaultcurve.hpp */,
				6D3DF95EB98E4A04B9AB503A /* /Users/heiner/git/QuantLib/ql/termstructures/credit/probabilitytraits.hpp */,
				79E18AC7F3AF4F93A4C6AEB9 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.hpp */,
				FA81CF4115B744F28B4A53E9 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.hpp */,
				2AF354BB00BD488DAB66C467 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/all.hpp */,
				E69E4ADC2BBF4C72AA58016D /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.hpp */,
				9BC5341157FF4E118F1931EA /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationtraits.hpp */,
				019CB5C4839F4393B9867340 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp */,
				5D703687DB534B1C84F14F9C /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp */,
				92AF0E8F37D043FEBCF5D8CB /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp */,
				3A1B557E4E3A426BB5484DFB /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewisezeroinflationcurve.hpp */,
				840E703C4399401BA7D05F03 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.hpp */,
				5F7B68748D5642159D8E1F94 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.hpp */,
				4858451253E5469BA9C1209F /* /Users/heiner/git/QuantLib/ql/termstructures/interpolatedcurve.hpp */,
				7E2D976EB90542978DB2753F /* /Users/heiner/git/QuantLib/ql/termstructures/iterativebootstrap.hpp */,
				97B96E1E206D4025A4FC5E10 /* /Users/heiner/git/QuantLib/ql/termstructures/localbootstrap.hpp */,
				F13586AF765340AD9122229F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.hpp */,
				0849D80400744B9597DFBC62 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.hpp */,
				7513F748FD5948D79F35A4D2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/all.hpp */,
				2E8534832DCD416DBCCF7660 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.hpp */,
				3A20C54AF5284B33990E1482 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.hpp */,
				CA9972246E4D46778D1C3AE0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/all.hpp */,
				9DB64EC477494220897024FE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp */,
				A2B660C212F1430DB5410E9F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp */,
				923518369B954669AA96AB55 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp */,
				7D3979D33CD44BA4A7841F2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp */,
				3BC156C2A72F4AD199BCB391 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/all.hpp */,
				0924B62B361D4CDBAC25BCAB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackconstantvol.hpp */,
				73609021CAAF4E7DA01E20E1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.hpp */,
				0588FD18D9ED41F992938DE6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.hpp */,
				6D052E07553E4D4BAA844EF7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp */,
				28A3D97E46D547B0816AF80A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp */,
				1C383D9C00D54D6F8875C591 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp */,
				7A3F48DF92894CEB83319FB9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp */,
				9F34AB39A69E428599FA3100 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp */,
				0DCF4F24BC5C4C2C8CEFB94D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localconstantvol.hpp */,
				117AD74D91F44300998C38FA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolcurve.hpp */,
				D755BFF3BFE74F0B93A32515 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.hpp */,
				B876879D0CD3486AA06EED06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.hpp */,
				CEE78CDF60F94DE8B8624400 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp */,
				C88930A8DFFA4636A584AB40 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.hpp */,
				AF24F9D9462D4A4488BA74D8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.hpp */,
				126D943E44CD4EDE95074DDA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/all.hpp */,
				4BFBB19898874B11A70CAE83 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.hpp */,
				F0E78E1AB29C4127B3E77BC9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp */,
				64CE86D48E1348469D309615 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp */,
				D5E86A1F7E214D72A12E0049 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/interpolatedsmilesection.hpp */,
				B11556FCEAD24B4B8BA2C043 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.hpp */,
				CC4CCEC0AAF142F7A12DDAD7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/all.hpp */,
				1C744A4A270249ED82E68D67 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/capletvariancecurve.hpp */,
				3AD2F95423284449997FE788 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.hpp */,
				0B56E5A839B04F1684C113F4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.hpp */,
				6581E1B851E9439B98432123 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.hpp */,
				78EDEFF8706F43DCACD1D7C5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.hpp */,
				088B5C3322654F3AA004B027 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp */,
				EF4CC717A2844319B1F9BA15 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp */,
				446A1C026B27411594DBEB0D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.hpp */,
				575655761D064F519DE0AB36 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp */,
				38256CE2DF054452946EC5F1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp */,
				AE841B8A1F8C4653B9649EE0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.hpp */,
				ACC8F9D064FA4CFEAA57B319 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp */,
				87EAD2E8351040FDAF923857 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.hpp */,
				ADD146E58F0640769A677B0F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.hpp */,
				48BB17B7C0E2464A801BE3C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.hpp */,
				9794802D04E549599507E8C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.hpp */,
				97FF2C91FFED47F68F408E33 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/all.hpp */,
				1022D930840E44E09E238081 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.hpp */,
				BB11AE20E37842DCA44FDD89 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp */,
				5A9D16C4466140DCBD751E20 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp */,
				104F7F8ADB9A4777AC7B2ED3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp */,
				CF3620CBE0884862824B6296 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.hpp */,
				1614CC1E6C2E4194AEAF596B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.hpp */,
				557F8EAFB9A745C3A08CA891 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube1.hpp */,
				E142A8A7D1CF4BCD83336A33 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.hpp */,
				E0287AE132DC4821B93D3101 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp */,
				AAC2FB8599094C8FB6C2E78E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp */,
				5F01CBD78FE84C9B821EBA84 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.hpp */,
				4A06824B1BC64E21B2320219 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/volatilitytype.hpp */,
				05D3718B74564A868E1BD249 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.hpp */,
				DAA5330878B94246B43B4519 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/all.hpp */,
				AC9EE13790B546268241AE36 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.hpp */,
				84505A7CE7864456B0C1F436 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bootstraptraits.hpp */,
				321FD7A254FF4C15A58895D7 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/discountcurve.hpp */,
				41D5D66E62AC475D8B832358 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/drifttermstructure.hpp */,
				A811EBF298164CF595D420DD /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.hpp */,
				53EBA2D65115428D87DBD525 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.hpp */,
				1E12F05460AB44DC8655A8F1 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardcurve.hpp */,
				775DB70BF6FD4E72B23113E3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardspreadedtermstructure.hpp */,
				4E12719D9E2545EFB280624B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.hpp */,
				15EEACFCF0394E6BBF26A970 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/impliedtermstructure.hpp */,
				4F72EAA1F8AB4996B8E6F741 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.hpp */,
				4482367BD973419ABBBC80C3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.hpp */,
				FDEB4D504FE64A64BD0456AB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewiseyieldcurve.hpp */,
				AA560E0A347644ACBF5E48D3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp */,
				5F25EB49761B4FB0B3CEFB79 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/quantotermstructure.hpp */,
				A5AFED4145CE46A5A837E33D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.hpp */,
				9F649D91DF1A40DFA3CA7060 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerocurve.hpp */,
				2F749E89BBE74D8D860922E4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerospreadedtermstructure.hpp */,
				F188DE7D37894F48B1FEAE0B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.hpp */,
				67907F281E8A40FDA414C38B /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.hpp */,
				F54E3C0E123C4D3CA8F7E7DF /* /Users/heiner/git/QuantLib/ql/time/all.hpp */,
				03397A7102BE47DEBADE4A66 /* /Users/heiner/git/QuantLib/ql/time/asx.hpp */,
				CA0216EB608647B48F2FAC69 /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.hpp */,
				080615EED59847D9BA7C42C6 /* /Users/heiner/git/QuantLib/ql/time/calendar.hpp */,
				C83A2DB0771C497389CB7024 /* /Users/heiner/git/QuantLib/ql/time/calendars/all.hpp */,
				D4FD705F05874B83A97EDD6E /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.hpp */,
				0FE812DDC0B24BAD8C9917DC /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.hpp */,
				7E161495F1D843E48C982107 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.hpp */,
				EC1A83D17BE64BC9930CA2E5 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.hpp */,
				0CCA23C629CE489F846F523B /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.hpp */,
				593B9AF12644421BA13E3D10 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.hpp */,
				208C250D4A57488B96B4C444 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.hpp */,
				91B9BB39E6634274BAD63161 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.hpp */,
				9BBC49D42E9A4E7CBE70ED28 /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.hpp */,
				D37938D108BA4FED92F25680 /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.hpp */,
				1F474EFC456F4223AD0FD03B /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.hpp */,
				8F8D31DF43E34824B1C8B962 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.hpp */,
				4220DF0E0AF44A56BFE7F877 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.hpp */,
				A658EC709DC24FD2BD6AEB37 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.hpp */,
				C3E7B3388CAA47E3B457FC24 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.hpp */,
				93B0EF3E09CB4F06A21687D6 /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.hpp */,
				EA07ED2E66094B6DA0558237 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.hpp */,
				C6D24E3E36404C46AA2050B1 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.hpp */,
				413F3AFDF8E7469F90CD17AE /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.hpp */,
				5C468A331C7542AC849AC059 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.hpp */,
				9C17004C50A54EF995CE1603 /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.hpp */,
				A4738264B13944A380199623 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.hpp */,
				AFB4A1B73C5A413DB010D706 /* /Users/heiner/git/QuantLib/ql/time/calendars/nullcalendar.hpp */,
				4855EF97652A471B8F964850 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.hpp */,
				1920739A6DC542709B4014ED /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.hpp */,
				3BF57C0DDEEC4D2DAD62BE67 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.hpp */,
				035D29554185434AA9C1F336 /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.hpp */,
				9590C5BFB21A415292927B84 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.hpp */,
				987EEB341811428FB78F1A4C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.hpp */,
				2AA2FFE9612341359C2A51EA /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.hpp */,
				F4D42CE0D5F44CFCBF3705C7 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.hpp */,
				3EC6998B0733472C94D7901D /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.hpp */,
				F12556F45E3845E68615EE9F /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.hpp */,
				18C0F9D3546A4C98A8774F59 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.hpp */,
				35025D6A7888401CB966E80F /* /Users/heiner/git/QuantLib/ql/time/calendars/target.hpp */,
				3013F0F710A04E90B3A2F052 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.hpp */,
				A997840100BD4B8280381BA5 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.hpp */,
				A5B5295241564033998E55A1 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.hpp */,
				520F78132EA4473991ECE4FD /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.hpp */,
				1CAB32A5924A4167ACF6FD4C /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.hpp */,
				825E09982FF04584A806CD7D /* /Users/heiner/git/QuantLib/ql/time/date.hpp */,
				D55EB8E6210A4E36B567D816 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.hpp */,
				14923D3BE2F34757AC005788 /* /Users/heiner/git/QuantLib/ql/time/daycounter.hpp */,
				80C27DBAAD424C8E9FB97BC6 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual360.hpp */,
				4A33E1561DAE4B9084A2D4B2 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.hpp */,
				41F5EE859D2D4D46BBFA72CE /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365nl.hpp */,
				65947FAB60384D829F042425 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.hpp */,
				F9845E26D89E401194938A68 /* /Users/heiner/git/QuantLib/ql/time/daycounters/all.hpp */,
				62D9C0D4BD714284A2FA5107 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.hpp */,
				B3429F3FF99C4E81B4D33399 /* /Users/heiner/git/QuantLib/ql/time/daycounters/one.hpp */,
				6F9004F80CCE407B8FE92B7C /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.hpp */,
				0F7768C46B0740B4AAADBD14 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.hpp */,
				57C047771E464FF88BCDC7B0 /* /Users/heiner/git/QuantLib/ql/time/ecb.hpp */,
				A39A6AA49FE54B91AF7206F9 /* /Users/heiner/git/QuantLib/ql/time/frequency.hpp */,
				0EB2606CBF524D20875730A4 /* /Users/heiner/git/QuantLib/ql/time/imm.hpp */,
				A6C8B53EF37B40D1B753A86C /* /Users/heiner/git/QuantLib/ql/time/period.hpp */,
				60527BF369D9414EB7D79D90 /* /Users/heiner/git/QuantLib/ql/time/schedule.hpp */,
				2DDF18693D1249C7B9094312 /* /Users/heiner/git/QuantLib/ql/time/timeunit.hpp */,
				C6422DA41EA543168FCC6823 /* /Users/heiner/git/QuantLib/ql/time/weekday.hpp */,
				DCCAF8C554244D2FB9F68DDB /* /Users/heiner/git/QuantLib/ql/timegrid.hpp */,
				12088FD5A8D04785ACE4D6D7 /* /Users/heiner/git/QuantLib/ql/timeseries.hpp */,
				9D4D8A9AB2724FDC8D67A78E /* /Users/heiner/git/QuantLib/ql/types.hpp */,
				2212C8576CB342128A3D107C /* /Users/heiner/git/QuantLib/ql/userconfig.hpp */,
				9B1F469D9F154A0EAAC04F74 /* /Users/heiner/git/QuantLib/ql/utilities/all.hpp */,
				19FDC357BBDD48E7BB76B4BF /* /Users/heiner/git/QuantLib/ql/utilities/clone.hpp */,
				88140968DE42492496C52CE0 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.hpp */,
				4EE84EC50A3C4CAD8069DF69 /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.hpp */,
				0818AFBE71E04218B747C960 /* /Users/heiner/git/QuantLib/ql/utilities/disposable.hpp */,
				26C4A55DEF554FA8B2B96567 /* /Users/heiner/git/QuantLib/ql/utilities/null.hpp */,
				C64115D907D24B1587FE9CB9 /* /Users/heiner/git/QuantLib/ql/utilities/null_deleter.hpp */,
				904569C69C6C4AB4A1C4FA36 /* /Users/heiner/git/QuantLib/ql/utilities/observablevalue.hpp */,
				8AD3F09FF3E64A23A077874D /* /Users/heiner/git/QuantLib/ql/utilities/steppingiterator.hpp */,
				8718904EFD00406A807F9672 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.hpp */,
				D7B7C835A5184521B1876361 /* /Users/heiner/git/QuantLib/ql/utilities/vectors.hpp */,
				FED1B62979E24E43A3A7B8A3 /* /Users/heiner/git/QuantLib/ql/version.hpp */,
				34C3FC0D76794BAD865FAD69 /* /Users/heiner/git/QuantLib/ql/volatilitymodel.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		59298B9C444A4197B49534E9 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7C703482F4E94FD28E84B41F /* /Users/heiner/git/QuantLib/Examples/Gaussian1dModels/Gaussian1dModels.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5E29FB09D5BC4758B73E734B /* ZERO_CHECK */ = {
			isa = PBXGroup;
			children = (
				3259B0E91A40462D857F29FC /* CMake Rules */,
				6017B8A0B2924DA3B0D1F4C9 /* /Users/heiner/git/QuantLib/CMakeLists.txt */,
			);
			name = ZERO_CHECK;
			sourceTree = "<group>";
		};
		5EC97B1FF6694F4CBD0A2E14 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D462DAC79A9341E885C3773A /* /Users/heiner/git/QuantLib/Examples/CVAIRS/CVAIRS.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		672DD33098C04AD19DBD8A77 /* Replication */ = {
			isa = PBXGroup;
			children = (
				A6499C86FE5140BDBA2532C3 /* Source Files */,
				471CFF82FB534A0F99FAE25B /* /Users/heiner/git/QuantLib/Examples/Replication/CMakeLists.txt */,
			);
			name = Replication;
			sourceTree = "<group>";
		};
		73082107CE40404BBF54DE37 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				87191A96118F467B814BF4A5 /* /Users/heiner/git/QuantLib/Examples/MarketModels/MarketModels.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7944F4AE3FEE46C2B0868243 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				747B680B4F6E4A75A15642E2 /* /Users/heiner/git/QuantLib/test-suite/americanoption.hpp */,
				441F225AE53B499AA8291971 /* /Users/heiner/git/QuantLib/test-suite/amortizingbond.hpp */,
				16D14B892577481D9B6DFCD0 /* /Users/heiner/git/QuantLib/test-suite/array.hpp */,
				C598B98A420B4F86823CFECE /* /Users/heiner/git/QuantLib/test-suite/asianoptions.hpp */,
				982F22B478A247D78212E106 /* /Users/heiner/git/QuantLib/test-suite/assetswap.hpp */,
				F2874767D0374579AB2258A7 /* /Users/heiner/git/QuantLib/test-suite/autocovariances.hpp */,
				82C5CF7BE28A42EFAB3186D6 /* /Users/heiner/git/QuantLib/test-suite/barrieroption.hpp */,
				A12D9F51E7BF475BA24F0CB7 /* /Users/heiner/git/QuantLib/test-suite/basketoption.hpp */,
				85349A332AD542BDBB1C52FA /* /Users/heiner/git/QuantLib/test-suite/batesmodel.hpp */,
				628A64C10DE94B699FED49A7 /* /Users/heiner/git/QuantLib/test-suite/bermudanswaption.hpp */,
				2329E1E35608498A85280FC3 /* /Users/heiner/git/QuantLib/test-suite/binaryoption.hpp */,
				A30D3464915143F1BD34190B /* /Users/heiner/git/QuantLib/test-suite/blackdeltacalculator.hpp */,
				B7469D596DA94D15907DB0CC /* /Users/heiner/git/QuantLib/test-suite/blackformula.hpp */,
				9E33C6A89494458CB3AC2BAB /* /Users/heiner/git/QuantLib/test-suite/bonds.hpp */,
				A3FAA73AE708498282E49C5C /* /Users/heiner/git/QuantLib/test-suite/brownianbridge.hpp */,
				4F0AB8517E7A4E4780827457 /* /Users/heiner/git/QuantLib/test-suite/businessdayconventions.hpp */,
				A8297B6B92C141A19433D83A /* /Users/heiner/git/QuantLib/test-suite/calendars.hpp */,
				E23D913B257B4E29956DCD97 /* /Users/heiner/git/QuantLib/test-suite/capfloor.hpp */,
				99CEB72718A6447CB0B2BE5C /* /Users/heiner/git/QuantLib/test-suite/capflooredcoupon.hpp */,
				AF6A9CEF94D94D35B0F4FD85 /* /Users/heiner/git/QuantLib/test-suite/cashflows.hpp */,
				FF7B633A0CA24DAD885C6934 /* /Users/heiner/git/QuantLib/test-suite/catbonds.hpp */,
				75EB90A52578478DAD98EA44 /* /Users/heiner/git/QuantLib/test-suite/cdo.hpp */,
				2B993FF48EF04DF08687D1AA /* /Users/heiner/git/QuantLib/test-suite/cdsoption.hpp */,
				BE728F6EED744C91AC5F1517 /* /Users/heiner/git/QuantLib/test-suite/chooseroption.hpp */,
				41D0E2F792F440C89D4FE43B /* /Users/heiner/git/QuantLib/test-suite/cliquetoption.hpp */,
				1AC4302F3C5A4AC383EF6198 /* /Users/heiner/git/QuantLib/test-suite/cms.hpp */,
				76BAF7B5983F400EA5F677EE /* /Users/heiner/git/QuantLib/test-suite/commodityunitofmeasure.hpp */,
				4EF3779333B84F62B25A937A /* /Users/heiner/git/QuantLib/test-suite/compoundoption.hpp */,
				3A5D122085E642AF8A5C990E /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.hpp */,
				6080B83A5FF0402D819B0065 /* /Users/heiner/git/QuantLib/test-suite/covariance.hpp */,
				670CBF772A2E4D0CB1C3EE2C /* /Users/heiner/git/QuantLib/test-suite/creditdefaultswap.hpp */,
				F529D7723BCA461A9E800253 /* /Users/heiner/git/QuantLib/test-suite/creditriskplus.hpp */,
				8B66CABCD7F049759C80A3B4 /* /Users/heiner/git/QuantLib/test-suite/curvestates.hpp */,
				2A0978E9E95D4EE597E8E74F /* /Users/heiner/git/QuantLib/test-suite/dates.hpp */,
				5AB03163050B4FBAAFBACC08 /* /Users/heiner/git/QuantLib/test-suite/daycounters.hpp */,
				CF335E9A03E54255A0B112FB /* /Users/heiner/git/QuantLib/test-suite/defaultprobabilitycurves.hpp */,
				EEC985238EB84C1F899BD995 /* /Users/heiner/git/QuantLib/test-suite/digitalcoupon.hpp */,
				1CCB5C0EA2F44CEB8316D56F /* /Users/heiner/git/QuantLib/test-suite/digitaloption.hpp */,
				65EE30F297CB467BAA2768BA /* /Users/heiner/git/QuantLib/test-suite/distributions.hpp */,
				FCF61BA65ED640ADB43FBCBA /* /Users/heiner/git/QuantLib/test-suite/dividendoption.hpp */,
				EF1A8F52199E4373AFA0718B /* /Users/heiner/git/QuantLib/test-suite/doublebarrieroption.hpp */,
				D569AF9941FB4E74A50D7A71 /* /Users/heiner/git/QuantLib/test-suite/doublebinaryoption.hpp */,
				5BC2A0D98DA74B3CA1F2E17A /* /Users/heiner/git/QuantLib/test-suite/europeanoption.hpp */,
				FB65257584B84FBE8BF744BE /* /Users/heiner/git/QuantLib/test-suite/everestoption.hpp */,
				037316B2F76446F79C536EF7 /* /Users/heiner/git/QuantLib/test-suite/exchangerate.hpp */,
				9ADB5522E2454210AE071D1E /* /Users/heiner/git/QuantLib/test-suite/extendedtrees.hpp */,
				E347569198F54A9E8A3CAD94 /* /Users/heiner/git/QuantLib/test-suite/extensibleoptions.hpp */,
				2D98BCF330DD4D73A6AF708C /* /Users/heiner/git/QuantLib/test-suite/fastfouriertransform.hpp */,
				FFCDB3FCF279426FAEAFF5C5 /* /Users/heiner/git/QuantLib/test-suite/fdheston.hpp */,
				1A33D205ABE948DCA5C21324 /* /Users/heiner/git/QuantLib/test-suite/fdmlinearop.hpp */,
				BFEC9561893E4239AFC7F60C /* /Users/heiner/git/QuantLib/test-suite/forwardoption.hpp */,
				DE606117DA7C4BE08B32A3CA /* /Users/heiner/git/QuantLib/test-suite/functions.hpp */,
				FE9F2B80249246CCA06C1ACE /* /Users/heiner/git/QuantLib/test-suite/garch.hpp */,
				A54C24ECC07041F587896982 /* /Users/heiner/git/QuantLib/test-suite/gaussianquadratures.hpp */,
				34B2C1310A95402193643750 /* /Users/heiner/git/QuantLib/test-suite/gjrgarchmodel.hpp */,
				7746FEBE259C4FCC857B0E2A /* /Users/heiner/git/QuantLib/test-suite/gsr.hpp */,
				4E0C92ABA46C474BAD9BF63E /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.hpp */,
				41657FB60E1845508CB6EE02 /* /Users/heiner/git/QuantLib/test-suite/hestonslvmodel.hpp */,
				AFE0AD37258D4AF98FB61E2C /* /Users/heiner/git/QuantLib/test-suite/himalayaoption.hpp */,
				0D734930A7AA449CBBB97063 /* /Users/heiner/git/QuantLib/test-suite/hybridhestonhullwhiteprocess.hpp */,
				1D1A3610707348B79A355F8F /* /Users/heiner/git/QuantLib/test-suite/inflation.hpp */,
				B54A4B6A5E0648608126E53D /* /Users/heiner/git/QuantLib/test-suite/inflationcapfloor.hpp */,
				28DA75DCE748450F89535B3D /* /Users/heiner/git/QuantLib/test-suite/inflationcapflooredcoupon.hpp */,
				6990A6FABBE547A59574AAA2 /* /Users/heiner/git/QuantLib/test-suite/inflationcpibond.hpp */,
				FD2E123CB7AF414CBABCB82C /* /Users/heiner/git/QuantLib/test-suite/inflationcpicapfloor.hpp */,
				0495BDB1EA124B008351A2DF /* /Users/heiner/git/QuantLib/test-suite/inflationcpiswap.hpp */,
				A9D505AD9EA747DFAD877306 /* /Users/heiner/git/QuantLib/test-suite/inflationvolatility.hpp */,
				A880575A14684CBA8D03A699 /* /Users/heiner/git/QuantLib/test-suite/instruments.hpp */,
				ADF18E0C09374ABC9CCA304D /* /Users/heiner/git/QuantLib/test-suite/integrals.hpp */,
				99E1815C50924F14A3BCF917 /* /Users/heiner/git/QuantLib/test-suite/interestrates.hpp */,
				93D79CCD95CB474FB4ED1283 /* /Users/heiner/git/QuantLib/test-suite/interpolations.hpp */,
				A128F42D3C2B4B0ABB031294 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.hpp */,
				57C046AB5DDF4AE5979FC5F3 /* /Users/heiner/git/QuantLib/test-suite/lazyobject.hpp */,
				D663142D32D644068C1440C6 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodel.hpp */,
				1EC949EAC29B4D98BB23EF86 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodelprocess.hpp */,
				F212F399DF654E98A443A21B /* /Users/heiner/git/QuantLib/test-suite/linearleastsquaresregression.hpp */,
				2874A45AAF6B448E9067AA35 /* /Users/heiner/git/QuantLib/test-suite/lookbackoptions.hpp */,
				516D2F7AB595483D800F3FB1 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.hpp */,
				8F7691EB609E4F439F2B6AF9 /* /Users/heiner/git/QuantLib/test-suite/margrabeoption.hpp */,
				8113CF82F34F47A4B2FAD220 /* /Users/heiner/git/QuantLib/test-suite/marketmodel.hpp */,
				80F58BE226C14FB7BF41121F /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.hpp */,
				987F71F309F24938A47A11C4 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.hpp */,
				AF8A0F5865A346409BFB8B97 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletalphacalibration.hpp */,
				9FC7AFF0EB46446599D6B1B7 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletcalibration.hpp */,
				29284C9337794CEBA1BCC4F2 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcaplethomocalibration.hpp */,
				2C18E01C93C94F019F60C760 /* /Users/heiner/git/QuantLib/test-suite/markovfunctional.hpp */,
				CF582A0C5B684C969735B5D3 /* /Users/heiner/git/QuantLib/test-suite/matrices.hpp */,
				9E00C1D21C4F422AAC0714EF /* /Users/heiner/git/QuantLib/test-suite/mclongstaffschwartzengine.hpp */,
				4A9FC2D981B141E78115829D /* /Users/heiner/git/QuantLib/test-suite/mersennetwister.hpp */,
				74A212F966904791BBC770BD /* /Users/heiner/git/QuantLib/test-suite/money.hpp */,
				143738CC071A4991A5D4AED9 /* /Users/heiner/git/QuantLib/test-suite/noarbsabr.hpp */,
				0C11052526E34B78B3516537 /* /Users/heiner/git/QuantLib/test-suite/normalclvmodel.hpp */,
				B55E116AD91B4390A5255A91 /* /Users/heiner/git/QuantLib/test-suite/nthtodefault.hpp */,
				76B68133693B4B2CBDE9E886 /* /Users/heiner/git/QuantLib/test-suite/numericaldifferentiation.hpp */,
				17DDB17CE2334A26A5FD8ADA /* /Users/heiner/git/QuantLib/test-suite/observable.hpp */,
				7B2187032A2A468AA7759EC9 /* /Users/heiner/git/QuantLib/test-suite/ode.hpp */,
				C4D2108CD7DA48E8803A9F7B /* /Users/heiner/git/QuantLib/test-suite/operators.hpp */,
				78451FEFCF1F4757A8216CDA /* /Users/heiner/git/QuantLib/test-suite/optimizers.hpp */,
				7DAB28997E0144958170341D /* /Users/heiner/git/QuantLib/test-suite/optionletstripper.hpp */,
				13808582745F4261AC4D2AAC /* /Users/heiner/git/QuantLib/test-suite/overnightindexedswap.hpp */,
				6E9CCB83BF994323B61676AD /* /Users/heiner/git/QuantLib/test-suite/pagodaoption.hpp */,
				3B8D03C6BA28450BACDA5562 /* /Users/heiner/git/QuantLib/test-suite/paralleltestrunner.hpp */,
				DCEDFEBE20FF409DB7BA23B8 /* /Users/heiner/git/QuantLib/test-suite/partialtimebarrieroption.hpp */,
				3AB9A178A43F4CD8840F2E7F /* /Users/heiner/git/QuantLib/test-suite/pathgenerator.hpp */,
				89D0D7E923A14090A4BFCB3F /* /Users/heiner/git/QuantLib/test-suite/period.hpp */,
				1120617299F04DC0B087FD09 /* /Users/heiner/git/QuantLib/test-suite/piecewiseyieldcurve.hpp */,
				5C3F682324884FF0B069FAC9 /* /Users/heiner/git/QuantLib/test-suite/piecewisezerospreadedtermstructure.hpp */,
				B25834502FB54970BA2CA2EF /* /Users/heiner/git/QuantLib/test-suite/quantooption.hpp */,
				BB6B5EF143C344FE861557EA /* /Users/heiner/git/QuantLib/test-suite/quotes.hpp */,
				F1F45D877134441F9E142298 /* /Users/heiner/git/QuantLib/test-suite/rangeaccrual.hpp */,
				6DFD3BC3CECD455BB1D88271 /* /Users/heiner/git/QuantLib/test-suite/riskneutraldensitycalculator.hpp */,
				9B4BF5B6D8294C9397BCD787 /* /Users/heiner/git/QuantLib/test-suite/riskstats.hpp */,
				87AFC343D94A4010B71A51AB /* /Users/heiner/git/QuantLib/test-suite/rngtraits.hpp */,
				C567ED9F13FF485BAC9118D3 /* /Users/heiner/git/QuantLib/test-suite/rounding.hpp */,
				6C2AFBB3DE24479C974DA26C /* /Users/heiner/git/QuantLib/test-suite/sampledcurve.hpp */,
				4DB8CBB154B9453EAB3B2517 /* /Users/heiner/git/QuantLib/test-suite/schedule.hpp */,
				ED938153AB0B4A779345CA01 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.hpp */,
				E3FD0A7F2BA046EFB0438034 /* /Users/heiner/git/QuantLib/test-suite/solvers.hpp */,
				E8CCC8A2407F4C67AE7C2A34 /* /Users/heiner/git/QuantLib/test-suite/speedlevel.hpp */,
				C300AE2612664BF08C58DD45 /* /Users/heiner/git/QuantLib/test-suite/spreadoption.hpp */,
				AC24350F433A4BD093FDA1B1 /* /Users/heiner/git/QuantLib/test-suite/squarerootclvmodel.hpp */,
				4358D274DA2D463799D896F7 /* /Users/heiner/git/QuantLib/test-suite/stats.hpp */,
				8C20AA9DD678480FB55DD408 /* /Users/heiner/git/QuantLib/test-suite/swap.hpp */,
				C681B5583A704BAD88444FEB /* /Users/heiner/git/QuantLib/test-suite/swapforwardmappings.hpp */,
				3CF37B6654B34B01B4216A2A /* /Users/heiner/git/QuantLib/test-suite/swaption.hpp */,
				F08506CB518A46439DE7CF84 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitycube.hpp */,
				5DEF4A549D324EFB856A1431 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitymatrix.hpp */,
				8225C1D23FB14D1DB09D45DA /* /Users/heiner/git/QuantLib/test-suite/swaptionvolstructuresutilities.hpp */,
				37D5F558A0A8444CA475B34D /* /Users/heiner/git/QuantLib/test-suite/swingoption.hpp */,
				CEB72580375849A48DFBF5A4 /* /Users/heiner/git/QuantLib/test-suite/termstructures.hpp */,
				1AE30CB7FEDE4F9694CA99A0 /* /Users/heiner/git/QuantLib/test-suite/timeseries.hpp */,
				574A0861DC2C4A8DB3E97574 /* /Users/heiner/git/QuantLib/test-suite/tqreigendecomposition.hpp */,
				E38DDE91A20A46FD9396AE34 /* /Users/heiner/git/QuantLib/test-suite/tracing.hpp */,
				08465B3A61104898BFF1F546 /* /Users/heiner/git/QuantLib/test-suite/transformedgrid.hpp */,
				ED7AB3EAF0464970A96A738C /* /Users/heiner/git/QuantLib/test-suite/twoassetbarrieroption.hpp */,
				3135B753C40F436290575C42 /* /Users/heiner/git/QuantLib/test-suite/twoassetcorrelationoption.hpp */,
				6734D08994544AA784FC94B5 /* /Users/heiner/git/QuantLib/test-suite/utilities.hpp */,
				6851DF7F458042F6B3851407 /* /Users/heiner/git/QuantLib/test-suite/variancegamma.hpp */,
				00B0D8E028944B5AA7C720B5 /* /Users/heiner/git/QuantLib/test-suite/varianceoption.hpp */,
				E0A880CBAE9E4760BE186ADF /* /Users/heiner/git/QuantLib/test-suite/varianceswaps.hpp */,
				E8D0257D5AB140A49E2E810B /* /Users/heiner/git/QuantLib/test-suite/volatilitymodels.hpp */,
				59A78971C5274008B01F4D31 /* /Users/heiner/git/QuantLib/test-suite/vpp.hpp */,
				54280447FE7C4A0D87222A8A /* /Users/heiner/git/QuantLib/test-suite/zabr.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		7FC6A9413B54462DBB1276BD /* Repo */ = {
			isa = PBXGroup;
			children = (
				C4769F7C332B49E89844BA2B /* Source Files */,
				361AE52A6EBF4A608607FAB7 /* /Users/heiner/git/QuantLib/Examples/Repo/CMakeLists.txt */,
			);
			name = Repo;
			sourceTree = "<group>";
		};
		80500B7A271C494780F82AC9 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1B3578F4B5ED4BA8A4772839 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */,
				F37D4E59DEFC43F285940360 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */,
				7E03B3C342BA4020BD6A218A /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */,
				FEFACDDDBFA54AF484E2CC03 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */,
				244EF717F23046E985037C36 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */,
				2CB89884CE5647CDBBB5C41B /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */,
				BA29497919904BB3BFD8D73D /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */,
				1007DC5F9CB84630ABAEC512 /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */,
				C23441D9E03A4B20801DC763 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */,
				4C0F4CF9973442F887122F3F /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */,
				507E6A489874406C96AEFB71 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */,
				3FB293EE4DE54BE38F487893 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */,
				C0B933CE5A8A4FED9232D218 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */,
				2FF36C51D3EB49EB9EE8D5C7 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */,
				9E7019C2B64F448E89CBADBE /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */,
				37A003641A0545D5B33F7EF6 /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */,
				D573F4802EDF4F8384F1A9CC /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */,
				1DA430D7CA3D4B6A918183C2 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */,
				51EE2BAF525A46F184F772B4 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */,
				4FCCA9B9B33E4E8AB3867289 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */,
				DA332EF10F6C4E9286EA05D3 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */,
				F6684F1511814E6D857D156E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */,
				4CAABD398C5A445093C29DCE /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */,
				CEF0C963AFFA4189A9105E39 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */,
				8B710299F38A4C67A0D8CFBA /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */,
				02CD75A20FE7408A87CE393C /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */,
				5311B34FC64840368EEFED1D /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */,
				D8FEA9CEB7E34857B261F359 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */,
				220DC17D71F7457CB17F1130 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */,
				69865B9475644376809C596C /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */,
				6562C7C1CFF14004A203A080 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */,
				8CA82BAD24184DB994DEA36F /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */,
				92077EEB369D49CFB255CF87 /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */,
				73DE6FD6EAEF47E88583F307 /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */,
				E5FE7982931E4760A6C1790E /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */,
				C9B4D205A50D4BD6B504AA9E /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */,
				70A714522EC54243877FD586 /* /Users/heiner/git/QuantLib/ql/currency.cpp */,
				2BF78E76A38C45C99E446A39 /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */,
				7D14662ED9B1416B9A07EAF7 /* /Users/heiner/git/QuantLib/ql/errors.cpp */,
				85260F913A3440719AE1F689 /* /Users/heiner/git/QuantLib/ql/event.cpp */,
				A96D91E9CF9349C98703008E /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */,
				997D2DA2C5A042B4A45A9DB5 /* /Users/heiner/git/QuantLib/ql/exercise.cpp */,
				769558F5B6904581BBB219DF /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */,
				4E5D39AE4F31409EA9278A27 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */,
				C11F8C87B15B4DF6AAE08312 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */,
				86B1249822BD46C5AD945C54 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */,
				F788261FDAB84252B93F937A /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */,
				89A6C64D2FB149A9B55E9880 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */,
				53EA5718E1CE499B956B0F92 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */,
				60C4332AA923410E9B2CB06A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */,
				F15CCEC4587845389EE577B5 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */,
				860AFA67EE9145EAAF4541FC /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */,
				C3B918000A55428D9C6986F4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */,
				E2ECA52069914938B58AEEE3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */,
				318664DD40EC4DB4B67467C0 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */,
				1C3503A24C434D5EB23BB785 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */,
				CA9DF1A59F994FEC85F7BBD4 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */,
				A36B17CE9A1D4058A0A1065E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */,
				2FED7A83C26A480CBA8E37F3 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */,
				B549293533334666852A1308 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */,
				A09F18899F124F17BD8B5B9B /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */,
				C1F2F0806C674837B49F949B /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */,
				9DAC37AD89B848AEBA72A265 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */,
				9952D2BE28054A1E822441DA /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */,
				D06672A665054D34A66AE6A8 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */,
				00B1A01CA763483C8D8E9FEB /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */,
				B3F1ED9E2BC54F09A8D66C47 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */,
				5E8A0512FDB24E08B17CFE94 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */,
				8CDF222D5E3545C79702EE10 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */,
				B7A27999278A45E5AA52599E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */,
				3529B286458B4BB6AEC25EB6 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */,
				888ACBC5F9FE4A32BD8FB2C1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */,
				FB162405E4E241E8BD1042BC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */,
				2CEBB858E5DD414EB77CFE06 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */,
				118E19C667294262BC94DE75 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */,
				472297B793224460B99EBDA2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */,
				97AD7CDD966D4C6084826AA4 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */,
				52866D304BBD46DFB3DA7240 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */,
				1E028D9470A44375A0AA5C63 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */,
				8624F280F146493EBA4ADBE0 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */,
				125C2B1CCA7F43D096E40ED5 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */,
				42EF01E452464C968AE39B49 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */,
				D0BDF8F509A848DAA4357855 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */,
				802E2E82E0A34902B0F1F362 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */,
				3FED2145632C4C559FFEE437 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */,
				19B262F5F59D4A43B6833A58 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */,
				EDE5249095BC4B6D936CBC58 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */,
				5BFA406AE5104229931BA6B8 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */,
				2CC129C24C8C4379B83B4605 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */,
				C3A07511F3F744F89C11D69B /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */,
				ADCEABE53B4348878E5578ED /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */,
				BC970F97D5B34814B8B0F6B7 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */,
				FF2C6A3F962442CAB31D1A43 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */,
				AFA690CC379C43F188A0E376 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */,
				8D708BF392A84B5BA786335F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */,
				5C243736D0234EDBAC523B1C /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */,
				ECCD7820AC1D409C860E98E2 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */,
				A68F4455E38F4C5DB378F7E9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */,
				F8BF5D5810A3467C80E456E5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */,
				62388503D5984168B3DFC1E0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */,
				A285437ABB9B48BB9564BEAC /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */,
				6D7093FA3B5E455BA5F7B1F2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */,
				DED01AA6EE1A4568B73DE485 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */,
				D0D95CF4A79F48DF8199A134 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */,
				11CFCF3CD34C428F989215AD /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */,
				515EC2E3F1074DF9A08DBBA3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */,
				F19FFEAC8BEC4605B3093B9F /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */,
				7A927598CEA842E7A562796D /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */,
				511F0986157A4C66B9206276 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */,
				EDAB7EE2447142B1BCDEB4F1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */,
				5D07777CA402454399AA7C1D /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */,
				2DCA98889C1047038D7DF578 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */,
				567A074845BB4282AB2DCAED /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */,
				006810E19C684AAE8DE854AB /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */,
				457C2DA32EB940BCAF27B54E /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */,
				EFACB444DFD647F1B5D63569 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */,
				6E0F344F76B74C0DBAE855AF /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */,
				69C4987189F5491593B9379D /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */,
				E52D17423F244186B62A746B /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */,
				491832E91E00470FBAD54AB9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */,
				9367A331883E4A968E5A601B /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */,
				B153E1B565DD475185AF28A5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */,
				CCC69D69AE014E81AC2991F7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */,
				8CF4460AA2A8440EBB232199 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */,
				05AF6A462CAF422989673DE4 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */,
				9045FF95C12C49DBA1C117FC /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */,
				E84852B79F63477F8EB3ABAE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */,
				A15B0F61ECB448B39FB1ED99 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */,
				D0C8F1C0E3D64D42A47C7DDF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */,
				5BD80BB2F1674154A518C299 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */,
				46692E96565F44BC862BD8F1 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */,
				70D34DF7B19A482D8ADDFBC2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */,
				9419FAE0934B4E98ABC0D26C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */,
				EC0A7CA3EF7A48D3B08E3C6C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */,
				ACBF1F27A4964852A020D451 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */,
				88BED79A9BDC4EC5A2C7269C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */,
				6B36C3700F7E40B5A0FD3343 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */,
				3EF53B054DB54F7385E4FABD /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */,
				FD13B2695F29448FA596B5DB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */,
				EC8BC8C1AE9D45CDAA4E608B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */,
				D0944B30976E4964BD646064 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */,
				D9C28A6DBD9348EC997A1D5A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */,
				E4591463297743B8AA38BFD8 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */,
				DA74C5F5D4A645258CF598E3 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */,
				529517A83B9D4013BDDB9B18 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */,
				FF7C906CB2444472A0D6CB83 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */,
				5FB5784EAF974A78BA88D680 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */,
				4C99148780C04CDD81D0E05B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */,
				EF11AEC76CFD4CF3AC3019B5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */,
				EAC34C86287E474396038A1B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */,
				8EBD32A1E1B144659C8F6063 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */,
				1D3FCE773825470183471F67 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */,
				AA8C78B13B07428BA170A4C0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */,
				5DF4A5F984CB4242BEA4652D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */,
				78A4D06C74454085BAF98955 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */,
				0EB4D104FE7E4A10B5D50B63 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */,
				19160BE3533C43E0A579CC1C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */,
				5F1B9FB9DF5C494B967304FF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */,
				E0E5635A6E7D49C6A3E5EC62 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */,
				4A8FB7F2632B437AACA38472 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */,
				A1823A6C71E8462082148D81 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */,
				13123F6F512545E69B11BFA2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */,
				A76CEEFC07CE497398A97DCA /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */,
				A810F4E06127499B9B73D78D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */,
				B766B0F954E04316B07973C6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */,
				3D555086A9D44CFCAE85C505 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */,
				E9F43C5357ED476FAF55534A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */,
				84949C7F351A4ABAAD49A8AE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */,
				867BF28AF87C482A8A687198 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */,
				676375AB27794D88985E83CE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */,
				D15721A22C804C7DA2A68C92 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */,
				277A91DCD4A1443598FB7110 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */,
				CF8B78E0AEC14E90989E9938 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */,
				0D1D82219B37460EB48B6B67 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */,
				EA0CDC3203D0434596F4C6C8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */,
				D27CAE725DF04898BD3245C3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */,
				F329D278676C4189AADAE52E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */,
				555965371450455D9F924E7B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */,
				41D08D6399FB4FBD9D3BAE10 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */,
				88316A3B0D9E423AB6B676F6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */,
				F4FBE19BEEDE47A0B64E5529 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */,
				B50F0A949E6E4C6893AF532D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */,
				CFBD4D96C2444B0A8FF2CFE0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */,
				EF55112ED172471BACFF0D50 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */,
				25697767F46C4BFA9500A6E0 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */,
				F3F0BCE8BF1C45609727CE90 /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */,
				29F69FCEF6A44545B636BDE3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */,
				9E0BA7827ECC4E4CA9EEA162 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */,
				59A7D868ACD04E37B3E375E3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */,
				9BA2F7CC64A14FDB970DF0E3 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */,
				A1951730C3B64000ACBB2214 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */,
				5D773582E12649A4B961BE04 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */,
				1DF2B180629C4B1C9F331082 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */,
				595A5D59DC3D45C2B86FF879 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */,
				30C03CA191C8450A98E8C0D6 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */,
				8F56FB2806B14A54920E3D5C /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */,
				497E45DED7DE40B79786FDCF /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */,
				503B0535743647AAAD2735C7 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */,
				14CA17CB86384BA2B997FB04 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */,
				CDF5C030FD834AD4A15959C2 /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */,
				3E20F86EB846461CB7D25320 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */,
				950623AB91304D41944C566D /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */,
				CBEC3E3B67CA4C94B5F86E03 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */,
				7E91C3A443AC46F580A31793 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */,
				27517EA43B9D4BE8971F89D9 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */,
				1F79811002E842678B1C2B82 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */,
				82FB87DEC9094EC9A73B0F2D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */,
				1CD3C7624EAA43409448C3B4 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */,
				1487797027684F86BEEDAF89 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */,
				2EAB42F71E6B4945B455B25D /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */,
				9CAC6BD8B5A0448D99DA7F45 /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */,
				1EE7FA22A92D4D0DAF184542 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */,
				F406BBCB0D0A447187CB94E6 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */,
				683C9C8ADF8C49AB94468A46 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */,
				5B03E290EE294EF4872D4E84 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */,
				CBB3DDCEC0E14B9FBB85A060 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */,
				0D6F89096AF3458FAE89583F /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */,
				C6B8AC13E3A84A948F85DA21 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */,
				A212B83008A34209AA5804AA /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */,
				593A0DAC38E94690B0EB5895 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */,
				55F388F18860463D84E2C654 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */,
				A2FBEA62E3224DDBBCD94D0C /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */,
				EB4F2601E0EE4808ACAC34C1 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */,
				29798D448C1E4FB48955B2D3 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */,
				8C85134C25D943518BF1D63A /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */,
				371D4CCBAAD14C14AD3263C1 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */,
				13952153B03843B195D20032 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */,
				C3E780AD60FC400B9936A6CF /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */,
				943BD1DA630C46F1A75443BE /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */,
				3B470B7B2DCA4DF0A451A790 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */,
				446872B3F9DD4165B578FD0A /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */,
				75323AB4D69A4A5DA0D312C0 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */,
				4FF38153D3EF41B98EBFB829 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */,
				B0E63FC4F29A4F6D8906F578 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */,
				6CBD4CDA916043EEA1FCC9B9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */,
				D7CA63827A5E432A8599280D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */,
				8479B117176E4674885BF970 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */,
				70D73330B9D241D0B48B58A3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */,
				0208706D2D4B45C2AC5EB32F /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */,
				DC4B3936C0434087A2F43764 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */,
				E2D7BC0DCE7243D689A5AB25 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */,
				4FC81DE1D0D14253B943FDB3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */,
				1DB45B81F9C942F98FC1EDB9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */,
				8DDF376493AA44039AADE764 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */,
				FA4B3E65FA6A4F13A4C9BEE6 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */,
				1775F0462F6C47ED8FA5B96A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */,
				2EA07D33AB9543EEB8B183F1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */,
				770A452110034111AF2FAA27 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */,
				CB4CE852560546758E25D3F3 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */,
				B9BD14AA60C2486BA0AF5D9E /* /Users/heiner/git/QuantLib/ql/index.cpp */,
				F21801B891164FFB91F743D7 /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */,
				B22C94CC3910494AAD7E9A08 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */,
				02AA9D7C386C41F3A6D7F7C4 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */,
				FD4BC3F2E89F41FFBEB2345C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */,
				F7E54AD333FF481AB555F8C2 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */,
				F1512D3858394C2589800FAE /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */,
				420F1190F11743C28E1A0390 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */,
				0F96D724ADB548258F962AC8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */,
				7F6898DBCCAB45A7BF4167C8 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */,
				B7C2EA6BE9404866A15A937B /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */,
				8BDDF2DCE3B445E8A18BAB6D /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */,
				DE068E04466E494BA8A612D8 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */,
				FE60A17DA7B64E06A5F8FA29 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */,
				2AF65ACE48114F80B41EED0B /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */,
				C31F0912709F47C78D051037 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */,
				362057D51C46471ABB5581CB /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */,
				D4A2C591901545FDA68534BE /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */,
				2AE13769D4F540BBAA6FEAC8 /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */,
				3BEB13C90806481BA7BE076A /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */,
				3DA49374890B4A94B92D7A20 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */,
				ABD331CB8A6E431AA6E347E4 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */,
				A91681CFC2244864BCFCDB4C /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */,
				0B4A8B75F3254E17B8A722F2 /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */,
				BC62AC17873D449BA0E84CFC /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */,
				5CEF619630A24B4390713249 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */,
				C3A58563E630447BAA571AA8 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */,
				75D5299FB60F4B74A6ABC87C /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */,
				4D45AE3A82A34C32B6083720 /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */,
				12A30C4E7F2441DA83D2E508 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */,
				BDF42F6089B042B09C3467D3 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */,
				BDE45FB7BEA14F4385100A27 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */,
				F1E3EDF37B5E4D3E896255A2 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */,
				B98CEBA7C17040B39FDB6450 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */,
				F9C59F2F7FE441C5B431DA3D /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */,
				3E00C5362D4E4286A9273AB5 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */,
				4FAC8C6F9702408F91684014 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */,
				BDD3CCC1C5EB447A9E8B054B /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */,
				574054733914434EB3678A17 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */,
				A582F54C4F374386B741A4F9 /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */,
				8F087AD426034EB8922F282A /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */,
				47E3086CAACE4FE7B4E9E092 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */,
				E037431804DE4DE0A7EE5464 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */,
				CA486A2BA9C6470497FB48F5 /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */,
				698ADF91018247D3B7AD9083 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */,
				877107DA0F074B6BAA4C025A /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */,
				5EE1CE08F7054994BF63883C /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */,
				8452F11A3AC14746B1F58BAC /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */,
				5F776979E162491A8F5832FA /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */,
				C922CA8999F74674BB85FBB8 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */,
				3B722D79DF164E47BA0D7BEC /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */,
				E8E8190FE7824CA0B2251024 /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */,
				9BE23B5349C744999280BA1D /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */,
				534AFB446A4E4056A389DC03 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */,
				018BEBAD744B431EBA6692EC /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */,
				4C71EEEF3A6F4D0D9D132B08 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */,
				1018D9A472C8403C84491747 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */,
				E5FBE8681F104DE8B1CC0319 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */,
				24BE04D2909D4DCC8D780F12 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */,
				737462AD12F1415C93E238FC /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */,
				0B87F05A5B0F41458DC8913F /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */,
				842E23F144E1411E977A8CB9 /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */,
				4C82A3DBBBAF4DECBE6E8908 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */,
				B6852774A4FF43D5B657389B /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */,
				729977EFF13F499A82BCECA8 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */,
				21A7871A022447DEB7289D25 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */,
				7137928634FA489B899D896E /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */,
				261CFCC7261F4D41B729502B /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */,
				B27D796D12524EA8AF12D8A9 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */,
				4E08CEEA2048420AB8977843 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */,
				6224A3CEDA5C4B58B33D68AE /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */,
				5D9F17860D524525AA85782C /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */,
				AFE7C46721254F3A99E6A782 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */,
				FFA93C29144544A5ADB04605 /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */,
				372E09D23E50462CA9A9501B /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */,
				ED1C3C79F8FA4D4490563388 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */,
				C3B9E44B266843E285192941 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */,
				4A4372295DB04E3488DAE567 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */,
				3682C862424D4B7080FCAA99 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */,
				052B85109AC740EBB08262E3 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */,
				2160E63A107D4750BA5549B0 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */,
				BF428DD412B148C6963CBDB2 /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */,
				7E27E79D2F3E475B8CD1F52D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */,
				734956DACF4346E898D6642A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */,
				7470AE3772F548E592B7DE2D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */,
				1521AD3C70DC4F1992235C1C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */,
				CF3F8C7477684882A35ED24B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */,
				DB12BABCD84842619753BD75 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */,
				6A5BC28AAF5A488C8A71A397 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */,
				8F8414C512C84288A4B3D386 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */,
				59B9439D3254417F97525078 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */,
				029446D7DF064D98A205B808 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */,
				41F0579DC6BD4545A154A6E2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */,
				BE9664309BF5457AA70CF400 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */,
				E57741C875934FD6A55B2CC3 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */,
				73E0D51F26D34DC89A786F25 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */,
				E3B2BF1867A94DFCA16B72F6 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */,
				501B36F5A7E4463388974C89 /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */,
				1DACE8C2FD224B1B8E032182 /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */,
				F72A81DEA592441BAC582C3A /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */,
				2CA31CD1BE1644D48A351AB3 /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */,
				900A01B3719C4BF2892A321D /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */,
				99695AD9A0E84A21BB8DECF2 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */,
				D7D6A56A20D243A8BB0366CD /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */,
				88C26617E4B94A3A87D3CFDC /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */,
				E29C6027AE71430D9AFFED69 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */,
				1641BAD74A2644C28B872679 /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */,
				01CF112A59544192B5E2166C /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */,
				D77CCB342F52469BA0BF189D /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */,
				59F9B6AED65D4C2BB4EF0E1F /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */,
				47567029BA1A44C983527BD2 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */,
				C3FD528C1A6A4C629DF74980 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */,
				268A09F440CC4D7296F4D242 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */,
				68AB522F41C84E2D94621F77 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */,
				7C2910C6E8FE4869988117EF /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */,
				8C81DC66862B47E89FBB8085 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */,
				A3BF21AAD7F244F2A7339009 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */,
				68108F556CB3471FBCDE9DC5 /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */,
				009792FEB2A84C52A88D6879 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */,
				A438EC12264348FEAAB320CD /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */,
				40090BAF4E654027A253BC26 /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */,
				9A73C09D751243B6AC797FED /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */,
				6E3791E0518A40848BA0ED45 /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */,
				7284F6B4B881412CAD93083D /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */,
				1457043D9D424A64A89F8615 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */,
				7F467DC7B2684D33BB3E49E4 /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */,
				6958DD31B8B44033AC41BE72 /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */,
				44E9EC08054B426FBAAAEF91 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */,
				95DDBBFCFD3F4FA099EA63EC /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */,
				477C02FC26E4421FB6914DF4 /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */,
				C1420BF60CEB42D6BD88D40A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */,
				FF362D6F88F74CD29F206120 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */,
				511C5F600DDF457C827D2259 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */,
				A2DCABBC7B0B4F5BA28F336C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */,
				9805B95A573C439EB9E00289 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */,
				CBC2955EBA19438196C530E1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */,
				F9C3AF5CAE5B45DDA02DE982 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */,
				FA846D43C6924EB1A4E2DB84 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */,
				15A9E7611463410A82FC0A6A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */,
				74F862F92980496490C94E47 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */,
				55B481F58DB3419CA299E054 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */,
				E139CFB04DEF4E09B749532B /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */,
				A96249085F6B435BAAB940D9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */,
				323543943FFD4AED989914E2 /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */,
				C9B92A4EBCDA4E448B4FFAC3 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */,
				A5A072B90DDB4E3E9C9D0871 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */,
				46931D0C71ED496F931E470F /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */,
				866CAD1AF3B341A486739123 /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */,
				FC0256F1C0F448EC8DFB92A5 /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */,
				1D1D81699A5142269728CA2B /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */,
				87D92BFA8C9D4C849DA680A7 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */,
				0A28AE6FB6F74A5182471786 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */,
				76A90F52D3334B68AF93FBC3 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */,
				098181AA005E468BA725BA06 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */,
				0756F26BB323497A9296F5E1 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */,
				F02B164BAF024A4681DD913F /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */,
				BE55879DD9E64BD4BDA677E4 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */,
				383DD6C0466947638D7CFA95 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */,
				87804B59F6654AF79883E90F /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */,
				064344D9864B4AB9BE166F45 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */,
				4F6949DC2B6D41B7861EF4CE /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */,
				69FEDAFF921A41289D415ACB /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */,
				2DDFFB6488BA4A3C841F36A3 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */,
				49D7680D62B1454CBC9A4C4C /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */,
				EE086E568B294715919593AC /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */,
				33C7E0BE7E294CD6BD078EEE /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */,
				854D8941C1FF4BEE96484AEA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */,
				9281C7E1A4324830ACFFF707 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */,
				2EEF8A9AE2584B009EDEC04F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */,
				6319F4B4D68C441EB56415DF /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */,
				E1CE1724D7E54A94B089D6A9 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */,
				C2ED065A783E4669A26F34A6 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */,
				7D4B84C6B9B94FF987164CFB /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */,
				5CC9392378DF4EEAAB0AFB0A /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */,
				80DF6D4BDF174110B10BF039 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */,
				0DE9B2C329594356B78EA506 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */,
				823A0EEF7454467CB82E6D2B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */,
				0BC55D4778804A9DBDE49FFC /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */,
				2F9361180CE7496F9DDD2C89 /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */,
				3CBAAB266D6E402A9E9305EB /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */,
				216CA42761D34C4D9C74B6A4 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */,
				FACF0ACB61754803A2254082 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */,
				8BDBB00D46C147E6BEC74554 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */,
				7C983C0375E24F66B15C87EF /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */,
				5B3487132C8F4B6390121FBE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */,
				F6C9480EF5324F1E825D1952 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */,
				0616FBD49EA949E482DC68D6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */,
				D19023D40BC3472FBA428ED6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */,
				81C90519404F4C178D0C74C9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */,
				2F18A92A41EA487681013380 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */,
				BCCB0A19B1A64BC88E9D1E65 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */,
				FC6E1F48DB97438296561A9A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */,
				47E28414BB064E0592DA466D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */,
				7E912AB4ED6043E397CB522C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */,
				FC19D4F9AD464CB2B287335D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */,
				655DF95EF7EC499BB535DF18 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */,
				1B33A2D63FEF4F8A8DCDDA96 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */,
				33E6DC9520FA4C70A159BD40 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */,
				37251C76D2864BE9BC6B6B7F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */,
				7EC3E0979E3C4B52967F8B82 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */,
				35767CE0ADD74950B6DDFC37 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */,
				FD5E2891C74646939DA477D5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */,
				1BD92979AB5147C08B8FCCE4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */,
				57D177E086BD4F62BAD252F1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */,
				501DAE8DBD9349F784EB7896 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */,
				2C0630617C7D4C31892F9C16 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */,
				E77BF42C71AD41BFB1ACC845 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */,
				F96EBCDBF917478988BCF635 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */,
				F390710A05214AC19FA39DBE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */,
				9B7C8AA69A27440D9F046DAB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */,
				3134812E73EF48BAB071AD9C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */,
				201EF1A36BA9471F9050352A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */,
				61E059CB42DF48FF9F91606A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */,
				58BA92191E0441CBA9910B7A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */,
				F25860B997B34ACE899D87E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */,
				836FBB9348FC4FDB8CCE90F6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */,
				5DBAA28AA6BC4D80BE2281DA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */,
				D8CA7B6B7698407CACA9C704 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */,
				12AC43D33C4048D387E5CBA4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */,
				5AFEAFF81DCD411097ACFA0B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */,
				F3035B2DBDF34ECEBE10CE24 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */,
				AA46E699D82440F382224253 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */,
				7A1E6DA78E34497085D6546E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */,
				354179D9AE664435A43CE66E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */,
				E7DE9917168C4E3CB81A7C0A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */,
				E647B74B54464C989B16D450 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */,
				77FA4DEF32F74A11856B365B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */,
				D30DA5DAF947473682372B1F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */,
				B4D643808AAE421C88C777B2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */,
				3AE91B2E7F8542E29EDF390F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */,
				C372715858074CCE84AE46E7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */,
				EBC0FD7C062A4B9DA4755E7A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */,
				55046CB71E3C439E9F2158FE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */,
				793FEFC234E84BB1A120E26F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */,
				0A415A55DFC74A39BE9D8922 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */,
				5C53C97D28A54B1FB143D884 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */,
				E4523F0899B449BDAC23270A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */,
				CDFDD7CBCC7B45DAB65FF6B1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */,
				0668D6E1069E4E77A37AEAC3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */,
				E31BF51D3E8C49C88653A6E7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */,
				C9F8D012E56745BBA9B12232 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */,
				722BF0D6CF3A4A28AFD186A4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */,
				65AB221092C548FE83F17D68 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */,
				B79DDF87D5EC4A28977007E0 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */,
				92BE93EE4B294287A662D0B5 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */,
				37A4C0C18EDC4A03B46AC7D3 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */,
				1F74BE886C1A4DC8ABE77346 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */,
				B41383F2843B447D80DB6C54 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */,
				4B604E85EB474BF2BDDD2BA7 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */,
				FADBE2EC163744D792A81300 /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */,
				EE76ADB6B11B4E1F8F85C694 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */,
				69DFF5D6C18F448CB0DD51D2 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */,
				56A0A315FE9B4BF884399915 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */,
				2A17EDF07386443CA1BAFB87 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */,
				A732E9C45C2342679D8154E1 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */,
				E8DB09A2D75F43BA9893275E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */,
				A041EBBF7C7B450684C3DA63 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */,
				484C3E257D6A4BD7BFC4D874 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */,
				E7118F7BBF0A4297BD7EB5A6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */,
				874E2A008C674A4DA9B9FD18 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */,
				001832636A454B63BBD2F2C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */,
				C6201A04ABE64E12904908DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */,
				BF17180CE92840D1BD740FFE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */,
				FC076640D0CC4E67BF58B871 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */,
				48AAC6EA46264B92A91DBA6D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */,
				7627A40E642D4FCD92816E9B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */,
				031C3BE23E964707B0CD4DA8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */,
				EE8938A4D0F24DE6915EB95E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */,
				B174565433DE4FAC80ACB9C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */,
				15DE8E0A718D432FAD035F9A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */,
				C70CD15AC49243F0B0FC1914 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */,
				4DA7B631C0DC4400AD52FEE5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */,
				BAA1BE77604D4EB398899C88 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */,
				43D9149D9A7E4B85B8A5E6F1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */,
				04F710B49695408F903702F4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */,
				995621E94BF04C38B47E4FAC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */,
				381B917CD24C4BEA956799F2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */,
				34FFA67A7A154B2FB2360AAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */,
				BC90477AED7A4622ADC8252B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */,
				471B380A24DA4398A0C605DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */,
				6F26414E8984402FB3C11091 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */,
				A89550D0560C4A5C95A8DED0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */,
				8006A246939741A6A4228956 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */,
				8C816E5609044D88B2732E26 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */,
				427CD1E6BEAE40E9BE74E7F9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */,
				A1E5BDFDB633471895FBB756 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */,
				AE8EBA97C98E41BDB0E4F7A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */,
				3E01ABEF3CA24B02BC530FC8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */,
				CA202303B3D8469899788EE3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */,
				9C4870A58E5644F4B792DC3E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */,
				4D6956CC03A44670A85500C5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */,
				EAC72A209EBF4EBD879037FB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */,
				F86AA7250B84444A90656317 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */,
				C718F55022BC41CA9C2D582A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */,
				E8DF6D34B4A54B6B8800E366 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */,
				9E66872BF0DE4B258E59B912 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */,
				F4D6CE52C6484A2F9BEA568D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */,
				4DD0651F20F44AF995590396 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */,
				CA447438AA524531A4CD46BF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */,
				57F1F2049B86434A89E59BF0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */,
				7B23081F1C534C60AC757333 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */,
				61B4066B70C64891BEF64906 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */,
				9CC78A1801544925B3A8D111 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */,
				0157FD42DDB641A2A70A3DB9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */,
				832F770D781349D9A625DE4F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */,
				0E52370557A241AB91792912 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */,
				4FC8919BC7D440C38F813F8A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */,
				B52FA47BDA4040FC90E6B6B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */,
				D7E9DDD11580418FB0F884F5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */,
				5AF6ED73AE054396991E44DB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */,
				FD6C5D1C2FB947439197C3DB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */,
				0201CFFC789F4048A0E44B75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */,
				6814732A27F246FCA66EA309 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */,
				EB1843651AC24250BF53D0BC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */,
				771D60B9D7874692BE1BB1A0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */,
				52B611C3EE10438A88AB4880 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */,
				BE1EE072DE9142FA92D63552 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */,
				37B24FA84A4A438280BD325A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */,
				F1C56449EFB3464AB8980ADE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */,
				29E1B776F59E416B863BFFEF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */,
				97DC1CF1C2F743B698991432 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */,
				C31113BF89E24F8493B1EAE6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */,
				F7E0DD7FB9B845B58DCA5506 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */,
				0254FA2168844B21AABBD645 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */,
				D9AEF1BA52764E079EE43EAB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */,
				93E4CE3DD74347AB8E9DC724 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */,
				85094A6D1D224EBBAF0D1D69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */,
				052CC5E16CC44A2B9D77F243 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */,
				D8C8517E94B84EE89D11678F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */,
				D6318C4CFE3E415285EC4A1B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */,
				CBA4690E9D224B279A3D46DF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */,
				F8202628BBBB4E43A8325472 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */,
				2C4F4A202939469B90607B2E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */,
				DE8BAB7C832A4CF994D16C65 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */,
				D0A20E8B008C4AF49EA77056 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */,
				7D3C4E8E5D8049148482516E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */,
				D4EC9DDAF46643549C39DE1F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */,
				D6D42984924547DA80B36056 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */,
				E1A6EBF1B6B04C8184129907 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */,
				CA0D8999BF6B4FD3A696EFEB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */,
				E5B0360DA5B347F498CE1D50 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */,
				6BE40F5E599A41ADBA74B6C9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */,
				1A4EF03D9F864A3E9995AD7F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */,
				35260E37B3E54AA9A13713AF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */,
				80CC7BB7C92A4FB08413BDDC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */,
				ACAA3D574B714EDBA0999E75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */,
				AC78B52A018A4318A74EE6C2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */,
				A14FD360A4134344B0116C4D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */,
				ED96FEDBBCB649718DD73CA1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */,
				71AD2B26C352476686BC8A27 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */,
				EEECE02EA8AE43DB8C3415B8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */,
				527455819DB04A349B975173 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */,
				1DCD7400E2A34549AFAA934B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */,
				F3D55DFDCC4E4A2093F2D7DE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */,
				5F5AA48BC9C348089C0F1EB7 /* /Users/heiner/git/QuantLib/ql/models/model.cpp */,
				0BB78A7024814A4C86DC5BE9 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */,
				9A170075F05A42C4BCC17862 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */,
				D80B8BAA84D84894A9AF422C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */,
				BAA0B940E32E481795A0869C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */,
				AF0B1C49D9DC4305B322F053 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */,
				CC78D792F1AE41CF8C98FC17 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */,
				E92405522C8A4582AD8136A8 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */,
				F2E848EC864C40E8B58C4B4C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */,
				A236FF8982354E0B9EB9AFA1 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */,
				866D6C73C4764F36908DFC53 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */,
				E419F983F59348BEB5AAC075 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */,
				4A2F648789CD410D900793EB /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */,
				7439E3E5562D4BA1861C7E53 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */,
				428B4AC6E0A146918C221448 /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */,
				C2971CA90B3F41569759AE31 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */,
				CB015412DCEB4AA69CFA2BC8 /* /Users/heiner/git/QuantLib/ql/money.cpp */,
				C78BCF16190F435784BBA616 /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */,
				D023E37495314B43903E1FA5 /* /Users/heiner/git/QuantLib/ql/position.cpp */,
				9D1895A41477452DAA5FE4B3 /* /Users/heiner/git/QuantLib/ql/prices.cpp */,
				61CAB9CEB3A24900AB1C5E9A /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */,
				8933BA19CB8E44DAA1A2652B /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */,
				6129E108B646425B9C1D08E2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */,
				440DE69B80654E739D63D84C /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */,
				77BA82B4140848F3AE10FA7F /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */,
				A488C07979F24EB6885B955B /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */,
				FD97EC3D717D41AAAA8FA37E /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */,
				F914BCE660F94695AEEED284 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */,
				E2C5F2B061CF4A7E8263610B /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */,
				91B472D43C5F4DB59EEC49A2 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */,
				F003ED0639644B4B9538F728 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */,
				3E406993298E45B799B76BAC /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */,
				3E8A186DE54142959B179C1E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */,
				FE50154D20BB418E9EDDF377 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */,
				842C5AF009A74FB381E95A65 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */,
				FB8B696E177A4B8DB503DF33 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */,
				9686DB0DCF7C4A25A10F0DE9 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */,
				1A07E11F100B44789C0A9BCA /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */,
				37F77142CAD2472C9F82F26F /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */,
				4FFEC83EAEA34FE39C833982 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */,
				DD3E4F8CE70642DD88E980B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */,
				55EE9C3CCEA749D486795442 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */,
				011F055FB9DB4990951A427E /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */,
				E84E389B7B284E0A87FCFE5A /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */,
				CA7B9AEC2380480084F84A97 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */,
				D891921273F044059529D75C /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */,
				550ED4F4E1D341B38BCEFA4A /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */,
				2B482D48F99B44D5A759DF52 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */,
				078A5871E0A8463C859B9717 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */,
				71FE0FC985FE471CBC32AD4E /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */,
				A9A2843DFF314AA58BEB6DBD /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */,
				23D3CABFC64B4A279ABB6736 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */,
				67A3D3D56CAB44A1B8527B31 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */,
				2E506FB19FFD4E53A60E51CF /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */,
				962B07DB1B0D45D8B9FADA12 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */,
				28061BBC010C4000BECA0604 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */,
				39CBF08A44B944F894EB4984 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */,
				6B83ADB9CDB5435C905E8B6D /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */,
				5CD3B1BFB0E74C52BCF72FAC /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */,
				C7CE240645C248878239ACFC /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */,
				264EE11F98CA450ABF4A7E2F /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */,
				327320B9D0F946E88722E820 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */,
				07CCE326764443B8B3337E3E /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */,
				8FA224EFA70E411BA88684E8 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */,
				09C1A4D3775241CAB659BC44 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */,
				BDC4CE8BC556468BA3B1C27C /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */,
				3B855AE6C3154037AED35293 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */,
				9A027960828D4FE8A7F8E5B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */,
				53B3C32552254BAF9405AEA9 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */,
				3E5DE80691254455B6898E8C /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */,
				14DE4046273046329E80736E /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */,
				C0D2591D61EF483790D9C13B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */,
				D678752894894836892DFA12 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */,
				DAA65F9F09A94F5E9BA81090 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */,
				EB5E303C3C3A4F9AAF86D621 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */,
				28297F5D7DA64BBB9324D963 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */,
				7E0CB62D352047CC9CB97827 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */,
				BED6A15075EF477289405206 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */,
				7C3F66813A4E4F92B54F5632 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */,
				017CAADFB24D409893412585 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */,
				CB945F1D8AE54834A50D0DDD /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */,
				BB35C423E8484015AC69CB31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */,
				3EFFBFC6A2F04965843B4864 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */,
				8A5DCC14C3884722B5754682 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */,
				A50B603A16A747BA987D9CE3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */,
				9CA804A326AB4048BFFA204B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */,
				2CB1979224AB43BB9A15440E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */,
				A1C0201B20F8435AA078B5FC /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */,
				B2469D8C38A64B84BCC1FCF0 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */,
				A76476021B8143F8B86ABE09 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */,
				CF1C4D36BC8C49E1A9FDC0F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */,
				2238AA619111419195214941 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */,
				46EA672B551348A1838A5911 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */,
				719C23BA8DAC4402A260E2B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */,
				2CC39F89AD7E4131B977F3B4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */,
				7FBBE74535EE40D6A650E716 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */,
				58DE29B570ED454D8F118956 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */,
				21AA004B8DC0411399C64B67 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */,
				3E4A3A789CC746BCAEE8E589 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */,
				835B377CB42D467B8373BD12 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */,
				327C595331AF4549BB9270CA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */,
				FDE121172E504413B615E1E1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */,
				A66DB87898F64CD6B913AB2F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */,
				C4F7AAA03BF845AEAEA4D893 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */,
				4E4BA8E4E2464EAAB353C970 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */,
				87319B707B7844F9AEAD6BF5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */,
				6AF67A15278147B8A962AF73 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */,
				22883CA546E647978A4A1713 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */,
				585557000CF04A4D982FD37F /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */,
				567892B19E7F47569FE3FC5A /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */,
				5B672B3282D54C529ABBBDE9 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */,
				8EBDF6D82C6F4A4E89E24940 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */,
				C5E20133064842FD876203A3 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */,
				F11B550894424D4085F15DFB /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */,
				6AB42753D3F64E3C86CB5F8B /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */,
				F55764BC14FB467B95D3629D /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */,
				1C1A0C18203745E7B04A4A56 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */,
				1B5F0366FA8E4A69A9165A0F /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */,
				66A3E04836C449E6A13376EA /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */,
				51737F9F99F44F04B0F0E11A /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */,
				8C2D7A73D5B042FAA47F15E2 /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */,
				257D8CB8A1ED48619BAAF816 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */,
				828E238823D8454786673BD9 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */,
				F19D0F97666C4418B4A8A5CA /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */,
				80B7FFA4A67D4306AFC988CF /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */,
				5D4A8A2E7E5340539DE50056 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */,
				B204DD88CE5E4CD39BE66C5B /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */,
				2C47CF0AE49B4E669F9FA173 /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */,
				4215578761BE45C6AA65A971 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */,
				0320CE17247F4BA78CEAFC88 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */,
				3C2F814670D54BB6B2C86348 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */,
				692A95D767704300869A20F7 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */,
				9A99BF80A6634F348A49FF24 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */,
				5FBF941D03A347D6A46652C8 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */,
				2DA30B9775EE43E5ACC678D4 /* /Users/heiner/git/QuantLib/ql/settings.cpp */,
				C7BE89C8852D40BE84C8FA3A /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */,
				0D3A1E7F3BB64EBF821B5662 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */,
				155A0235D76149B2978C044D /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */,
				24239CAB329A47DB91AE3F8B /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */,
				13C7C991FF444877A348F89E /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */,
				994F85C7F69D46989AC20676 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */,
				B125775433FC4E95B839E276 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */,
				CA01A46FFDA943728A407914 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */,
				B6FBFB20E0E94C25AC05419E /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */,
				0DDE33648ABB41B69878C076 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */,
				6FA51EAD482E4E2DA0807A56 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */,
				80F18FDD5E884A69AA172B7C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */,
				4EE42B86FA6D46C798720CE1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */,
				539EA6610AA64B47A3FC30C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */,
				DD0B4C1A81914A948C0EE4EC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */,
				FD4D1198DC3B41FDA89F92F2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */,
				20D1726C3E9641E59AA70FF4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */,
				683BA466E3B0437094E2FED3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */,
				222DCA80C2F442ACBF99E8DB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */,
				EEB52976AB7A413189716ED9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */,
				E8FD524900564051A1910917 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */,
				870E8B43D5BC4207A4A4CB90 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */,
				691D39B0513F4AA6883521CF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */,
				C2A807E0DE2746FDAF3A0E99 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */,
				C0D74A2F51CE40D29F0A0F20 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */,
				529474EB292F423F848FB2B5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */,
				C4A3B6F3C48A4BAD80E7F541 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */,
				5375DE18BFD642BEB3653246 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */,
				72F12B6B452A4C29A5EAC94E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */,
				0B241459270B49C494310B0B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */,
				BE1B9FB2EA6F4876882BAEF2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */,
				0566777D376C4E4ABC6AF94D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */,
				BB76CBFD97784899B8121F75 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */,
				C9D9B2417902475A8820BB29 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */,
				5D51B239145547DD89291804 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */,
				52844FC5ECC9421A8B7A9955 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */,
				3A1041E2FCC74032BF62DA4A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */,
				C8CBABBB3C7B4E4DA1EAEF59 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */,
				6407FA59155E46F1B3D9B2A2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */,
				92674096E13640D2A612156A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */,
				0BAC7654FC9F42BF8D42CE8D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */,
				EECF1A749B80475D9782EE77 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */,
				C1243F4D7AA746F8B97F51B0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */,
				DAE65BFA239344AEA3D177C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */,
				0FE60105CCD945E88AD25D54 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */,
				885F1322E68D4AEBBCDC6CE4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */,
				5A37E31D60AA4D278398A30C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */,
				4E1A6BA1AF884524B7080130 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */,
				CCBBEEDB04DE4F7595A5FD06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */,
				E145D61DBD4E440AB0F98C37 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */,
				06DD25C0F160441784D20DC7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */,
				83791D0520974A25B646BD99 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */,
				C52DE0662ED54651A26357D4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */,
				158F3A69FAB641BFA7DFF26A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */,
				2A186DB787574C7F9835647A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */,
				DD49A86FA5D14A848809B130 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */,
				A4A29AD4946943C085D75B16 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */,
				02D3B8C3FA4A426181027961 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */,
				04EDB76CDEF5409690F69623 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */,
				573C37266D254997B4EDDD8F /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */,
				A2117D6C947F4A1E8C059250 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */,
				C4BFD541C396498A9E525CCC /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */,
				6620943A3D5D467885806F90 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */,
				0C311916C72E4B5FAF9E1EA7 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */,
				536F3094476E43239CAD5728 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */,
				7EEEE8412EE7490CA8575021 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */,
				6848764D19224198BF454AA4 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */,
				4A169BE801A84DBCB3D70A46 /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */,
				D96C2A0BD99E45D39227DE9B /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */,
				2B41C9E032714B64959295C0 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */,
				D5E68829F28F4A639CD6E211 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */,
				39E53CCD15114F0E81D03D08 /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */,
				19B563BF08174D92B3276739 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */,
				BD7A29C5DE754D36AE71B940 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */,
				C1EC63722FA5417986E7BAEC /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */,
				D6EAD93B3D504D0D9DD8C4EF /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */,
				7EFFFEE5A2484A978B88A68E /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */,
				A3E48068B6104E6B89B28B91 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */,
				C67BBD8D07114495949FC146 /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */,
				45182F7525BF45339F56C4EB /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */,
				D15FE05F4A7D49FB8F5FAF9D /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */,
				92F75C7D3C9143339A72599C /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */,
				52DF7956B7EA4F799D2CF962 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */,
				C13C92F348764676BEAC3762 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */,
				AB99DBC145114F0EA9BE4535 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */,
				94855942923C43A5905E864D /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */,
				3CEE8B0128914320B3A7CED3 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */,
				87C84CEF7AE4458FA0CFDF61 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */,
				4C935831A26D454F8DB3D950 /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */,
				664D70BBC1714428B478C834 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */,
				06E2911E3AE3493897F318B7 /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */,
				CC46F4AA6D3D4DAAAD1C31D2 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */,
				EBE612A953964891B1B287D6 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */,
				0932EBCA936042468BBD7335 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */,
				1C749647296F4548B80EAC15 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */,
				FF3C9978E03645D588A1E5CC /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */,
				4C525C37BA9D4815BB47CA34 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */,
				E5B3A8F9FC3B408180D2C436 /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */,
				5F5EDA73668A4BBAA19666B7 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */,
				2213E0A77CC2405EA8C4F68A /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */,
				A8CD6EB3A501477781110FDA /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */,
				149E40C0F2544AF892287577 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */,
				8EC70F584B144E97AC5BF312 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */,
				4A52FD566BAB444B867701AC /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */,
				0952B3D02E44401E9165C1E1 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */,
				7FCEABF31F39433DA8D3E18A /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */,
				F5F1423454FE42C6BFE9236F /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */,
				3463DE9023954FC1A93D8E9A /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */,
				99EDC349777F44E98E74724C /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */,
				DB4748D9352F498EB8B39C86 /* /Users/heiner/git/QuantLib/ql/time/date.cpp */,
				EACEE39FB59F4B9FAB1ABFE0 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */,
				311EDB16D5F54FF3AF1C9A72 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */,
				66AC20E0DF124840B0D501E6 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */,
				DA4AFC90D7674A7F992C0407 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */,
				0B5768E505214AC5B2BDA628 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */,
				DD451C01F4CB4E7EA09302EE /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */,
				46FD4D855A7948388E4F3479 /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */,
				8777A492548E460F953EC574 /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */,
				D105D3C4E87045A29A8BD2BA /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */,
				B45AF044834040E292560A02 /* /Users/heiner/git/QuantLib/ql/time/period.cpp */,
				62202F96122D43BD9367F2F4 /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */,
				D77B5FECB7614D83B5F8EA8D /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */,
				7BEAE3E5F0324BA084B78EDC /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */,
				5CEBB020DED345F38492B763 /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */,
				0945595E4EC4462491A9DA9D /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */,
				31F6DCE43C73415096DC517E /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */,
				A5D19D0848104A22AAAF0E84 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		80D291BC0D4A438B88D0FBAA /* QuantLib_Static */ = {
			isa = PBXGroup;
			children = (
				F084B0B01CE744859AB01D3E /* Header Files */,
				80500B7A271C494780F82AC9 /* Source Files */,
				7BD81B0F8F31412EA04A5301 /* /Users/heiner/git/QuantLib/ql/CMakeLists.txt */,
			);
			name = QuantLib_Static;
			sourceTree = "<group>";
		};
		831E4DE59FEA47D0906C0AEC /* CallableBonds */ = {
			isa = PBXGroup;
			children = (
				D443358E630B4951A5F7F269 /* Source Files */,
				DE564380F75B4C3FB1E03FED /* /Users/heiner/git/QuantLib/Examples/CallableBonds/CMakeLists.txt */,
			);
			name = CallableBonds;
			sourceTree = "<group>";
		};
		832F9BB04359470298D34357 /* quantlib-benchmark */ = {
			isa = PBXGroup;
			children = (
				2DD558EAF3A049F4A987DD3E /* Source Files */,
				EDF47C8C592A4C9ABA95EA57 /* Header Files */,
				9023D672B96A47D7B55665A7 /* /Users/heiner/git/QuantLib/test-suite/CMakeLists.txt */,
			);
			name = "quantlib-benchmark";
			sourceTree = "<group>";
		};
		8907EB3AE2B84979BC694702 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				9C8C739C528D491DB47C5A3A /* /Users/heiner/git/QuantLib/Examples/CDS/CDS.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8A1B0B84BD2745DFA963C492 /* BasketLosses */ = {
			isa = PBXGroup;
			children = (
				44D91EEA4C7B4CF0B2C2D69E /* Source Files */,
				571A7C094CDC46D7B87AFC27 /* /Users/heiner/git/QuantLib/Examples/BasketLosses/CMakeLists.txt */,
			);
			name = BasketLosses;
			sourceTree = "<group>";
		};
		8B6898D579C34E6095285F04 /* DiscreteHedging */ = {
			isa = PBXGroup;
			children = (
				EA19586B430F470991690AE7 /* Source Files */,
				9FD3AC04588C4A0DA1399A6E /* /Users/heiner/git/QuantLib/Examples/DiscreteHedging/CMakeLists.txt */,
			);
			name = DiscreteHedging;
			sourceTree = "<group>";
		};
		9850DF4291844A15B8D21858 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				3E416F541BEF4FF780308BE1 /* /Users/heiner/git/QuantLib/Examples/LatentModel/LatentModel.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		9BC96E70D5EC42E58A757B3C /* BermudanSwaption */ = {
			isa = PBXGroup;
			children = (
				9FC4BF8A31874DFFA0F1F9CC /* Source Files */,
				786B923E7B47469BB77A0176 /* /Users/heiner/git/QuantLib/Examples/BermudanSwaption/CMakeLists.txt */,
			);
			name = BermudanSwaption;
			sourceTree = "<group>";
		};
		9FC4BF8A31874DFFA0F1F9CC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				8A6F582D4F9C40CEA010A914 /* /Users/heiner/git/QuantLib/Examples/BermudanSwaption/BermudanSwaption.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A6499C86FE5140BDBA2532C3 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7A3B45A447B04D658BD8941E /* /Users/heiner/git/QuantLib/Examples/Replication/Replication.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		AFDCA07787E842819ACF4B49 /* LatentModel */ = {
			isa = PBXGroup;
			children = (
				9850DF4291844A15B8D21858 /* Source Files */,
				33C4A1B053D641B49816825F /* /Users/heiner/git/QuantLib/Examples/LatentModel/CMakeLists.txt */,
			);
			name = LatentModel;
			sourceTree = "<group>";
		};
		C4769F7C332B49E89844BA2B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				59048626F7F94BCF960C38B8 /* /Users/heiner/git/QuantLib/Examples/Repo/Repo.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		CE943F7EDFBF42A8A194DB53 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D1599BD5F7044CABAF058058 /* /Users/heiner/git/QuantLib/Examples/MultidimIntegral/MultidimIntegral.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D443358E630B4951A5F7F269 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E01D76F0C9214006B38FB79A /* /Users/heiner/git/QuantLib/Examples/CallableBonds/CallableBonds.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D648B556012B4DED8BDA77ED /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A91E67067FE446A1A8CF8DCF /* /Users/heiner/git/QuantLib/Examples/ConvertibleBonds/ConvertibleBonds.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D8659567561B4FD7960F2FB5 /* GlobalOptimizer */ = {
			isa = PBXGroup;
			children = (
				105486C860494E4686896684 /* Source Files */,
				D1D4FDBDE1E9467396549E59 /* /Users/heiner/git/QuantLib/Examples/GlobalOptimizer/CMakeLists.txt */,
			);
			name = GlobalOptimizer;
			sourceTree = "<group>";
		};
		DD6A66A9BB274C7B82466896 /* FRA */ = {
			isa = PBXGroup;
			children = (
				1F1C711D90584A0CA811E62B /* Source Files */,
				F982E245BB614BB0BEA5E226 /* /Users/heiner/git/QuantLib/Examples/FRA/CMakeLists.txt */,
			);
			name = FRA;
			sourceTree = "<group>";
		};
		DF2FFF4189544F60811F3CED /* Source Files */ = {
			isa = PBXGroup;
			children = (
				5DC595DEB52B4106A60C0634 /* /Users/heiner/git/QuantLib/Examples/EquityOption/EquityOption.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		DF8A4AD6D23A42778167BCD3 /* quantlib-test-suite */ = {
			isa = PBXGroup;
			children = (
				7944F4AE3FEE46C2B0868243 /* Header Files */,
				F16712C3F83C42F2A8C0093E /* Source Files */,
				6752D2C468694FCC8E2CF575 /* /Users/heiner/git/QuantLib/test-suite/CMakeLists.txt */,
			);
			name = "quantlib-test-suite";
			sourceTree = "<group>";
		};
		E0C2DB93C8604F688A63592A /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				E3A707C3ECC149A78C807DE6 /* CMake Rules */,
				673A46C1159F4572879EA6C3 /* /Users/heiner/git/QuantLib/CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		E3A707C3ECC149A78C807DE6 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		E7A1F880CEB84937A16B414C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				8171A0E76DDD486F9A132F54 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */,
				D91AF6371FCB486A907FD7C3 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */,
				69D72D7D2CBF44DDB0CA724F /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */,
				518D39CF66BC44429D021F64 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */,
				7DAFA9E94D57421987D4D9A7 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */,
				57A12BD48E4342AB9E2EEF91 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */,
				54F1CE6C5F6F4A43990A4350 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */,
				87EADCE3432F41619F758F9C /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */,
				539AE749C80D47D288607343 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */,
				4AD8ACDAD4254C708F1D7C38 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */,
				935418338A7E423B98652767 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */,
				6B4A9F705DC84C03948F82AA /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */,
				4FE7AED36A934C0CAD14AAE7 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */,
				2BDBC7E035444FE18C152B06 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */,
				357667C6493645AD8FFD5FA0 /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */,
				1F72B642EC364E9E9FFA45AB /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */,
				3B81A09C8764482EAC487C2B /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */,
				5B6970D761354780B58E3D60 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */,
				ED23B48D837F4CC4B68B9525 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */,
				7F8A4F9462434A9188E1D4F8 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */,
				8A2FC95BED6F450DA390808F /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */,
				B67ED76395F248D7942DCF2E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */,
				1240B4E5DE5A406D81F5BE4F /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */,
				678AD79378B94A54941F317B /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */,
				36CFB0770F3640EA984DC536 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */,
				8D2CA45FF0454C68BFFB336E /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */,
				8A2C5111970B4C2394C15B53 /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */,
				603F69CD5C354D93BEC41701 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */,
				97E56A97452A40B08F79C3F4 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */,
				0F0BB933E576441C85CC13E1 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */,
				48E6CB858C8048A9AD94F374 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */,
				B401CE88B6A04C3F9FCB442D /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */,
				E0C8C68A64AF4099B2258DAC /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */,
				61EEE7033A544139A2587418 /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */,
				72B411F0185642938BDC2C43 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */,
				6122AEB922E64EDAA8A9B6B6 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */,
				86DCC2EAAFC4405A8C8D6EE2 /* /Users/heiner/git/QuantLib/ql/currency.cpp */,
				B0A377056FC845D59A44516C /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */,
				E51C4042C2914362AA0564A4 /* /Users/heiner/git/QuantLib/ql/errors.cpp */,
				777C8D3D91D543D79A382159 /* /Users/heiner/git/QuantLib/ql/event.cpp */,
				77A12951415D42D5AA999C63 /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */,
				7283676739B9456CA5ACB05A /* /Users/heiner/git/QuantLib/ql/exercise.cpp */,
				9C4D1297319B4B49BCC17F64 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */,
				039CFC60DD73416C97D4072A /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */,
				25F3355794124E9B931EBBB6 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */,
				EFF44AAC7B7941CE8C54E5F0 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */,
				110382DA1E5C4309B10482D6 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */,
				138BC69F6A3548E1A5954B38 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */,
				BA394D48A06343BBA140BA31 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */,
				306C694AB733471EAC699706 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */,
				27A875F176C14A3CB142FB3F /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */,
				C05684EE5E774112A0E73514 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */,
				AD78F23E96404A35BAD0FEE3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */,
				2FB1F7BC14B14A00AD18DFFF /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */,
				BFA4EB7012C34C84A52BFA50 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */,
				1A87694894B049EE9393128F /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */,
				D204326B81A34D219C398CA3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */,
				4F503FB20E8E493EBABCA406 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */,
				7838295D53CC4B878747469C /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */,
				D6D9128EBF084AD789947E78 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */,
				B119647C44314BEB8B4B4FBF /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */,
				E942C76A9A30418BAF4BFAB3 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */,
				B0B9E62750494339A6AF7A34 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */,
				D772CE8750084F6CB71ED307 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */,
				05BD3C652CE8416A89E60018 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */,
				D0FAF608770B4B0DB942FD66 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */,
				28F4CC8AD45F4C3FBC5B9775 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */,
				BB5FC21DF239448DB273E176 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */,
				E6EF9B0222A24D48A9B4A54F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */,
				1B4A14A73796486A83DCC559 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */,
				93550DC7E9E14932BDA7293F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */,
				7F6B70C176654D5BB9FFB0B8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */,
				9B5BFC20029C4DF5B27BBC0D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */,
				F21110AA94974CB2BBC422F1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */,
				42E0F02B3B0543179CD7D6F1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */,
				B22EC89F8DB74B23848FB1AB /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */,
				5E1066F1BCC84B6EAC3BB723 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */,
				11E925DEC5FF40FA84ADACF8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */,
				66AF5F308E8C4DFFACC20BD0 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */,
				889D2E3724124F40A77EB2AE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */,
				33E332F3045143AEBE6D9069 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */,
				BA6E31F8583A4A699541D733 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */,
				D8D2616ED26E4A989EF4B68D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */,
				1139314DC80749069F15BEC1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */,
				8F1F5EA28C9A4686BFDD10C6 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */,
				4E97DAF8AAE1472981D8E61E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */,
				6CBA4ABC1A1E4E57BD7A505D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */,
				07CBC9CDBD0D4542A412C608 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */,
				20E6E5FE51C7439EB8C1AA27 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */,
				13F396BEC80744C482B96E9F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */,
				8525BC400D234FCC94ACAB25 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */,
				D867B19C09B1497DAF2A9586 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */,
				BD35949C9F0042BA958D0EF2 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */,
				11F1CA81C2344AFE8ADF93E4 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */,
				9400E0E69178461D87D46201 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */,
				C7426F7BD63A4130B0ACED25 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */,
				756D084ACB9949E79448B77A /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */,
				A4E1A6A8350840E0ACF5C736 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */,
				487285A315834D6EBD5C521E /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */,
				243E4C51F6B44C418AD912F7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */,
				7407D7A5C64C4D33B6AE6686 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */,
				D699ED832DD949E2A244B39C /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */,
				1E01AAF71FF64AFFAFB067AF /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */,
				346ACAC642EE44EAA75576A8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */,
				F216636F5A274CB891C26697 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */,
				7FB5DDC5B7D3469F84047B98 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */,
				298CAE121A89431AAD8ED9B2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */,
				240A18DB50C042EA97B1A331 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */,
				9C49A9F48C464E93985FA263 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */,
				30B07F96A6FF411D838643E4 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */,
				52A08718EC0D42F8AA0B746E /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */,
				53CDF0B69CAC4D22A53C247C /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */,
				8314F5C8B6A04F2094940AAA /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */,
				74BC53FEC55B47C596EFB645 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */,
				59573AE3D28D411790196090 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */,
				413D599B96564B8E8E3CBCF3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */,
				D62FF41162614F19B77385A8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */,
				C9CF7D2430B24395A876923E /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */,
				285875147BB14525B2B2D5FF /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */,
				EFFC7F9C386C47B6AE1CDD25 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */,
				66482DE799F04CB186A1379C /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */,
				54372C807C224F2BAF342042 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */,
				F5F96096F5F94FA5938C2BF5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */,
				EB8D9653A71D4D1896635818 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */,
				9A8368AE1BB94D29B3E9BB95 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */,
				1FCE8BF209694961959F9E19 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */,
				A78E77A4C01746D8AE2DBA70 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */,
				A2C5F6EB6E3C49B9BACC22A5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */,
				AAB32ACA95A54CAB8FFAB2AC /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */,
				90053E9FCC374D58A7856D1E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */,
				990276D3DCBC4A018CA394AF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */,
				D7C2302456024246A306F440 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */,
				B71CB4B773C54A609E69805D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */,
				907981D2C9DA42A389D1B8AF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */,
				D4980C5A346647268762CA98 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */,
				F1DB6C869CF74716832FA910 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */,
				B5F805DCF7BB477F889C6216 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */,
				9758DBB3682F4867AE8098EC /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */,
				DA7C3CDE166D4EA2A860E8BE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */,
				DD42447AB13542C7B26D9050 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */,
				40E9344DF0B846FFB189A425 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */,
				8ECB6FBE9DD148D59B69E568 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */,
				FAB048E068B0415BA601844C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */,
				6FB1EA72AC274EF180DCE317 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */,
				0780C705C4154D8B975755E7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */,
				3F937A7E571A4BFCB135016B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */,
				035B4B5B5F564DBBA83624FA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */,
				209E2BC7E451428A9A65351B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */,
				D18A5CCCBFA44763B44A2841 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */,
				1C43974429DA43849C3128B7 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */,
				0B1ABCF07751422688CFEF79 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */,
				A1A708BD6E0A4697910CE434 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */,
				2DF7ABA9933A4C60BB5AF453 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */,
				21C9C51C8F984A44B6BB055B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */,
				D1D3F97D451D4C409C524F8C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */,
				4EA32A0030A14E5C8FC4DECD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */,
				E75FE7B431B841BC989AEF88 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */,
				A37AFD5352714F13A047D061 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */,
				C713E5D7B9AF485F8DA983F0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */,
				CDE0326A96794CAE9E0FCB34 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */,
				D3D4E1AAC10D4BA287428DBC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */,
				DCDBDB4FE08C42A7B34FEC74 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */,
				C05EEF6645CB463DBA384D99 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */,
				CA3CDA1778F7497B9EE8ED44 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */,
				397084DD59DC4AE8A4ABA6AF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */,
				1FE462BAB2954AD494E79A49 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */,
				2D3B8D2A79D34591BE4BBCD9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */,
				E250638626E64E63B6BA3935 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */,
				5F41D2DB50F44C83BFB05F40 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */,
				22E6C5FED8A34A83BC4DDF4C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */,
				F8040D80FE9A423E9BD33EB6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */,
				D8B6143BC89C4C3D82777E90 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */,
				71AD06EA63AD48F7878CE848 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */,
				06B4E89817ED4CB785934B23 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */,
				AFBE1C06B51B495D91F51B31 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */,
				DF64ECA5380F4F62B4BF026B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */,
				C068828EFF9942E38F58DE24 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */,
				A74AAB767C2D4E66B2FC8E6B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */,
				D16ABEE23A6A43509563EF47 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */,
				8EB5C983A28E41E7B79627F2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */,
				D4CBD100C7DA47D2ACA55775 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */,
				4DA9CC9966C34089876A453A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */,
				4B28FBA4495848DB9215CD03 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */,
				A85C215576FF4ACEB1736411 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */,
				B3100E437D5A45938D90B5E8 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */,
				45FD8E6D448B4FF29A85B9AE /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */,
				F219A0D75A1245D79F709766 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */,
				817D3B695BA644C4951C9ED5 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */,
				35B3BC62425944408EBFBDCE /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */,
				2C5D567B54C84E67A2B44C11 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */,
				C7B3F35481014013A851090B /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */,
				95E3B98CDD3A410D82970934 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */,
				7B6F698FB6B349199AD0BFC9 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */,
				4B72A5F4449F421AABD7F1E1 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */,
				5DB243779A7F4B158153D2DC /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */,
				C51C27D7BDA441F8881705D1 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */,
				205A6B43FFE840D89369D561 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */,
				1C70F66A5E824AEC8B7633BC /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */,
				75B2813D2B644799992F2330 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */,
				55CBE34A555344389797FF3A /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */,
				11DBB270489D4AF2B60A1602 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */,
				86B399E6512E4AB986EC33FA /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */,
				9311FA9F8E764C0ABFD61773 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */,
				264DE3704EB145CDBD664A60 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */,
				43CE3079437A45AB884FA48A /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */,
				CDF10DFA56C543E4A729FD60 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */,
				D4B08D3C7DCF475CB3BD0029 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */,
				FC5BB6F2783B453092DB0B8C /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */,
				0D4B578939444EA4A653A148 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */,
				CEA1646CF24F4E6CAEBE5ECB /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */,
				BABF7110FFBB4E5789D9F6EF /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */,
				6DFAC83B0D744F5DBC95794E /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */,
				B250ACAC8D7F4FAF91C1814A /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */,
				2CD949F0F0E640C190A363DC /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */,
				6466D735E6C94B8FBCA5C94B /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */,
				D87B20EB0AB8493C9AC55C58 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */,
				8E935A08FC5E4562B4555411 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */,
				D4CF0A6E8B564D4BA60EADA9 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */,
				5F4577143E38406A8DF055F0 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */,
				ED6EFAEF006441B5B27E8E2F /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */,
				D47D9D9608164FBABAC1D1DB /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */,
				565EE622F2764DF6B36A5728 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */,
				7DB34DBC3AB943CE9E8CC53B /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */,
				63BB1F871AB14660B509CDCA /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */,
				E1AB727DC5DD458F9DA602D9 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */,
				EEB45EBFFE6345F1A0D0D9BD /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */,
				49CA9A72540A48E684DFB178 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */,
				30B7C88776F84AAEB4DC98F0 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */,
				DC8E690C8A0146588924B5F8 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */,
				D22715C41A124C8E84123E01 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */,
				4AF811272028471296C73400 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */,
				3B9C373CD44C4A17A52FEF05 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */,
				23BBEFD2CC334FCB9B1F705F /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */,
				16339DFDD45F4E70A6936F80 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */,
				5E26D9E15293479CA3DA9D4C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */,
				A834C86222BD49F6BA090F91 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */,
				B7BF422BA645481DA085E48E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */,
				5563DD4A358A4A7BB67E1F2E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */,
				B579729F2E774E319B0C64E1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */,
				13C5BC892C8D4E628EF34B60 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */,
				79380F6023964E1B9958EC91 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */,
				E2966E03EA904BC9A96484FF /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */,
				42EA873E48994316A2390688 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */,
				F49EDE6AF6EB46C4BB5C13BA /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */,
				D0B14E4BEC3E4B37BE838525 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */,
				47EECD010EB04B3193F778C1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */,
				EAA5B23B68E547789FB2F4BD /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */,
				14E49C007F2041E0B7419A3A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */,
				F3B24FA6DBCB4BBE8A7EBC62 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */,
				DBE63BD4607243FAACC45A1D /* /Users/heiner/git/QuantLib/ql/index.cpp */,
				19AC0DD4FE5642E48976431E /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */,
				FD53A05CF0CC42F1AE754D73 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */,
				5B6BE408A14944BE81C4C287 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */,
				090A4288756F46168CED9EEA /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */,
				5B79EBACB65147D5AE2DAFFE /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */,
				5A246450A00946F889705527 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */,
				76FE16BDE176448CA199C8EC /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */,
				45D7089533694A378A6AD18D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */,
				7EC9FA79344743B1893E25FB /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */,
				55D6AD34AAB24215830E2708 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */,
				FFB28E478538491C95E87247 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */,
				DD96D845AF6E4A07A31DA1EE /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */,
				6AF100BF99DB4093B3639580 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */,
				D433A4C741EB401AB383D40C /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */,
				2BC21EFE9AF74D96A03697BE /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */,
				1AEF620F8CA44A08BB3AD202 /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */,
				1F9155F4907449CDBA87134C /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */,
				2A765C0087854B41B28D0A0D /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */,
				516BE923CA254B938811C1A7 /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */,
				1E7EFD06435B4E72AC3247B2 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */,
				454D6184561444F0AE29D38F /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */,
				AA8E4C58DABB4F5AB53E787B /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */,
				A0DC4A9D54594918AF4BEA33 /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */,
				CFD2C51036DF430198E45C97 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */,
				572ABA19F1F247B98AF71C08 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */,
				B53D4C05A5D14C3486D705DD /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */,
				3BFC425B087848AB8A9ACC83 /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */,
				86EE4A70A8774A71BB03000A /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */,
				17BF0DEAF2DB4F3099965BF1 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */,
				4B17B77628BA4787B4CE4790 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */,
				E6703FCE644B42538977DE30 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */,
				E579AF70990647848B1A7C5D /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */,
				5E9EF85F576945B283C42341 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */,
				4B3DBC03067E4B83969A1A08 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */,
				D6AF6F74898E43FEBA9F6B1C /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */,
				EDBA6CB3C5BD46BF8D0DFA50 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */,
				6A2BA20FE5E74D378AEE89B8 /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */,
				62527E44BA394DB8B05B705A /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */,
				142C7D13FD074E5B8CE3E2DA /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */,
				37F44C1CD88A46D28DF71021 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */,
				C43D882D73C74484B522C469 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */,
				EE63F1F862A7403A95D56B66 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */,
				FDED2DAA866D40E486C6F31C /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */,
				F4BECE987B66457EB4474562 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */,
				A090A57F7B014F61932829CA /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */,
				F51866CC83C84B52B7664B71 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */,
				8A15250AD4EE41F293F78DBC /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */,
				9D94C891D0CA488EA7D2C061 /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */,
				BCA6DC1AC5F044F7BFC60041 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */,
				381A0BF4155B43D8B1300644 /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */,
				23638F6BEDED48C7A83A802C /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */,
				4E6A8EFCEB2E40138980FD2E /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */,
				3877D59B393645CB9AAE3DFD /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */,
				C8018946E6D343DB985B948E /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */,
				DCAA6E8C800F47F4958FC7FF /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */,
				99E2DAC6E15C416CBA6D50CC /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */,
				FB4F633E5BEA4D8AB8DEB339 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */,
				7D437E92BF0F4A9781831D8C /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */,
				BEF1F65FCD744B5F89BB3E7D /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */,
				15AA8550DB314587A42A47AB /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */,
				841D631217FC485EA7D3FD1B /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */,
				EE4707822FA34D02BD35155B /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */,
				6911297420A8469BA5D5AA32 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */,
				968131179A9241FCB9673AB2 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */,
				F804AF156FDF448482416244 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */,
				BC3A95E90CDD4727B7119C37 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */,
				E13165BE777B4F898272CAA8 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */,
				FC286D05F8A84E8E98025498 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */,
				2CECD4ED9BF24260876A2B88 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */,
				B6F8167157244EFAAC44DFBF /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */,
				F0EE71A275434CF29A7322B2 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */,
				DCCD1DBBB5F3487C95DE8911 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */,
				03BD90E3E48143CBAE3FF9ED /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */,
				119AFE72218846AB97555986 /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */,
				978A798C0A7D4CC9A21F661E /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */,
				2D8C1D6AA7F84B12B8A93031 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */,
				382A6E18EDE8449693794932 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */,
				23809A6EAF1D41819DAEC4B3 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */,
				0DDEDC65B9094E9E9BA65C20 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */,
				1DE62CC0738C43D6ABEE2C7D /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */,
				B653FC6C464049F9B98B12AD /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */,
				07F6E8FBCF474B898440EE22 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */,
				A9F7AEDDE30C41388CBA79E3 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */,
				4ADD4523688449D092907904 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */,
				EAB644E2FB0741819530780D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */,
				335D279F8B874E43A7E2A723 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */,
				F855D574860140CB8FA1E33B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */,
				C2D70448790445B38E8FB0FB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */,
				A57B0A0EF2834328A2431DCB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */,
				ED9BC6773D4141069CD909B9 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */,
				E249943D39D24C21956DFD9C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */,
				C42BC6C673464C8C95FFA5CB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */,
				98370F31630F489596093537 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */,
				D9A0F8FEF32F473FB36D4E8F /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */,
				565F6E68DBC140C687FE69D0 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */,
				BA67288F86B74CCE8DAC5D95 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */,
				5D7BBC1DF34D4366BD08EC6B /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */,
				5055D3CD0DE9498E8289731E /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */,
				927053E904A847649DF6CADB /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */,
				EDA0F1F0E1D14B269111157A /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */,
				67ED4A6C0A6D457E91C8B440 /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */,
				AA615EDD6B28469CA795126D /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */,
				69D3EBF4FF484C4AB9D01B8A /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */,
				C91DB88C547B495C99CEB66A /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */,
				71DB6A2816BF4F6EADDEB248 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */,
				68786BF15B9F41DEAF0C592A /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */,
				BC3478A7E3A94527A8DB26C7 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */,
				32273276621F485DABD12671 /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */,
				7D962B9A52624AB5935B79C6 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */,
				1FE1BF36E2CD488F99541970 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */,
				1BF2CB93CC6B49D693E5A1D7 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */,
				E2D00CDB292A4DB6936E5784 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */,
				DA212D12CC75489F8BA6145A /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */,
				D9B7FCEF70F14971982EAD3C /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */,
				57091F2CBB194C01BA0D2197 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */,
				3516A60BD4244806AA64E70E /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */,
				EDC5447BD7B34E29B0631E7B /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */,
				19D68918C04B42C08861E8A7 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */,
				FA44354E5DB94C0FA29746B0 /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */,
				039361B88E9643A99E6EC34B /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */,
				51BCE6A5F854436381F23E9A /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */,
				8BF37D2B96C44A608462C8E6 /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */,
				EF74202677CB485AAA3F87D8 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */,
				45EA54A461B44A4E89879B29 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */,
				20596AA7CA004127AFFEB12E /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */,
				D775EB719F344795812D44CF /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */,
				4E8DA220FCD9416FADEBF64F /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */,
				CA2F7798AB214F09941E750C /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */,
				C445FBC75F96436D8B4A5227 /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */,
				D3B9FF9308DD4A6D8E533DA2 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */,
				1E9683EF637C484790A01CC2 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */,
				E18369325B304C5AA120E584 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */,
				4C0653E8176F4FBFA4D7ADE9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */,
				1A8E7004FFBA41EF8B8600BE /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */,
				6977BD80E1944C2DA5B3E1FA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */,
				A5B6EB8A6F2948CEB88D9F44 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */,
				B7366D80E5D0495693DED4E8 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */,
				C9147513FD5F4CD68488253C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */,
				56F802BB63174EDC87E655EA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */,
				439B56F6087745C389BA9C54 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */,
				C8CC435E2FDF43059CC58989 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */,
				DEB147DB617048B6B5ADDBCB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */,
				3B7F3B1A30684D17AA90841D /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */,
				CFFBF04C146D4E039CD710E1 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */,
				C3E4AE3437B94B0CA133D498 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */,
				FF4BCE3E09D744CDA62143B1 /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */,
				7E8B32EE24484BC5B4EC5B1A /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */,
				B165474E091F4411829E8331 /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */,
				225FFAFBF783483DAE009DDC /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */,
				DEFBDA44A4384D89839A5FDF /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */,
				A2729720C2C84D1282036E60 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */,
				7CA96E74872946669936015A /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */,
				C1249EF7B19B439CAA05F211 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */,
				64BEF61C70694B778E18AC25 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */,
				62A5491B1C5145BB8F683266 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */,
				B0D964939CB846C19050F176 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */,
				363B338E15D848929FACBA70 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */,
				4B5BD8F6C77B474391110A81 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */,
				81588BC53BEF4178B3BEF761 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */,
				290B3C4BEF3347339C12C639 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */,
				D2EC4BAED7BD42E1BEFF6AF0 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */,
				CCCF6D50A00B4C71A0D7CFC0 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */,
				5CAF0D2D417241FFAF0DB838 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */,
				CE6D7B7214E44C1DB9E87A7B /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */,
				80AB74B7B3744649927FC8FA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */,
				3DA8205E575C42FFA3CDC9CC /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */,
				56F7B4D2E5C5435BB2CB53F6 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */,
				749E981048CB48B78DC90F18 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */,
				2FBDAD82617B41D480840D40 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */,
				A83E5A30C1BC4568A6E8CC0B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */,
				84D9F9FB43434FD4BFC40B14 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */,
				9413A6ED619D4679AF08CB81 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */,
				152989448E59484E90F8D4B3 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */,
				94620BB75A0048188412B47D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */,
				109850102CA64FBFBD85E65E /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */,
				7538D7DFC8A142CABA7D7508 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */,
				F07AE9820BD04447B7491FED /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */,
				54B8FD8DFDB94DE2963EDA06 /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */,
				C301B93155D44BF8B23211C9 /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */,
				91164443AFCB48DE93A0F404 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */,
				5042900DF6A04B158BE463C6 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */,
				86F3578823AB4FA1A38ED15B /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */,
				EA446F805EE746078B9F29AD /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */,
				2655BD5ED45F47EE8AAB4C0E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */,
				8F85BC7400AE4ABDB6A4BAB3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */,
				01DC8364D0BE4FCCB85BD926 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */,
				0FABA5A857DE4893BC4D418E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */,
				1ED907AFBA5C4053A4CC633C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */,
				E4F9F52781F44785A3959F60 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */,
				4540360D55EF45E08F01D956 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */,
				1E9BB421E42547BBB71F0CFB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */,
				36425563143F4D7289299A01 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */,
				911A8EA500534B4DA862FF28 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */,
				4D70A715F750474BA93EDD67 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */,
				92AD2C6F1D34464280C0CFE3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */,
				B8A4A80FA3384C56AABF5C9E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */,
				8B672CC4B3334664975BB96E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */,
				064305AA105D49D5A252FE01 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */,
				71ECEBDE7B924A248D9E238B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */,
				8E6FBBCB76B24C3D95D7618C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */,
				78B54E1521C142A5B307C1D6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */,
				1F4822BED9944A068176C4FF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */,
				54AFEFB7FFCC41A1AEB974BE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */,
				E9B86027B9404CD7A6B82736 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */,
				D96928523E134F7D854C5EA9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */,
				06A09C2A8F8C4731B6D94FB7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */,
				8609F70A6D2149FD9BD3E098 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */,
				6B5E98EB33254F7EBD078D55 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */,
				368BE6503367463193A000E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */,
				551682EA2171471BA652338B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */,
				6E715C2865C342B9BE4A2E4D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */,
				84039867B5874E449CE7A932 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */,
				075210B1D0D8466492AC4153 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */,
				A131B947560D4B1DBC6C042A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */,
				2BAAC6B0FB2C4C0088D2D82B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */,
				4B3B0BA7CBFA4946BD8582CB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */,
				B048AB4C6C3D4CD297DE4725 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */,
				AB0A16D068634D4DBB527701 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */,
				ABBF7473E1E941D8ADBA7346 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */,
				AC5D69BFB3BB457199322B33 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */,
				6C4EEEFFD6284B11BB321E7E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */,
				AA69B65ABD844AF3A8183018 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */,
				305FE06F4F8644D5942B76D6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */,
				F72D49CE6296465BA60A7AB8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */,
				E42B5D4CA3D448109EC8EE1E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */,
				204B338E1ECD47728CD32B44 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */,
				E03169157B38462D966A9860 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */,
				6A53D28FF66A4EA1A5DB3BB9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */,
				CE7556CE3C334C5EA6F3FD45 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */,
				35D80948C11242578B4848CA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */,
				66D3134A5DB74BE58E7A9E8D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */,
				B507DEF8AB55475E93A6FA5E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */,
				AB31C470613C444AA691C4DF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */,
				7B5E0B31701649D5A15A2E26 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */,
				101F5CC4F80A4E28BE9EFC03 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */,
				03C441E6308146ADACF9B57F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */,
				CF2545A861B342F48483829C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */,
				1D6021D98B044D19953117AA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */,
				1A9C7D16A6AB4192B5A4EDBA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */,
				D9E63CA20B9543F1B1A5B10C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */,
				2B7B943E4E4E44DB9E9E7664 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */,
				CB96AC31C0C148A6BB6CAEC5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */,
				8CF69F97693A46CC9E005EEA /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */,
				14DA7CE5BE43450FBCB7C372 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */,
				71D5F26AA632458899ECA764 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */,
				1CF9FFFE20E841748D28A606 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */,
				8F2C0D0C2E6B4D82A5DEBF98 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */,
				CDEC498029624FC491CC7813 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */,
				E8919E3BEDE34578BA58CAAB /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */,
				14BFF57B924F4195A9813837 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */,
				0D54B06B028243A1958719B5 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */,
				ECDADD0581CE465E8D9B8596 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */,
				9CA2CD4F9B4D4520BB50D2BD /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */,
				9A9ADE16A5494C1EB7066E42 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */,
				00A189201A8549ACB518A239 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */,
				FBAB6CE56D4A45C58F348481 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */,
				CFB45DA77D934D9683E061C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */,
				8D7C456260AA405DAF5CE000 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */,
				6198F95F407445FEBA6F84AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */,
				97B2D52572274DEAAF390A72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */,
				324A8496505F463EB070BCD0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */,
				2FF62E70E9204698BDD34AFD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */,
				A5895A4065B6421485A1406A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */,
				531F05DCC11F4AB8A9ED2E30 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */,
				74378CCDAA8A4591BD83BC3A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */,
				DC3F9AF3BAAE48B6B438BC1A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */,
				D0D9EF1C20B940B7B1E3BBEA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */,
				7774ACEE12E94F40A79CA9BE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */,
				2864E8E3E0BE427D8FE4660F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */,
				484BACC67C4D4A3AA1D9A404 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */,
				D5DE58C101FB48A186A631B4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */,
				8573BF9EDD4E4E9788657C9E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */,
				0A4E35FF75C74F888AA200B9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */,
				1954311327744B79B953D830 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */,
				D549D76E86634A28B8E33C45 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */,
				9A8FBFE3785E4CABB7A4C89F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */,
				D8D73301E8F6476E8BC1D3C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */,
				6577CCDCBBBD41689C1B9B24 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */,
				E1E707C5E74D47A9A7BFF9B6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */,
				6356D87B28E8404AB8CF479B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */,
				5ACF8386153C46CAAE72B7C7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */,
				275A87BA04B54733B026FE5C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */,
				EBA0048CE3754B47815D3A96 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */,
				3BA6436F7CB94F7681B949B1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */,
				F04F28A3FB534DFBA2F37CBE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */,
				302FF43FFA804F6CAA46AF9C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */,
				572AEE3AAB9A4391BE8D0F31 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */,
				4CB072417AEF4EFFAEDBD9CA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */,
				32A7F0EBA573450382FCC9B9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */,
				709A3F94377947A8A8492579 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */,
				A8555848783F4DB682782DA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */,
				28C2797A60704E0FA46516CB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */,
				14DC0241079B4702B15EA8AE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */,
				230A40475D004614B66C23EE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */,
				CAE8E839FDC645B3B688E95C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */,
				085094E55D624C628FA19FEE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */,
				EBB8F1C2841A472F9EBF4ECB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */,
				5B85130580534A799EB4EC2D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */,
				2B2D2B1EC4B141258677E553 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */,
				7EE2956280BC4D1492569ED5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */,
				74D8E6C80A674FCABEC568AD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */,
				8985911E330142D78CA6B002 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */,
				49D2D15606A04E4AB31C3A64 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */,
				4D39F4A687FE47609DCC3E19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */,
				8D9A760E253E45D1BD08A355 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */,
				E220226BB4E1457DB0AF4F4B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */,
				56BE7297616840F597FDE00D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */,
				BD10D5D43F9D40A49168E833 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */,
				965E57075C2B4EEB8B5A3F5A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */,
				389516E2FD0B4F38905E9A81 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */,
				EAA6CA6FAB634675AB1F6128 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */,
				895BEA3DA8C94670ACF4E741 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */,
				2BDA717EA9184F459AF59B14 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */,
				5B80DE6957FC45DA8F12A487 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */,
				46A068C5F76D491896E2A82B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */,
				7824B6A13450419FB31C70EE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */,
				313C78F6E718484CB8387A94 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */,
				19C8B97FE70F4926A6B62CC2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */,
				BE39102C3F1B4D848AFA34DF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */,
				3E52C80D6BE74F1391577E25 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */,
				6F75357CF3194361B6153F8E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */,
				0CE0BD47C381447EA0F6BDA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */,
				F8023026C1C546528B315399 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */,
				6E5D74E5FFD940449B5F5440 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */,
				03C980338CBB40AFAF41FB5D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */,
				FE11375E997041429EBFC9B2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */,
				3266C17743724B93A359855D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */,
				B5193D26DA20410DAFD41B79 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */,
				E1F92A6AB7284B498C4379E7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */,
				5AF952F94161495E9AB4F3BD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */,
				1BD4360619AE4EB1931F3242 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */,
				F35ACE45A6874A2683EBD0C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */,
				5F775DE97E3E427D989D6C76 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */,
				A6A9B9BF942C4475935C6CA2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */,
				609E09C544E64E7FBE9AB090 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */,
				0DCBB79888E7447AB09E4BD4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */,
				DFB1CC809D594217B89D8968 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */,
				4D71A0AC7DE14EFBBEE60049 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */,
				136E0A55BC8F4330852DEB33 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */,
				7F1190DD65B547959E539CAF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */,
				3FAAF21ABDF74334A03C8ADD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */,
				02FC4F64941F42CE9FE61F74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */,
				2334D432AEF34F8889F44759 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */,
				42EC522D4410422AAFD3E820 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */,
				2C6D8E2E69D945F4983511A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */,
				690B365001954D9E9BA0483E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */,
				8732229F1C374D06A2B06D10 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */,
				0394ED4891F04551B5805BD1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */,
				4EBC106D6E7D489C8DA06DB7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */,
				DE48C6135C6E4CD99B6F2446 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */,
				9068A72ED3CE411BB2D5B29F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */,
				424A9F1FDB7B4B91BA560D90 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */,
				08E4E04FC3234542A10EB9D9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */,
				4DCC7BF424E04B7F9F91EF99 /* /Users/heiner/git/QuantLib/ql/models/model.cpp */,
				A6957B966E7F47859068AD8B /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */,
				4F0A12BF2E1D47EEA3E22158 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */,
				781DD5A0528E4BC988F319DC /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */,
				0F7A5A9C3C844158B3F24B4C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */,
				1E21CB3C637A4405A77B537C /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */,
				53682E8835654821913139F2 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */,
				6C9D36F28B72452BB53EFE9B /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */,
				E95854AD9A4C4918B6A452A7 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */,
				92D414D882C1474B96505CBF /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */,
				A4D47BCCC35040F588ED3939 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */,
				58B2666B016344B28CE8A708 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */,
				8C21E88230F7435C8DAF9E64 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */,
				23F3BA69D6F445BFADF4B995 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */,
				78A37238A5F045D8B72F2AED /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */,
				2D19CBC528E649899412625E /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */,
				BF11F5B8632948C1915786D5 /* /Users/heiner/git/QuantLib/ql/money.cpp */,
				9F7B6169A28246D991B7518E /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */,
				0E0117E822FD4586B2801816 /* /Users/heiner/git/QuantLib/ql/position.cpp */,
				7375DF317D7B4B10A5B2FEBA /* /Users/heiner/git/QuantLib/ql/prices.cpp */,
				2C949D9E86244E26B3BEE639 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */,
				E99579EDBF4B4749BF8893ED /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */,
				CC3E1FA31FE24BCA834A6D06 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */,
				BA58ADB984184FC2BE47B749 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */,
				18F46997B4F644A8AFF9AEF8 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */,
				BD16C9D39F074C03AB0AA7D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */,
				E31D8B6E52F048A387819FAE /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */,
				7AFFDDCEF2134162BBA81855 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */,
				E9DD08B4BF1D4B5198AB514A /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */,
				77569132181248AD8A41D27E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */,
				6E2980C5022B4357886C8A1F /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */,
				A7299EBB205A4FB7882B94C9 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */,
				BA3E2281F97247BB8ABC85B3 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */,
				30C7D6E64FE744A5BF8399D2 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */,
				A55A7F02DB82416C8B4862B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */,
				A3A6F4B2DB7B49A6BB0B82DD /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */,
				D1CF12C8AFF04B6099CC1ED5 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */,
				C21B23D8DC5F4199B28AD58B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */,
				85208FFFD0B04514B293DB49 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */,
				11FB914FE907427E9768530C /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */,
				5939D2A93DBE46C68AF19DD5 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */,
				BEEC6B8611DE454BA3F5EF5E /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */,
				54445E883F314317B7972C39 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */,
				66A0D7D450BE4DC597248F11 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */,
				FC891863FF9E40B2A457F64C /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */,
				CEE94EF0FC0940D484AEF6E9 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */,
				36F247AFD6544D94AB1FF5B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */,
				C53CF7ED1B02425F94F3A2F4 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */,
				16CCF55507B54010A7EC164B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */,
				FE3D86CFA6D943958231134B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */,
				6FBC8F35887043E0B0FDA038 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */,
				6203E1294CA548D18FA93803 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */,
				D693F6F7863A4A2A8C597334 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */,
				EECCEA3EF1104082B83CEEF8 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */,
				C34EF21E72BD454381DD6202 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */,
				C8DA599B389F42B3A43D89FB /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */,
				44C2386F01754AFE88075CC5 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */,
				E1EC998672FE47BCACDAB154 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */,
				1D7ECB7CB22B4E778D6325F9 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */,
				B39B67E665D5432EB1E8CA04 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */,
				945C8B01543443899167F696 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */,
				FE5345BA33E24C80AE849165 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */,
				ED9055FBCE714D1EA651F017 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */,
				DF35DCBD7496457280F56411 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */,
				6E4FA852C0FF4A38BD4A898B /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */,
				A1206248916648FC95E07E53 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */,
				BD7DC57E56E94B0388C406F8 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */,
				4F2501349EBA4903A0237ABE /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */,
				6975C72CF0F14739B6CB8692 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */,
				C88A4595AB164A9794F23516 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */,
				65BE492AE8614F47ACCB42DF /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */,
				C071F05007D44D1F916A25DF /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */,
				DA1DBC66D4C14EB792918C12 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */,
				86CA8F19B12D4ABEBCFDE97F /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */,
				3F7F114B1F514D41B48AAC98 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */,
				5D78B53714FC42FDB82D5837 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */,
				C90DE2A6253548D58CB84000 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */,
				CB9BC82B5CCB44258462D7A4 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */,
				2F8F7B972C9743E8AF1ECEF1 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */,
				861EFD82C0DC439EA96B0CA7 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */,
				6D747A2FF12246039AC92F48 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */,
				FA22AF0AF2A249C7B0CC5D08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */,
				EFCE7D7BC6A04565816F4D95 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */,
				F0A013C221C247CABB97945B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */,
				04BA6F6F888F47DA8E4DBFC4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */,
				10B745FC436B4A3BBA70CD15 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */,
				8EBCD45A99C647C6B17EC9C7 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */,
				3E9B9BF84C2B4C72AAE27F3F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */,
				4B0C0A5D948B4979B888A60E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */,
				667B159329A94452B8B3A8D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */,
				B0CD22AC6D93454CA9367F91 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */,
				48DBB8CCC2E64759BBE302B0 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */,
				C4B1B5D4C18B47DEB57A58D3 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */,
				8A774696C6FA4408A68CF520 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */,
				7F8DF493CA554D9786B72900 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */,
				ABBFA905E9BB4B9F9F1C8B98 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */,
				1A1757F0F55445379F3A0A20 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */,
				4052A5DBA1DD478F8296B46E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */,
				BA497A62E0594F15B0300598 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */,
				541D680AB41045FB814D75FB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */,
				AEB551E599E1488A83D16606 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */,
				6C999F6B76274A4C9E66E1E2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */,
				CF9378513B5345EA8098F7CD /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */,
				77905C4BB17543A4B93A2D3E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */,
				365F71D336344609A0B790CA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */,
				E6EE2C877EEC44DF93148E31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */,
				4AC533178AD546FD9B665B69 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */,
				D6A667E2C79F4EBFAED5DA63 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */,
				5FADAA9184164ED5B932F823 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */,
				A66F9ADF38CD4A9F9D515C90 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */,
				FC5F012F03314820A43B9910 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */,
				6787197E2F3B4E989B78A572 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */,
				86CEF52FCCC44C8BA3F0F3D7 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */,
				B200164722C94439AE092710 /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */,
				AA749B3C422040F6BCDC5695 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */,
				D0C9D8E786504E29B7903CD2 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */,
				992CC12C43284CE0BC98ABB2 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */,
				53287880DC7C4703804B5B11 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */,
				DE1F4C76BC4E49FDB4F74276 /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */,
				31FFBB9472BA4E4F806C644B /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */,
				32691107CF29469C961F7A0F /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */,
				C408D9DB58E24CE8A4F851CC /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */,
				634C58F16E5B499398DD3D10 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */,
				BDB2FB2E81704944916F2A9E /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */,
				86B481A072BA457BA4B4B9EF /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */,
				22F1E361F05046B08F44E089 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */,
				142E991C042C473E8E46CCFB /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */,
				3689513D96CF405C91B39C6B /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */,
				9EF28D186508446393D2CB62 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */,
				DA8FF97316694F348E8DC50B /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */,
				10EC6AB739944192A78B58E6 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */,
				B7AC15262B254130BB5C0997 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */,
				07F535B02BB64DF9B371B0D3 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */,
				B8E8B099D48247ABA220A1D0 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */,
				842E227326B640E1978C9FD5 /* /Users/heiner/git/QuantLib/ql/settings.cpp */,
				5FA81CAD58A541FD9EEAB254 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */,
				741484C70A8A4D1FB54FA7B3 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */,
				CD3744AF35E349F6A4B4DE39 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */,
				05F0A7A85C054AA59ACA74C6 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */,
				1423A11185884818A52B7E63 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */,
				3D93723565ED4FF9906D4EA5 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */,
				F47AF65474A94AB0981A41C4 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */,
				D3D519C5365D483296146E77 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */,
				65393B79958E42519E678E70 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */,
				8B347E7B3D8646B6BDBE246B /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */,
				C2198BF0D96D47C09D2E9343 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */,
				D17E2B23AE244CFAA1F8D7C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */,
				2E4399ABE6F4493F80C75307 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */,
				94A1E6725B9A415280A06DE7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */,
				C0F8A44D969A444692A88649 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */,
				00B06501E25C4E5B9AC975B3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */,
				852BABF09DED4C4CB9BE9695 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */,
				AA24A5FD7CDD44BAA3F35BCB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */,
				1E3B2BC36ABA4643AEFA124C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */,
				1ADAA3E4DCE74AA0AAC0ADC5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */,
				9CBA834AAD134C4291C56526 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */,
				EA88BAF2927D41B7A3EE2611 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */,
				0E83DE28319D4C85A06D6EDB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */,
				331E5E37FBF149398BF873E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */,
				73D83B64579A42D9A848741D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */,
				F3FC0FBC30244AE8A1AE64D9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */,
				B3465A9864C64B35A5EA09D8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */,
				F218BC79F72B4A8CA1989A01 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */,
				420E44B227884B918650A6D9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */,
				D0AE37D984D1457A9B0C0AD6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */,
				9F1A2629BEBD4571ADEC4FED /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */,
				C472443F95C14F87A35BAE8A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */,
				EE9593FFE4EA442B93C31AC3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */,
				E15FC3278B854B2B801AC682 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */,
				5308CF127FC846ACAF1634AB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */,
				28B5B48DF57F4B468BD5CD8D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */,
				0E01B903773242A29C90A980 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */,
				4B0B60C9861F4E688CAB421E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */,
				C3AA9E29396D4260B1F680A0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */,
				A3314D13BA0D47A198174DFD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */,
				9328E0C2F57848F29C5C02A7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */,
				CDE5847593BA4F989B75089E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */,
				8BB344B8FB6C4E78A04E2EC3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */,
				8B11DC2B6CA84E37B2293CA8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */,
				1A8AA1E5FDF743299D668A5E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */,
				CAA86505255F45F7B4C13C5B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */,
				0150720842D742A9B5A07011 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */,
				8D760B1A825C4E8D93035BFE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */,
				D8A5E1A9B33149A08350AFDE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */,
				EE0BC8C396A444B989860C0C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */,
				EC5BA0EFC5E04FF2A5FEAEB3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */,
				5C642962A63D44A4B1521CC4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */,
				5BB54CBA7BFF4AC995840328 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */,
				4CE24196FAD64F9FA47E7BB4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */,
				54E5874FE68D4CC181B663DC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */,
				D7C9F35152454D0A843A9249 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */,
				4442AA8303F54801A90374D3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */,
				7679F6BA1C46408884ADF32A /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */,
				8FA48EDD170D41E9A1E8BEC1 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */,
				F5B44CD589EA400FA63F4046 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */,
				75E11E8971B04163992838C6 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */,
				A759D125034949EA9C532FFA /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */,
				814FBE71082C4D9581C68079 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */,
				17CD99BF1C4A4C5A967DCA9B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */,
				76A63685ABFE4B2989B5DAD5 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */,
				B890A813252E4597B1D208E4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */,
				5AD4280997EB48FD8F1A5E44 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */,
				0167FEE795424BEDA8BAEECD /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */,
				1C120649325F40E18415BCA1 /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */,
				EC0335B3FFF14F71A6291F44 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */,
				D7F1CA80AACD4742ABA604F0 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */,
				59CF883A671B41FE9C38938E /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */,
				A141646111CF4C1A8FF89F63 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */,
				2A313E29FB6A483284FCC5CC /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */,
				301D4FE2F9AA40D8B5DB7130 /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */,
				61AF95DB2AE74D1FB1440017 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */,
				465568E45B5246C380CEFD40 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */,
				725BE8B184DC4DC38965A503 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */,
				161E094255E545F88C51940E /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */,
				02E79F9F0B324FF4A1B5B6CE /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */,
				0FE7569CBCEC464FAADEAB78 /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */,
				341C37D76FB14D41803CB2DE /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */,
				D63296BE5E3D4941B46B5BD6 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */,
				A1834E4F54074AD2AF4BD33C /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */,
				F4E0D2A8BC8B438889108AE6 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */,
				C1D3989DD603411B9F532F0E /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */,
				458116C2878B4AEDB737AF1B /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */,
				C74E2222C9F746FE8001E472 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */,
				72437EAE7BDB426A87764B42 /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */,
				9E4D0F0570534415856CC0FE /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */,
				8598231C38DE4FFC9AB5316E /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */,
				9720DA3AE3B64D929439D801 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */,
				5ED8A2D944D0492380241804 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */,
				7F53899859E142AB8614080A /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */,
				18534303229D4CAE88C2496D /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */,
				127FA85D2B91494287E32ACD /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */,
				AEE8964BA0704D1C9E6902D9 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */,
				F2E5E48AE3794E08A2D0728C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */,
				64F8D32A248D4477BD754623 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */,
				221EEDB4E4B34ADC9CD66E40 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */,
				BB0CF4A6D6C34E7FB964F0FB /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */,
				6A22C7687CC041A08816E110 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */,
				38EECF0665D7490F890821A4 /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */,
				FB7CDD4BF26944E29E3567CE /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */,
				10900BEE14B9499891D4B24A /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */,
				D4C5E3A5332343DEB85309D1 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */,
				929220D5A1274D448F741066 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */,
				97C34D1F525D4B3985893D55 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */,
				50A319C2CF7A4772938D5DC6 /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */,
				823B77108B6F4232A99298ED /* /Users/heiner/git/QuantLib/ql/time/date.cpp */,
				E153A18889C343D99725FA5A /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */,
				8C072F53FEBE49B6B06CBA6F /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */,
				1291203F53D54AD7B75A8077 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */,
				AC1B0ABE0D274772A00AE5DE /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */,
				F047A8FF02A34B8895964FD6 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */,
				F22770BBB863495193073781 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */,
				8B815740650D4A0FA3F08262 /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */,
				5F0746BCECC348D88C4CBFAB /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */,
				060427E58FF042F4A747B699 /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */,
				2EF664CCB9EE40118BF008F5 /* /Users/heiner/git/QuantLib/ql/time/period.cpp */,
				761D88B59847413B9CD385A3 /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */,
				20F589863BDB4AD6A351C08B /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */,
				7194F5234DAA4AB9BC319AB5 /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */,
				A7A0BEC8143C4256B0DFACA3 /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */,
				03CC19D3964D47EBABDCCF60 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */,
				776C25E9F425478A958A273E /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */,
				3B0BB55B4E374A96B6CABE8A /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		EA19586B430F470991690AE7 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				82E26503BB5A4787B07D31E4 /* /Users/heiner/git/QuantLib/Examples/DiscreteHedging/DiscreteHedging.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		EDF47C8C592A4C9ABA95EA57 /* Header Files */ = {
			isa = PBXGroup;
			children = (
				6D6A0B263154425ABF5CD1E6 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolstructuresutilities.hpp */,
				C259BDB1BB4C46799C4CEA68 /* /Users/heiner/git/QuantLib/test-suite/utilities.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		EE8D0FB632794B5EB2142B08 /* Gaussian1dModels */ = {
			isa = PBXGroup;
			children = (
				59298B9C444A4197B49534E9 /* Source Files */,
				3F53FB862992443C9CDE60F6 /* /Users/heiner/git/QuantLib/Examples/Gaussian1dModels/CMakeLists.txt */,
			);
			name = Gaussian1dModels;
			sourceTree = "<group>";
		};
		F084B0B01CE744859AB01D3E /* Header Files */ = {
			isa = PBXGroup;
			children = (
				9751FD15A4714E01A42F687D /* /Users/heiner/git/QuantLib/ql/auto_link.hpp */,
				42FA9B8361054977B380E808 /* /Users/heiner/git/QuantLib/ql/cashflow.hpp */,
				2AB5359DCEC04D65A930C71F /* /Users/heiner/git/QuantLib/ql/cashflows/all.hpp */,
				D57733A156A64FA4B1C128B1 /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.hpp */,
				DC0BEDD53D3F42AE804B5ABE /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.hpp */,
				B82D339477284700B1B9D197 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.hpp */,
				75A2D7552CD34D18946DE297 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.hpp */,
				EFFF9ED5DA064D26A3E83AAF /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.hpp */,
				AFC294CF772A477894885047 /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.hpp */,
				D33CB2BDAE3D4358931C3213 /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.hpp */,
				2FC8CFBCC82041AEB209457A /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.hpp */,
				D6C6A6BA4B8442E3B8A71D6B /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.hpp */,
				C88DE54CA5514C318623B96E /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.hpp */,
				B4C5C1E7340341B6B964217D /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.hpp */,
				39D623A76C60465DBF92B7FE /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.hpp */,
				C7F686EF653B49B7B8DA8334 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.hpp */,
				FE53913D92304D0D9B62AE53 /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.hpp */,
				97E0DE5C58D84C559C42C87B /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.hpp */,
				83650C01A5104B3593B9B526 /* /Users/heiner/git/QuantLib/ql/cashflows/duration.hpp */,
				CB2499D605FE454B95756848 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.hpp */,
				7B756A0D181D4A458FA04A81 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.hpp */,
				A52371B791664F129DAB03EE /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.hpp */,
				78403B04DFEA48F1AC1FB255 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.hpp */,
				41A2DD9BB6DD43E0945ED672 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.hpp */,
				8F1067F6FBD2415DAE0BF144 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.hpp */,
				F46A3A2085A7486FA1EFF410 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.hpp */,
				75B0AC35C2D7456D81B39FF2 /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.hpp */,
				F54BB7762D994B0EAC0152B4 /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.hpp */,
				1FF5A3C4514846B09C38EEC1 /* /Users/heiner/git/QuantLib/ql/cashflows/replication.hpp */,
				4812530EF838403681954743 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.hpp */,
				80DD8F8DE70C4523AC422A70 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.hpp */,
				250DDC4607094D9CABA50D07 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.hpp */,
				C6F7EA625F5140B5A4DA3B73 /* /Users/heiner/git/QuantLib/ql/compounding.hpp */,
				70F5E1043EAF46E199CE910A /* /Users/heiner/git/QuantLib/ql/config.ansi.hpp */,
				3C188940BD2E4E90ADF34F18 /* /Users/heiner/git/QuantLib/ql/config.mingw.hpp */,
				B6C45B96BF03486A917A1F32 /* /Users/heiner/git/QuantLib/ql/config.msvc.hpp */,
				6CB398B7A705449C90FB6345 /* /Users/heiner/git/QuantLib/ql/config.sun.hpp */,
				974D1C8184FE436E873EFA73 /* /Users/heiner/git/QuantLib/ql/currencies/africa.hpp */,
				707DBE5921DB4882B2AE184C /* /Users/heiner/git/QuantLib/ql/currencies/all.hpp */,
				3FFE806F5C3A476489C3B647 /* /Users/heiner/git/QuantLib/ql/currencies/america.hpp */,
				B42DA3DC686141E88BB02770 /* /Users/heiner/git/QuantLib/ql/currencies/asia.hpp */,
				ADF442DB62D84267A393A32B /* /Users/heiner/git/QuantLib/ql/currencies/europe.hpp */,
				487B89EE62BC4836BB1F5AEC /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.hpp */,
				C6BAB37563C242A7B2AA01C3 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.hpp */,
				8E96291F6B134DF98D383A71 /* /Users/heiner/git/QuantLib/ql/currency.hpp */,
				BDB22E2411274C5BAB2E8842 /* /Users/heiner/git/QuantLib/ql/default.hpp */,
				AC79F51F3AF145D487419820 /* /Users/heiner/git/QuantLib/ql/discretizedasset.hpp */,
				48AB6467023347D4BC7B5531 /* /Users/heiner/git/QuantLib/ql/errors.hpp */,
				30837CF15FEC46B386E3B0DD /* /Users/heiner/git/QuantLib/ql/event.hpp */,
				3506C07DA03241EEA99D6F70 /* /Users/heiner/git/QuantLib/ql/exchangerate.hpp */,
				734B9B5F73C0479995D417DC /* /Users/heiner/git/QuantLib/ql/exercise.hpp */,
				FABAD9319263451D80CF919F /* /Users/heiner/git/QuantLib/ql/experimental/all.hpp */,
				D92F27C29D06469987CFB2CE /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/all.hpp */,
				0B5520CD96674784A12BE108 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.hpp */,
				2FC847CAEA83476188B1A1F7 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.hpp */,
				9B0A39892BA740639C49E187 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.hpp */,
				6D1787B3C7694F53B2D50119 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/all.hpp */,
				78E52937083A4485A7D5A63F /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.hpp */,
				05142878BB81459399FCDC00 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.hpp */,
				100BCEB7CFFB4FB6BD28FFDD /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.hpp */,
				537BEE69784D4F268D1635A9 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.hpp */,
				20395EDFDBC8496F9718FA51 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/all.hpp */,
				50AD09DD5BB1429CA70A907C /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.hpp */,
				AD57A6B34B3B4A93B9DE38EE /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.hpp */,
				E116586844C74D12994F8C1A /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/binomialdoublebarrierengine.hpp */,
				5CDF1A6C66F94FAA9AE1DE91 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.hpp */,
				9BADBE9AE41049FCA2E3F4C9 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.hpp */,
				1724DC4450A649B49577032C /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.hpp */,
				58F43EBADF274BEFB8A87AAC /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.hpp */,
				26D66FDD4C1C45B691C1DE91 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.hpp */,
				03380EC7A0D14CDCAECE08C2 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.hpp */,
				83CE3E0501A64B94A71EF4BF /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgadoublebarrierengine.hpp */,
				201EC0FF396A4A4FABD39133 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgainterpolation.hpp */,
				ECFD4009D2F848E684EA1A5D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.hpp */,
				A50970E0440D43F8A0077B17 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/all.hpp */,
				A59AB75B44274F6CA620E584 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.hpp */,
				3E52A140DA2249B38E96DE6F /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.hpp */,
				F8C7C20631954E4FAF33BFFD /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.hpp */,
				14064CE679C94CB2BD0247DA /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.hpp */,
				D58B015E995A423F99BA15D0 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.hpp */,
				2301850E82B148AFA60CF415 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.hpp */,
				8EA82D703C364FE58D966E2F /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/all.hpp */,
				35A9DCB4F1F24E3A87D03D61 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.hpp */,
				766558DF184446E6869994CD /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.hpp */,
				D97AF2EB9A8B45AD8A9C6163 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.hpp */,
				13851899441A49CBAAF7759F /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.hpp */,
				D4B3F2E3255C48238CF2CC9F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/all.hpp */,
				AC605C3728104B1B924F7C0D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.hpp */,
				3F209E6373FD4A3195ED1B02 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.hpp */,
				E8FB4A160929435C96681DF9 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.hpp */,
				34BE0ACA75A540C591447FDA /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.hpp */,
				4411C45E4D124A2784A58A3A /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.hpp */,
				329567C383DD4156B3F4BF22 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.hpp */,
				1C6FF658A1ED4D6F999651D5 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.hpp */,
				A06019B2861E4F19805D82C2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.hpp */,
				94D672934BDD4F4084D2B738 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.hpp */,
				8D783B120FE646A9B55DDAA7 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.hpp */,
				92A249FE9265464F980BE939 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.hpp */,
				EE5760FBB4F44EFC9D083272 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.hpp */,
				0D3C430D6AF64E00961CDFD3 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.hpp */,
				C3E6B7DCD0054D909A4AF387 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.hpp */,
				8D51D45336944198B0BB44BF /* /Users/heiner/git/QuantLib/ql/experimental/commodities/exchangecontract.hpp */,
				C7B889154A6346B7A5D2B07C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.hpp */,
				B9F6501A28424F56B8ED5916 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/petroleumunitsofmeasure.hpp */,
				5DA77F28EB074066B2D36DDE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/pricingperiod.hpp */,
				E134DAF1B3474CC5BDBCC43C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.hpp */,
				3A30A44E07B147FFACD2EC29 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.hpp */,
				31EDD0A102DF45BAA27676CC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.hpp */,
				11E8AC8BD4814D3D86C68B76 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.hpp */,
				DED832A73A974D229E924982 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/all.hpp */,
				62321324DF974C0D8EDE9CEE /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/binomialconvertibleengine.hpp */,
				DCC37ED588B74243B928B0F6 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.hpp */,
				1DC9FF7F4B824C1FBF26AEEE /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.hpp */,
				9F02503CFC6D465D94F806D5 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/tflattice.hpp */,
				DFF80E4284174143A2FCCF11 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/all.hpp */,
				FD0C6CA4A50C40AE9DEE841B /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.hpp */,
				69FF094081724640997EC231 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.hpp */,
				63536535CE0043A2AB099E95 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.hpp */,
				2EF6F3813DB74774B094D4D3 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.hpp */,
				AAD3C7DA50ED4BAAB9A9F7F5 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.hpp */,
				31925C0F5E1C4886BAC78322 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.hpp */,
				013319BDE39B4B1FACF201E5 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.hpp */,
				54B5447C535E4BED9D02582D /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.hpp */,
				0794BF79D18A47C29E8B15BA /* /Users/heiner/git/QuantLib/ql/experimental/credit/all.hpp */,
				256E4CA523D54ED6BE9D6F12 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationlossmodel.hpp */,
				A47799947EFE427F9D7255FB /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.hpp */,
				9339F61F804B401BBF125B6C /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.hpp */,
				00F38AD869AB4C6DA51223FC /* /Users/heiner/git/QuantLib/ql/experimental/credit/binomiallossmodel.hpp */,
				BBC22BACABBF43A6AA998B31 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.hpp */,
				34D2EA9E6F264CE2BD0BBF8F /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.hpp */,
				75B6FD9F5C7A44A9999FCC31 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.hpp */,
				0266E8B4F2A1402189F18E7C /* /Users/heiner/git/QuantLib/ql/experimental/credit/constantlosslatentmodel.hpp */,
				AFDF074A4708499AB2D0F07B /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.hpp */,
				5DEAB18249464C889B756C46 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.hpp */,
				7D242C8B6EAF4D3D8E02FDA2 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultlossmodel.hpp */,
				51BC1A0C626F4BF192E2CE1A /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.hpp */,
				B7887FF2901C4BA0B04ECA61 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitylatentmodel.hpp */,
				56A4D2F487D6422E9D290493 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.hpp */,
				5E183A6784D142D6985F3683 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.hpp */,
				61EA760A1F6E482E8F758711 /* /Users/heiner/git/QuantLib/ql/experimental/credit/factorspreadedhazardratecurve.hpp */,
				4D3A729580D84F66BCABDAD5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.hpp */,
				7D6A59C4B4BC4466AFD73E6B /* /Users/heiner/git/QuantLib/ql/experimental/credit/homogeneouspooldef.hpp */,
				35C77CF0F68748FD9AE33AFE /* /Users/heiner/git/QuantLib/ql/experimental/credit/inhomogeneouspooldef.hpp */,
				FE87706A04124E93AE818D74 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.hpp */,
				F4667A478C76460A85FA52CA /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.hpp */,
				D6ED6B1EBD104A398200424B /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.hpp */,
				E57C9371DEBC489B8CDB170F /* /Users/heiner/git/QuantLib/ql/experimental/credit/loss.hpp */,
				E8DC356654A14F9A8CD2BD89 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.hpp */,
				F4D35B33AC47465C891CF487 /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.hpp */,
				ABC90BB21E4E499FAF4C8069 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.hpp */,
				CF6BC0286D1F4153B4BE7A05 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.hpp */,
				685EFA0BD4C943C58FC018B9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.hpp */,
				6F5B49B7B3044362A63B51E7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.hpp */,
				6831DB4CCB724D679A11772C /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.hpp */,
				23C7EC90B29C43029F30281E /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultlatentmodel.hpp */,
				FC77A210617643AEA173E8EA /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.hpp */,
				BA164468DE5F43A1A86EBB1B /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomlosslatentmodel.hpp */,
				40096B6800724B9AB5BAAE14 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.hpp */,
				D1303ABFEEEF430696B73E74 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.hpp */,
				B5B4630856FE4A87BFD5CA85 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recursivelossmodel.hpp */,
				BCB5AB691FE2489D94A19CED /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.hpp */,
				CD252DA6F5D147429496FBCA /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.hpp */,
				729A4257D1DA4C87B5A45823 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.hpp */,
				D67364B4D8244BADA3DCA8F0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/saddlepointlossmodel.hpp */,
				0127E30E74F44F89A56EE996 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spotlosslatentmodel.hpp */,
				CC614E68900E4C2FBA6D5144 /* /Users/heiner/git/QuantLib/ql/experimental/credit/spreadedhazardratecurve.hpp */,
				4A751921B3D44A20AD334CC5 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.hpp */,
				EF6139D6F93A41E685E93A72 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/all.hpp */,
				414D2FD24BD84976A4D52E56 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.hpp */,
				5627E9FA57454935A2B48357 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.hpp */,
				98A0F6FFE8DF41178A503417 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.hpp */,
				39B641096A9C42C2BEAD20CE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.hpp */,
				7A846008A8D545878CACAECB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.hpp */,
				1E3010B5276145A798C1204F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.hpp */,
				21151E69394048DB938289BA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.hpp */,
				11B313BAD750440EA7876F07 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.hpp */,
				B1C8ADD53F054494918514A0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.hpp */,
				F7415DE49E2C4E698F72943B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.hpp */,
				A728FF149C0C4F2787F21B76 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.hpp */,
				52271DD409AC4D11B27D13AB /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.hpp */,
				0C737ED440644A7A8B751896 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.hpp */,
				8702C2FCEB09472D95BEA409 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.hpp */,
				E797130A3B674AC6A67EE812 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp */,
				0CD50E376C6346DA861A0ED3 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.hpp */,
				D4C3AE1873FB49459FFB373B /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.hpp */,
				A61D003C13D84F65B72C8978 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.hpp */,
				4507CD473A1F4EEB890CD598 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.hpp */,
				F1B3AD8D544E4EA1A5F68B70 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.hpp */,
				2A0D2287D94F424BAEF459C1 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.hpp */,
				0D7B2FA7A47C4FEEB7F15536 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.hpp */,
				D1CDE9B7B3E7443492959A80 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.hpp */,
				B36F771D7CC64E59B39C2A9F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.hpp */,
				4A563B8A40E74524828C25CF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.hpp */,
				01D2EA71E695453B9560B539 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.hpp */,
				2E38D60664AD437F9602C9E6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/spreadoption.hpp */,
				094B9001F01F4D16AD23EF1C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.hpp */,
				EFCF0AD66FAD4400A81021E6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.hpp */,
				1CB044D59F944794AE923AAE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.hpp */,
				FE9899E360424EB297F79547 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/all.hpp */,
				AA606CED7BF048F7B89CCFFD /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.hpp */,
				1E68853422EE41029A1871F9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.hpp */,
				B449EAD48BCD45D2ABCBA530 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.hpp */,
				EAC9891831B64251917996ED /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.hpp */,
				FD9CD071D7E141978284AC2C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.hpp */,
				64E79E4E3D7E4443956C2FA4 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.hpp */,
				3ACB40A9D1904163B85D879D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.hpp */,
				B794DF8B11024636AD8C82F3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmexpextouinnervaluecalculator.hpp */,
				A5F9D5A8DD384BFF955F7602 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.hpp */,
				264AF580F396441986FED7F8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpmodelinnervalue.hpp */,
				2EAD7CED33FE43A6841A81C9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.hpp */,
				AAD3F2A51CAA43DA878B5D96 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.hpp */,
				19587614D6CD4CA8BD8D6111 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.hpp */,
				3B766BB500FD411C95F2D63E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.hpp */,
				EEC894FD8A7542E0A0DFB7D9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.hpp */,
				9C5D0052F5B54CF49E24E723 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextousolver.hpp */,
				F8A9AA8DF728418FA6950974 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.hpp */,
				6117754E8BDD4E558F548983 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple2dextousolver.hpp */,
				22AD64ED941F4B9588D1016B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsimple3dextoujumpsolver.hpp */,
				864B278AC148412D8D7997ED /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmspreadpayoffinnervalue.hpp */,
				F9EC573C03B4414AB0598957 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.hpp */,
				0BCA5A974F994F999CF59744 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp */,
				BB1B11DD00504A519720A3B0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.hpp */,
				0FEE10B599A0497088B3DC80 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.hpp */,
				B4CE47ED79DD4A03980CD733 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.hpp */,
				37029505F3E74912BBD31D83 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.hpp */,
				AF56DFDD5A6449889F2859D6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.hpp */,
				181157B800E84F2A94C83698 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.hpp */,
				B3926A6D01764346B80569F3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.hpp */,
				6DB907BC0D114E788564AB8F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.hpp */,
				DC40619392534AE782083FD9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.hpp */,
				4256F347F20E4FC798CEE1D5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.hpp */,
				4A647814326E4DAC8B8EB98D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.hpp */,
				E796EDD7CB3E4FA0B9BDC05B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/modtriplebandlinearop.hpp */,
				35B1E12CFC104B3AA499934E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.hpp */,
				4F1192B1D8A943A99E8A64A9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.hpp */,
				0D56D70D60754A319A00FBC8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.hpp */,
				AA79577C99FD41BA97BE0767 /* /Users/heiner/git/QuantLib/ql/experimental/fx/all.hpp */,
				A52840682F5D46949BDF5DA0 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.hpp */,
				F6AF73885D1A4E34B0BB6AD5 /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.hpp */,
				2473C452BE6846048A32CB6C /* /Users/heiner/git/QuantLib/ql/experimental/inflation/all.hpp */,
				3942F392B7204F1B973C4053 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.hpp */,
				095E2B99D9544EB7BD15ACB0 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.hpp */,
				8FC06832709B4F7E972D0D69 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/genericindexes.hpp */,
				299DAFD4AB154ECFB8F1604E /* /Users/heiner/git/QuantLib/ql/experimental/inflation/interpolatedyoyoptionletstripper.hpp */,
				008A2B92306145AFA78C4993 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/kinterpolatedyoyoptionletvolatilitysurface.hpp */,
				9744C07412454ADEAED1801B /* /Users/heiner/git/QuantLib/ql/experimental/inflation/piecewiseyoyoptionletvolatility.hpp */,
				16D3827E275144CF98D5E884 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/polynomial2Dspline.hpp */,
				F8FF77F59F0F4A7E8038DD22 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.hpp */,
				63E20E60D3F347D694FA28BB /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyinflationoptionletvolatilitystructure2.hpp */,
				AFA29F60264248CC9884C314 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.hpp */,
				216265BB0BC243AD893DE583 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionletstripper.hpp */,
				3E3E54BCF39D4F30A9D67611 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/all.hpp */,
				E085CB478CDA42DEB262EE6A /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.hpp */,
				A9C963232D5A421C8CF1ADDB /* /Users/heiner/git/QuantLib/ql/experimental/math/all.hpp */,
				250D5E6F95C9412CB141C0A7 /* /Users/heiner/git/QuantLib/ql/experimental/math/claytoncopularng.hpp */,
				AF4DB7D72E1F4F50AEC39DFB /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.hpp */,
				B366BBF1B7FC45C7A609CF21 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.hpp */,
				1E54CA6FF3D24941BAC92E2D /* /Users/heiner/git/QuantLib/ql/experimental/math/farliegumbelmorgensterncopularng.hpp */,
				3225080C851E4E409FF1E7C3 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.hpp */,
				2A75425B5E8746AEB3C894BD /* /Users/heiner/git/QuantLib/ql/experimental/math/frankcopularng.hpp */,
				55E122EE76EA4603A146DD93 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.hpp */,
				FF5572FCCE4D4F618EAE9F84 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.hpp */,
				9A2664E159DB4B25AF5A7140 /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealing.hpp */,
				A1F0E92F6BC34F8C99EE003F /* /Users/heiner/git/QuantLib/ql/experimental/math/hybridsimulatedannealingfunctors.hpp */,
				03CE1B3B3E5C48ED8C9F2185 /* /Users/heiner/git/QuantLib/ql/experimental/math/isotropicrandomwalk.hpp */,
				F68C2DF5213F411FAD4A4A5C /* /Users/heiner/git/QuantLib/ql/experimental/math/laplaceinterpolation.hpp */,
				27D96FC5A5694F3FB7F45859 /* /Users/heiner/git/QuantLib/ql/experimental/math/latentmodel.hpp */,
				25C8ACAE0E3448B0A28EF9B1 /* /Users/heiner/git/QuantLib/ql/experimental/math/levyflightdistribution.hpp */,
				9AFE7125ED7740D4BA76CE4B /* /Users/heiner/git/QuantLib/ql/experimental/math/moorepenroseinverse.hpp */,
				66FE7F0C7F6146F89D608720 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.hpp */,
				FCEC5CDB8BDB41F6878283C3 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.hpp */,
				BE8E695DB8D949519D355F04 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.hpp */,
				70AB38DD3DE64DE88FC8525B /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.hpp */,
				01E7517357694EE797DE9655 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewisefunction.hpp */,
				41E56A80128C41AAA4E454DF /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.hpp */,
				7FB66F9DC2804907841B737D /* /Users/heiner/git/QuantLib/ql/experimental/math/polarstudenttrng.hpp */,
				EC7EA256AC3F4F1D922C796B /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.hpp */,
				F27BE73B08494B09942AC256 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.hpp */,
				6FF0FA0809E747E3994EE111 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.hpp */,
				B036FFBA271F479694448B5E /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/all.hpp */,
				1A67E08D71414F5EBB28C941 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.hpp */,
				00A7A34D38FE4F578229B0DB /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcamericanpathengine.hpp */,
				D41D6A1FD98C45688FC45491 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp */,
				9FC43D729DDC4EAFBFA0931D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.hpp */,
				D1587B58D50846A68680D6BF /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.hpp */,
				989F047C7BF94FCDAC7D37DC /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathpayoff.hpp */,
				ECDB4D852EF24D20B7CC150E /* /Users/heiner/git/QuantLib/ql/experimental/models/all.hpp */,
				F3A35E78FE60479993161E69 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.hpp */,
				3051349920D54EF39B49DC09 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.hpp */,
				7DD74202988F4F20A01BFBA1 /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.hpp */,
				966CF29F69F54878B19CE43E /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.hpp */,
				A9486C10BB9946FEBA70D796 /* /Users/heiner/git/QuantLib/ql/experimental/processes/all.hpp */,
				E17DC22669D94A1F9B7E3CE6 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.hpp */,
				CED50A6AF1AD4496ADAD13D9 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp */,
				B07B05945B4D498FA38CE223 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.hpp */,
				3E312C00B1994B34B1760577 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.hpp */,
				BB94E91F913D465A8BCF16E8 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.hpp */,
				006C8EE694E14828A92DC965 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.hpp */,
				A3A222CEEB314B4DB6FF626D /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.hpp */,
				0142420D2C2C4DC4981861E9 /* /Users/heiner/git/QuantLib/ql/experimental/risk/all.hpp */,
				EC7EF43F5E744F189F08A4C4 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.hpp */,
				BEB9F9BF52614B3E8CB21632 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.hpp */,
				3A8D48B09CBF4D57B965B0B6 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/all.hpp */,
				657814075AB2434D9A4DF019 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.hpp */,
				810B3124492D4A61864FC83E /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.hpp */,
				69C1FBBE447B498AAEBE56F1 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/all.hpp */,
				B6B68C09BF844359A83CD195 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.hpp */,
				DE9F4F448CAC48929A40921A /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.hpp */,
				CF60C117A2FD4021A316694D /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.hpp */,
				747C8A384B6B4671A2088ADB /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/all.hpp */,
				777070E00B274590A89C0F29 /* /Users/heiner/git/QuantLib/ql/experimental/termstructures/multicurvesensitivities.hpp */,
				B41E82D433494B5EAAC1FA29 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/all.hpp */,
				56FDE15BF35F47F1B99F59B3 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.hpp */,
				54D0C9A94BD846DA89140C4A /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.hpp */,
				F9908E23B95245F49E4F5E81 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.hpp */,
				8DB1C749F61040D4814C8496 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.hpp */,
				988174CBEC714B989A905F80 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.hpp */,
				48E9D8B063A446368C19DFC8 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.hpp */,
				977E5825706841BF984F0AF2 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/all.hpp */,
				641B8A3263F0441FAE798224 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.hpp */,
				46463C49C3CB4838AF594FFE /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.hpp */,
				C619A7F417284EC4B49D6C14 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.hpp */,
				0446B269363E42DAAC811BB9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/all.hpp */,
				108A2A65E9ED47F4A65F6A48 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.hpp */,
				6A1AA52BAF5B46D28223705A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.hpp */,
				B45D732372CE45EE93A22517 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.hpp */,
				F9E3AD7DD89445499DCC6AF1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.hpp */,
				76F8999241144151B2853DE7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.hpp */,
				1651CF6FACA04E7CA940BEAD /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.hpp */,
				0B43CD524F8442079C9CAD88 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.hpp */,
				65C43E7F10EC422BB9054585 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.hpp */,
				533DD3A7D08A4DE4B4E3CE65 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolation.hpp */,
				3D4781333FB44D2898B7154B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.hpp */,
				CC4F8B65C46D4CD4BCDFF8D9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.hpp */,
				41630351974649C8A6242F07 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvoltermstructure.hpp */,
				BA2C9E253CF4464FA69D79E7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.hpp */,
				4E0EA78897094B1CA4B34962 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolation.hpp */,
				A26BE9B829A546C0B9C0CA21 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.hpp */,
				42991F784BE94216814BBF2E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/swaptionvolcube1a.hpp */,
				F364286E4E3543CB8AAA2B4B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.hpp */,
				92D7A82D36E34266866E9656 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.hpp */,
				9B6029B2070D409494360D88 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolatedsmilesection.hpp */,
				DD5C571DB1D1423B9A769154 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrinterpolation.hpp */,
				A88B9F21D0DB46B698A9C1B9 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabrsmilesection.hpp */,
				FA1625337EBE4D2A882C3E38 /* /Users/heiner/git/QuantLib/ql/grid.hpp */,
				BA83A09569E3497291A75A8E /* /Users/heiner/git/QuantLib/ql/handle.hpp */,
				9AD372ABC4104C188904DCA3 /* /Users/heiner/git/QuantLib/ql/index.hpp */,
				5478EEF131044C7FA53E9E44 /* /Users/heiner/git/QuantLib/ql/indexes/all.hpp */,
				6ADCABF4B98F48E0B0F6C19B /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.hpp */,
				495C1202CFDC4131907EA624 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/all.hpp */,
				67C99341E6B6454EB20F28DB /* /Users/heiner/git/QuantLib/ql/indexes/ibor/aonia.hpp */,
				6871687653E24294A86B54FD /* /Users/heiner/git/QuantLib/ql/indexes/ibor/audlibor.hpp */,
				BD3C69F575624B41802395B4 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bbsw.hpp */,
				4B85762175B346E2A9638C53 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/bkbm.hpp */,
				8228DC41E3C24EB5BB4F607C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cadlibor.hpp */,
				38C4CCDBD8934ED7B064A8CB /* /Users/heiner/git/QuantLib/ql/indexes/ibor/cdor.hpp */,
				B46C8E72E2454370A63E4A57 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/chflibor.hpp */,
				52D56B6A8EB44D2EB0B870B8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/dkklibor.hpp */,
				366108E302554080846CE9C9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.hpp */,
				C5D5D74ADC8945E2992CF928 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.hpp */,
				BA4B050C3667407A9F54C508 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.hpp */,
				4EAB2298D39B42D89E47988B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.hpp */,
				7830BFB617C04967B5925F47 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/gbplibor.hpp */,
				03E1A5AC46B84F1289CCA625 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jibar.hpp */,
				CDA7A4CD37D44C8988C56F31 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/jpylibor.hpp */,
				61BA8FAF56C54867A8FA3C31 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.hpp */,
				ED3927D25BDF435E9795FBD9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzdlibor.hpp */,
				AA1053C66AB34DF79021ED0E /* /Users/heiner/git/QuantLib/ql/indexes/ibor/nzocr.hpp */,
				9861910C455B40DF8687F37B /* /Users/heiner/git/QuantLib/ql/indexes/ibor/seklibor.hpp */,
				B10A74D01E8F4DA0B59F6802 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.hpp */,
				EB4E624A0A1C4A95A4F1BCE8 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.hpp */,
				D15F282FEE3C46C79DA5BBE9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/tibor.hpp */,
				77FFC15D24A8462797D9BE56 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/trlibor.hpp */,
				6BB3135B7B57464FA5258080 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/usdlibor.hpp */,
				D30926903E444A8C8E9F47E5 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/zibor.hpp */,
				A82FBD647259497AB5C38894 /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.hpp */,
				DB6B6EA812864F68AFB7DEB2 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.hpp */,
				BD78B95663C7495D878E0888 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/all.hpp */,
				AFD824CE80F3491CBBCC3DA9 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/aucpi.hpp */,
				9FE20CBC91224564BA025214 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/euhicp.hpp */,
				B67160DEB6E849F792649E3F /* /Users/heiner/git/QuantLib/ql/indexes/inflation/frhicp.hpp */,
				28649FA367B54E5BA3786DAB /* /Users/heiner/git/QuantLib/ql/indexes/inflation/ukrpi.hpp */,
				4E4C301598094C4FBBD93C4F /* /Users/heiner/git/QuantLib/ql/indexes/inflation/uscpi.hpp */,
				B7DDE0E3C93D48D4B0BA95D4 /* /Users/heiner/git/QuantLib/ql/indexes/inflation/zacpi.hpp */,
				A9E1B3B25E184CF8A7DCB632 /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.hpp */,
				8ADA69FCE6044366AF367DC0 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.hpp */,
				F00B78A25C05442FA4176FFB /* /Users/heiner/git/QuantLib/ql/indexes/region.hpp */,
				3C9DCE7F63AB432290CADBA0 /* /Users/heiner/git/QuantLib/ql/indexes/swap/all.hpp */,
				1E13A09CD03A49F6891E0274 /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.hpp */,
				D863D4E05DCF471B8A2A3A20 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.hpp */,
				F68A7B6900814C579BAA8DF5 /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.hpp */,
				654BE8F09CA64236B8B851A3 /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.hpp */,
				53C09F574DF94AAABB579519 /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.hpp */,
				A7F30E8E8338454C9B0E19D3 /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.hpp */,
				D7E929FBCCFE49B7BDD17193 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.hpp */,
				514B748E279E467A89AF5BF8 /* /Users/heiner/git/QuantLib/ql/instrument.hpp */,
				B74256C6D5474B47B21EEBB6 /* /Users/heiner/git/QuantLib/ql/instruments/all.hpp */,
				249A298E5B7B4E19A5EB0669 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.hpp */,
				423A9F59A16446708346EA01 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.hpp */,
				E3E56377F4F14344950DD04B /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.hpp */,
				4C4E0521C7914360A867CDB4 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.hpp */,
				3C8BB98FF403459B8ACA4134 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.hpp */,
				4003DDCCBFC84F938972BB52 /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.hpp */,
				E9275B41CF2E46FBACF8D00B /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.hpp */,
				007C22BAE76D473BB4BEDBE9 /* /Users/heiner/git/QuantLib/ql/instruments/bond.hpp */,
				D812BF84750847AD8AC5264E /* /Users/heiner/git/QuantLib/ql/instruments/bonds/all.hpp */,
				630C067FA3BF4E05AC942C7E /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.hpp */,
				C1D4365D1BC84F8A9BC30160 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.hpp */,
				BC7FC53D093E4FD189D32366 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.hpp */,
				E021CFFC8DC54719BB43B3EB /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.hpp */,
				B1B172A46B934B2BBED3DDC2 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.hpp */,
				9BC8D6A7870F42FDA09C0251 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.hpp */,
				57A01AD588304321800EC103 /* /Users/heiner/git/QuantLib/ql/instruments/callabilityschedule.hpp */,
				294C595484E64289B2E75A70 /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.hpp */,
				75EA0CEAECC2441A95984E04 /* /Users/heiner/git/QuantLib/ql/instruments/claim.hpp */,
				DA1E4B2D41D849AC82B671D2 /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.hpp */,
				712393366E9842F4B9449536 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.hpp */,
				CC14BA45EDBA4E528322BD2B /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.hpp */,
				F0062F403396494A8D953889 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.hpp */,
				F42A4630C5DA424A9195DDAD /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.hpp */,
				1C119F1F3F4848D78CC596D1 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.hpp */,
				3DC0859E85784018841164B1 /* /Users/heiner/git/QuantLib/ql/instruments/dividendschedule.hpp */,
				F49DF284E5CE4B82B0CC1733 /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.hpp */,
				691790C50A704FC7B3787830 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.hpp */,
				61999BD4818E422F9C6DD86D /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.hpp */,
				3C7F215A8A304DDBBC69FDE2 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.hpp */,
				F070E86BA9AE4ED3AAE6298B /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.hpp */,
				EDE059763CA8402A8CE53061 /* /Users/heiner/git/QuantLib/ql/instruments/forward.hpp */,
				176DD3244D2D40008A131940 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.hpp */,
				A4DEBE024FD341D6A02E18A8 /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.hpp */,
				221520D1DF144E108326E190 /* /Users/heiner/git/QuantLib/ql/instruments/futures.hpp */,
				55BC615E9FBA491C822B4D1E /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.hpp */,
				2B78A129179C4AC5B7C84DA7 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.hpp */,
				04FED45B7EA14746BC9473F6 /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.hpp */,
				9F98E9429DDD467BA5870AD5 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.hpp */,
				9B172FA7B9D440599406EA6E /* /Users/heiner/git/QuantLib/ql/instruments/makecds.hpp */,
				7D138A9AC75D484BABA540F7 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.hpp */,
				09B82104E6C7408587F09B29 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.hpp */,
				AF19DC99E4814EFAA773E6F9 /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.hpp */,
				040FD6D4C3744F0E841849E9 /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.hpp */,
				6EDDCF9442084490B25A159A /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.hpp */,
				57D8252C2BF74649BC475DF8 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.hpp */,
				3A8DDF5D2EC947BE9A7B95C9 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.hpp */,
				A3AF4C06BC094C0B97ACBBDB /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.hpp */,
				4719068AF3C1408C9087FB46 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.hpp */,
				1951B2665DA04087BAA558E9 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.hpp */,
				00B752E1938043DCAF286A33 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.hpp */,
				AA5BDB2134204204ADC8EA3E /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.hpp */,
				60AC6987DE804DBC9A319FD9 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.hpp */,
				6DA26ACC88E54905B8ECB0A4 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.hpp */,
				8E7CAA896E3441A0B275BEEC /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.hpp */,
				C3B696713DF546AAB42CC01A /* /Users/heiner/git/QuantLib/ql/instruments/stock.hpp */,
				25FAEDD96E1E4C298C4391D6 /* /Users/heiner/git/QuantLib/ql/instruments/swap.hpp */,
				41228EC39CD34B76818FBE57 /* /Users/heiner/git/QuantLib/ql/instruments/swaption.hpp */,
				FAB551B1B25D4039BCF44819 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.hpp */,
				0F68E79BF8904A93A0FA3AF5 /* /Users/heiner/git/QuantLib/ql/instruments/vanillastorageoption.hpp */,
				B561260C71FC4EAF92A43270 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.hpp */,
				10EED7CC6AE24340BA856261 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.hpp */,
				0BC2285720CE438FB14CA5F1 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.hpp */,
				2A3C660D95484ABB94F2FD5C /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.hpp */,
				5676F1A434564C3B8AFE09A7 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.hpp */,
				2367CB9524234C598A7B2EA1 /* /Users/heiner/git/QuantLib/ql/interestrate.hpp */,
				C3192E9EBD9F42BEB28062F3 /* /Users/heiner/git/QuantLib/ql/legacy/all.hpp */,
				4E16D9A029C845E6B26433B4 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/all.hpp */,
				254DF62BE22D40E784C04291 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.hpp */,
				1FC621CBA9864E8494F139AF /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.hpp */,
				C609C31A2EF14BD4BD2C60E2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.hpp */,
				3C478FA7FCC34CF5BC32A9AD /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.hpp */,
				F2ABDCF1A9D34BB9B1F8FCB2 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.hpp */,
				A366F4F76CE94DD0B0C0FAB9 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.hpp */,
				C6E861446AEF4A46A892B442 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappercorrmodel.hpp */,
				7DE6B4AA3D5348DEB7DB61E5 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmconstwrappervolmodel.hpp */,
				1DEE2B4127294CA693A310C4 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.hpp */,
				2BB7824C884D4E66A05733DA /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.hpp */,
				11A01B4F11324BE2B680849A /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.hpp */,
				224B1A1C229742B5839CB0E0 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.hpp */,
				6469981ED01D4E55B5D09235 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.hpp */,
				3BDFEC1B451A4E07B4F1957B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.hpp */,
				793753CDE1004CD1A1F0D471 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.hpp */,
				525933389273470CA0DF4F1B /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.hpp */,
				B6F895E42B844785BE26248F /* /Users/heiner/git/QuantLib/ql/math/all.hpp */,
				459502309D38469A8447CDF4 /* /Users/heiner/git/QuantLib/ql/math/array.hpp */,
				4CA94FB72E1B46D09CFC6883 /* /Users/heiner/git/QuantLib/ql/math/autocovariance.hpp */,
				CC280486D159429CBABCE984 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.hpp */,
				F98C377F1C1A4BD997047298 /* /Users/heiner/git/QuantLib/ql/math/beta.hpp */,
				8A41B7D571E6416BB158F00A /* /Users/heiner/git/QuantLib/ql/math/bspline.hpp */,
				9CFF1EF7089941DC9D67BFAB /* /Users/heiner/git/QuantLib/ql/math/comparison.hpp */,
				C42FF2D43B394C1B84CCF88A /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.hpp */,
				DBCDAFE75F2F4393A855A87D /* /Users/heiner/git/QuantLib/ql/math/copulas/all.hpp */,
				7FF3CC6178A141CBA0C1F8CE /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.hpp */,
				625A1F1B768F49AA87003096 /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.hpp */,
				2E52F2A203D04ED7BD8A05EB /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.hpp */,
				40D84630AA9E483A92643FAA /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.hpp */,
				E4228FE1168148B98923E2B7 /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.hpp */,
				97206F6B97634466908AD713 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.hpp */,
				13D0C8B3AF0D43AF9671C16B /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.hpp */,
				EA1B0014403D47019E158440 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.hpp */,
				5D70AF727AA347EAA1B9316A /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.hpp */,
				CFF7BD1483054118A6F36A64 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.hpp */,
				2A0627BAFC8D44DFA0974989 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.hpp */,
				4AAABCDB70DD446589CE0E33 /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.hpp */,
				7241DA3027D74DBB8C8A64A7 /* /Users/heiner/git/QuantLib/ql/math/curve.hpp */,
				F2D78CA48CFC4748B6AE7BAC /* /Users/heiner/git/QuantLib/ql/math/distributions/all.hpp */,
				790D60FC832A48B88AA59595 /* /Users/heiner/git/QuantLib/ql/math/distributions/binomialdistribution.hpp */,
				BD9E52F5234046C7B89822D1 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.hpp */,
				7FF620BB39C548BBA6EA1F49 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.hpp */,
				34792596485E4AC0B69940E0 /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.hpp */,
				62DBD5822F244D52A62D92AF /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.hpp */,
				DD23F3500FD6451099C6C21D /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.hpp */,
				380FD96ACB8C4A4998BB598E /* /Users/heiner/git/QuantLib/ql/math/distributions/poissondistribution.hpp */,
				6ECCD98B4EA4425F82C74D9B /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.hpp */,
				527B712EDACD43409545E619 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.hpp */,
				A9CBD1C94E3948CFB290788D /* /Users/heiner/git/QuantLib/ql/math/factorial.hpp */,
				D0EF24D2FD77419AAD8D2B34 /* /Users/heiner/git/QuantLib/ql/math/fastfouriertransform.hpp */,
				11D74FA58A5D4375AA3ECA71 /* /Users/heiner/git/QuantLib/ql/math/functional.hpp */,
				39ABBE06D2C8404BAB50AFDD /* /Users/heiner/git/QuantLib/ql/math/generallinearleastsquares.hpp */,
				838793063F9F44FE906283CA /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.hpp */,
				3495F0662A744AAB9911208C /* /Users/heiner/git/QuantLib/ql/math/integrals/all.hpp */,
				855A8358CD7245209DD225CA /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.hpp */,
				84C6B94639794BB9A6ED446E /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.hpp */,
				7CD0AA0509E84763BC12C89B /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.hpp */,
				550E32F12B2547B98B5EF13E /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.hpp */,
				1F77C0781D0A4B228E347217 /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.hpp */,
				E0FBD99787CA47D9AD0C9CBB /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.hpp */,
				B5BDAAD00174427BAB192CBE /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.hpp */,
				6DD364C591584B2DA47CE4C9 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.hpp */,
				E2A46116D2F442469D12BAD1 /* /Users/heiner/git/QuantLib/ql/math/integrals/simpsonintegral.hpp */,
				67763852F4454BC89353AA74 /* /Users/heiner/git/QuantLib/ql/math/integrals/trapezoidintegral.hpp */,
				D83BF42162724DF68D66243B /* /Users/heiner/git/QuantLib/ql/math/integrals/twodimensionalintegral.hpp */,
				6734C1ABD197443E95E7D712 /* /Users/heiner/git/QuantLib/ql/math/interpolation.hpp */,
				4CC503B1FC95439DACCA48E4 /* /Users/heiner/git/QuantLib/ql/math/interpolations/abcdinterpolation.hpp */,
				AFFB901C235C43A382A5DB1E /* /Users/heiner/git/QuantLib/ql/math/interpolations/all.hpp */,
				FBFCDB2AF3394A7DA95A1646 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatinterpolation.hpp */,
				2C3A470DEFB247C3B9EA07B6 /* /Users/heiner/git/QuantLib/ql/math/interpolations/backwardflatlinearinterpolation.hpp */,
				4D5714FCF9A248D3A6CAF003 /* /Users/heiner/git/QuantLib/ql/math/interpolations/bicubicsplineinterpolation.hpp */,
				C05E95828B7F4B53AE66BA6B /* /Users/heiner/git/QuantLib/ql/math/interpolations/bilinearinterpolation.hpp */,
				4A3B0BBD35C94D6A907BF871 /* /Users/heiner/git/QuantLib/ql/math/interpolations/convexmonotoneinterpolation.hpp */,
				70C66CCF228B4D7BAF43B102 /* /Users/heiner/git/QuantLib/ql/math/interpolations/cubicinterpolation.hpp */,
				3241491B824B400B99A1D69C /* /Users/heiner/git/QuantLib/ql/math/interpolations/extrapolation.hpp */,
				86B0D80353334FDEB66EBA23 /* /Users/heiner/git/QuantLib/ql/math/interpolations/flatextrapolation2d.hpp */,
				813229799C304A129D6CACCD /* /Users/heiner/git/QuantLib/ql/math/interpolations/forwardflatinterpolation.hpp */,
				827293512FA0489194B78197 /* /Users/heiner/git/QuantLib/ql/math/interpolations/interpolation2d.hpp */,
				D78E4B9F244F44ABB8B85AA8 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation.hpp */,
				B9446841FBB347DFBA158509 /* /Users/heiner/git/QuantLib/ql/math/interpolations/kernelinterpolation2d.hpp */,
				CA2CB2DA94E048B0BD9EA5F1 /* /Users/heiner/git/QuantLib/ql/math/interpolations/lagrangeinterpolation.hpp */,
				C098CF7674F04306B8D79BE7 /* /Users/heiner/git/QuantLib/ql/math/interpolations/linearinterpolation.hpp */,
				52B222FC878E4E6A89F13C38 /* /Users/heiner/git/QuantLib/ql/math/interpolations/loginterpolation.hpp */,
				3E03F1A90BA7488FA34D7D9D /* /Users/heiner/git/QuantLib/ql/math/interpolations/mixedinterpolation.hpp */,
				1329F958C1A449489285EAD9 /* /Users/heiner/git/QuantLib/ql/math/interpolations/multicubicspline.hpp */,
				3E0011E52D084BD88168675A /* /Users/heiner/git/QuantLib/ql/math/interpolations/sabrinterpolation.hpp */,
				E2C5AD4AC82C47C79DE46471 /* /Users/heiner/git/QuantLib/ql/math/interpolations/xabrinterpolation.hpp */,
				57ABD0C976554D7699B9E2C9 /* /Users/heiner/git/QuantLib/ql/math/kernelfunctions.hpp */,
				A8CA434F4C1A4BB4970E3B11 /* /Users/heiner/git/QuantLib/ql/math/lexicographicalview.hpp */,
				45BEE43CD9D44CA3A7D557BE /* /Users/heiner/git/QuantLib/ql/math/linearleastsquaresregression.hpp */,
				A11505D8E9D94B929FF3419A /* /Users/heiner/git/QuantLib/ql/math/matrix.hpp */,
				9261E759CC524C79A39641A1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/all.hpp */,
				0EF4C3E522CE421BB2502AF7 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.hpp */,
				FC47A9C47B634FC4956C301B /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.hpp */,
				6EA2DA7F69A440DCA1DD08E3 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.hpp */,
				6BDAC96E8D0446488AD7AEC6 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.hpp */,
				DBA37B2A815A441DB4F8C755 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.hpp */,
				2497324216C84867BAC286EB /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.hpp */,
				A78A83BC77344803843FDB3D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.hpp */,
				E484FBBDE50948B18080BE48 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.hpp */,
				E3EBC928E9B4467699AE4214 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.hpp */,
				9DA93E5C6E034FD486530ECF /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparsematrix.hpp */,
				22A5AE50CA8749B8926A5B59 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.hpp */,
				27167E3BADF14D33B0201C81 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.hpp */,
				51354ECB1345482DAEA57A7F /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.hpp */,
				50E6494157224173B723A50A /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.hpp */,
				18FEF8DC8E924F5981EE9D3B /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.hpp */,
				1E3CE28B098047EEBEA8BE98 /* /Users/heiner/git/QuantLib/ql/math/ode/adaptiverungekutta.hpp */,
				336ECAFBD42A42839986F998 /* /Users/heiner/git/QuantLib/ql/math/ode/all.hpp */,
				C2A314CDCCAD44078767FC9D /* /Users/heiner/git/QuantLib/ql/math/optimization/all.hpp */,
				EA2427D260134FEDBA3480A3 /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.hpp */,
				13DCE690D9AA4E109F79DA79 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.hpp */,
				8193B03C1BD748649723983A /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.hpp */,
				B1CC7A444E264026B25F1E7B /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.hpp */,
				075F5865D5A64AE8B250BAFE /* /Users/heiner/git/QuantLib/ql/math/optimization/costfunction.hpp */,
				4CEB025F74924777A6ECDF6A /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.hpp */,
				DCC0B71814F04550A05AA609 /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.hpp */,
				A4876119F0D04B1ABC7BFDEC /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.hpp */,
				A72066BCD80F433687A8B311 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.hpp */,
				6B40965D8C244E6085B7E834 /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.hpp */,
				D437666561D24ACF906BEE4F /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.hpp */,
				3C530D01838044CE8CCF95B8 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.hpp */,
				B13FDA62D0CA478E8106FA39 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.hpp */,
				76CC76BEA90949A1AD4FC575 /* /Users/heiner/git/QuantLib/ql/math/optimization/method.hpp */,
				BFD0D9B7BF444DFDA0233817 /* /Users/heiner/git/QuantLib/ql/math/optimization/problem.hpp */,
				6DC31F8C71C64161896B9DF4 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedconstraint.hpp */,
				801914C49D3B4B11961B95DF /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.hpp */,
				787E7362BDD4439D81E7C4B3 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.hpp */,
				D4FB719D832241CD985032A0 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.hpp */,
				47E11AF51D674A75B07DF48D /* /Users/heiner/git/QuantLib/ql/math/optimization/simulatedannealing.hpp */,
				2B631FC5321749549BEB5742 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.hpp */,
				F95839FAB6DA4CEDA160B6C3 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.hpp */,
				82B35A7CE8314E21BE5BDA78 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.hpp */,
				F354500820EF4BF59E595148 /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.hpp */,
				0D9A6AE8813449FABB739DD7 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.hpp */,
				51DCDF5258294375B38853D9 /* /Users/heiner/git/QuantLib/ql/math/quadratic.hpp */,
				361C067F298D4A4EBEB026F1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/all.hpp */,
				333878B91C0B4A33BB442A17 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/boxmullergaussianrng.hpp */,
				D0F2B20110BF4DAB800B0D71 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/centrallimitgaussianrng.hpp */,
				F55299F0B0434F78AB56D786 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.hpp */,
				9F2C940F050E4B3589847771 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.hpp */,
				61AC54D378AC4803A9A910CD /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativerng.hpp */,
				AF386F34BA904165BD23F26D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/inversecumulativersg.hpp */,
				718AC22F0DA14BB7B392039F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.hpp */,
				0FFB6FE244D847E5A1DCA07E /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.hpp */,
				278CAE2936954AA49FA7DC58 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.hpp */,
				FE30DBDC3C924704ACCC626D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.hpp */,
				5D83C262809D4B7395FFA4C7 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.hpp */,
				ADAD904E41A84D629880F56D /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.hpp */,
				DB2C904AB843420A92427478 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomizedlds.hpp */,
				1058A906F8C640D1A5E507CA /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/randomsequencegenerator.hpp */,
				0B9C8A6395D64D7882797D53 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/ranluxuniformrng.hpp */,
				A3B29145A2A2412DA2F75E03 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/rngtraits.hpp */,
				06404A9BC4104A2EBFE15F74 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.hpp */,
				0DE4581CBCC648D9884BD33E /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.hpp */,
				C1F782B6EA4D48608EDE4B6F /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.hpp */,
				442DEF61ED9C4C7D9DC3B6D4 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.hpp */,
				31A5F82FDA0F4A7391BA38AB /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.hpp */,
				53FEDF07BDA34C499980C0D4 /* /Users/heiner/git/QuantLib/ql/math/rounding.hpp */,
				4D39AE22B31146B88A2C05FC /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.hpp */,
				3A89A171F63A41068EF9A36F /* /Users/heiner/git/QuantLib/ql/math/solver1d.hpp */,
				32562E7D91E140959EF785D4 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/all.hpp */,
				B5C04DCB081C4689B0BF9F5D /* /Users/heiner/git/QuantLib/ql/math/solvers1d/bisection.hpp */,
				A19399A0C8CE45E29F5B2212 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/brent.hpp */,
				FDD8FBEA0AA14774A70493AB /* /Users/heiner/git/QuantLib/ql/math/solvers1d/falseposition.hpp */,
				618B27B739404B1FA08D48FD /* /Users/heiner/git/QuantLib/ql/math/solvers1d/finitedifferencenewtonsafe.hpp */,
				C5B7BBC829324F95BDD5F260 /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newton.hpp */,
				7816408FDEA1406A91CF6D3F /* /Users/heiner/git/QuantLib/ql/math/solvers1d/newtonsafe.hpp */,
				6C1E3A452CD04BC6A75CFB3E /* /Users/heiner/git/QuantLib/ql/math/solvers1d/ridder.hpp */,
				A6A1479CE7E840F184D467CA /* /Users/heiner/git/QuantLib/ql/math/solvers1d/secant.hpp */,
				FBCA0DF2897A4CD8ABBDEA41 /* /Users/heiner/git/QuantLib/ql/math/statistics/all.hpp */,
				BBC5E341961644DE8449D7EB /* /Users/heiner/git/QuantLib/ql/math/statistics/convergencestatistics.hpp */,
				0D9F68C687014638ABD628D1 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.hpp */,
				3B3540969CF84C19BAF1116D /* /Users/heiner/git/QuantLib/ql/math/statistics/gaussianstatistics.hpp */,
				81EF894CCCF44B729AB4DEC2 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.hpp */,
				00B14E38E6CD4277A5915B36 /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.hpp */,
				0A8D7C0046994E869F50FB16 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.hpp */,
				60B50F877AF546F6A8E137BC /* /Users/heiner/git/QuantLib/ql/math/statistics/riskstatistics.hpp */,
				29DF9147E11140D49921BD35 /* /Users/heiner/git/QuantLib/ql/math/statistics/sequencestatistics.hpp */,
				58E07DA9D1514A41A0F66845 /* /Users/heiner/git/QuantLib/ql/math/statistics/statistics.hpp */,
				4894DD9155AC44D58A67D896 /* /Users/heiner/git/QuantLib/ql/math/transformedgrid.hpp */,
				7770482AD0DB4C829896ED67 /* /Users/heiner/git/QuantLib/ql/mathconstants.hpp */,
				D40BA15CF79241169F99A304 /* /Users/heiner/git/QuantLib/ql/methods/all.hpp */,
				4A72D3D007724164BA4AF484 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/all.hpp */,
				DCAECD7850184F4180796704 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/americancondition.hpp */,
				8EA6C09DEB594E4BAAD99B61 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.hpp */,
				C6214F79D0054B8484AE705C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.hpp */,
				CFD76507F92842CE921D7F2B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmtermoperator.hpp */,
				B8165DC968D345A0A97679D8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/cranknicolson.hpp */,
				A71208A62A0842699BC31D6A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dminus.hpp */,
				257227E68AB543F8AFF77237 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplus.hpp */,
				87AC15593DDB41918EA92366 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dplusdminus.hpp */,
				7ECB224FCEB34C4C8176E889 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/dzero.hpp */,
				930C5B2096D141B39B7B299E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/expliciteuler.hpp */,
				786E3EA3B67443A0A8AEA0E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/fdtypedefs.hpp */,
				2F48AF0CF830432EAA1C3E91 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/finitedifferencemodel.hpp */,
				606F6F2982F5496394CE0840 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/impliciteuler.hpp */,
				6333E2E9B7EE4913805CC94E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/all.hpp */,
				2790FBBFA8424333A32C0904 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.hpp */,
				B7BABD33024E41F08C45A6D7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.hpp */,
				C49F5A8A6AD54DE79394B07A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdm1dmesher.hpp */,
				98A343BD26A2466EB9179230 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.hpp */,
				35E512423B5C4C5989039B3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.hpp */,
				15724A3E51B940D380FB42DF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.hpp */,
				1845593132A047438A614777 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmesher.hpp */,
				CA88A2A5A29D4E678FE5FF5E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp */,
				51587E98A38F4191948C05AC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.hpp */,
				A883256218F74EE488485066 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/predefined1dmesher.hpp */,
				41035DBDB72C45A7933B4A63 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniform1dmesher.hpp */,
				CBF02E9A34804FD6B37EDDD5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.hpp */,
				13F13E57DEF14286B1F1EC84 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/mixedscheme.hpp */,
				301F4821F40941E3933A7D79 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/onefactoroperator.hpp */,
				D979EF3114B44EF19CE6FE42 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatorfactory.hpp */,
				D727AD511FC345A4B7CFB396 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/all.hpp */,
				146C48D7C331467487A77D84 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.hpp */,
				D2172497C0F0487D81DAF5CA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.hpp */,
				D6F1455604A14AD0AC2975C5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.hpp */,
				967579A13FCD43B1B061F0F6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.hpp */,
				910ACB7AC18A42419D641106 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp */,
				64BCE37647EF45DDAC858B3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.hpp */,
				F812A29F5A224B6A930CFD31 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.hpp */,
				C3D034E65461488BA34CBFDE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearop.hpp */,
				C13C294210B24A57B86C405F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp */,
				224606ECE466476DBC117080 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp */,
				EA33917D7899479C8B9030ED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp */,
				BD31A73E8D36443D947188A3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.hpp */,
				AC8E27135FED4EED8217C609 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.hpp */,
				E270E7F962ED4830A8D4E3C2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.hpp */,
				965FE0D97E3C45DFBA34C7BB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.hpp */,
				4F1197A0E77E4C3BAD541D49 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.hpp */,
				A6B1FFAEDE234F76848AB08D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.hpp */,
				E86EF64B70D844AA97DC674E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operatortraits.hpp */,
				F982C1522A7040B693DC6283 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/parallelevolver.hpp */,
				953D8434973047B68F743040 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pde.hpp */,
				5408F1E055CD492881AC044F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdebsm.hpp */,
				F48856416BA04453A6A03278 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/pdeshortrate.hpp */,
				4F8C4A7A28C64AF1B9F4BCDC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/all.hpp */,
				0809DE844AB9438593ED61E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp */,
				8F4C1FFA957A4762BFAB1D8F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.hpp */,
				1A1EC931FD1E45B1AA74E5D4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.hpp */,
				30081C57F5704809A4A9EAED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp */,
				784C145F16804616BF9F09BF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp */,
				DB70C5DC74974B929DB585B4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp */,
				D6EF1CCD5FD84F228286E1DD /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp */,
				BA2E433484CA4A30BE140CF7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/shoutcondition.hpp */,
				D290AEF05BD24F11B4DDC6EB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/all.hpp */,
				95699D9CDD924B1295F288B3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp */,
				5FC88E126D45490FB5BA81EC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.hpp */,
				E0588BEDDF4546719F6B6335 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.hpp */,
				FA915512970641A19E691964 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.hpp */,
				3CCD738FA2AA4E0BB5D6D10A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp */,
				B87317F2996A4C3AB4CF32DB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.hpp */,
				FDC47B752F2C412396433CE6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp */,
				C1F64F6F624E488C856B3285 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.hpp */,
				06A8EB4BF2E84EBC8022D1CB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.hpp */,
				693634D53D304F84841548ED /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.hpp */,
				CCCEE106382E41BBB23F98E0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp */,
				C8D8D8F7DF9A4F0BB0EA525A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmndimsolver.hpp */,
				0834105CF56A4B5995089625 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.hpp */,
				8F7755B2A6294C2183CC001F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp */,
				2BC724D9E16847629A1D4F56 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepcondition.hpp */,
				B492856BAE0740279C08855E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/all.hpp */,
				ACAEFAB9CE1A4A1D905856DE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.hpp */,
				741E7BEBE33D49B3B8BF7DD7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.hpp */,
				77B489C8DC3F42989A50D41C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.hpp */,
				36DDDF80DCB84FC6A3D9D6C7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.hpp */,
				1B7A3C41B6F84E7185C18FB1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.hpp */,
				BC0832B0E2A64379939B3BA7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.hpp */,
				FBA1951F3D1E4F7A90693E43 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.hpp */,
				2C64FB1EAACB444AAB24106A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/trbdf2.hpp */,
				0AF665EBAFED4D5EB22BD83C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.hpp */,
				89185BC4FE954623B6C15293 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/all.hpp */,
				AC4C51D4DF97405B813D9D35 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.hpp */,
				30EE80BB552D40E3B4BC7C8C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.hpp */,
				663012F08E124A7491C26FD3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp */,
				8606F0FAA18B4D0B971FA341 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.hpp */,
				E71501587608460AA3B5B1FA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.hpp */,
				EB14BDDF7E5D4862BCEBBE36 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.hpp */,
				FA1E27CEB67D4B2A97ED5904 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.hpp */,
				9D0866D1A7DB47E4AC4BFBE2 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.hpp */,
				8C211B4F8269468FA9110584 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.hpp */,
				13B9EE14F4434EDCB17BAC92 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.hpp */,
				5A82A550337F448B8A8461C4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/zerocondition.hpp */,
				989932AB094E4F2399AD76B9 /* /Users/heiner/git/QuantLib/ql/methods/lattices/all.hpp */,
				82D1D8D9AA7B4DBC88B9FABC /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.hpp */,
				110A7389A2634C0A93E98014 /* /Users/heiner/git/QuantLib/ql/methods/lattices/bsmlattice.hpp */,
				B007A6224359439FB086186D /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice.hpp */,
				8F950EDA87554F6288E29D3F /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice1d.hpp */,
				AB0F7A99A1FA4CCA9C22989E /* /Users/heiner/git/QuantLib/ql/methods/lattices/lattice2d.hpp */,
				8854AFE38A164ADC8ADB0C7E /* /Users/heiner/git/QuantLib/ql/methods/lattices/tree.hpp */,
				EDD4BC41B3EC499D9ACCD73E /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.hpp */,
				319278978150425E8E1C2DAF /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/all.hpp */,
				31430263931F44309BE91034 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.hpp */,
				6BE416D054514507974B07D4 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/earlyexercisepathpricer.hpp */,
				C26361DA785D48BCBA2B3301 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/exercisestrategy.hpp */,
				5D9D41399A2F476690047343 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.hpp */,
				542C9022D93A4B68A37F1F8E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/longstaffschwartzpathpricer.hpp */,
				38BC7835565648D8989DD634 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.hpp */,
				80A11C120B1046D585FD1765 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/mctraits.hpp */,
				8F1302D4047E4E9192C336B2 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/montecarlomodel.hpp */,
				BC25E1E22F1947F89A3F8457 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipath.hpp */,
				6C3C1D6EBD414F85AB64140C /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/multipathgenerator.hpp */,
				6543F35D0A6649BAA8E6A602 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/nodedata.hpp */,
				42391BFAC3844BE596B01F53 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.hpp */,
				FF22544FF8DE4D38A6344ACE /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/path.hpp */,
				C55BAE076F3D4669B1FB0A97 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathgenerator.hpp */,
				2D70FBB3C9A540DFB5BC398D /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/pathpricer.hpp */,
				DA4B5010EEDD48AC9DE145CC /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/sample.hpp */,
				1A21B1DFE313488F9CE5544A /* /Users/heiner/git/QuantLib/ql/models/all.hpp */,
				361A1E2A3E3E4F54BE6E955E /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.hpp */,
				C18C072594FE42D381C3A8A9 /* /Users/heiner/git/QuantLib/ql/models/equity/all.hpp */,
				8E2BF47EDE494D8A9C30F8CB /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.hpp */,
				A70888817AB543E48C1DC234 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.hpp */,
				AD478E4B54594A148BB2567A /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.hpp */,
				5B3106B25983491FB5285DE6 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.hpp */,
				8643B11415134C2D8B4E6468 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.hpp */,
				D26E1F04B62946E98B810825 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.hpp */,
				109E365924504EDE9A2BD960 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/all.hpp */,
				35F4DBE470914F1F9436A55A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerator.hpp */,
				5810EA125C2845618E449F35 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/all.hpp */,
				E865D7B2CE3541CDAC620A3F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.hpp */,
				D6340B6412BE4CF58EF872A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.hpp */,
				47640667A2C642619A75A505 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/all.hpp */,
				BF051AF4297448C5833026AA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.hpp */,
				F6857F3CB38742AEA5B5B66B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.hpp */,
				EB90710828C64C55B0CB4821 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/exercisevalue.hpp */,
				C7C5FF51EDC04F23A5720E39 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.hpp */,
				77159EF635664CF5B57C4F1C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelbasissystem.hpp */,
				EB25C422FFDF4196A76828F2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/marketmodelparametricexercise.hpp */,
				6036D10558124201A7D046BE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nodedataprovider.hpp */,
				590F201A707E4E809F1928D6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.hpp */,
				86C4DF5A0EF64180A76BF55F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.hpp */,
				95560CED36094D2998D088B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.hpp */,
				1A12974C2FCB4EE783F348CD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.hpp */,
				63A7CC953D9F4C99AE869C6B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.hpp */,
				46A4930A53F1467AB61863D6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.hpp */,
				B2D2BD85532D4C669EF331D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.hpp */,
				73F2CF6A175142A29DC45683 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/constrainedevolver.hpp */,
				4FDEC5658E2140A29ECC850E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/all.hpp */,
				578C2C6AC2FF4FD7B5EAF44E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.hpp */,
				9DFB83D828064F8DB2AC4A3E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.hpp */,
				E25A45CA3EEF48BA90B3B492 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.hpp */,
				A5713BDABD27416A8394DF7D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.hpp */,
				62627729D31F4421834C9D1F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/all.hpp */,
				34636571D6F24192A5D7C74D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.hpp */,
				F53517174B364F8FBF384D99 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp */,
				5636E00EF80A49269686D7AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.hpp */,
				EC16FB7FB0BC4085A72FB966 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.hpp */,
				34A1CE9239B54918AFD926A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/all.hpp */,
				3F0A5EB7FA2A42E3BF0EAB37 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.hpp */,
				A39583EE04CC40059A6DC702 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.hpp */,
				6679B19A13FA48238E91E4A1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp */,
				152C9BA82B1B4792B6BC2518 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.hpp */,
				EBCFCFB0A1B142AD85150CA0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/duffsdeviceinnerproduct.hpp */,
				774751A4BF044D7DB42D18AE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.hpp */,
				5012937909954DCD9A4A94F8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolver.hpp */,
				E94CAC1FA4584E49B05263E8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/all.hpp */,
				CD36B2B92D404DFA925E056C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.hpp */,
				E47C8B229D85406C9D5B47D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.hpp */,
				1E3C2688CF5949799EBE49F0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.hpp */,
				7BB20559F7584AAB892E03C4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.hpp */,
				6191E18A3F7B4FF9AECD84AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.hpp */,
				87C44D3F331E45CDB5DCC065 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.hpp */,
				FF3479BF062D4C62ABC9E745 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.hpp */,
				8E082CA0612E4620A5F41161 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp */,
				5C6220482ADF4CCBA46BA09C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.hpp */,
				D124E5D036F6404DAD963BB5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.hpp */,
				64F803C347824C81BC3AE66D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.hpp */,
				E8AF2AD378014949AE82150C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/all.hpp */,
				51A9B8693C9C42DAAF79FC1E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.hpp */,
				4B2D47F9A103482DA1CE4383 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.hpp */,
				BEE758B59CFD4CA38B80338B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalforwardratesanalysis.hpp */,
				D5C16FE44D96443F949F97F8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.hpp */,
				E99A1451E88F42A1B35474AF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.hpp */,
				60EADF64C4FC41A08BEC2FDA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.hpp */,
				FEE6DB57B8214465B20C4D72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.hpp */,
				DC11E6D8F86845CBA34ECFC9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/all.hpp */,
				5ADA72AABB2B403E82133BFF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.hpp */,
				062BFB7F77964D49A1A7DDDF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaform.hpp */,
				9BD2EE5156E742ACB42F61E5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.hpp */,
				FABFB2CFAB51459B94D8F602 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.hpp */,
				B9F3A226A89A426E8F4C8507 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.hpp */,
				A5BB170CD367402C92D8478E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.hpp */,
				EC50D95183754F51BD429BC7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.hpp */,
				21FEA4399AF84481A1C4A3B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.hpp */,
				F553200DC7D04ACE896EAC7D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.hpp */,
				8612F9BF9F514F0DB717DCD7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.hpp */,
				8A795306CF474603ADB0E6BD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.hpp */,
				1B3C0DBC7CEB4FF79E8CA230 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.hpp */,
				5B941474E1F649E8B45D1906 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.hpp */,
				619A866067E240AE905047E8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.hpp */,
				78E9838433744607ADEB3CAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.hpp */,
				CC7EC90E51174E7B91304BFA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.hpp */,
				607C0538CEE24F8A96192E2D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.hpp */,
				3A7BA5711B3C4A7998C9F312 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/multiproduct.hpp */,
				51D09216064146E2B4985B19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.hpp */,
				9E2546AC6C9C4075B91F77D8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.hpp */,
				2EE65F3899484069A84F4EAA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/all.hpp */,
				0327A1C740E54D04B67318E3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.hpp */,
				9CE2109D7FC7484787A0ED74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.hpp */,
				7B9F3CCC6A9844CB9443626B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.hpp */,
				4626BD3F84734992B908F069 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.hpp */,
				CC2D8B640E114521A2A7142E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisemultiproduct.hpp */,
				7D0B4F21EAC243DEAB393186 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/piecewiseconstantcorrelation.hpp */,
				6199151913804A039926902E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/all.hpp */,
				4C6A4C2CC92B4861A2761DE5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.hpp */,
				BF597126D2CD48C0B88FD74B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.hpp */,
				4C8E769131C741E3A738CBD9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.hpp */,
				88E7D3678404495C982E864B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.hpp */,
				C858008CA65243A5A1CF84CF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/all.hpp */,
				40EBE8CDAC7240BA91E3E9F6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.hpp */,
				A695EC07AE1E47478835831E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.hpp */,
				D05E325A6FC24EE0914D3A92 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.hpp */,
				2F7D9BE9B66C4D5E97706E58 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.hpp */,
				BC186081314641D9A992AE74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.hpp */,
				6FAF2DE888DE448BB465F99C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.hpp */,
				4ED50241ADE5442A83E29633 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.hpp */,
				E4B96CE8CB3C4FA797ACF49D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.hpp */,
				F0A0BBF8FD614C24AEABDA86 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.hpp */,
				4710C5E504A94BAE9A6DE668 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.hpp */,
				674CCDE8F71943198E6E237D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.hpp */,
				9F76620D698546CFA192A1DD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.hpp */,
				0DEB4AAC33A2451B82077D57 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.hpp */,
				F26FC54ED7DC43E49E5314D3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.hpp */,
				F582207E402542D89555D0C3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.hpp */,
				4807AE3235404AB0A3D5C9C1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.hpp */,
				0B1DA786A0124B178A1BC820 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/all.hpp */,
				A920686D070C4467AC3C4411 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.hpp */,
				698B0D9D29A44C90AA960A54 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.hpp */,
				AB0DDEEF39714A40A539D143 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.hpp */,
				E2C7D4444DB14BC087D60F12 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.hpp */,
				18FF6560275A4BCC8FD006F3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/all.hpp */,
				AB5DD6C6F2D7439BB911D268 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.hpp */,
				BC59BDD31FC34390AC6EAF5D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.hpp */,
				7E827C498238405384CC8BBD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.hpp */,
				631A0B0C63CA4A4993C09397 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.hpp */,
				286B95DFC87F4522BFE44B1B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.hpp */,
				C16B49A2DC5142198AF3F470 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.hpp */,
				A56E95CA204344BCA0244F2E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.hpp */,
				E6F08A40D1304395AFB069CC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.hpp */,
				93B69819C8C94D6388A04A0E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.hpp */,
				1978CBAF1682451BA6B2012A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.hpp */,
				FF3F527D6E064408803B13D0 /* /Users/heiner/git/QuantLib/ql/models/model.hpp */,
				F2E54603B98B4D419761A72A /* /Users/heiner/git/QuantLib/ql/models/parameter.hpp */,
				E58861BDE79D44699C0DB610 /* /Users/heiner/git/QuantLib/ql/models/shortrate/all.hpp */,
				8A645F3B8A9547D3BA4CAD65 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/all.hpp */,
				5D7A195224904A2AAFA34D7C /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.hpp */,
				614A15481DCC45FBA0EA0BB6 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.hpp */,
				ABCDC3C9862544EA99FDF5BD /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.hpp */,
				4F70825A936247A7A59B262B /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/all.hpp */,
				6ADCE3CE07674FE3A0A27949 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.hpp */,
				AFCBD89783DC457BA71F90CF /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.hpp */,
				940B636C313943B59283F241 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp */,
				A80D038FC5ED4AB4AD5CD69A /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp */,
				F9EFD56C4157488AAA03F9F4 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.hpp */,
				CC2486FB46F447E5A6BB8CF7 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.hpp */,
				D802FE11F74745C094018280 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.hpp */,
				541AA9FEF8384FBBA0EB963B /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.hpp */,
				B59DDE1136BA4041B2F5DFFE /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.hpp */,
				ED54E48ACD924E3F923B753D /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/all.hpp */,
				0E1091FD26EB4169BFD25E2B /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.hpp */,
				45E06764CC6147159591BB5E /* /Users/heiner/git/QuantLib/ql/models/volatility/all.hpp */,
				FEF562EAD37443E2A5E9A41A /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.hpp */,
				0617D32EE45941B5B65F3080 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.hpp */,
				277ECCA020CE41FA9E6EA0DF /* /Users/heiner/git/QuantLib/ql/models/volatility/garmanklass.hpp */,
				6DCAD1C959894E998BAB9CAE /* /Users/heiner/git/QuantLib/ql/models/volatility/simplelocalestimator.hpp */,
				A1BAC17565A64779902E7A1A /* /Users/heiner/git/QuantLib/ql/money.hpp */,
				8C6061BA68D04CAA923786C3 /* /Users/heiner/git/QuantLib/ql/numericalmethod.hpp */,
				318A5175B91C47779AD83751 /* /Users/heiner/git/QuantLib/ql/option.hpp */,
				1B941B942908450E8021C1C7 /* /Users/heiner/git/QuantLib/ql/patterns/all.hpp */,
				94415481E20547859B499770 /* /Users/heiner/git/QuantLib/ql/patterns/composite.hpp */,
				06AA987CD3E24FDB939655DE /* /Users/heiner/git/QuantLib/ql/patterns/curiouslyrecurring.hpp */,
				F6F51814C1B14A95ACAD80BB /* /Users/heiner/git/QuantLib/ql/patterns/lazyobject.hpp */,
				0EB97ADDA08544648488B97D /* /Users/heiner/git/QuantLib/ql/patterns/observable.hpp */,
				02DC1D5F54FC4572AC6C9D32 /* /Users/heiner/git/QuantLib/ql/patterns/singleton.hpp */,
				1D59932B7FB04E54B9A0865B /* /Users/heiner/git/QuantLib/ql/patterns/visitor.hpp */,
				CB1D060ED8234D13BD01449A /* /Users/heiner/git/QuantLib/ql/payoff.hpp */,
				5A63D2B97549496D8C4B9164 /* /Users/heiner/git/QuantLib/ql/position.hpp */,
				9F4A5A047E634345A99F9D8C /* /Users/heiner/git/QuantLib/ql/prices.hpp */,
				E7B99A6DDBD44D93865B2B7D /* /Users/heiner/git/QuantLib/ql/pricingengine.hpp */,
				886EADD8576B41D3BD3AABF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/all.hpp */,
				7EA8C32A9C714A0593A1799B /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.hpp */,
				640A7D17D83F4095898DBAD2 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.hpp */,
				6D56E204287048FEA24F40B2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/all.hpp */,
				A055D9FEA8B74F24BB5B4073 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.hpp */,
				311D71C6FE4845DF84B5C627 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.hpp */,
				327BD098D98548E7988819A1 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.hpp */,
				6CB81C402E7B405A9A38B0C4 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.hpp */,
				3793FCC26C784272BE429665 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.hpp */,
				BBD5940FE7554E59BAD4D865 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.hpp */,
				5C81D711743944F8B5050DB4 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.hpp */,
				E2040684F77B492DAA7F7DA2 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mcdiscreteasianengine.hpp */,
				E2ACAC07B2644FAE94CC07F0 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/all.hpp */,
				55664950830143D895C43365 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.hpp */,
				4895DA24EE6F46A5A6E5AB99 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.hpp */,
				417C7599EDD04214B07CBBDB /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/binomialbarrierengine.hpp */,
				13287E20AAA745D2A4ABD803 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.hpp */,
				2EC31C91FD6941B8BDD80C62 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.hpp */,
				F8DE5BA863D24CE196BB6729 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.hpp */,
				8DD6F43D14034E7FB19D2921 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.hpp */,
				47CB28B18F1E4D32870EDE68 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.hpp */,
				1BDAB7D32A1E41C2BAFB0CFF /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.hpp */,
				17D622A8777E4C12946C0D1C /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/all.hpp */,
				070EC5AE6CB34007A6AD5AF5 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.hpp */,
				5ACE8D79C91C4AF48B9DC3A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.hpp */,
				25576BC27A694C1E8068848B /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.hpp */,
				1E0289D85DEC412789817356 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.hpp */,
				68F327A63A6D4C2388F510A8 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.hpp */,
				1BF88BE5FC6D4D6588C432F7 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.hpp */,
				DD9A7E3DA36340DFB9BE444B /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.hpp */,
				BAC6949F392847CB8C648730 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.hpp */,
				DB33C9F418A0473283A1B1BC /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/all.hpp */,
				809B732F5A0F445BB7361F0A /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.hpp */,
				39714402DECF440AA901D88D /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.hpp */,
				54F4BEB5F2F44BA3AFC6CEAC /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/all.hpp */,
				7E03026F16094281ACBA819F /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.hpp */,
				96B984B5B3604CC99F1AAADC /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.hpp */,
				5CB37447CAE442F79A2B9090 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.hpp */,
				D718CCCF90974573B2E49F9B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.hpp */,
				99EE3F63D2FE4989880D573B /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.hpp */,
				F1B7B8C859534C1FA130417D /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.hpp */,
				A6B1E0104B37495BA3806EBF /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.hpp */,
				E460B05EFE9B46BC8227AA9F /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/all.hpp */,
				ACC78179E4E049F7B0F66548 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.hpp */,
				E7DF0FAE8DBC484CBE0C24F1 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.hpp */,
				84F473323FA6496390933A39 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.hpp */,
				AB2F5488967347C1B97464CF /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/all.hpp */,
				82E60D02318345A79EB99F82 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.hpp */,
				0767A8D0CC8C4E22B862A887 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.hpp */,
				DA6C2A3B3F9A49DC830CDCFF /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.hpp */,
				8BE651789CA641F6A1ECE32E /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/all.hpp */,
				88B44CF942414C55952FD030 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardengine.hpp */,
				33E806DDE24142ADBEDC5891 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/forwardperformanceengine.hpp */,
				DC271D524B664F07B09B56A8 /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/mcvarianceswapengine.hpp */,
				0C51BA99EE9C4A5D9BFA89DE /* /Users/heiner/git/QuantLib/ql/pricingengines/forward/replicatingvarianceswapengine.hpp */,
				BF80F97BB4584331B05465A6 /* /Users/heiner/git/QuantLib/ql/pricingengines/genericmodelengine.hpp */,
				30694997B8584B10A0826275 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.hpp */,
				DD21D378B9E545E9B1651A6F /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/all.hpp */,
				25290A78FFB24C45825E3FBD /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.hpp */,
				F6BF241FB63949F0AE12DC6D /* /Users/heiner/git/QuantLib/ql/pricingengines/latticeshortratemodelengine.hpp */,
				1153CF3298AD42D48B83BF52 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/all.hpp */,
				6DF4A73C459440B4AA0EA3E5 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.hpp */,
				55564DEC7BFE4AA4B38C7FB5 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.hpp */,
				71A484A517F84F00B35A3834 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.hpp */,
				F25D78948D0547D68D754ADC /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.hpp */,
				ACDDD40EDBF84DA0B962A0F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/mclongstaffschwartzengine.hpp */,
				B4E34BA846F945ACBF2C469A /* /Users/heiner/git/QuantLib/ql/pricingengines/mcsimulation.hpp */,
				EECDFEBF1E2D44EFAD23EB08 /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/all.hpp */,
				258F9622D6AD4983AF1BBD66 /* /Users/heiner/git/QuantLib/ql/pricingengines/quanto/quantoengine.hpp */,
				52C8DE6733FC41D689D7FD39 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/all.hpp */,
				595EEE26C03A4E9A8BB2E133 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.hpp */,
				A03A0A3EFE9047F7904439E3 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.hpp */,
				5BB4E8C7266E4C939F4BBD9E /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.hpp */,
				31F05562E2F649A2B10A1447 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.hpp */,
				63830BA6F12E4EA8A315351D /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/all.hpp */,
				CD7CCFB59D784E7D86AACF87 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.hpp */,
				EEAFF26C659C4CB297EBB5E5 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.hpp */,
				D9B1DD1143AB4D4493834841 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.hpp */,
				9AC96ADFD0F8408B8C92771B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.hpp */,
				A1B6ECCFAD3E4AC186D7675E /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.hpp */,
				38F5C033EC64452C925B67D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/g2swaptionengine.hpp */,
				23C85294BAFA486987D90A1C /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.hpp */,
				E51CF59DFBEB4ABE983B4F66 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.hpp */,
				788A84BFD86D4562935FBDF7 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.hpp */,
				CFBE5E80243146B6BE365402 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.hpp */,
				162F402629504B21A9C17BBE /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.hpp */,
				0CFA683DC7E64243B713A954 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.hpp */,
				5BA4D725CFC3474BA8847F98 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/all.hpp */,
				1E8D6F40892E41F59FD3AAE6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.hpp */,
				3B443E1EFBAA49FE97D0327C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp */,
				4F6F8023CFEB4976BD13F42D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp */,
				28E3341DB513477394595B96 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.hpp */,
				1C606E38E4E24EDD9378D4C9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.hpp */,
				979B49FD37364480A7864742 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.hpp */,
				7F39596FC2D84B38B700E06F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.hpp */,
				5F00E3C6844141D693229D21 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.hpp */,
				EBE1072F57D045FEB6144B2E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.hpp */,
				C9DBCA7DEDED46D8B52B74C5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.hpp */,
				4F023923B992471A9B5C9590 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.hpp */,
				AC8C1A51F2964293ABEAE9C4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/binomialengine.hpp */,
				55D4AAB70B87440D8C0DC9D5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.hpp */,
				CAF901D04E9B44438E541BB7 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.hpp */,
				E9733B5F074C4ED6BA8DDDBB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.hpp */,
				82FD57C228B64CC48C0779AE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdamericanengine.hpp */,
				5D802B39A52E4DF8A166DE5C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.hpp */,
				F5099B0087854DF0880E9C31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbermudanengine.hpp */,
				9B27AB6A49DB4D9C99B5A580 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp */,
				62675524BE8F4F48937C36E8 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdconditions.hpp */,
				E2BB2A89F14B45748065C774 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendamericanengine.hpp */,
				194748692F7241F39417B7AD /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendengine.hpp */,
				158ADE4F9CAF48788D312BFA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendeuropeanengine.hpp */,
				7E8CFFD70BA442F6AAC4B2C2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fddividendshoutengine.hpp */,
				43B4FB05A2A04310B9F0EA08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdeuropeanengine.hpp */,
				0C9B86B7519C4DB599E25897 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp */,
				32E518B6AD5D4A92B2CAA9D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.hpp */,
				A317E3CCAACA4331A5718771 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdmultiperiodengine.hpp */,
				FEDA3FEC565845518E6EEB8E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdshoutengine.hpp */,
				BAB2C7FB650C4E3E8BA1FE85 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.hpp */,
				A35A9DD41F1B48DDA5831665 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdstepconditionengine.hpp */,
				A91F9D2A950743AE8FD61E77 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.hpp */,
				4A7025838AC547D680DED3B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.hpp */,
				29D024E53F594D8490FDDAA6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.hpp */,
				01E2693384B8469B8D3822B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.hpp */,
				790562E63F694154AD1B6F08 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.hpp */,
				96CFCB310AC44FA3B2AB7C30 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.hpp */,
				228FCAED1F154A399EE96223 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.hpp */,
				09C9025E5E9F4A3FB4F61DE1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanengine.hpp */,
				201E4D7B7B784508BD2DA66A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp */,
				A1210AD664C64FE7852D1EF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mceuropeanhestonengine.hpp */,
				AD68BD7F5C9646DB97CCDC3B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.hpp */,
				F85CB12C80C54EB5A75948F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcvanillaengine.hpp */,
				40AC7642EA1B4D4C80B6DD99 /* /Users/heiner/git/QuantLib/ql/processes/all.hpp */,
				0A8186B7507F479DBE125A43 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.hpp */,
				D05492FA17AF4D21B4FA675E /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.hpp */,
				9C0C5ABF44E04A64B1B865C0 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.hpp */,
				44B56B56A4EF4311B8388EDF /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.hpp */,
				1E92A33A962840EB97EFD6AB /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.hpp */,
				A8AF68569ED9444DB3967852 /* /Users/heiner/git/QuantLib/ql/processes/g2process.hpp */,
				27CBA35F8F4A4EB798185030 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.hpp */,
				F4D7CCB2AE70451186C58559 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.hpp */,
				836367A2C3DD4774BDC5154F /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.hpp */,
				7FA37CDA71374F799176D071 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.hpp */,
				53EB17ABCDD84589988DDC0A /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.hpp */,
				AEEC24CFE96842789B77C16A /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.hpp */,
				722E03A22CEF4F09B378DB67 /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.hpp */,
				502C964FBE114C0D938D40A9 /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.hpp */,
				2FA8F747779649409865E5B8 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.hpp */,
				993157148F3C47599B3E9E89 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.hpp */,
				9F0D6A38B4A348F5AF20089A /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.hpp */,
				E3D17A97AFC64A6F9ECCE544 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.hpp */,
				32E7705A5BBF497EA52D8B2B /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.hpp */,
				C66A1771BACD4D6B85DAAEAC /* /Users/heiner/git/QuantLib/ql/qldefines.hpp */,
				B4D7DF7E99B54A5995A169EB /* /Users/heiner/git/QuantLib/ql/quantlib.hpp */,
				2705463F5F8E48B1A23CED31 /* /Users/heiner/git/QuantLib/ql/quote.hpp */,
				84D47A93E4904F31A43DF1A9 /* /Users/heiner/git/QuantLib/ql/quotes/all.hpp */,
				856BAEFE419E493AA3B22006 /* /Users/heiner/git/QuantLib/ql/quotes/compositequote.hpp */,
				C000305B6D38444E8F25E926 /* /Users/heiner/git/QuantLib/ql/quotes/derivedquote.hpp */,
				10E6EC52D09C4787926CAAEF /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.hpp */,
				09A43A9AB6124C5B80B57731 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.hpp */,
				A12882EAFD7D4A3D8FB7EABB /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.hpp */,
				5AEE07C22122489692C11EEF /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.hpp */,
				53E481A0CC3049CC9A45F3B3 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.hpp */,
				33577D7A56C04BF78065BB68 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.hpp */,
				0DF3D3B6875A4BC09C950C86 /* /Users/heiner/git/QuantLib/ql/quotes/simplequote.hpp */,
				F2B2BF3AA94D483D8A5E87EE /* /Users/heiner/git/QuantLib/ql/rebatedexercise.hpp */,
				DBEC4D85F81342E8B450D9D4 /* /Users/heiner/git/QuantLib/ql/settings.hpp */,
				0B8E6AA990A640C2AB484639 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.hpp */,
				ACBB973FB15C41B598016E8B /* /Users/heiner/git/QuantLib/ql/termstructure.hpp */,
				5408D807481742148C5CAFE7 /* /Users/heiner/git/QuantLib/ql/termstructures/all.hpp */,
				9F77D48FA5EB441EA70B016B /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraperror.hpp */,
				B8CA9CA7AB7E488A81E77707 /* /Users/heiner/git/QuantLib/ql/termstructures/bootstraphelper.hpp */,
				BE543F179BC646AD9FE846F8 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/all.hpp */,
				EAC6E7F6A65B4C13B4C20384 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.hpp */,
				93DB0DDA5B94431AA1D064F6 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.hpp */,
				38ED1512D07044BFAB52FAF2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.hpp */,
				40FD31A5941E4324A13981B2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.hpp */,
				8829404B47674E4DA465A4F3 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolateddefaultdensitycurve.hpp */,
				CD65A1289EA84479977E9841 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedhazardratecurve.hpp */,
				D3DF01CE85524892A08E2417 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/interpolatedsurvivalprobabilitycurve.hpp */,
				A84E09AA5DEE42449B9EC56F /* /Users/heiner/git/QuantLib/ql/termstructures/credit/piecewisedefaultcurve.hpp */,
				1D4F761281EC458EBA3FC188 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/probabilitytraits.hpp */,
				F15C2D8F2B874F88AFF0CF68 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.hpp */,
				BBEA55E18A8F443CB93F0BE0 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.hpp */,
				59CEC9D6610940AEAF26147E /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/all.hpp */,
				17BD6BB578C24F07852F92DA /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.hpp */,
				D70E3F747605443D96BB0F64 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationtraits.hpp */,
				340A9337212F40FF9087AB03 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedyoyinflationcurve.hpp */,
				BA10932859B94C22BCA38CE3 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/interpolatedzeroinflationcurve.hpp */,
				BDBA9E6A046C487CBE26FB76 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewiseyoyinflationcurve.hpp */,
				C966D6D26E624106A29049A3 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/piecewisezeroinflationcurve.hpp */,
				0901712FDDD84CEFAEE50BDD /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.hpp */,
				525D2BB0B09B4FEEB9425772 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.hpp */,
				029322324E834A8BA6CB84A9 /* /Users/heiner/git/QuantLib/ql/termstructures/interpolatedcurve.hpp */,
				4BC0576E3CAA47FB812C51B4 /* /Users/heiner/git/QuantLib/ql/termstructures/iterativebootstrap.hpp */,
				141305CEC70349C3801E082E /* /Users/heiner/git/QuantLib/ql/termstructures/localbootstrap.hpp */,
				A7C4463A859B4BCC8F2A2B56 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.hpp */,
				E1AF042C79AF466E84ECE0AB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.hpp */,
				AAF1A377759C42D2A195840F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/all.hpp */,
				733F24C9F4D94879A4C681E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.hpp */,
				BDB49D3066194EF8B483C700 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.hpp */,
				BD5CA40902C847A495C1EF1A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/all.hpp */,
				21FD3A72E1E14D729338694B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.hpp */,
				7C1ED98A15284BE18E9626DB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp */,
				4EE98437B63F40AF9396AAA8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp */,
				2FEF6F1835C6406BB065EBE8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp */,
				A8E580EAE7194B4987B8EBDB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/all.hpp */,
				7702F42E044C4ED48CCBA7B8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackconstantvol.hpp */,
				58F3BB9116AF49E190E9E909 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.hpp */,
				5FD5BD5FF5224C82A5FF68DC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.hpp */,
				8727BDFB066046E090D97C5D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.hpp */,
				BC7459EDA652483485CAEECA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.hpp */,
				51D4AD4A35A345D4803E1A4A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.hpp */,
				440061824118437C868D00B6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.hpp */,
				19657A3F208E4DDAB24B503F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/impliedvoltermstructure.hpp */,
				6EB668C6165D40CF9E6B176F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localconstantvol.hpp */,
				05E88395DD174CA98A0BD970 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolcurve.hpp */,
				32D9F5D2A740485FA56E09F3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.hpp */,
				7DDF87A1AB2C44B1AF335DD5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.hpp */,
				AAC6A260398F41959098B861 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/noexceptlocalvolsurface.hpp */,
				2CB0011778AF47C8AC4E7236 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.hpp */,
				685B8ECA80974B049D1DFFA6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.hpp */,
				7CE1AF8D31E44B259E87F1D4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/all.hpp */,
				7295087C779B40B28D5F2469 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.hpp */,
				BDC337B2B3CC4E7CA54E6EB9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp */,
				92D9D433A29B4F3CB13ACE06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.hpp */,
				EC7E18E6E0604F94984B94A3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/interpolatedsmilesection.hpp */,
				F3B7B3D71C1C45CC9F9DE6A8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.hpp */,
				540B514D47F54C899E8277CC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/all.hpp */,
				56529BFE0FB046549E1896D2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/capletvariancecurve.hpp */,
				D9E102131605421582AD33E6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.hpp */,
				73C02D0D3E2F4FCA875CA298 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.hpp */,
				8E00FA84472B467F9CF58425 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.hpp */,
				40FAF780C8174D9FA0810F11 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.hpp */,
				27E7258449C34545901D8A08 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp */,
				501351F95F88420CBBF47040 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.hpp */,
				94415D00F71741AC831F6086 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.hpp */,
				2E017730D8FC434C8BDD62BB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.hpp */,
				8EE90EFE150743658006FFFB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletbase.hpp */,
				68B408BF78834453B1DFD2CB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.hpp */,
				23519C8081EC4D3184F705C8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.hpp */,
				D0D457BADED04EC396308F35 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.hpp */,
				400423A5BA5A4729A0ADE283 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.hpp */,
				1351B8912C9047ED83BFBEB3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.hpp */,
				528D99A56F324B1BBD8070B0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.hpp */,
				88D6086DBB1B4A3E801BD31A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/all.hpp */,
				B83A182C7D0E4547A37F37C7 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.hpp */,
				39C6DA8CFB854F7392297E3B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp */,
				BBB4FA942D1D49A293E3C14E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.hpp */,
				CCA2F79442154547B1F7DB31 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.hpp */,
				86DC9ED4833B48D9B09084AA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.hpp */,
				758F4CCA0C8841DDBC262157 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.hpp */,
				1C2893E3A57F4F939985DD3A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube1.hpp */,
				11977EFA932D47F283F93703 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.hpp */,
				77ECA370D4FC45299583AED9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.hpp */,
				0D559E8C96C84DEE8A590B46 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.hpp */,
				08C545FD49E149B7B728925C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.hpp */,
				654F914828384694A3BB4500 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/volatilitytype.hpp */,
				3C4AA880C46D4928895FA593 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.hpp */,
				D3A3CE421AA64B4F804BC1B1 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/all.hpp */,
				7F9AB7AD2D994EE0A07D53CB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.hpp */,
				CB2270382F424FB2842A1B8E /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bootstraptraits.hpp */,
				721DA31CA95E4AABA58A2DF9 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/discountcurve.hpp */,
				D8754615BDE54FF481184F19 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/drifttermstructure.hpp */,
				5BB4087B382C4351B1AE4D12 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.hpp */,
				FDE1E8DEBF484F6182E9547F /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.hpp */,
				85CAFE3A8B2B432AB53E5334 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardcurve.hpp */,
				8015F3AB65C24791812B13D8 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardspreadedtermstructure.hpp */,
				988FE36311814D35973657BB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.hpp */,
				C1BD392DF4194B18BA41A26C /* /Users/heiner/git/QuantLib/ql/termstructures/yield/impliedtermstructure.hpp */,
				9B0BBAA5ABA845CC885B2D90 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.hpp */,
				670CC737DD594D94AEB9FFB2 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.hpp */,
				21BCD6EC82EF4518BD6981E8 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewiseyieldcurve.hpp */,
				FAFB5A9A76254A76A057032D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/piecewisezerospreadedtermstructure.hpp */,
				8D628C15B7D6435EA7AA30E5 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/quantotermstructure.hpp */,
				28504A1421124447AC3428A3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.hpp */,
				4A265F4D97FF4D1FA09BA6A3 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerocurve.hpp */,
				2DD6B6F8B4B743ECB743F7D9 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zerospreadedtermstructure.hpp */,
				DBC49BED7438495E9393C58D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.hpp */,
				50EFF9FCEC3F40B2AD04E1F6 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.hpp */,
				CC4967E508154FB8957494B1 /* /Users/heiner/git/QuantLib/ql/time/all.hpp */,
				FA450171CABE48F4AF951DA9 /* /Users/heiner/git/QuantLib/ql/time/asx.hpp */,
				8380236999BE4088832ABE5E /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.hpp */,
				F649D97EC38D4FA9A3F380A1 /* /Users/heiner/git/QuantLib/ql/time/calendar.hpp */,
				5CC2B1D279C3417086FC4708 /* /Users/heiner/git/QuantLib/ql/time/calendars/all.hpp */,
				5468D5BB4FF04A2E8B0DDBF8 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.hpp */,
				A3113CE82013413488013242 /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.hpp */,
				02BFF3F762194489B8569D6B /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.hpp */,
				C86E0F54245A4096A0475A3A /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.hpp */,
				072A5694A1C04E8D94ACF486 /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.hpp */,
				7BD86FA885EB4FB0B442755C /* /Users/heiner/git/QuantLib/ql/time/calendars/china.hpp */,
				C7C4E7C03C7049DEBAAF0655 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.hpp */,
				5C59A2DBBD1141EA909CB21A /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.hpp */,
				FAE7D81084F8492FB38A2F0E /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.hpp */,
				368F8ACBB302421289E0094E /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.hpp */,
				6BEF5E494217466C81DD3F94 /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.hpp */,
				BA3B2834F66F4725AD8E6FF7 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.hpp */,
				E8BA00E2F7214E41A12B2A78 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.hpp */,
				940D8049597040E9A4382AB1 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.hpp */,
				44548468C5E44F90A0AFD3DB /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.hpp */,
				6D922CB38627436CB301C1E4 /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.hpp */,
				722F95F15D314954A3BA8F32 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.hpp */,
				FD44CCF03BD246FEA6127860 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.hpp */,
				0CC6EBC81A844D5AB29BC7CD /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.hpp */,
				C03C2F5E620542A5A96073FD /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.hpp */,
				6AD428D8FC774159912BF14E /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.hpp */,
				B50F0F3B039945A4A117AC68 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.hpp */,
				413964FE234D4DAAAF615565 /* /Users/heiner/git/QuantLib/ql/time/calendars/nullcalendar.hpp */,
				D8A60C65E6C54331A8450AEB /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.hpp */,
				E76D81957C214476AC7333D9 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.hpp */,
				CD441640113542B6964B7CA6 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.hpp */,
				B40CB3E2AC8D42B886165202 /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.hpp */,
				5ED80E79B0D64A7E89928EF4 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.hpp */,
				3E9AF4D482AF434494C2DA8C /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.hpp */,
				AF133D2B4C364D9A92D8D628 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.hpp */,
				61A260A49E994164973E6677 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.hpp */,
				07730F327D2148778E27BC64 /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.hpp */,
				06325119384F4EC6B78A6391 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.hpp */,
				D9A35A9C586F44839A51DF3D /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.hpp */,
				6D56E9FE9DDF4D16A6015D4F /* /Users/heiner/git/QuantLib/ql/time/calendars/target.hpp */,
				3F5AF2385E8745DD9164E051 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.hpp */,
				D90E8A66EE2149EB8F4A296E /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.hpp */,
				F3C45C38C1814C1C8E09DCC0 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.hpp */,
				96D198B715BF4BD29C806AE5 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.hpp */,
				925B98FF185B49C5A5D1DE0E /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.hpp */,
				1F4715E73C0F496DB25A59E0 /* /Users/heiner/git/QuantLib/ql/time/date.hpp */,
				7DE1B6578B0440D496822331 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.hpp */,
				D9E981E9738E4A3C9ED8928E /* /Users/heiner/git/QuantLib/ql/time/daycounter.hpp */,
				97E141527687463891252911 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual360.hpp */,
				8DAC4D819290459B807EC371 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.hpp */,
				C3D5EF54BB1D4B1AB079333F /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365nl.hpp */,
				16780108D19F433B987B756B /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.hpp */,
				F73D239006734A41AC271111 /* /Users/heiner/git/QuantLib/ql/time/daycounters/all.hpp */,
				62E2FA9D2AF84604B5C61190 /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.hpp */,
				58845B5754E04C8891AF2941 /* /Users/heiner/git/QuantLib/ql/time/daycounters/one.hpp */,
				A0E451610EFB45F3B69B93D7 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.hpp */,
				81BB97B8ADA34D56970F91DA /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.hpp */,
				9105F87F7B5540C09A0C795F /* /Users/heiner/git/QuantLib/ql/time/ecb.hpp */,
				6F1BBC50CA744C4581DE026F /* /Users/heiner/git/QuantLib/ql/time/frequency.hpp */,
				30842CBA6EC0495BADF9BA3F /* /Users/heiner/git/QuantLib/ql/time/imm.hpp */,
				F18FF5ED56734EFA8195BF0D /* /Users/heiner/git/QuantLib/ql/time/period.hpp */,
				23BD5765BA67424C83CB0090 /* /Users/heiner/git/QuantLib/ql/time/schedule.hpp */,
				B5A39FE90CA94DE7BCA43D07 /* /Users/heiner/git/QuantLib/ql/time/timeunit.hpp */,
				FF3901C5C7EE4F1DAD99E1C0 /* /Users/heiner/git/QuantLib/ql/time/weekday.hpp */,
				DE98755773D940C891E1425C /* /Users/heiner/git/QuantLib/ql/timegrid.hpp */,
				17EFC9C98C32447DA93A4242 /* /Users/heiner/git/QuantLib/ql/timeseries.hpp */,
				E739D98C0DC24333AA7CAA9F /* /Users/heiner/git/QuantLib/ql/types.hpp */,
				9759567A631E4300B342BD46 /* /Users/heiner/git/QuantLib/ql/userconfig.hpp */,
				1B71C9EDDA0C4916A977B694 /* /Users/heiner/git/QuantLib/ql/utilities/all.hpp */,
				94B3814AA29E4E299C9F2EDF /* /Users/heiner/git/QuantLib/ql/utilities/clone.hpp */,
				8B889276A0C948B5B0736157 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.hpp */,
				B1C1667AE1A34924B3881256 /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.hpp */,
				64145F5889C74A1DA2ED5770 /* /Users/heiner/git/QuantLib/ql/utilities/disposable.hpp */,
				13870DD916B747EAA6075EE4 /* /Users/heiner/git/QuantLib/ql/utilities/null.hpp */,
				AB5643AB4E2343A2BF65C908 /* /Users/heiner/git/QuantLib/ql/utilities/null_deleter.hpp */,
				4D3A4B4114DA46C483670A67 /* /Users/heiner/git/QuantLib/ql/utilities/observablevalue.hpp */,
				88D4D795E65E4BC89A934B76 /* /Users/heiner/git/QuantLib/ql/utilities/steppingiterator.hpp */,
				5173C9AC7C8E44EFB11E63C0 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.hpp */,
				586E2DF8FDB849888049FF37 /* /Users/heiner/git/QuantLib/ql/utilities/vectors.hpp */,
				6B2D7218B0744E899DD3A463 /* /Users/heiner/git/QuantLib/ql/version.hpp */,
				39462BF62D7B468F80B35A3C /* /Users/heiner/git/QuantLib/ql/volatilitymodel.hpp */,
			);
			name = "Header Files";
			sourceTree = "<group>";
		};
		F16712C3F83C42F2A8C0093E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				EEA2F20075004C7794583371 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */,
				C63831D2F9104D51AAEB4418 /* /Users/heiner/git/QuantLib/test-suite/amortizingbond.cpp */,
				51C5BAD1823543748532644A /* /Users/heiner/git/QuantLib/test-suite/array.cpp */,
				CA8F69DC94A24133819048C4 /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */,
				CE14ABBCC12C48D0B222E5B6 /* /Users/heiner/git/QuantLib/test-suite/assetswap.cpp */,
				F4BE630AD0404AC1ACFF4DD4 /* /Users/heiner/git/QuantLib/test-suite/autocovariances.cpp */,
				B7477FF05E0F45339ABA8FA4 /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */,
				D5F80D3EB8E2423196974456 /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */,
				CD0DA34120EA471395FD6B8B /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */,
				10FF76C76BF049E385E79E6F /* /Users/heiner/git/QuantLib/test-suite/bermudanswaption.cpp */,
				744272BC49414D058F47945E /* /Users/heiner/git/QuantLib/test-suite/binaryoption.cpp */,
				BA75B617574C4B2A994F520C /* /Users/heiner/git/QuantLib/test-suite/blackdeltacalculator.cpp */,
				B9A58F12A8764638845C9D80 /* /Users/heiner/git/QuantLib/test-suite/blackformula.cpp */,
				1E24CD04416E42919F0CEDDF /* /Users/heiner/git/QuantLib/test-suite/bonds.cpp */,
				F3FA57023A3E459895DAB52A /* /Users/heiner/git/QuantLib/test-suite/brownianbridge.cpp */,
				A74BDAE166BE4F6B98652C69 /* /Users/heiner/git/QuantLib/test-suite/businessdayconventions.cpp */,
				3402FC31560A4B24A11898D0 /* /Users/heiner/git/QuantLib/test-suite/calendars.cpp */,
				4FBB2ED3EA5A4A1FA009609E /* /Users/heiner/git/QuantLib/test-suite/capfloor.cpp */,
				5A69D90EB79F4AD69D675A42 /* /Users/heiner/git/QuantLib/test-suite/capflooredcoupon.cpp */,
				B929B6A190034AB18D3E35E8 /* /Users/heiner/git/QuantLib/test-suite/cashflows.cpp */,
				1575D82E3F8E43ADA64DB162 /* /Users/heiner/git/QuantLib/test-suite/catbonds.cpp */,
				F7E41A518F7F48E6BCA61D28 /* /Users/heiner/git/QuantLib/test-suite/cdo.cpp */,
				AC6EB7DD846C4381BEC86CBD /* /Users/heiner/git/QuantLib/test-suite/cdsoption.cpp */,
				BB727EB384C349E1A1C62426 /* /Users/heiner/git/QuantLib/test-suite/chooseroption.cpp */,
				2CE567919C5648D7B5B4000D /* /Users/heiner/git/QuantLib/test-suite/cliquetoption.cpp */,
				4ECFC630634746E2A9340112 /* /Users/heiner/git/QuantLib/test-suite/cms.cpp */,
				487C11E8C9104BB79747307F /* /Users/heiner/git/QuantLib/test-suite/commodityunitofmeasure.cpp */,
				0BA1F903974F4ABAB91DC565 /* /Users/heiner/git/QuantLib/test-suite/compoundoption.cpp */,
				FFCA88E7579C46F2885C490E /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */,
				CF9AAAB9B5C34C998C2DE93B /* /Users/heiner/git/QuantLib/test-suite/covariance.cpp */,
				DD6C4B83C23B457D965AE63C /* /Users/heiner/git/QuantLib/test-suite/creditdefaultswap.cpp */,
				77AA8F8BBE58420D864D8B87 /* /Users/heiner/git/QuantLib/test-suite/creditriskplus.cpp */,
				EF91077BE69049C094EECA31 /* /Users/heiner/git/QuantLib/test-suite/curvestates.cpp */,
				7FF67DBD77A848E798B35E4E /* /Users/heiner/git/QuantLib/test-suite/dates.cpp */,
				AF54DCDCC4FE45B1A56F507E /* /Users/heiner/git/QuantLib/test-suite/daycounters.cpp */,
				9DFE4D91398646029B9B0E0F /* /Users/heiner/git/QuantLib/test-suite/defaultprobabilitycurves.cpp */,
				98772D90C93C4DFFB340CD83 /* /Users/heiner/git/QuantLib/test-suite/digitalcoupon.cpp */,
				479E02AFB8E04E278744799E /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */,
				78B8B59617564341922ED15E /* /Users/heiner/git/QuantLib/test-suite/distributions.cpp */,
				433F8C7AB53142E7BFD152A9 /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */,
				CA6F6593373F44A1A9CC091B /* /Users/heiner/git/QuantLib/test-suite/doublebarrieroption.cpp */,
				E16A2477F38347ABA500E3D5 /* /Users/heiner/git/QuantLib/test-suite/doublebinaryoption.cpp */,
				F8D93BD52840473284B88CF7 /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */,
				3F6B28FB6846417BA49D3954 /* /Users/heiner/git/QuantLib/test-suite/everestoption.cpp */,
				2D4D849160D74F6AA216BC36 /* /Users/heiner/git/QuantLib/test-suite/exchangerate.cpp */,
				93BCA84B75F148029271B420 /* /Users/heiner/git/QuantLib/test-suite/extendedtrees.cpp */,
				C9B933142A07435A9067ABDA /* /Users/heiner/git/QuantLib/test-suite/extensibleoptions.cpp */,
				2469D118A5A244C7AC45F9C7 /* /Users/heiner/git/QuantLib/test-suite/fastfouriertransform.cpp */,
				ED794940AEF64EB4AA356227 /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */,
				99833774493843C58DC121C8 /* /Users/heiner/git/QuantLib/test-suite/fdmlinearop.cpp */,
				814243C9E34D482BBCA12C03 /* /Users/heiner/git/QuantLib/test-suite/forwardoption.cpp */,
				A1E1DA51D42C4F178BE7CE50 /* /Users/heiner/git/QuantLib/test-suite/functions.cpp */,
				7A3EB129542C459097DC2587 /* /Users/heiner/git/QuantLib/test-suite/garch.cpp */,
				D2296F44E5B242A7BA4D37E0 /* /Users/heiner/git/QuantLib/test-suite/gaussianquadratures.cpp */,
				B0C644BC651947709C1FA4E7 /* /Users/heiner/git/QuantLib/test-suite/gjrgarchmodel.cpp */,
				6416C22A727C4E46875F66AE /* /Users/heiner/git/QuantLib/test-suite/gsr.cpp */,
				2A775885FD0E44EA890C794B /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */,
				33985D914E8B455DB6074FD5 /* /Users/heiner/git/QuantLib/test-suite/hestonslvmodel.cpp */,
				E2B0D2191E864DBA8A79CC6F /* /Users/heiner/git/QuantLib/test-suite/himalayaoption.cpp */,
				2A2E665656864386B2291DE8 /* /Users/heiner/git/QuantLib/test-suite/hybridhestonhullwhiteprocess.cpp */,
				0B38904A51854BF392CA017E /* /Users/heiner/git/QuantLib/test-suite/inflation.cpp */,
				30005A0A32734CCB9C341C7A /* /Users/heiner/git/QuantLib/test-suite/inflationcapfloor.cpp */,
				F3AF4B684EB74245851F3DAC /* /Users/heiner/git/QuantLib/test-suite/inflationcapflooredcoupon.cpp */,
				60BE1324DB754C1B863F3A71 /* /Users/heiner/git/QuantLib/test-suite/inflationcpibond.cpp */,
				FCBCEF86AC3341B98BEC6C7C /* /Users/heiner/git/QuantLib/test-suite/inflationcpicapfloor.cpp */,
				680B4A091E824DBBBA605573 /* /Users/heiner/git/QuantLib/test-suite/inflationcpiswap.cpp */,
				6E0D6AE302734FE586FA8F47 /* /Users/heiner/git/QuantLib/test-suite/inflationvolatility.cpp */,
				C7FA05A78AE646658F759F82 /* /Users/heiner/git/QuantLib/test-suite/instruments.cpp */,
				24B3BB65C6E342058B6EA0B7 /* /Users/heiner/git/QuantLib/test-suite/integrals.cpp */,
				38A4988BE9F74FDCA068CF2F /* /Users/heiner/git/QuantLib/test-suite/interestrates.cpp */,
				6F3CADCF0D6C4FECA76DCB77 /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */,
				FD85DA5652C64FB1870F4CF4 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */,
				DCFB35CFE17B4C4FB7FA7048 /* /Users/heiner/git/QuantLib/test-suite/lazyobject.cpp */,
				ABB298C2236846E4AF5C70FB /* /Users/heiner/git/QuantLib/test-suite/libormarketmodel.cpp */,
				9D3A57C33B4347D89D37E4A0 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodelprocess.cpp */,
				0104665CE523438ABFA2E108 /* /Users/heiner/git/QuantLib/test-suite/linearleastsquaresregression.cpp */,
				7E7FE031534349EFBE652FFB /* /Users/heiner/git/QuantLib/test-suite/lookbackoptions.cpp */,
				A03DA38ACFCB43ACA4430B12 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */,
				31F99ECC18464B1393CFE054 /* /Users/heiner/git/QuantLib/test-suite/main.cpp */,
				DC335895F88F4BE9AB4EFA0A /* /Users/heiner/git/QuantLib/test-suite/margrabeoption.cpp */,
				83B989E82FB64DB6829058D2 /* /Users/heiner/git/QuantLib/test-suite/marketmodel.cpp */,
				21D92A1B167B44FEA012DF91 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */,
				4D8605EB1D664FC890D50976 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */,
				1DC7706AD6E54A669463789E /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletalphacalibration.cpp */,
				FB6C1685918F4F98849420D6 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletcalibration.cpp */,
				B9BD0009BD29436484889FB4 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcaplethomocalibration.cpp */,
				B4AD575F96A348C688AD700F /* /Users/heiner/git/QuantLib/test-suite/markovfunctional.cpp */,
				6D945D68541448EA86FF241C /* /Users/heiner/git/QuantLib/test-suite/matrices.cpp */,
				0100D27D15A747BFA72FF4FA /* /Users/heiner/git/QuantLib/test-suite/mclongstaffschwartzengine.cpp */,
				4417C3F694FD468AB33D554E /* /Users/heiner/git/QuantLib/test-suite/mersennetwister.cpp */,
				612BD4FF842C42B09D34D984 /* /Users/heiner/git/QuantLib/test-suite/money.cpp */,
				920977E0BB94478EBF997DA1 /* /Users/heiner/git/QuantLib/test-suite/noarbsabr.cpp */,
				557BE6E7F9564498912B04D5 /* /Users/heiner/git/QuantLib/test-suite/normalclvmodel.cpp */,
				011322B512404AFDAC3417F9 /* /Users/heiner/git/QuantLib/test-suite/nthtodefault.cpp */,
				A9A9D121A69B43E8A2584E10 /* /Users/heiner/git/QuantLib/test-suite/numericaldifferentiation.cpp */,
				493A2C37CBFD4193A48EAB44 /* /Users/heiner/git/QuantLib/test-suite/observable.cpp */,
				893E32F52FF045A39B53C20A /* /Users/heiner/git/QuantLib/test-suite/ode.cpp */,
				31E8F6FF4B8E43F9BD9FB233 /* /Users/heiner/git/QuantLib/test-suite/operators.cpp */,
				0DC260C4B6E24F5DA70A8BB6 /* /Users/heiner/git/QuantLib/test-suite/optimizers.cpp */,
				B4F3873B0F314FB19A675CEB /* /Users/heiner/git/QuantLib/test-suite/optionletstripper.cpp */,
				1E3E152024CA4AB8B871AE91 /* /Users/heiner/git/QuantLib/test-suite/overnightindexedswap.cpp */,
				80110C01DE23457F9F885C4E /* /Users/heiner/git/QuantLib/test-suite/pagodaoption.cpp */,
				7BC4E3575B714A939FCC9369 /* /Users/heiner/git/QuantLib/test-suite/partialtimebarrieroption.cpp */,
				4CD63DA209E540DF900C4034 /* /Users/heiner/git/QuantLib/test-suite/pathgenerator.cpp */,
				F9C0127AF1EA4ED99D1A9FB3 /* /Users/heiner/git/QuantLib/test-suite/period.cpp */,
				D62FAE78552C405A9581CA27 /* /Users/heiner/git/QuantLib/test-suite/piecewiseyieldcurve.cpp */,
				FE153250506C42A3A1C22FF9 /* /Users/heiner/git/QuantLib/test-suite/piecewisezerospreadedtermstructure.cpp */,
				1ED723E8F01B4537987B5E2A /* /Users/heiner/git/QuantLib/test-suite/quantlibtestsuite.cpp */,
				DA0BD58CAFEA47CE9D24E73C /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */,
				FB46F928BCE44457BF26FD4F /* /Users/heiner/git/QuantLib/test-suite/quotes.cpp */,
				E169E53EE83B418FAB4D65EE /* /Users/heiner/git/QuantLib/test-suite/rangeaccrual.cpp */,
				F0940DCE8C764052BBF7E2CC /* /Users/heiner/git/QuantLib/test-suite/riskneutraldensitycalculator.cpp */,
				1981B665750040349029E465 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */,
				75C91662FFE6433DB536959E /* /Users/heiner/git/QuantLib/test-suite/rngtraits.cpp */,
				FC65B5C30B9141CDA8B5EB10 /* /Users/heiner/git/QuantLib/test-suite/rounding.cpp */,
				C08CB5334D424344A021C737 /* /Users/heiner/git/QuantLib/test-suite/sampledcurve.cpp */,
				D8599B741C8148F8B83FCD27 /* /Users/heiner/git/QuantLib/test-suite/schedule.cpp */,
				4C61897219E54A5D88A80577 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */,
				722E1A6A859244CA85F3525B /* /Users/heiner/git/QuantLib/test-suite/solvers.cpp */,
				8B7BF05DE4DD416B93BC90D9 /* /Users/heiner/git/QuantLib/test-suite/spreadoption.cpp */,
				BF268E2861134FD5B5452B13 /* /Users/heiner/git/QuantLib/test-suite/squarerootclvmodel.cpp */,
				1BE4E779798847A5BB9D7819 /* /Users/heiner/git/QuantLib/test-suite/stats.cpp */,
				5E42D0DB3BED4AE39C36726A /* /Users/heiner/git/QuantLib/test-suite/swap.cpp */,
				B9B83B6D3F8840069AA133C9 /* /Users/heiner/git/QuantLib/test-suite/swapforwardmappings.cpp */,
				FDDEDFFA4AF34E2E981A19E3 /* /Users/heiner/git/QuantLib/test-suite/swaption.cpp */,
				53BBB262D97E4C2F885678C9 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitycube.cpp */,
				D44D2B49A1124F23A09A4A99 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitymatrix.cpp */,
				95808492BF0D45A7A3F9AA68 /* /Users/heiner/git/QuantLib/test-suite/swingoption.cpp */,
				499CC1CD34E4451DA2F06AD4 /* /Users/heiner/git/QuantLib/test-suite/termstructures.cpp */,
				29BC3518DC4C4036BEDAC897 /* /Users/heiner/git/QuantLib/test-suite/timeseries.cpp */,
				FAEB7026FBBF4D26A02EEEBA /* /Users/heiner/git/QuantLib/test-suite/tqreigendecomposition.cpp */,
				2E7DC188EF5741DAB0FEFD07 /* /Users/heiner/git/QuantLib/test-suite/tracing.cpp */,
				04835652F2E14205A134A51E /* /Users/heiner/git/QuantLib/test-suite/transformedgrid.cpp */,
				345F3383B8F2477C8D2B26F2 /* /Users/heiner/git/QuantLib/test-suite/twoassetbarrieroption.cpp */,
				9BFAB5A552414CAE930F785B /* /Users/heiner/git/QuantLib/test-suite/twoassetcorrelationoption.cpp */,
				8091BD31E6604F4A91D15BDE /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */,
				5E0770BBEFA64A7791C17C48 /* /Users/heiner/git/QuantLib/test-suite/variancegamma.cpp */,
				B3C098C0F4A749778909A285 /* /Users/heiner/git/QuantLib/test-suite/varianceoption.cpp */,
				53F627CEC1F14AAA88BF77C5 /* /Users/heiner/git/QuantLib/test-suite/varianceswaps.cpp */,
				7FF7CF070D0046FEBB685444 /* /Users/heiner/git/QuantLib/test-suite/volatilitymodels.cpp */,
				991AE5BA31F744B1A3C0745B /* /Users/heiner/git/QuantLib/test-suite/vpp.cpp */,
				8220A71324A04FC7ABA27116 /* /Users/heiner/git/QuantLib/test-suite/zabr.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		F1752ADF02BF41DD80537D75 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				772FFEA949CC4DE19B1592E9 /* /Users/heiner/git/QuantLib/Examples/Swap/swapvaluation.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		F52F75370EB54FF382C0D654 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7E27849BFCE543369EF740EE /* /Users/heiner/git/QuantLib/Examples/FittedBondCurve/FittedBondCurve.cpp */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FBF07C22C5334949A99082F0 /* QuantLib */ = {
			isa = PBXGroup;
			children = (
				58358BA7DEA34444B0BD6107 /* Header Files */,
				E7A1F880CEB84937A16B414C /* Source Files */,
				38D2F948B1714B9B88CA7933 /* /Users/heiner/git/QuantLib/ql/CMakeLists.txt */,
			);
			name = QuantLib;
			sourceTree = "<group>";
		};
		FF841CAC94F649B19A39C1F8 /* CVAIRS */ = {
			isa = PBXGroup;
			children = (
				5EC97B1FF6694F4CBD0A2E14 /* Source Files */,
				FE0F3D999E914043916940DD /* /Users/heiner/git/QuantLib/Examples/CVAIRS/CMakeLists.txt */,
			);
			name = CVAIRS;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		039D30E15E9646F2AB9EEAB0 /* MarketModels */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A2D52148FA1E4A34952435AA /* Build configuration list for PBXNativeTarget "MarketModels" */;
			buildPhases = (
				25E72EB45F6D407C8C56670F /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				73A4B108B99341A994967618 /* PBXTargetDependency */,
				6FB1CC39EF5D43F596074F81 /* PBXTargetDependency */,
			);
			name = MarketModels;
			productName = MarketModels;
			productReference = F370AC3939B84D5082CF7798 /* MarketModels */;
			productType = "com.apple.product-type.tool";
		};
		0CB5DE52297446918CF640B5 /* QuantLib_Static */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 122631238C7246BC88ED0770 /* Build configuration list for PBXNativeTarget "QuantLib_Static" */;
			buildPhases = (
				A6EB5B3EDD47484F9E761E45 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				E15898CC7005416F8A7DF952 /* PBXTargetDependency */,
			);
			name = QuantLib_Static;
			productName = QuantLib_Static;
			productReference = 8531DAB31D7E478D84112930 /* QuantLib_Static */;
			productType = "com.apple.product-type.library.static";
		};
		15AE9A6AF4394E4EB5C5E1FB /* Replication */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 742758C84D044802929F5AFB /* Build configuration list for PBXNativeTarget "Replication" */;
			buildPhases = (
				ADC3A50B7B8F4E758712B53B /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				E64AEF06A9E94C26B2D9A194 /* PBXTargetDependency */,
				D12211A9693A4A3A9590947B /* PBXTargetDependency */,
			);
			name = Replication;
			productName = Replication;
			productReference = E06A3ADA50B546C7B32B387D /* Replication */;
			productType = "com.apple.product-type.tool";
		};
		1B00CC0138174C29ABB38652 /* EquityOption */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7D02B879617D4DFAA69E510E /* Build configuration list for PBXNativeTarget "EquityOption" */;
			buildPhases = (
				DB98E0A6818E4161940A0CE2 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				CEBA2FE19133445092AE0954 /* PBXTargetDependency */,
				8C706704B70A41E7AF66D8C8 /* PBXTargetDependency */,
			);
			name = EquityOption;
			productName = EquityOption;
			productReference = 62155971204D401485956828 /* EquityOption */;
			productType = "com.apple.product-type.tool";
		};
		291EB2A9319B41068117829A /* QuantLib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 77171DB144D04A2C929F052C /* Build configuration list for PBXNativeTarget "QuantLib" */;
			buildPhases = (
				3F045C6EB56F41A994AF0733 /* Sources */,
				9C0486E6154B424898FF60C7 /* CMake PostBuild Rules */,
			);
			buildRules = (
			);
			dependencies = (
				27A305469A814DFBBF59F7C8 /* PBXTargetDependency */,
			);
			name = QuantLib;
			productName = QuantLib;
			productReference = 413E22ABE4974928A0B93F06 /* QuantLib */;
			productType = "com.apple.product-type.library.dynamic";
		};
		31CA74D128534CEB9CB7D7D4 /* GlobalOptimizer */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1EEA25DFCFB64262946DB3AA /* Build configuration list for PBXNativeTarget "GlobalOptimizer" */;
			buildPhases = (
				0F1030D5C784485AAD8424D8 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				73BD407C079E45C39E8CF6A5 /* PBXTargetDependency */,
				A498DF21FC874D0683351B95 /* PBXTargetDependency */,
			);
			name = GlobalOptimizer;
			productName = GlobalOptimizer;
			productReference = CB377B1A2F584C87A06CFF49 /* GlobalOptimizer */;
			productType = "com.apple.product-type.tool";
		};
		4888015459454E4384BDC423 /* quantlib-benchmark */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 08C741CD95E64BB7AD53E97B /* Build configuration list for PBXNativeTarget "quantlib-benchmark" */;
			buildPhases = (
				592BAD6DDD6342F7A1743F71 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				83ACA1F35C8041AE9B0B6AF2 /* PBXTargetDependency */,
				DF76C55B57974C75986B2A32 /* PBXTargetDependency */,
			);
			name = "quantlib-benchmark";
			productName = "quantlib-benchmark";
			productReference = DC58BF8184B3402C98F77459 /* quantlib-benchmark */;
			productType = "com.apple.product-type.tool";
		};
		5DFE28F7D23A4238A26BC4CF /* Repo */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B80E1A43789E47068805B4B4 /* Build configuration list for PBXNativeTarget "Repo" */;
			buildPhases = (
				DA14C6847AA345E98760EE79 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				8034D3F386EA4E84B0EC9B67 /* PBXTargetDependency */,
				3DC432EBFFE347CD8019302D /* PBXTargetDependency */,
			);
			name = Repo;
			productName = Repo;
			productReference = 0EC7BBD61B374E9C8550DD60 /* Repo */;
			productType = "com.apple.product-type.tool";
		};
		638C310F39134A5883B2CCB4 /* SwapValuation */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C9FC18CD204C4E98B3282BA8 /* Build configuration list for PBXNativeTarget "SwapValuation" */;
			buildPhases = (
				2EBF442A9E764CAD82B55B92 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				CC15F5D271D14135B884CC6A /* PBXTargetDependency */,
				5D55C6C4372747C495138FAE /* PBXTargetDependency */,
			);
			name = SwapValuation;
			productName = SwapValuation;
			productReference = 157DCCDBF1524E4C9CA51DF1 /* SwapValuation */;
			productType = "com.apple.product-type.tool";
		};
		686DDCCB5C6E440A8AA85EA3 /* BasketLosses */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0F0B28939B3C4777B896D7B2 /* Build configuration list for PBXNativeTarget "BasketLosses" */;
			buildPhases = (
				91CDB35AAC144AB6A3619ABD /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				7042C58AB278431FAA3DB435 /* PBXTargetDependency */,
				7836A32149E84B358B8C4367 /* PBXTargetDependency */,
			);
			name = BasketLosses;
			productName = BasketLosses;
			productReference = 8F9E4AEB8E3B40E8859424EC /* BasketLosses */;
			productType = "com.apple.product-type.tool";
		};
		6F0CC5B757E141178E1EB77E /* Bonds */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = BDB5633CBC6D453098837416 /* Build configuration list for PBXNativeTarget "Bonds" */;
			buildPhases = (
				FA33BB9B7D9E40C3AEAB104E /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				391A5AC51C534E938821B28D /* PBXTargetDependency */,
				A5CA4E15715F41AC942D481E /* PBXTargetDependency */,
			);
			name = Bonds;
			productName = Bonds;
			productReference = B4E2DE7C03FB48E0874EEFCD /* Bonds */;
			productType = "com.apple.product-type.tool";
		};
		7875808B72264DD598812031 /* FittedBondCurve */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 17E2D0B197904D4A88E6798E /* Build configuration list for PBXNativeTarget "FittedBondCurve" */;
			buildPhases = (
				6B5423C9401F41049629DDEF /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				43E9382D69CA4AA4A201586C /* PBXTargetDependency */,
				610E7ABE59324F5A886CAB14 /* PBXTargetDependency */,
			);
			name = FittedBondCurve;
			productName = FittedBondCurve;
			productReference = BF739A0452B1461FAE15C25D /* FittedBondCurve */;
			productType = "com.apple.product-type.tool";
		};
		7ECF9A7703E146DDB6F0C05B /* ConvertibleBonds */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E23D83033F1446F4AA7E2F97 /* Build configuration list for PBXNativeTarget "ConvertibleBonds" */;
			buildPhases = (
				48996D8EECE44F59B0B80A46 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				B4745B1477B74DF681494C04 /* PBXTargetDependency */,
				9ADA54DEEDA0407AABE4857A /* PBXTargetDependency */,
			);
			name = ConvertibleBonds;
			productName = ConvertibleBonds;
			productReference = 68F995DC882A45E699AC4DFA /* ConvertibleBonds */;
			productType = "com.apple.product-type.tool";
		};
		831FCB09EAAE4BDFBB7B73EB /* BermudanSwaption */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = BD23B3D4808D49349D7F7B60 /* Build configuration list for PBXNativeTarget "BermudanSwaption" */;
			buildPhases = (
				5BD045926778420D896B1190 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				11911E1152A048CEBFB8C06C /* PBXTargetDependency */,
				1160AD2711094D20BC717206 /* PBXTargetDependency */,
			);
			name = BermudanSwaption;
			productName = BermudanSwaption;
			productReference = E9F721CE9B614D2480AB583B /* BermudanSwaption */;
			productType = "com.apple.product-type.tool";
		};
		8A697A06B12241778436BE3C /* CDS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A3B6481C02944701955576E4 /* Build configuration list for PBXNativeTarget "CDS" */;
			buildPhases = (
				3F7A3D46D79344A1B32DB83B /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				F4914B2398324200B0F98175 /* PBXTargetDependency */,
				759035DA17234A5BB892AC22 /* PBXTargetDependency */,
			);
			name = CDS;
			productName = CDS;
			productReference = 671A1FDFF3C64725A8121969 /* CDS */;
			productType = "com.apple.product-type.tool";
		};
		A23D49611A124D1CA5228C1B /* Gaussian1dModels */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A3F882B462DB48C58B2618A8 /* Build configuration list for PBXNativeTarget "Gaussian1dModels" */;
			buildPhases = (
				6880B32D536E400E830603D3 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				3921F28D36ED418ABC64D073 /* PBXTargetDependency */,
				DE11AF0514E149009580B731 /* PBXTargetDependency */,
			);
			name = Gaussian1dModels;
			productName = Gaussian1dModels;
			productReference = 4BF58A4ADE854667943EFFAE /* Gaussian1dModels */;
			productType = "com.apple.product-type.tool";
		};
		A45914E1FCD646168C0B781A /* MultidimIntegral */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B5C12E9172AF449991BDDC94 /* Build configuration list for PBXNativeTarget "MultidimIntegral" */;
			buildPhases = (
				851818344C1E4DAB9B8EAAE8 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				21398D339360411EBE20DE54 /* PBXTargetDependency */,
				E12BB6CBCAB44741824B3351 /* PBXTargetDependency */,
			);
			name = MultidimIntegral;
			productName = MultidimIntegral;
			productReference = 01A1AD65871644688181B1E4 /* MultidimIntegral */;
			productType = "com.apple.product-type.tool";
		};
		A5B62B5515AF418DB5F53002 /* DiscreteHedging */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2735F09715C14339A0622D35 /* Build configuration list for PBXNativeTarget "DiscreteHedging" */;
			buildPhases = (
				EC39D7E9F79646AFA0AFEFDA /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				4D4F9C3DD0904630A3ECC956 /* PBXTargetDependency */,
				D271D74CA8C4417A929AF7D8 /* PBXTargetDependency */,
			);
			name = DiscreteHedging;
			productName = DiscreteHedging;
			productReference = 5E61A279ABBB4D99B6515E9E /* DiscreteHedging */;
			productType = "com.apple.product-type.tool";
		};
		EC96C97B456548F389E9E7E2 /* CallableBonds */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2BB3A4B5D77F4A4AB6C0B698 /* Build configuration list for PBXNativeTarget "CallableBonds" */;
			buildPhases = (
				B4F277DDC1804B0187A26C23 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				FCC42F684145407EB58EA8AB /* PBXTargetDependency */,
				E4A09505998542F08A7F20BC /* PBXTargetDependency */,
			);
			name = CallableBonds;
			productName = CallableBonds;
			productReference = 8BE5B3FEE1AC408CB6875AD8 /* CallableBonds */;
			productType = "com.apple.product-type.tool";
		};
		F1C5267109FA46D5BBEF98A6 /* quantlib-test-suite */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C59EA84D2D54F7EBEFC8561 /* Build configuration list for PBXNativeTarget "quantlib-test-suite" */;
			buildPhases = (
				0F212BB5AFEF459B85243D6C /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				6C49C56AE6F445898072A0C7 /* PBXTargetDependency */,
				5C8391D4160C42D890AAF7A3 /* PBXTargetDependency */,
			);
			name = "quantlib-test-suite";
			productName = "quantlib-test-suite";
			productReference = CD45EB149E344E6D955AAB29 /* quantlib-test-suite */;
			productType = "com.apple.product-type.tool";
		};
		F2DA3F8A9C344C15AA5D1483 /* FRA */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C589A3C7BFF748BFAEA05388 /* Build configuration list for PBXNativeTarget "FRA" */;
			buildPhases = (
				894A07082A7E4811B15BC2CE /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				97DA4E4F4CBA4AD5B10B9BD1 /* PBXTargetDependency */,
				490CCEC637A44DB78B53F05A /* PBXTargetDependency */,
			);
			name = FRA;
			productName = FRA;
			productReference = 6C7027831CB84376BF4D8B7C /* FRA */;
			productType = "com.apple.product-type.tool";
		};
		F600A56CE9F14452BDDC4E50 /* CVAIRS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8C489085094A40258B37E012 /* Build configuration list for PBXNativeTarget "CVAIRS" */;
			buildPhases = (
				1AEC17B5451145CF8EB1CAE9 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				BB93872DF1864631B7B0C23F /* PBXTargetDependency */,
				8D0323BE10824ECE92441313 /* PBXTargetDependency */,
			);
			name = CVAIRS;
			productName = CVAIRS;
			productReference = 87CB9B462ECC451191015B0F /* CVAIRS */;
			productType = "com.apple.product-type.tool";
		};
		F804B67AD84A4FFBB583CD51 /* LatentModel */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D5CD6D66F25B4FC4A6749B8C /* Build configuration list for PBXNativeTarget "LatentModel" */;
			buildPhases = (
				62039BB9A9844615834F11F0 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
				A1FAED598D124502BC210679 /* PBXTargetDependency */,
				36222705D5CD43368FCA54BB /* PBXTargetDependency */,
			);
			name = LatentModel;
			productName = LatentModel;
			productReference = FAEE2475BE084F84ADE50D72 /* LatentModel */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		C5D054430CDD44FA8526CE32 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 0910;
			};
			buildConfigurationList = A20887759FA741AEB3F64386 /* Build configuration list for PBXProject "QuantLib" */;
			buildSettings = {
			};
			buildStyles = (
				3741D7678EF94397B64DA3B0 /* Debug */,
				7A9FD97D90314524BD38F1AD /* Release */,
				D8160443E1D243AA9F222595 /* MinSizeRel */,
				3969390E7E794B23834B8A41 /* RelWithDebInfo */,
			);
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			mainGroup = 20A3C543695E4228829A93F5;
			projectDirPath = .;
			projectRoot = "";
			targets = (
				C15AE522686846B3A2B07B0F /* ALL_BUILD */,
				D28A7761A25745E1917416EC /* ZERO_CHECK */,
				6CC0D08B375642B9939D08E3 /* install */,
				686DDCCB5C6E440A8AA85EA3 /* BasketLosses */,
				831FCB09EAAE4BDFBB7B73EB /* BermudanSwaption */,
				6F0CC5B757E141178E1EB77E /* Bonds */,
				EC96C97B456548F389E9E7E2 /* CallableBonds */,
				8A697A06B12241778436BE3C /* CDS */,
				7ECF9A7703E146DDB6F0C05B /* ConvertibleBonds */,
				F600A56CE9F14452BDDC4E50 /* CVAIRS */,
				A5B62B5515AF418DB5F53002 /* DiscreteHedging */,
				1B00CC0138174C29ABB38652 /* EquityOption */,
				7875808B72264DD598812031 /* FittedBondCurve */,
				F2DA3F8A9C344C15AA5D1483 /* FRA */,
				A23D49611A124D1CA5228C1B /* Gaussian1dModels */,
				31CA74D128534CEB9CB7D7D4 /* GlobalOptimizer */,
				F804B67AD84A4FFBB583CD51 /* LatentModel */,
				039D30E15E9646F2AB9EEAB0 /* MarketModels */,
				A45914E1FCD646168C0B781A /* MultidimIntegral */,
				15AE9A6AF4394E4EB5C5E1FB /* Replication */,
				5DFE28F7D23A4238A26BC4CF /* Repo */,
				638C310F39134A5883B2CCB4 /* SwapValuation */,
				291EB2A9319B41068117829A /* QuantLib */,
				0CB5DE52297446918CF640B5 /* QuantLib_Static */,
				4888015459454E4384BDC423 /* quantlib-benchmark */,
				F1C5267109FA46D5BBEF98A6 /* quantlib-test-suite */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		408327AF0F9A4827BB1644E6 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		72895958F76B442089FC637A = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		898FB02CF85D4D8E883E936C = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		9C0486E6154B424898FF60C7 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/heiner/git/QuantLib/ql -f /Users/heiner/git/QuantLib/ql/CMakeScripts/QuantLib_postBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		B55DD2FB12334BBB8D784A93 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/heiner/git/QuantLib -f /Users/heiner/git/QuantLib/CMakeScripts/install_postBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		BACFF35874E94357812125D1 /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/heiner/git/QuantLib -f /Users/heiner/git/QuantLib/CMakeScripts/ZERO_CHECK_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
		C816BECFEEC2446AAA56493D /* CMake Rules */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake Rules";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "make -C /Users/heiner/git/QuantLib -f /Users/heiner/git/QuantLib/CMakeScripts/ALL_BUILD_cmakeRulesBuildPhase.make$CONFIGURATION all";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		0F1030D5C784485AAD8424D8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6DAAFE7D82674F7C87487DA6 /* /Users/heiner/git/QuantLib/Examples/GlobalOptimizer/GlobalOptimizer.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0F212BB5AFEF459B85243D6C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				ACB75BDBF46A49619C3474D7 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */,
				A31A1EF0D1CC4211A750679C /* /Users/heiner/git/QuantLib/test-suite/amortizingbond.cpp */,
				E89AD1A0E4994D44A77A959E /* /Users/heiner/git/QuantLib/test-suite/array.cpp */,
				5EC6DBF149964D679EF6D5C6 /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */,
				F8474BB4BF014DCC8EB23573 /* /Users/heiner/git/QuantLib/test-suite/assetswap.cpp */,
				F46A91468CFB4B35B77EEABA /* /Users/heiner/git/QuantLib/test-suite/autocovariances.cpp */,
				52F13ECF37094C379B4190A4 /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */,
				A231796102C54479AE817FB3 /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */,
				35070BF2F81942E5A6F8032B /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */,
				C4D3D76DFACE4A1A9A3D9973 /* /Users/heiner/git/QuantLib/test-suite/bermudanswaption.cpp */,
				00DA6743D62A427085A642E0 /* /Users/heiner/git/QuantLib/test-suite/binaryoption.cpp */,
				0A012672ECCF485CAFD9EBC2 /* /Users/heiner/git/QuantLib/test-suite/blackdeltacalculator.cpp */,
				0850FAD9FC0F4953A878A02D /* /Users/heiner/git/QuantLib/test-suite/blackformula.cpp */,
				BD93E31EE3D649D0B6471893 /* /Users/heiner/git/QuantLib/test-suite/bonds.cpp */,
				1BB61A5E9CC64484AF2630CF /* /Users/heiner/git/QuantLib/test-suite/brownianbridge.cpp */,
				F98440006973498C86C5D243 /* /Users/heiner/git/QuantLib/test-suite/businessdayconventions.cpp */,
				7EA271972CD54C3D86999683 /* /Users/heiner/git/QuantLib/test-suite/calendars.cpp */,
				9A295F0E83CF4DAD82A4D52A /* /Users/heiner/git/QuantLib/test-suite/capfloor.cpp */,
				1A647D0E4B6D46F082949B83 /* /Users/heiner/git/QuantLib/test-suite/capflooredcoupon.cpp */,
				8F0DE72895C34268AAA313E0 /* /Users/heiner/git/QuantLib/test-suite/cashflows.cpp */,
				37D64BF6646649B38FF00187 /* /Users/heiner/git/QuantLib/test-suite/catbonds.cpp */,
				87FFD7BA1871468B9CC047D2 /* /Users/heiner/git/QuantLib/test-suite/cdo.cpp */,
				3A9ACB962BD54FBC862C8054 /* /Users/heiner/git/QuantLib/test-suite/cdsoption.cpp */,
				1274A04BB9704B1DA278AA23 /* /Users/heiner/git/QuantLib/test-suite/chooseroption.cpp */,
				003D8D49B3E94A308C2ECFF2 /* /Users/heiner/git/QuantLib/test-suite/cliquetoption.cpp */,
				ED790E779FFC4EEE9B6981BD /* /Users/heiner/git/QuantLib/test-suite/cms.cpp */,
				94A0FD46DED5437B86411D53 /* /Users/heiner/git/QuantLib/test-suite/commodityunitofmeasure.cpp */,
				BA8F5A9CFBB5495AB512BF73 /* /Users/heiner/git/QuantLib/test-suite/compoundoption.cpp */,
				F2F56B5AB6844A63ADD9F494 /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */,
				E4DE5FBE6223420FAD5504D4 /* /Users/heiner/git/QuantLib/test-suite/covariance.cpp */,
				696F85EAD7EC4EFFADAB8582 /* /Users/heiner/git/QuantLib/test-suite/creditdefaultswap.cpp */,
				5C4F2C0A91D54DC4A65DEC31 /* /Users/heiner/git/QuantLib/test-suite/creditriskplus.cpp */,
				BCA4BACBF45342D39B7EF8CF /* /Users/heiner/git/QuantLib/test-suite/curvestates.cpp */,
				71706393C43646B7A5DD9083 /* /Users/heiner/git/QuantLib/test-suite/dates.cpp */,
				597806E3BB4F4C3C9ABB452E /* /Users/heiner/git/QuantLib/test-suite/daycounters.cpp */,
				2A2370ACBFBF4BEAA8D22E05 /* /Users/heiner/git/QuantLib/test-suite/defaultprobabilitycurves.cpp */,
				478D51F9EC4A4B169326F4C4 /* /Users/heiner/git/QuantLib/test-suite/digitalcoupon.cpp */,
				4511C6D6328046AE9BC6CF91 /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */,
				FAA35B5329324C25BA04ED72 /* /Users/heiner/git/QuantLib/test-suite/distributions.cpp */,
				BEA89928A5ED49448DFC8467 /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */,
				C27A406996B34C0392250BFE /* /Users/heiner/git/QuantLib/test-suite/doublebarrieroption.cpp */,
				39FC69381C5D48FF834E8E59 /* /Users/heiner/git/QuantLib/test-suite/doublebinaryoption.cpp */,
				CC72271C919240BFB1793AE5 /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */,
				78862DEDCBE345DDBBDC8CF0 /* /Users/heiner/git/QuantLib/test-suite/everestoption.cpp */,
				BEA41FB27D744E8EA4B4C2FE /* /Users/heiner/git/QuantLib/test-suite/exchangerate.cpp */,
				CEC84A49AC93452FAC163AE1 /* /Users/heiner/git/QuantLib/test-suite/extendedtrees.cpp */,
				973817EC6A3B48149CE328C1 /* /Users/heiner/git/QuantLib/test-suite/extensibleoptions.cpp */,
				BB5CE238E4AC4524B4AD0B6F /* /Users/heiner/git/QuantLib/test-suite/fastfouriertransform.cpp */,
				CDE410041BF74C138785683B /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */,
				85DBCBE2D5884C0A8C825C4F /* /Users/heiner/git/QuantLib/test-suite/fdmlinearop.cpp */,
				1EE24D5561954345B371BA31 /* /Users/heiner/git/QuantLib/test-suite/forwardoption.cpp */,
				DDC503B1F66244148C225040 /* /Users/heiner/git/QuantLib/test-suite/functions.cpp */,
				3B97B0EAC9CE4B9FBEC08EA9 /* /Users/heiner/git/QuantLib/test-suite/garch.cpp */,
				59F52C2E83014FE6A5753E68 /* /Users/heiner/git/QuantLib/test-suite/gaussianquadratures.cpp */,
				D73116C5AE7C47F382BD9273 /* /Users/heiner/git/QuantLib/test-suite/gjrgarchmodel.cpp */,
				05864B0073DD4E5FA4D4F85B /* /Users/heiner/git/QuantLib/test-suite/gsr.cpp */,
				7A0998F601944452A9D9BF8D /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */,
				0516882C917449B7B6FCF828 /* /Users/heiner/git/QuantLib/test-suite/hestonslvmodel.cpp */,
				57E04B77A82B4D91ADBCED62 /* /Users/heiner/git/QuantLib/test-suite/himalayaoption.cpp */,
				001B887ED1574E42BB7702D7 /* /Users/heiner/git/QuantLib/test-suite/hybridhestonhullwhiteprocess.cpp */,
				4E50DCEADC1C481D8951E846 /* /Users/heiner/git/QuantLib/test-suite/inflation.cpp */,
				DA2FAF37015649389FDB80AC /* /Users/heiner/git/QuantLib/test-suite/inflationcapfloor.cpp */,
				6D7BC85E73964F258429A938 /* /Users/heiner/git/QuantLib/test-suite/inflationcapflooredcoupon.cpp */,
				E9E700B149874CF8BB2F8266 /* /Users/heiner/git/QuantLib/test-suite/inflationcpibond.cpp */,
				E790D338DF174203B2224C28 /* /Users/heiner/git/QuantLib/test-suite/inflationcpicapfloor.cpp */,
				8EC3BBCBEE394814970E4B47 /* /Users/heiner/git/QuantLib/test-suite/inflationcpiswap.cpp */,
				A9965058E50442EF8F837C04 /* /Users/heiner/git/QuantLib/test-suite/inflationvolatility.cpp */,
				E45B5EE37BC04095B18262F1 /* /Users/heiner/git/QuantLib/test-suite/instruments.cpp */,
				F009616817104F90842CF7FC /* /Users/heiner/git/QuantLib/test-suite/integrals.cpp */,
				87D0B052D8E143CB816B08E0 /* /Users/heiner/git/QuantLib/test-suite/interestrates.cpp */,
				1004254857424D8DACDF5BAE /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */,
				8E3FED5860444D1891D00221 /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */,
				DFD92A9C3C214A6A848F5CE2 /* /Users/heiner/git/QuantLib/test-suite/lazyobject.cpp */,
				FDD1FEF7D6D24FFFB8DD57C2 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodel.cpp */,
				3E84EA7FC312459DA7A98792 /* /Users/heiner/git/QuantLib/test-suite/libormarketmodelprocess.cpp */,
				FEF5F9EF0F6947789D74037E /* /Users/heiner/git/QuantLib/test-suite/linearleastsquaresregression.cpp */,
				D94207967F70452EBF4F31CB /* /Users/heiner/git/QuantLib/test-suite/lookbackoptions.cpp */,
				61531FEEF82A46E299422C16 /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */,
				2C059B97DCFE412E9E07E4C6 /* /Users/heiner/git/QuantLib/test-suite/main.cpp */,
				AAA77FAFD2A74CA6B5830B36 /* /Users/heiner/git/QuantLib/test-suite/margrabeoption.cpp */,
				CC0CB582CA9742BC8DCDD349 /* /Users/heiner/git/QuantLib/test-suite/marketmodel.cpp */,
				1E5F3F3B83B746398FE8CBCF /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */,
				EC46B460A4FC4282BE57DACA /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */,
				2509E11B8177447696AE79C1 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletalphacalibration.cpp */,
				A01AE1B568DF4E52AAD97CDA /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcapletcalibration.cpp */,
				1B965829AA4741A09F83C83A /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smmcaplethomocalibration.cpp */,
				841DF96F50B64329983EE179 /* /Users/heiner/git/QuantLib/test-suite/markovfunctional.cpp */,
				711E76D603424F2C85AC212F /* /Users/heiner/git/QuantLib/test-suite/matrices.cpp */,
				9ACD2BC3E7BE4BD5B0D5BB30 /* /Users/heiner/git/QuantLib/test-suite/mclongstaffschwartzengine.cpp */,
				4DC1561CAD724B35BC96D981 /* /Users/heiner/git/QuantLib/test-suite/mersennetwister.cpp */,
				DE46A5E1EDDA42CDACD372AA /* /Users/heiner/git/QuantLib/test-suite/money.cpp */,
				6ED59AF5A8EB44D8BC2AED25 /* /Users/heiner/git/QuantLib/test-suite/noarbsabr.cpp */,
				BC7989F473524DACB3B7C553 /* /Users/heiner/git/QuantLib/test-suite/normalclvmodel.cpp */,
				36BF5516C76B4C88A4DF9E22 /* /Users/heiner/git/QuantLib/test-suite/nthtodefault.cpp */,
				FA654E0378B941F9903723A0 /* /Users/heiner/git/QuantLib/test-suite/numericaldifferentiation.cpp */,
				27BD7C24E80F4898BFF6F26D /* /Users/heiner/git/QuantLib/test-suite/observable.cpp */,
				8B67F5BCA5CC4ECEA0105608 /* /Users/heiner/git/QuantLib/test-suite/ode.cpp */,
				3DB45DF7FA7A4C419CB28287 /* /Users/heiner/git/QuantLib/test-suite/operators.cpp */,
				9DE052EA88464A74A0716DF7 /* /Users/heiner/git/QuantLib/test-suite/optimizers.cpp */,
				E9AD5CDB6DCE428ABD680258 /* /Users/heiner/git/QuantLib/test-suite/optionletstripper.cpp */,
				46373C6C8DBA4400B1933614 /* /Users/heiner/git/QuantLib/test-suite/overnightindexedswap.cpp */,
				36794296B89440AB8FE7A204 /* /Users/heiner/git/QuantLib/test-suite/pagodaoption.cpp */,
				A6E4CA6FEBF34AEBB396C596 /* /Users/heiner/git/QuantLib/test-suite/partialtimebarrieroption.cpp */,
				41E1D0F6798A48AD9EC07A1C /* /Users/heiner/git/QuantLib/test-suite/pathgenerator.cpp */,
				97E4B7353A8F4B22B33AD0D7 /* /Users/heiner/git/QuantLib/test-suite/period.cpp */,
				E476108D76D04AB7B91602DF /* /Users/heiner/git/QuantLib/test-suite/piecewiseyieldcurve.cpp */,
				848C479A86C64A0AAFC96BA5 /* /Users/heiner/git/QuantLib/test-suite/piecewisezerospreadedtermstructure.cpp */,
				315EDDC29469453C93FE9B05 /* /Users/heiner/git/QuantLib/test-suite/quantlibtestsuite.cpp */,
				DE90F3D5626F47958BD01B7A /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */,
				F2522B6E34AD41BCAAE15D05 /* /Users/heiner/git/QuantLib/test-suite/quotes.cpp */,
				F98B3FEBE7E84BF2B902E637 /* /Users/heiner/git/QuantLib/test-suite/rangeaccrual.cpp */,
				CC1C79015E4C4EA785500504 /* /Users/heiner/git/QuantLib/test-suite/riskneutraldensitycalculator.cpp */,
				F3889A127E294CC390431D14 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */,
				8829C50AB2DB42CD9DEC7AA2 /* /Users/heiner/git/QuantLib/test-suite/rngtraits.cpp */,
				DE871C3A04A34BBB9C630FD2 /* /Users/heiner/git/QuantLib/test-suite/rounding.cpp */,
				25EF60F4D7B04101863DAEC3 /* /Users/heiner/git/QuantLib/test-suite/sampledcurve.cpp */,
				77466EB207764DCFA8635FEA /* /Users/heiner/git/QuantLib/test-suite/schedule.cpp */,
				0A07150A2C654B22B20633E9 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */,
				8D0ED54E096143C2A11BE69C /* /Users/heiner/git/QuantLib/test-suite/solvers.cpp */,
				E06C4ACF7CD04E938AE09AA1 /* /Users/heiner/git/QuantLib/test-suite/spreadoption.cpp */,
				4319D179F0884078AB8D835A /* /Users/heiner/git/QuantLib/test-suite/squarerootclvmodel.cpp */,
				7B40FFD56AF9478D91E5F841 /* /Users/heiner/git/QuantLib/test-suite/stats.cpp */,
				3DE858C3591D4706BE4E7C01 /* /Users/heiner/git/QuantLib/test-suite/swap.cpp */,
				AC27ECE3228E4DEF87FAF723 /* /Users/heiner/git/QuantLib/test-suite/swapforwardmappings.cpp */,
				40ADE8BDE7404D20AD1E22A9 /* /Users/heiner/git/QuantLib/test-suite/swaption.cpp */,
				3D1F64FD828E4307B25E3D4D /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitycube.cpp */,
				B6BAE179A651403683CA70A6 /* /Users/heiner/git/QuantLib/test-suite/swaptionvolatilitymatrix.cpp */,
				4C8D0705387E4F5A9C2F0DFF /* /Users/heiner/git/QuantLib/test-suite/swingoption.cpp */,
				87BDF85947D14FB79B99D0A6 /* /Users/heiner/git/QuantLib/test-suite/termstructures.cpp */,
				853EC0D717A342F6ADF2E6B4 /* /Users/heiner/git/QuantLib/test-suite/timeseries.cpp */,
				C44CDCCC50D647B4B87752BF /* /Users/heiner/git/QuantLib/test-suite/tqreigendecomposition.cpp */,
				B3C4A4D495A6423F9238E40B /* /Users/heiner/git/QuantLib/test-suite/tracing.cpp */,
				E54A8AB292AC4E2DB0A3FCF7 /* /Users/heiner/git/QuantLib/test-suite/transformedgrid.cpp */,
				9E628654ACC34FF984D5ECEE /* /Users/heiner/git/QuantLib/test-suite/twoassetbarrieroption.cpp */,
				9DF9F7B95DDA46FFAD010D22 /* /Users/heiner/git/QuantLib/test-suite/twoassetcorrelationoption.cpp */,
				E421D48D288F4CC2AF3F4AA2 /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */,
				3CE51AC416E94E41BBF5556A /* /Users/heiner/git/QuantLib/test-suite/variancegamma.cpp */,
				C4AC1A25FD16404FB6817AB2 /* /Users/heiner/git/QuantLib/test-suite/varianceoption.cpp */,
				103F4F6E930842299DC12621 /* /Users/heiner/git/QuantLib/test-suite/varianceswaps.cpp */,
				435A57AA0BB8423AAC1D98B1 /* /Users/heiner/git/QuantLib/test-suite/volatilitymodels.cpp */,
				82D8712E760148B1B0A512AC /* /Users/heiner/git/QuantLib/test-suite/vpp.cpp */,
				467A094307C144E69FC2A561 /* /Users/heiner/git/QuantLib/test-suite/zabr.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1AEC17B5451145CF8EB1CAE9 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C279F0765549464895BCF1CB /* /Users/heiner/git/QuantLib/Examples/CVAIRS/CVAIRS.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		25E72EB45F6D407C8C56670F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				720E17AD71FF4055B83191A7 /* /Users/heiner/git/QuantLib/Examples/MarketModels/MarketModels.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2EBF442A9E764CAD82B55B92 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2DCEDD3875914EA79BD1C550 /* /Users/heiner/git/QuantLib/Examples/Swap/swapvaluation.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3F045C6EB56F41A994AF0733 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				EEA1CF0508E34BB5A11334B6 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */,
				68A475B08CA74842854D29EC /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */,
				A2272CE6FCF44E658EEED881 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */,
				331567028FED4666A369BB31 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */,
				3DFA604045974A99AAE76FDD /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */,
				4CD56AED77FB406B9EA538BF /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */,
				669C32BD23CB48C1B89E545A /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */,
				EA31B5C72A974B1C8F67A0CD /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */,
				9ED21E3ED781483E9F5F65D3 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */,
				A29E1F7A4EE44DF4834FFB53 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */,
				F26AA18B6343441BBD73FC01 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */,
				7D1B74E7247F437093B62AF2 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */,
				280F2743AB2346DCB64C6BDC /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */,
				E3E22D5BEB85461C92436DE4 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */,
				99AAB9F17D5A46539C643C7A /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */,
				C18E5A2EDA2441519C9B5C1E /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */,
				50438E59B71A4CF6818B58EC /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */,
				88E4859BDA274A1D857EC02E /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */,
				78CB389876FC42ADA0A06D66 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */,
				675862991FBE40F2BFEC219C /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */,
				918DDFD9C30E4AE29F32A431 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */,
				C5EEF5FE7DD44CA49D2F0F1E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */,
				BBAC493C0CBE437BBE88634F /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */,
				F7F0DA64650C488F92A3CA44 /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */,
				7504CF872B794D109C2EF10F /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */,
				DB14264188CC435393C3A0B5 /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */,
				5747F22DE75548D48D11F9FD /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */,
				8F6C96D4A9274492B719ADB4 /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */,
				7C990DADD9B546798D818E0B /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */,
				988D09F9F6554783AC1CA179 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */,
				9DB9A5E72E2640F1AE3473E1 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */,
				48E665BDCFA2422B97D8A3C6 /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */,
				BD02F1A28ABF4D30BFB919E9 /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */,
				B5FA7608814E4EED8A82EB78 /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */,
				91FD63A4F69D416B9B16ADAF /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */,
				61EA8EF0006644B6AF46EB9B /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */,
				4A27D984592C4333BFEC96AA /* /Users/heiner/git/QuantLib/ql/currency.cpp */,
				50CE815326FA4D9A8966CE91 /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */,
				A183ECF95D0345FB90C50DB9 /* /Users/heiner/git/QuantLib/ql/errors.cpp */,
				03062E640A5B4846B75BC11C /* /Users/heiner/git/QuantLib/ql/event.cpp */,
				C3DA47BFB8C44AD5A9BF37F4 /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */,
				39AD93F6AEB34E689C03788D /* /Users/heiner/git/QuantLib/ql/exercise.cpp */,
				29DA5FB60BD0466498AEC42C /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */,
				8C967717625B4A1997709069 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */,
				53EA162DD2BE4991B9432286 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */,
				54F176D141824761BCB24904 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */,
				2AC950651AE8430DBE25E637 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */,
				23500FE301BC4CF8A8B93B30 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */,
				BA250BC84C6441108EA0848B /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */,
				8BA876FE05984C59AF418DDE /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */,
				079FCC71A2974A57A4C4FB81 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */,
				A9B9F216915D4A6C88AA4067 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */,
				37E955998BC6437EBDBD4AC3 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */,
				AB07884E122A46A7B52C86D9 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */,
				42B839BAAEC047579911B6EF /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */,
				156FE21AFFA84A7AAFEFE639 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */,
				F2C586FD3338438EA9A8ED27 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */,
				F965E1DA540C49A2A0D298FC /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */,
				24534247AC1A45F283BC6FC7 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */,
				DC322E14C812445085DBFE1D /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */,
				78A0A2ACBBAE4E738051BD6B /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */,
				B3A0361515764C04A3EC45F6 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */,
				D9EE35A77CA545A9A79AC61E /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */,
				7A4F20B519364F199CD34414 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */,
				08BEA7C9DC7A4475845CF6A3 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */,
				C17B096159D74F6BBD2FD7CA /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */,
				B1B83109952C441597E6E39B /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */,
				16CFD1B09AA347278642F03A /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */,
				17CAF3751DCC400AA43CB87B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */,
				4CFBF9FA0AE148C7BF329142 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */,
				840626EAC36E42A9A96384FE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */,
				C391F1B88DDE457C81FCD4A4 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */,
				163E95B1FDD341C18716F6B9 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */,
				30A3FF33573F49FA8E03D1E9 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */,
				CEF593AA9AEC46ACA5E678E8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */,
				24BA539C92984CD495BDB5D2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */,
				0BB0A01F2D3147449F432FB1 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */,
				BD62DBBDA2E744648838AD22 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */,
				84D66B2A0B334019AECB0228 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */,
				C7E3D8E9ED534D17AF2C535E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */,
				66DFE66547B24724BC1AF7DE /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */,
				4645B32425484A32940FC7FF /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */,
				ADACCB9517C84E1B8919CBB3 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */,
				7E6FEDF305A04D4D848F8EE6 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */,
				284BBABE73B643D58C60750F /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */,
				9604D6A52ED141668F719A2B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */,
				FE5B6DD99E024722A096BCE8 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */,
				E59533B1797C4CFC9C6B0468 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */,
				0D7D0B40E18347D6B930DD8A /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */,
				01004DCA1CA54933A9DAF9C7 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */,
				C73CE0BDAF614DA998C2ED58 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */,
				8E26AA10E1AD4270A4EBEB6B /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */,
				981450441FAD4972BE89C73F /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */,
				802539CD47BB403E84B30968 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */,
				D4F6C0D7E70F475C88776026 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */,
				166AF2D004284D1B850A1A68 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */,
				56C46C495E9946199277B86A /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */,
				100974D837E74FA2AB68A44F /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */,
				961E29EEAE48440985200862 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */,
				80753B61B9DB400886DF1B6D /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */,
				3681F76299CB4702A00EFA7C /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */,
				A7AC9B91848B4EACA4DC8FD9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */,
				773687EF4E0B49FAA068138D /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */,
				25687E76093742A38483FA55 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */,
				D23D68D2A1C347D5AC02902B /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */,
				278CEC97037C4A24BA98C7CD /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */,
				4B00F3CA6D524E46A072873F /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */,
				9BE3C992D175450EBFA7BCB9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */,
				B2720E98041D4A78ABEEC938 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */,
				44069D9E8F4E488C8756DE1C /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */,
				FDBC13AF81074BC3AF4D0E4B /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */,
				B152D06FA12C45C0A4B13107 /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */,
				51A30FE10D0E44C698AC7FB1 /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */,
				E16808DA4FDB43FF84A02565 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */,
				85A421B7D159478DB05494FF /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */,
				B0E8A892F7D448589E4E616F /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */,
				3A8494722B1948E4B0FFC73C /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */,
				1C949951AD8946DF9BDA31DE /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */,
				3529E5ADD65542959BE6A780 /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */,
				994BA8971EDE493B94823FD4 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */,
				3A6A77398ACA44DD85415EA6 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */,
				F6608EB2C5D74C0CBB6769BD /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */,
				79B63247662242E38E06931E /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */,
				BBE7DEF38A044DE183291086 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */,
				D812D399D323417485B701D9 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */,
				4470D8DA30EC48CC9F28EB63 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */,
				A6C8598B033A4B23B322BD90 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */,
				904684CADAD64C2280317E45 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */,
				1D9C212167AD4EB9BC5D2533 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */,
				C2389EE634CB4A5FB3B6BF2E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */,
				5CA97A3BFBDA49C2B0169221 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */,
				A44040443E95413996FCA5D5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */,
				66EE71B15A094DDFA9D42386 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */,
				5202F6F3513448819952008D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */,
				6F8F1B66307E4D9CB09A162C /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */,
				02453F879C5D4A0A8EEA601E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */,
				033E87221C3945FF89FBE720 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */,
				93541E0550344E4FA0192B61 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */,
				A98F206FFE4A4D4E983F04B5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */,
				7E5188F9EFB04945BE6BC370 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */,
				2394BAB681964140ADE2425D /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */,
				F3805F18DF6A45ACB33FD757 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */,
				1E7B60E733B542E89BD5010E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */,
				6F615642EF0A4544B18F873F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */,
				E5307ECC073545F3874D5DC1 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */,
				32682193566F4440BB8ABB7A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */,
				B0B4404AF5AF43B4B0481469 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */,
				1DF24D61940C4E69A3EE1FB4 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */,
				F9F84EA6C968497498DECA16 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */,
				FB8AD6B077A9496BA2C44469 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */,
				D9A21D58D4D64459828D1FA6 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */,
				DF504D0B2E624FB387557555 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */,
				4E347528F3824C6FBE0FE8E2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */,
				23B24D54635543159DC2B90E /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */,
				2A92506B315346B0883C89C7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */,
				50CFE816043D4B4390C3FBBE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */,
				DE5BA793D8F44006820CA340 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */,
				EE2698FC5A614B5A8AEE152C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */,
				BF6FD02CD3A54BF797C59455 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */,
				243958BBB6684368B7EE31FF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */,
				7CED228E0844414696D20625 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */,
				7083A67DA0CA49D9A2ABF116 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */,
				2188771A38544E1F806BAC95 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */,
				DE2D2803BE4A4C90BC3768F4 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */,
				0BD72B7681054CD59632E792 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */,
				EBF50227426642C6AC4BDB24 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */,
				F663D5CE654E4FC29CDF7FE6 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */,
				08671F6B705F43B2BA5D1A4A /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */,
				B60F8470469848088BFDBCE7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */,
				EEFC45770D54401B96AC7750 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */,
				41EE2AA9850C4908B6D3EEC2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */,
				E5B314068C8B420BA04A116E /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */,
				E78B89F74530457981D6369D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */,
				C77296D95BF04F84BCD6AEB7 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */,
				FFE8852BB97E4EC6BA07102D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */,
				80E6801EF23F47FBB2C50835 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */,
				41B7B2B34276454E9E7A5F20 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */,
				7C86491ACC5147D2ACB66095 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */,
				40A4AE8464AB4A0F8187F1BF /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */,
				282B7D7E37814EE9876B0F2B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */,
				AD25A01F8DC3490FB5A6B840 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */,
				0054A1ADBEA64F3BA22BAE8F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */,
				64CA9A72EE60448EA5DB57E9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */,
				1D8AC34E2BBD447891C41AA3 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */,
				5402C4D8FEDA4882B7A9F07B /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */,
				5C87AB5F08014335A5C05B5B /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */,
				36E610A2242F4124BFEC5D0A /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */,
				CB4658D1CC6343068B6C12C6 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */,
				E876F27440244E8384AE6A1F /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */,
				5C002D5A79304189B9AEE09B /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */,
				79968F79A64341CD9C5F29E4 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */,
				EF43A196DFE1426EA5835E71 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */,
				545617E601F74515B183DA57 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */,
				53B5DF37B6A949009C66E221 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */,
				EACDCC8F3E634CF0B44D6CD1 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */,
				61E4A27973224C748B1EBB99 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */,
				A23B0C9F876042EB97E5B636 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */,
				F1434FD2A3454215ABAFEC52 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */,
				1A8BF910193A4021AD4E9DB9 /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */,
				DE68CCF6B26A4034B921FA76 /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */,
				AC74FF3821A0409DB4ED2DA0 /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */,
				754B825E542B45F5996032FE /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */,
				A9C73425A03447988D1163B9 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */,
				E25B5F711E004FED9B4B7335 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */,
				25D57E3EC59B4BD48008FE52 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */,
				FE2959A2D6B44052814AC19D /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */,
				1108E1321B9541CFBE43E7A8 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */,
				F6BB8DCE4AD54CEAA892F578 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */,
				06987759D9E349FEAD3B9DB0 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */,
				EB2F35F7715543519FF9BADA /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */,
				4827E0736B8C4CAD99809BBE /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */,
				C1DA8BD0201748ABAE536520 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */,
				5595632D49D34C3DA4EDF3BD /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */,
				E039C1D78E8946748F89C2AB /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */,
				FFA132A2A97E4C18810BCE10 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */,
				39F2E51071534E6A9181539A /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */,
				7B12703FBA5646549D199B23 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */,
				F329EAD04BCF4B648EF8AFC3 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */,
				DB16C0FD5A19420EBA405295 /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */,
				A5F56C0FB00F44EF86A66D0F /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */,
				4602B0D3BD00449BB031CFF8 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */,
				42CBEE1003374A199BFFFEBB /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */,
				3C5698E5C8D643A19DDC474B /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */,
				5B90EEB4F61A41898881FA35 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */,
				4663E9CF4DC34FB2B2B1E8C2 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */,
				30ED4FBD8B3F440C9CB97FF2 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */,
				36177894D220475BA03BFB40 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */,
				01D27791C6E543209A560487 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */,
				DB5FDF11301F4670870CD5AB /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */,
				5B531444A0F44DB2A2040ECB /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */,
				6A3F08CDA4C84FCFA439C24B /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */,
				464DCFDED71848B597BF17BD /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */,
				86FC9812A79B402B939E965F /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */,
				A55A3B39BD5245FA9B791BCF /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */,
				2F3B161C0BDE4C56A6FEB045 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */,
				712059CB32A64B6386D36E8D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */,
				61DBCE7F1B3F4A0E91359B5E /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */,
				77C16A35E8864002B4F235EB /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */,
				F7AC0717CD544C349DB77C83 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */,
				6D4786BEDEC642DC89812EDA /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */,
				51325DDB54F145D683F2CA75 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */,
				2A36FEE83A1A45E69A025D82 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */,
				50C50B509FC347C2998622B1 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */,
				340ACD70E2D6406CB182BE6B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */,
				ED622CF3263B4A66A48F209D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */,
				07578BD6F8D74C038A2E10EF /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */,
				42027C2AD599461DBDBFAF7F /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */,
				BD7D387C820F420EACC8FC38 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */,
				659610E377884B52949AF46B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */,
				00A400BB60D143C28E6E065C /* /Users/heiner/git/QuantLib/ql/index.cpp */,
				099830BCA5F042EBB09EA109 /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */,
				19034CC5FDC0451E887D8C4A /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */,
				468F88240AD3431EAB1F30CE /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */,
				1BD50304E0574E6D89AADC78 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */,
				6A80CEBB00314EDCB5BCEAE0 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */,
				5352086A58614095B207E215 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */,
				643AEA90EF3E41A8ABC3DFE7 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */,
				C79B0CC45E4749E28C38BB3C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */,
				E49184A2245C4393A2F3ADFC /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */,
				E3B341EFBC674C40B44C75B1 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */,
				666FFE23F23B411E9BF7CA5D /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */,
				0278917781114D77A30681D2 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */,
				F298844289C04B69A60F8F66 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */,
				7628E24A2A974BDF9F4EF8E0 /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */,
				5F71668687C14F75B269BAD1 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */,
				2285EA6ED844461FA3FD17B9 /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */,
				FE01DF99DDD842EF8FFA134B /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */,
				4AAFD4D3C3E64CE8B04E292C /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */,
				C5F473035C2D414A82FBACCB /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */,
				A61BE1C1419B4492A959EA1D /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */,
				B1605A0EBAE24EAF9A2EAD97 /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */,
				D43C834FAB3A4DCD9EB002D9 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */,
				FC7C81F7041E4F96A7EFC06D /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */,
				D14935F8E2CB48ABB24CB6F1 /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */,
				38572CA7DBD3401CB42E2E58 /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */,
				0B589191ADFB4C94BC2457DF /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */,
				A8E7F9379131463DB550E83F /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */,
				5186898354C44D36970CB4B1 /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */,
				8ECA4ABCE6DB4E98A8C84C60 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */,
				3BBE669D3E1C45D79C3C59D5 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */,
				165A4303EFC3424A8AFE6C49 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */,
				0B40DA61B9C74B0F874021D7 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */,
				3813D3F3F0424239BB8BF6F7 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */,
				43E59EDB0796417AB64AA02E /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */,
				1F9C391D96B74FB4836F5ABF /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */,
				0E7ECD324FE54EA9A98E6598 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */,
				388DD4B53D154F86948D42AC /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */,
				BD1AD71FBADC429B8F7534D1 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */,
				944E223DF2544AA8AEB3E7DF /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */,
				93CCE91E9F874841B54F150D /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */,
				2A360780C6944C94B5A8C482 /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */,
				A1288D3F35AA440BBDB4AF5C /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */,
				1F4A2843A5C244ABA9A3449B /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */,
				7642BAAAD8474EF3824E8AE4 /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */,
				C9D968C761D84078A2D4B795 /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */,
				47FE630D8329461089573F41 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */,
				C2B9877407CD465BAD992296 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */,
				F70AA68A58AE4EC1B2390E37 /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */,
				279F971A65FF4E2294D8430D /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */,
				251789B07FB04FDBA67CC66A /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */,
				4551423AE2C34BF1921DF3BB /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */,
				C6982757C162464DBE982F3C /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */,
				27A398888F194E6AB4B88485 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */,
				BF9F7F43E86641EE90C85BCD /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */,
				2E060FB7B5A64EEABEC86A46 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */,
				15EDF5F5B6444A83BF0BDA81 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */,
				36EC9858435F4DD4ADA32AC0 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */,
				D4A95E638CF9495A92F19ACE /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */,
				F6D67A47DEA74399850FEA1F /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */,
				B3D2B1119C2B4838A58C3DBA /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */,
				B47D495F20EB48E7AF8CDABF /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */,
				C4D0BE87A52C4126ABBAD735 /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */,
				A5D5486B15524924A617D936 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */,
				7618CFFB68334BD1B8B1E095 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */,
				02D269DFD5F54BF3B2538431 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */,
				E50C7460B0B6415887C16702 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */,
				59E9A8299E1C43B680968D10 /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */,
				EED328DFD29E4363B01E3070 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */,
				E5EC305EF31342C68009C210 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */,
				CC4F8F0CC44548A68EA4098E /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */,
				E80A8F99E1DF47FFBE925789 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */,
				E2582A2B3646475BB8918112 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */,
				3FBCAE79E64C4A3BBC988FFB /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */,
				9132360EF9FA41B98DE4DB6E /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */,
				237B0351FCA041E896488B41 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */,
				B025103964DA46138C13A5E9 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */,
				7B29DDE0345245E79179FE00 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */,
				9187AE6CB5DD45AF8923374A /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */,
				4EED04EF73F6444B8E00A594 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */,
				E01144BD5DEB46DEBE1B4F21 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */,
				8BE5798D82674B40AF4C730B /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */,
				C069D74B451E451E8A5750D6 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */,
				F7EB9C4B7E5045F8AF315D04 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */,
				4EF65C9EF410496C8B104151 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */,
				747C14ED79624EF7A28D84C1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */,
				0209349B325E4EEFB9CAB487 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */,
				C6EE26D4551E44729BF4C922 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */,
				21B968CA5DA643588D16C6B1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */,
				92A7C82409E745B3A89EF452 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */,
				80D6884B806E4074BC05D29D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */,
				F18D3DB9D6FB49518ACE5F88 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */,
				9E176F1801E54A588A205668 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */,
				CFA90F972ACC45DA8656281F /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */,
				EEFDA9459B81460F80EC396B /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */,
				EE4DB85BB34048DC9DB28FC0 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */,
				675DF30004144142A495B73E /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */,
				8DF258BF7FD74EDB9615A2F7 /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */,
				C53BFE0BA8E74898B0779AD1 /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */,
				3A234966F3064545B02CB3D8 /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */,
				3AA409360A39444F9FA485D0 /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */,
				A1FB8BF3FAEF446B8B4C159F /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */,
				60541C78A72C40A0942BB842 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */,
				C8B853BA1667413DBD58819A /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */,
				59B66B7B2B6B47CEBAE05A10 /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */,
				B7D04B6E90234D77A02743C4 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */,
				F81A5C42B1E4460E84F1D161 /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */,
				05136F1D3A624BC682EB8D24 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */,
				7D9E36A8CE4C4EB8AA666E9C /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */,
				284B6A4E942C41A7872BE56F /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */,
				4A5C651C4026402C81BAB9E2 /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */,
				3C7BBE4E1C194D26AAB9B9CC /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */,
				F26F51848F464321A44199B2 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */,
				BA1A8F7FEBBC4657BFE726D5 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */,
				E87AFF19341847FBBDF0E21C /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */,
				2BCBD14E19424DEFAC3D8466 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */,
				DC483D873ED643919FAFA6F7 /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */,
				EAAF3D78C49C4DA9B21AD768 /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */,
				CC7FF8E5662B45D9BD12556F /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */,
				D9153959981C4A798FE030C8 /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */,
				F5122DCDA271415AADF5230E /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */,
				0B5766FC122F4DEC8E78A16A /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */,
				E80B95B76F1C44F4A5401CEA /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */,
				EB536BB8A95344868E639965 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */,
				2A898C39DA7A40CF95550DD6 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */,
				B3CC64BDF9E8480DBBCB584A /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */,
				739CF045A56C481B88E38502 /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */,
				6B855A2894A64270A99C19A1 /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */,
				22BE980704F541008BC66592 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */,
				12F42331236A4B8E9063B5EC /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */,
				C6157CD1A08F40D2BFEE1C03 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */,
				2909046F67EC40E38D09A5C5 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */,
				0B658814D757400786E2C358 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */,
				2787AEB4EDAA4AE1AB6372F5 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */,
				7B100FBCE0E94054BB7FD5BF /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */,
				4D541EEF6DFA41E4A48B7B5E /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */,
				3A8552C19FBC453DA67FFE93 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */,
				76A6FE3B0CFB4B938ACFB22C /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */,
				F36A2D93868C4547B345DA2D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */,
				80BDF55C1F344801A8AE50D1 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */,
				81FC10D086E642CCAA530587 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */,
				0F80AC0887604A21919F4216 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */,
				093BB231FEF7463C920559E6 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */,
				D0B67E266FFB4A3286F3122B /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */,
				C58D08DD138D4926A229F11F /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */,
				C3ED45E4FA4944A28786BD4E /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */,
				5E3C207F5C2340689E4CE9D5 /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */,
				7BE5606223904D9ABA69979A /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */,
				74C2255EFB4E41DEA5A3B42B /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */,
				82A6D8C4C06749AEA28D44A7 /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */,
				747E30A717AA42759843DB0C /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */,
				322DB96BBD0B4F1392D5DA36 /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */,
				2D2D53B5A8E244DEB8349BCB /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */,
				75BC07A9E398468B9E723B61 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */,
				CF16BC726C5745FAA1AE8F3B /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */,
				04C79C42BD6A44EC95A1DEC7 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */,
				1AAC6BFC732E4774971F330D /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */,
				B3830A686D064BA0A8C4EFEA /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */,
				8DB15DAE04744113804333A5 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */,
				5F090BC578D54873AF176DF1 /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */,
				1DF17B4F44A94B7ABB2B21E1 /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */,
				7E683B798DDF499F8DB73F99 /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */,
				8AA04B6389A347ED8AA6692F /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */,
				7D33E28573D94F77AF8D76B2 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */,
				F78F3111F4F84803943F4D4D /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */,
				65D5A69AA88544A889A9A582 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */,
				424DEF0556144526A22E8006 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */,
				DC8D239915DE4E0B83EF6BA1 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */,
				79B1374926024B16A5BCBDD2 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */,
				991E4B5B23464138968C3EBB /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */,
				B668F6523CC849A7A13249E3 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */,
				2FF13FF323324950AA44EC89 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */,
				57097CE3FF12421795E4E6C3 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */,
				8CA86B2CCDB547EA83990858 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */,
				A05E79ADCE324057A390DC06 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */,
				28E6C2683B834C09A06F5100 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */,
				AAC88D47279440CA9B739B84 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */,
				AFAF256482C348DEBB0C25E0 /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */,
				1A323A310FC1463486E8316A /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */,
				0D9B37A6AE5D4E089206EA9E /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */,
				CFC6F743A0424EF6BC1DD129 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */,
				5B35E964EF844ADF9DC566AC /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */,
				294361F70EDF497FAF07E57A /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */,
				8AF60F4093A64BC3AF7B9DC6 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */,
				500EC96F83234A5BB9859DF7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */,
				63A0CA92F5B54DB3836E27AA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */,
				709292E1B56840CD873BE003 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */,
				75232A780B8342A4918E853D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */,
				E9F8704BA78D432283A96B73 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */,
				832C9B67F00E4CDAB246525F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */,
				48A7B1D7E0CD4F83A73DEE36 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */,
				C6DA4F2648A34D77938B1990 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */,
				29201C158868448AB3A97C69 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */,
				8C02F6646ED54DBD9C270B87 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */,
				DA92DC5EDCD846C8B70F8755 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */,
				AEF16CE5F21647ECA4EEF734 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */,
				9D4C7A0C626D4BF6B400773B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */,
				D0515E289C23421CA34D9BC5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */,
				0EA934B9AADB427D9C84926E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */,
				B102E2CC8B88432BADFFCDD1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */,
				79971706F70B479FB4753090 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */,
				38F604C93D924D16B037BB3D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */,
				24E33F448EAE4B8B8CCBA2F6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */,
				1AF4AC43C6C64982B296947B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */,
				CD938578042D4CA4B44EF22D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */,
				CAB138B5A97E4677ADD451BB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */,
				70AACE4E513B49B4B8318BB4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */,
				7507978EE33044B78D94E180 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */,
				8A8775DC918842BE9EA105A5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */,
				8E0E6C840FD74382A3AB40DA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */,
				DC659BBBE8CD48FCA6BFACEA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */,
				3CB8B4DC17C5475BB347C117 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */,
				6C5809F7F8CC4595B1A95242 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */,
				81BBF3099BC345538957C5B4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */,
				094A9CC588FE423BA0421B15 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */,
				96140474C7C847559708CC2E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */,
				C17C5F31EDB145E9ACAF2905 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */,
				2659DD1F2F964361970DE61D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */,
				D52213E92DC74E5FA96183D9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */,
				7869D0D841B44D199C01B18F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */,
				F956AC389A0746229B856EBA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */,
				DD00C7D735B84199A54382B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */,
				7295A53BC9684626BA1A91E8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */,
				99FC42F9F2A449DDAB4853AC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */,
				676C2B32D2CC40418C2C58BB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */,
				05E56A9D051D4ED8A1F8F757 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */,
				9A6BDB0FF19A4EA8A53D5823 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */,
				D1A68E6F18B746E4B04186AA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */,
				8B041B68AA4342DB8D2AB9C1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */,
				5FE9D4A7B89C409CBCD6E883 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */,
				4C6FDAB63B6F4465981D636E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */,
				32743D5DA2004B1BB7461F25 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */,
				E96F5CD1F27F4190835BEF35 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */,
				DA4E6C8699534160AC5CCDAE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */,
				7B55C528748A47988D9F11BE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */,
				FD154EAD627D45B6A3329024 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */,
				7541582BC28C43F7BB0F49D8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */,
				B848D6EEED564BDE9B9A1967 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */,
				4EE8A55F15F34118B0CAB1B8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */,
				E9810777B7194CE7B2D6ED42 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */,
				8CBA6FADDB864677B82CF55A /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */,
				83235CD828F8494EAD498F2D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */,
				F7A4DFC911BF4A12A8AE20D4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */,
				E9E8A49A0039435A8E5DC518 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */,
				8F4C73EA8434474E8E333554 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */,
				FCFA0850C8774E8298994F1C /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */,
				924F19C37C0B479FA1C3711B /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */,
				B8EB1532586B4EAD8000FE25 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */,
				45A763679AC9495FA266BCD6 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */,
				FC1CBEC909F04663A4F7C3A8 /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */,
				7F377FAD7D9F4C7394B1B9CA /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */,
				527D16F237FE430C9F4415A4 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */,
				9CA64F3BEB144E9E8D181F0E /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */,
				CCBE128ECF2B402490CD1DBC /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */,
				9DD906C87F6E401BA20CB9E6 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */,
				C9E119B0097F48C682676C19 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */,
				5D3E515D25F14F8BB738D5B6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */,
				A9FE5F5B7C3544AB824A1F54 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */,
				9355595D8DBE4728A10B9616 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */,
				BD69760FAED2409FA2776AD3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */,
				7D3DF1D470AE423A94C17AB9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */,
				8AFA8943D51C4DFBB71E45C0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */,
				7AC6586404DA453CAD41CF99 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */,
				4D435AE7B8AF48189F352344 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */,
				2DDA8D06883B4BE089BC4DF8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */,
				73B4F83F6A77481F85E94F69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */,
				F49AB2A6A08B40CEB0BADCC4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */,
				DF8EAA0734914080BE07D467 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */,
				F08D9D1D05164741B159DBE8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */,
				E900BA93842C4EFA94D8A383 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */,
				4C026F5FA94A4646B9F4473C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */,
				BAF66496B76E40FBA8C925A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */,
				A62B72972BF84C6DBC817192 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */,
				1A11ECC6289240BABE719BBE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */,
				E0C20B6431C949ADA6E33B38 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */,
				CFDAE111A82B4CC2BD51F714 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */,
				94E8D6B182014F1089A36B83 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */,
				E56A19EDDA644B00995E4F58 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */,
				1E5D5807217E43D4B3BAEF0D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */,
				315DBED7EB984B9C8BE07115 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */,
				E533AE081DD840F3AE67738C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */,
				1581071C093D4132A967432B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */,
				FA8AF6148B9941CCA3BC6E31 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */,
				569BCD78EE1243CABE82A5C3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */,
				7D9DE8FCE57448348A2EFE49 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */,
				D58B39B74EF64F9D9E4BBC8E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */,
				491269C8ED664500A29ADA15 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */,
				88B3288F869A4FAA8AEEA37C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */,
				AFD3E886CEAF441EA099B9D2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */,
				F7E7360699664B9ABF467F87 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */,
				4864D2DC281A4D6D9DF9DF97 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */,
				FC2D659D800640A4A09FE79E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */,
				763B75B1C5FE4633AA9FB2D0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */,
				9D2A23CCBD7D4D03A65E0959 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */,
				A1D0370551A74CB4B9C965A9 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */,
				AC65C7B5934C4F71B117F585 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */,
				F992F3FF92D64052A6CD471B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */,
				C57B8984E59B4A128537E1FA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */,
				59BD68E739A344DB9B3D377D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */,
				CC5FBA0339344E06897C7A96 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */,
				6C288425D0A74862A6AF7509 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */,
				2CF896851F27421C9219C74F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */,
				6BDA63A5EAD544E2B564E3A4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */,
				E69673B7CD974EE59E6EF00E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */,
				CAC5C55F76BD439A9573A88A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */,
				83C764EDA19A4BBE834AD24D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */,
				699F30304DFE4BEBAB542457 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */,
				27B86EFAD7D6425D8561B18B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */,
				F7ABC32A6B2F4380BF3B6B60 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */,
				18F016FBC40A454E8883ED25 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */,
				C8D99EDD73104C3EBC22397E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */,
				594AE7CFD0CB493FBE043D54 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */,
				CCD551B4934544D1A4A2854E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */,
				FB2BF946C1C3483B9D0BFEB5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */,
				514BA82B2EFD49D29DC8900B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */,
				BABA1F4557624A6A97020D03 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */,
				CDBEC137B8CA4EB289E0E4CD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */,
				4983430C63FB444FA841A6A7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */,
				E951C5F5153242D4A810FC1A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */,
				EF4B42F6A02C4F16B480D8F3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */,
				C078C1AEC67E4A6195DFA228 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */,
				8B9329232C7544E69F156D69 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */,
				28C766B8114F4FF5B623A2D1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */,
				09EC8E8010D84E9E997FFCE0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */,
				B6B279B56D8342ADA34EE45B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */,
				FD461C9675934C1B8A83916A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */,
				732665E976B14D73A383C836 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */,
				4D57918E67464EF386722FB4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */,
				8F656D2C21B84B01910DEE3F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */,
				1A11F92C07F2450C8CA2D8EF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */,
				13D5D58A434641F8AD08FF43 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */,
				6D9B20FB30F54397909E2B7C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */,
				84285BBA84BA46CCB2954611 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */,
				E9D96E0F5D104E7F8320936D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */,
				D38D1B99A4A94B39A6A48341 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */,
				18AF498E7BB641ECADAAC1C5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */,
				8A0CE028A1344D1BB92433A6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */,
				1EFF8C23E1A24719A4498BEB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */,
				8D8E7F9C07D448C2B9701082 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */,
				9E2DE16FDA8342039F3522F8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */,
				9F462B1E7A03483ABC63484B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */,
				BD18DC4549B44E739CB5FF4A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */,
				86AEB3D812914E40B9C8B935 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */,
				53AD4A4268814C43AAA4EEC1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */,
				BD84FE0025B14D858CDB6E92 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */,
				1E6964F652B642859E60703D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */,
				EFA2A17DDC694457A0FA6EBF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */,
				A6B9F8BAE6A24B3FB3CB0618 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */,
				231007C4CAC3484AA4389D45 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */,
				27166F09E10046BB8B7D2D9C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */,
				3D1FE607E92849868DB54A27 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */,
				B3EF1A3D74524768B10D4CF3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */,
				3A2B0471A62C40A5BB785AB5 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */,
				91DF25B5660E4DDEA555842D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */,
				248F65F266B944869C13D09E /* /Users/heiner/git/QuantLib/ql/models/model.cpp */,
				3F1F46DE4B454F2F910CEA7F /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */,
				5C816041D67D49209C04C63F /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */,
				B13B91F2BD9C4099A5AB269F /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */,
				B11C67C41A7D4C1EAB223EA3 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */,
				B6BE8DEB6EBB4C4B80E70D5A /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */,
				5984B136FE1E4CA4BFFBE111 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */,
				AC8A95C007944265BFB48BDA /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */,
				F6E7BA0E151244F8BD7E4013 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */,
				F91FC3D859AE4A86AD9398E1 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */,
				CEDAAD2DD8934F19A96EED26 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */,
				277CD2C792C44822BAE99534 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */,
				CB0E7F4B2FED4DBE8E394290 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */,
				1D0E0183A5A24BE89F47A8DA /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */,
				12C70FB1931F498DB3E702AD /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */,
				D21105178DD24FF5827CDF82 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */,
				84C448ED1FC544AEA8D87BFE /* /Users/heiner/git/QuantLib/ql/money.cpp */,
				4A081B59C6CD44F9813CAA50 /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */,
				07110DE470364354A73E37C3 /* /Users/heiner/git/QuantLib/ql/position.cpp */,
				B7A8C0D48A6A4D0BA5A1F357 /* /Users/heiner/git/QuantLib/ql/prices.cpp */,
				EAEB352C0FF04DAFBE0A2A78 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */,
				E452F437E3584E5EA9D4B1B8 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */,
				BFA534655E044B95A47EDE40 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */,
				333E089C444C41F688E4E4DC /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */,
				69B685DCE64F4EFCB3ABBE3F /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */,
				F6F7536FE87346AAADC30722 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */,
				13BCA609234C433EBFCA3C2D /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */,
				FE24CC8F9FF3430CB87267A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */,
				5ED8E7E9D99143E497D890BD /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */,
				ACAEE25BA5DB4C90A72DB7BB /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */,
				17E3E6AE9B24490CA550FA76 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */,
				005539B2444648F788C5B539 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */,
				15662457E8894139BEC8286E /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */,
				77329981F9C8448B8B654D9A /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */,
				3CB1C2F92EA54C419C19AB0A /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */,
				3991E8AB8B0D4A7AA60E9FEF /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */,
				7798E3B84E9943288EAF8776 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */,
				B486ACA2A0E14639A6F62F92 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */,
				6AF765025F4C4604B83574E7 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */,
				E2AC8F0D8BD746B2B682D121 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */,
				4279B663ADA64F6E9A8FE62A /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */,
				C0DA93610C7748589F09495E /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */,
				FEB34C76042A4C9B8C2D94B1 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */,
				08468F06E037471EB046C246 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */,
				AF59D392CCC54852BF1B6FBF /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */,
				AFD2A6FD25F14D2D8EB9B34B /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */,
				DF70903087A74D5C8201D8A4 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */,
				F665CCEBC3EE40899A0A3357 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */,
				6665048E02BD483598823196 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */,
				7D85A1207DC74E16A70921B7 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */,
				7B82ADA8A38D4980946370B6 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */,
				F2FC14DE01E0480AA82F57F6 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */,
				DB5B6E7DFEFE4EA1A5548BE2 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */,
				B36CA79FE2FD4A21B3586743 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */,
				0B6D4FB624FF448EBC3145EC /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */,
				EF4505B257344E27B92BB7DC /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */,
				97D178E1C1B040CE9BFF1764 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */,
				447A693DEBBB4CC8AC2F1597 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */,
				C10CF98590594C17B559F27F /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */,
				5C620177FD7740D2A2166B84 /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */,
				05E5B57943884E228FF266B5 /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */,
				A6930174A79246B2BA5E9155 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */,
				30E074B5C9834DF59F922EBE /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */,
				E68ACA4971434AFDBBC5AF88 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */,
				1A40388D3CEE450082616841 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */,
				26F0DD1EC3F24B2D8C48D5E7 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */,
				C93AE3DA5D0D4D0AB4A78CEE /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */,
				8DCA65A7ADCA4D3FA644E7B7 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */,
				B5C24BD7D0104985981A7B18 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */,
				512F1BDC43B941248025E8E3 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */,
				A3F0B47019C2413FB69742D8 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */,
				E700CD615B3A4D4EAA8C4C70 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */,
				C70AD3D05DC24162B6C7787B /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */,
				5C9988CE8DC040E5A68FD638 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */,
				7C2607F8710E4A008ECBF633 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */,
				201E13503FEF40529B8E7FC5 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */,
				66EA84392B7743B78AB63604 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */,
				F1DF290A8E70484198C1D677 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */,
				29B9B1F0EE694DDC9E3CABEC /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */,
				F046DA4E45D947749812F1C3 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */,
				9D45898DBE2640DFA5A142A2 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */,
				3FFB985E249F4A97B1D1FE7A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */,
				69E8B4B04866445E90CAC025 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */,
				C6D1DE782D2A49BEB867DFC5 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */,
				C97E01B743804411A6CB7EE6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */,
				A3AE175951BE478483F6FB69 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */,
				3C4D8977A9224F6981AEDA36 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */,
				1C52CCD45B7E4B34911AF299 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */,
				8EA8DF7D12C14B748F00B3AA /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */,
				4707934A14634EE0A31AF631 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */,
				DD248830D0F947489C6F1EF9 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */,
				A83133DECB9F497789B347E7 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */,
				049D885BE515403CB3C35D28 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */,
				E27F7F7DBA0C413098E88C27 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */,
				4A21C23677CE4B38A20AF193 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */,
				E560D4009C99429CAB66A15E /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */,
				D7A9615A993446D59C6EDB81 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */,
				07EE81E4B2BF4C58B642E08F /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */,
				B849455A43EF437F965C4E89 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */,
				8EEF4C2FB03A49F78FD6AFDF /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */,
				C0711ED3D72A4CDC936C03D2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */,
				C78F8F3A752C4F44A521863C /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */,
				DE600F76968B4B83A1437225 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */,
				5E8C109F1CCF42B8B1CB31F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */,
				032B7EF5705F4F55A97F64C2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */,
				2CDACC5F9B6040E599105515 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */,
				F3A5E828441B40CCBAB7654D /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */,
				FE7EAD7BAAA64A82A100F49A /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */,
				D3E8562E92144852B863D8E0 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */,
				47943A40E9AD4E18BEC70497 /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */,
				442865E175244A99958C71FB /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */,
				51EDF997673C4BC8B5DA10DB /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */,
				7DF651B67E62482B8AC7C614 /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */,
				A435D042E0734F4D9187FC81 /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */,
				91FE9D337C51445CAB50BF05 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */,
				6DD41C45AC5C4CA3BB9E4652 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */,
				F396C86A5464475EA749F724 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */,
				53F514C931404DBBB7CB8E56 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */,
				67B832D3C1684CC08526A85E /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */,
				10C3CB17EDA141A0911623CE /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */,
				67442A234B9E4A608FD97268 /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */,
				5422B29A20A449D781A83D6D /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */,
				AA7291F478C7494ABE0ED3ED /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */,
				DABEF55D55384DDB9E6928D5 /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */,
				3FE94898903D4DC1BC39EEB5 /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */,
				6D8B3EE1266B40F180BFC304 /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */,
				5B58E813A8594AB8BC9DAAC3 /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */,
				0CCB28307A9048B089A293B8 /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */,
				B8CAB736F60E4998A9801EDD /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */,
				0ED7EEB6EA494299AEDD9BF1 /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */,
				A0929168A9A84E1A8400337E /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */,
				834883F7F49B4212B5F9DD76 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */,
				8662941B923C4676998EC28C /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */,
				E3231713A74C41C880788994 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */,
				1D8FB7AF3C984DEDA22CFC3C /* /Users/heiner/git/QuantLib/ql/settings.cpp */,
				4CA370CB5F23433B9719D4A3 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */,
				835474DBECC14473A6D38E44 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */,
				A93F4B2DB9DB472BB1E5CB14 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */,
				6A18D0197B3E479EA75A617D /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */,
				4F8243139B9D4C33876BCE79 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */,
				C07BE5D0685B48AD97B38974 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */,
				E5528AD471814876A738E403 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */,
				50200536C0C44B448E2B102F /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */,
				68421CB874DA45D39E0435F8 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */,
				5A8D4210A6354102AD50E2F7 /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */,
				58A529E1807F402990AF36B7 /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */,
				C5B08D88DF6447DC9C4119F4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */,
				F1A8A5E2B63142A08BE49CEA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */,
				8259CF4592E84690A0E2D3FD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */,
				920645A9EBE446518CAA2E09 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */,
				3D323364DCCE418FBBBBD6A9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */,
				43BE473FFD1D4A0785E42909 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */,
				4D7CD54E755848A58FF4C455 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */,
				A49111BA2E81408B8543106F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */,
				FAF65FE9FF864C1AB6B13A55 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */,
				DE206B9A33F84897A4F30FC3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */,
				32F01A9A7E9C4E82A6E3190C /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */,
				CBCE4BD3400145AAA5ED5FC8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */,
				34B14CC3870E4EC688F8C25D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */,
				A00EBA572614403986A42D8F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */,
				F04E44F4799E4CF685FB9D43 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */,
				0D0C29F94BF24C3390B672ED /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */,
				38F68790BDAC4BDD9363F0EC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */,
				AC5DF45CFC8B475B86FE28C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */,
				B81428D214B9479C8D335D89 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */,
				CAD57217BB524E60AC745F30 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */,
				DFCD87A826F44FCCB19DFFF5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */,
				CF14B90C3652461394952595 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */,
				9223F4EE266C4CC9A7C2438A /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */,
				2143FFA4C9CF4EBA90816332 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */,
				26117F7136074C3EBFD959B6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */,
				A980C35B076045BFB0B303AD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */,
				53C8FBDDCB7A45B781622AFC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */,
				5C26472E3E88415DB86F8A2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */,
				9F4E1B2C75984B0DBBC960B1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */,
				CD3DF5F54A0146238C860096 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */,
				4CEC4655B7804853901D53D9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */,
				87C759C95E164FCAA51F11BA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */,
				10B781296F414533AAC860FF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */,
				08F600EA4D39476D83A1B2C6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */,
				1B2EA04A84FF41B099E7AAEC /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */,
				F60C5F030A2A427DB23F0FAE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */,
				E0B8D04FD29E4ABD8965AAB2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */,
				C296680A73984EA390043DF0 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */,
				B1E843C6D8FC46AA8170942F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */,
				A608C319566949839CBF912E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */,
				9B219D3AE9A04C44B99339A2 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */,
				9FFE155E44ED4A4CADEA1F6E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */,
				EDD8F2799153422687A09A89 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */,
				015E77E7E506483DB1ABDC29 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */,
				3A183AFAD9794465923A50F8 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */,
				410CF7668AA943FD9BC61816 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */,
				3B05CAD8FB0F4FED8187844A /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */,
				806B8B51C85D4A35859DD7F4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */,
				1A1B3E536ED94CAA8E431144 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */,
				59F77A0CC9C94141A61D6E83 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */,
				20883A87005341169C264E11 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */,
				7E79CC08251342EC83044FE4 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */,
				A86367E23C714AFE94E012F8 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */,
				1A50EA37A6F7443FB718B908 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */,
				F4DE4A8FE6DF44049443CBAB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */,
				54BF2690BEFA45918BD604CB /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */,
				42F155421F214390B5676951 /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */,
				B0AD6446C4EE44B5BE28325D /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */,
				84777C9C275C448FB266CB47 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */,
				CA8D9F75A24240BA97AE5B0D /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */,
				6AFFBCB3943E4AE7B9652432 /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */,
				93D1F517B13F430CA73E04C8 /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */,
				9FAAAF6105284A2DBCEB2672 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */,
				8FA1DE4A209E469DAA30CC60 /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */,
				FDC5189F958E4BE4B1A16BE3 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */,
				41E0BCC9C3DC433E97A98A11 /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */,
				9E3D358CFBD44655BB5689D2 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */,
				A426AB100F1740E59B15B01E /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */,
				D1AE78D1CD5C4046A7E84426 /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */,
				D4357B9450DE4566B90D5638 /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */,
				F1855E553B36437D993EBAA5 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */,
				A6D2B9BE2B46492386BBC8B0 /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */,
				00F19A67DB784F1F99D28C1F /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */,
				1967A6DD65D540C1B1E8E43F /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */,
				25B8103969284C1BA88B8CBA /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */,
				2EE5882C8BD84F8A8B2376B1 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */,
				706A11C40F4A4C64AF0AEE4A /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */,
				1E202ACDA9DF44BBA1E83CFE /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */,
				6213550F83C643879451C3C1 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */,
				16D8D18A487449F0AADDC2FB /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */,
				54A06EFB87534399B7B90F62 /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */,
				6A6563469DBA4DCE8386F29B /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */,
				383D9E77173642188B6B6791 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */,
				DC6C0BEFE05C4B90ABC18162 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */,
				1EB68D2EFD7D4CDF8D31791D /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */,
				929B103A6C1D42228386B39E /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */,
				8D857552F94348A1B5D6B50D /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */,
				BDB25241E2D449ADB9B4B9B6 /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */,
				09984066FA9E430C8C0B1CE9 /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */,
				6D5CD35B4E504BE5BE651381 /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */,
				C4D128C73D144A17A1133B7D /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */,
				991C334A5C0B43EEB6C1351A /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */,
				4226B2143D4249C78896ED43 /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */,
				C56C04A5774B4DC685F08736 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */,
				75D6A4A0390D4D27A6483B7E /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */,
				27623583A4FD435CB1D1663A /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */,
				80B768F78FC247879BC55582 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */,
				6C957F582BC047F582086D4A /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */,
				28464DCFE5EA4EDA9127529F /* /Users/heiner/git/QuantLib/ql/time/date.cpp */,
				7A12916BAFEC40A3AEA1715B /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */,
				AB38DEC09E7846879069193C /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */,
				62AA088AD0954BC9B5C1F597 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */,
				F4AA7038A4F44F71985F6ADC /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */,
				FAABEBD4861446D28E560C41 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */,
				FBC8AE618B0B4F3D96112088 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */,
				1D4AFDF78383474C8E5F83EF /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */,
				5A9664BF83644F1FBBAF944C /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */,
				E23019541EBA468DAE2A0876 /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */,
				A8F90061868D407481F3CEFC /* /Users/heiner/git/QuantLib/ql/time/period.cpp */,
				0C18FAE7EDF9482AB0A617D7 /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */,
				D3C58F4572D1483EB4456558 /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */,
				E3A2A359C3D242BD924DEAF1 /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */,
				CAA4B83A725B4C609F85CFB6 /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */,
				89383483E8184984BBF17B0D /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */,
				C85BBE172E1C413EB31B1CC7 /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */,
				532E57F64D984B44BE02EF6C /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3F7A3D46D79344A1B32DB83B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CD08FE2F0D2742BFAC9B9163 /* /Users/heiner/git/QuantLib/Examples/CDS/CDS.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		48996D8EECE44F59B0B80A46 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39E1596F0C5645958268CBBA /* /Users/heiner/git/QuantLib/Examples/ConvertibleBonds/ConvertibleBonds.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		592BAD6DDD6342F7A1743F71 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F200F05A53334748A7551B47 /* /Users/heiner/git/QuantLib/test-suite/americanoption.cpp */,
				90B7654C36534DC39BE5A5AB /* /Users/heiner/git/QuantLib/test-suite/asianoptions.cpp */,
				12FF13BFAC0F4E389E32EA8E /* /Users/heiner/git/QuantLib/test-suite/barrieroption.cpp */,
				0B734A6B1ABD484BB94913CE /* /Users/heiner/git/QuantLib/test-suite/basketoption.cpp */,
				40E7DAFFD68C4CE293F53449 /* /Users/heiner/git/QuantLib/test-suite/batesmodel.cpp */,
				8BED807D4A164F038E666402 /* /Users/heiner/git/QuantLib/test-suite/convertiblebonds.cpp */,
				9CE7EDEF20594AAB89471465 /* /Users/heiner/git/QuantLib/test-suite/digitaloption.cpp */,
				103AD8F5FA754B118D2D003F /* /Users/heiner/git/QuantLib/test-suite/dividendoption.cpp */,
				524A152E272F4289B309062F /* /Users/heiner/git/QuantLib/test-suite/europeanoption.cpp */,
				BA462FE5CE1F4C208F3F773C /* /Users/heiner/git/QuantLib/test-suite/fdheston.cpp */,
				A8D376EB88934226B8C2988D /* /Users/heiner/git/QuantLib/test-suite/hestonmodel.cpp */,
				5701BA04BDA74DFBAF7961DC /* /Users/heiner/git/QuantLib/test-suite/interpolations.cpp */,
				E18C283AAEE149B596059F6B /* /Users/heiner/git/QuantLib/test-suite/jumpdiffusion.cpp */,
				46B8249EB4B14D0791213D9E /* /Users/heiner/git/QuantLib/test-suite/lowdiscrepancysequences.cpp */,
				7DC980C2661040DFAA6E3119 /* /Users/heiner/git/QuantLib/test-suite/main.cpp */,
				951836E27B2F4941B5B70F72 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_cms.cpp */,
				A88794DB56EB4C1FA7C9BF47 /* /Users/heiner/git/QuantLib/test-suite/marketmodel_smm.cpp */,
				6BAD37651F764A08B1D4214A /* /Users/heiner/git/QuantLib/test-suite/quantlibbenchmark.cpp */,
				59E031D43D36483E8467A1EC /* /Users/heiner/git/QuantLib/test-suite/quantooption.cpp */,
				C83474C790B5474392C59096 /* /Users/heiner/git/QuantLib/test-suite/riskstats.cpp */,
				6C068547E4134CC397B4D847 /* /Users/heiner/git/QuantLib/test-suite/shortratemodels.cpp */,
				CFC8B947087745B2BEC6FDB9 /* /Users/heiner/git/QuantLib/test-suite/utilities.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5BD045926778420D896B1190 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9709282ED74147508604B11B /* /Users/heiner/git/QuantLib/Examples/BermudanSwaption/BermudanSwaption.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		62039BB9A9844615834F11F0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A9EF6505190E435D8B01D191 /* /Users/heiner/git/QuantLib/Examples/LatentModel/LatentModel.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6880B32D536E400E830603D3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4982A2D600F54B7C808CC85A /* /Users/heiner/git/QuantLib/Examples/Gaussian1dModels/Gaussian1dModels.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6B5423C9401F41049629DDEF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				505472C6435544C887810666 /* /Users/heiner/git/QuantLib/Examples/FittedBondCurve/FittedBondCurve.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		851818344C1E4DAB9B8EAAE8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				47C789E78F45443E8DD77B45 /* /Users/heiner/git/QuantLib/Examples/MultidimIntegral/MultidimIntegral.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		894A07082A7E4811B15BC2CE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F555F1421C84456A892108E9 /* /Users/heiner/git/QuantLib/Examples/FRA/FRA.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		91CDB35AAC144AB6A3619ABD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				42045F366A0643CEA4D3A134 /* /Users/heiner/git/QuantLib/Examples/BasketLosses/BasketLosses.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A6EB5B3EDD47484F9E761E45 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F52F313DF84540D5B8B08EE2 /* /Users/heiner/git/QuantLib/ql/cashflow.cpp */,
				776C6B7D8CEF458AA1166C6A /* /Users/heiner/git/QuantLib/ql/cashflows/averagebmacoupon.cpp */,
				6B7F1ECD92A34B4CB99AADC0 /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredcoupon.cpp */,
				51A44D9B82774609A1A0FC1F /* /Users/heiner/git/QuantLib/ql/cashflows/capflooredinflationcoupon.cpp */,
				F0021C96FB044391B73B25FA /* /Users/heiner/git/QuantLib/ql/cashflows/cashflows.cpp */,
				C4FAA72382B9490BBD641126 /* /Users/heiner/git/QuantLib/ql/cashflows/cashflowvectors.cpp */,
				63B9A6F62A4345A3BEE1757A /* /Users/heiner/git/QuantLib/ql/cashflows/cmscoupon.cpp */,
				9FD13D8545D64431B426CDF5 /* /Users/heiner/git/QuantLib/ql/cashflows/conundrumpricer.cpp */,
				0E4B9AEF745C4DF5AB992FD6 /* /Users/heiner/git/QuantLib/ql/cashflows/coupon.cpp */,
				00F442917C4A45A2873F96E9 /* /Users/heiner/git/QuantLib/ql/cashflows/couponpricer.cpp */,
				58858A5B499A45A18708B946 /* /Users/heiner/git/QuantLib/ql/cashflows/cpicoupon.cpp */,
				DDD20D230A6148F4BC76D10B /* /Users/heiner/git/QuantLib/ql/cashflows/cpicouponpricer.cpp */,
				715645061AEB424B99607880 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcmscoupon.cpp */,
				2A0A2BBF496D4960AA9AF199 /* /Users/heiner/git/QuantLib/ql/cashflows/digitalcoupon.cpp */,
				04E55FFB17FF41B6BB7616EF /* /Users/heiner/git/QuantLib/ql/cashflows/digitaliborcoupon.cpp */,
				0152FBAF10954CF5A48C1411 /* /Users/heiner/git/QuantLib/ql/cashflows/dividend.cpp */,
				DAB256371D914CE896BEF143 /* /Users/heiner/git/QuantLib/ql/cashflows/duration.cpp */,
				639FB6361ECE4C8DB61CCDB3 /* /Users/heiner/git/QuantLib/ql/cashflows/fixedratecoupon.cpp */,
				06C12C9339044E1E9DA50A75 /* /Users/heiner/git/QuantLib/ql/cashflows/floatingratecoupon.cpp */,
				E19024A3C30D4CECBF679BA4 /* /Users/heiner/git/QuantLib/ql/cashflows/iborcoupon.cpp */,
				CE37718C3524485BA1EEBE86 /* /Users/heiner/git/QuantLib/ql/cashflows/indexedcashflow.cpp */,
				2C6868C1F4904C68ABB6C92E /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcoupon.cpp */,
				E0C53B55996E49C1BA0A4093 /* /Users/heiner/git/QuantLib/ql/cashflows/inflationcouponpricer.cpp */,
				05487288409F4304A185783F /* /Users/heiner/git/QuantLib/ql/cashflows/lineartsrpricer.cpp */,
				93B5925602054E799EE4157D /* /Users/heiner/git/QuantLib/ql/cashflows/overnightindexedcoupon.cpp */,
				9E7A02A354D74006964BFD4A /* /Users/heiner/git/QuantLib/ql/cashflows/rangeaccrual.cpp */,
				D9357BC05B91461789FA348A /* /Users/heiner/git/QuantLib/ql/cashflows/replication.cpp */,
				B0C79FED00BD4CB5BE8892DA /* /Users/heiner/git/QuantLib/ql/cashflows/simplecashflow.cpp */,
				98691419E1304E8BAEBCB8A4 /* /Users/heiner/git/QuantLib/ql/cashflows/timebasket.cpp */,
				9E603AB9A3274F578E3BFBB1 /* /Users/heiner/git/QuantLib/ql/cashflows/yoyinflationcoupon.cpp */,
				77B0F0454BFC4B0EB74E7805 /* /Users/heiner/git/QuantLib/ql/currencies/africa.cpp */,
				5C6A8467AF644D5FA4F756AD /* /Users/heiner/git/QuantLib/ql/currencies/america.cpp */,
				FADA730491064AD6A8E2C7EF /* /Users/heiner/git/QuantLib/ql/currencies/asia.cpp */,
				09A1D14FB21F431BAEB57E6A /* /Users/heiner/git/QuantLib/ql/currencies/europe.cpp */,
				6D8A271768AE483A9B8C97F9 /* /Users/heiner/git/QuantLib/ql/currencies/exchangeratemanager.cpp */,
				FF43CCBCBCB04921B7181708 /* /Users/heiner/git/QuantLib/ql/currencies/oceania.cpp */,
				99A1A52C3AD04C8FA96B9E2B /* /Users/heiner/git/QuantLib/ql/currency.cpp */,
				BCB69D6F58C343728B1B2EDA /* /Users/heiner/git/QuantLib/ql/discretizedasset.cpp */,
				4FC01D4971644E59A11F6A23 /* /Users/heiner/git/QuantLib/ql/errors.cpp */,
				4A9DD1AFC27E4F68B6BE3BA5 /* /Users/heiner/git/QuantLib/ql/event.cpp */,
				55CC944B4C4B4F04B13BB38F /* /Users/heiner/git/QuantLib/ql/exchangerate.cpp */,
				EC0CDD6197994D90BFF9F7EB /* /Users/heiner/git/QuantLib/ql/exercise.cpp */,
				EE848F713D0A41E5AFF2375B /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingcmsratebond.cpp */,
				D984612626E84CE5BDC24024 /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfixedratebond.cpp */,
				95F8D0B62B06430C9E8E4C1C /* /Users/heiner/git/QuantLib/ql/experimental/amortizingbonds/amortizingfloatingratebond.cpp */,
				7A9AFAC0531743EFB7006760 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticaverageois.cpp */,
				33265CB07D1D4171B2F8296D /* /Users/heiner/git/QuantLib/ql/experimental/averageois/arithmeticoisratehelper.cpp */,
				BB6DD10FB2DD4ACC98D2F09B /* /Users/heiner/git/QuantLib/ql/experimental/averageois/averageoiscouponpricer.cpp */,
				7A81731A7C3247E8AE8A1A91 /* /Users/heiner/git/QuantLib/ql/experimental/averageois/makearithmeticaverageois.cpp */,
				037C9C27843041A69D77C59F /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierbinaryengine.cpp */,
				4CC1118289424FD88F11C64E /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/analyticdoublebarrierengine.cpp */,
				40CC11A48A454BB99BB7E812 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/discretizeddoublebarrieroption.cpp */,
				5529D5A8201E4A7D97BE9942 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarrieroption.cpp */,
				67D636576FE9420595827FD5 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/doublebarriertype.cpp */,
				89B843AFED5B496A80084271 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/perturbativebarrieroptionengine.cpp */,
				23CDDA09B60A4F6E83CF2843 /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/quantodoublebarrieroption.cpp */,
				0C58F7853B9744C7A9F149AA /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/vannavolgabarrierengine.cpp */,
				2F7DD27B6311411E9FFF767D /* /Users/heiner/git/QuantLib/ql/experimental/barrieroption/wulinyongdoublebarrierengine.cpp */,
				858BE03E3721470394165D03 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/blackcallablebondengine.cpp */,
				309ED5CD42EC47A5A936949C /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebond.cpp */,
				4A9BD45AD17B4C7690A56E50 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondconstantvol.cpp */,
				918276D264CF4A34B76C066E /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/callablebondvolstructure.cpp */,
				20F56D0D97F145FFA54C1102 /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/discretizedcallablefixedratebond.cpp */,
				4179538C85854CE18B8E029D /* /Users/heiner/git/QuantLib/ql/experimental/callablebonds/treecallablebondengine.cpp */,
				4419E6FFF4CC4E82B981248D /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catbond.cpp */,
				88B14EC560AB4B408631D8F7 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/catrisk.cpp */,
				146C71B2A578451BB0F60E4D /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/montecarlocatbondengine.cpp */,
				1242632591D14BFABFE88440 /* /Users/heiner/git/QuantLib/ql/experimental/catbonds/riskynotional.cpp */,
				5D61C70A1C2D4CE68A2B5935 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodity.cpp */,
				CB40A7FA02BC4186A95BDCFC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycashflow.cpp */,
				E2997AF3236D4A979C46D7DC /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditycurve.cpp */,
				17829D8738614472A7DE14C9 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityindex.cpp */,
				6176921829214796A2E63B6D /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditypricinghelpers.cpp */,
				006B827020084468AFA79534 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditysettings.cpp */,
				AAA47F56EEA742B4A6789F65 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commoditytype.cpp */,
				32037E29AB7C41D7A57C08FB /* /Users/heiner/git/QuantLib/ql/experimental/commodities/commodityunitcost.cpp */,
				D8F68BADEBAF4887B5EA6B6E /* /Users/heiner/git/QuantLib/ql/experimental/commodities/dateinterval.cpp */,
				4C68C053AF4E4B7DB624AEE0 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energybasisswap.cpp */,
				62351A188D0F4CEEAE632B48 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energycommodity.cpp */,
				ABC6DF930AC247C4B9F8D1AA /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyfuture.cpp */,
				E2A80EBAD60648D382623288 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyswap.cpp */,
				0333E026574746C2B989545A /* /Users/heiner/git/QuantLib/ql/experimental/commodities/energyvanillaswap.cpp */,
				7D0DBF7162EC403FAF0CAD6C /* /Users/heiner/git/QuantLib/ql/experimental/commodities/paymentterm.cpp */,
				0194AA1355A34DBA8E14CCC2 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/quantity.cpp */,
				0E4B013FE6DF4567A4F4738B /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasure.cpp */,
				4D3A9DC28D0B4D618AA44A97 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversion.cpp */,
				3E0A84B43299472AA1EB7816 /* /Users/heiner/git/QuantLib/ql/experimental/commodities/unitofmeasureconversionmanager.cpp */,
				D4B582DBC376480A8EBEBE38 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/convertiblebond.cpp */,
				974CC72A7A8644ABBD212A55 /* /Users/heiner/git/QuantLib/ql/experimental/convertiblebonds/discretizedconvertible.cpp */,
				DF1C21A6C6DD4E8297C26DD8 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/cmsspreadcoupon.cpp */,
				BE090F79D5C34D0B92508B45 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/digitalcmsspreadcoupon.cpp */,
				AF503E37545647BE976EDF58 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/lognormalcmsspreadpricer.cpp */,
				BB1B916DD74D49549DCB06DC /* /Users/heiner/git/QuantLib/ql/experimental/coupons/proxyibor.cpp */,
				64016383F445468D93336EFF /* /Users/heiner/git/QuantLib/ql/experimental/coupons/quantocouponpricer.cpp */,
				5072E059BD424C1C8BF6A4B8 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/strippedcapflooredcoupon.cpp */,
				FBFD8B68C7154C78945CE6E4 /* /Users/heiner/git/QuantLib/ql/experimental/coupons/subperiodcoupons.cpp */,
				842DF4B826E94A70871E337A /* /Users/heiner/git/QuantLib/ql/experimental/coupons/swapspreadindex.cpp */,
				6F6E8AFA4FB34BDDBB0914B8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/basecorrelationstructure.cpp */,
				F29C1D846D984943B71058CA /* /Users/heiner/git/QuantLib/ql/experimental/credit/basket.cpp */,
				B71EB8A245CF4C8DB5CD3203 /* /Users/heiner/git/QuantLib/ql/experimental/credit/blackcdsoptionengine.cpp */,
				CD32B518A20D425587E89872 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdo.cpp */,
				1E269A1822AB491F84ACB419 /* /Users/heiner/git/QuantLib/ql/experimental/credit/cdsoption.cpp */,
				2E75EA101B4743EF8B1A2605 /* /Users/heiner/git/QuantLib/ql/experimental/credit/correlationstructure.cpp */,
				E1ABFA8720224DA4A5404806 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultevent.cpp */,
				01E695A2D2C74990A2B7EED3 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaultprobabilitykey.cpp */,
				214E55E5DB094EB5A5B60DE0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/defaulttype.cpp */,
				F3ABFDD7DD674204B359A547 /* /Users/heiner/git/QuantLib/ql/experimental/credit/distribution.cpp */,
				5875881E72B64110B93DCD48 /* /Users/heiner/git/QuantLib/ql/experimental/credit/gaussianlhplossmodel.cpp */,
				E13E45C6874246A581AC9099 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralcdoengine.cpp */,
				D568DB6980A94DD4B9ADC4F7 /* /Users/heiner/git/QuantLib/ql/experimental/credit/integralntdengine.cpp */,
				F721F3A5442F4A06A4AE1E89 /* /Users/heiner/git/QuantLib/ql/experimental/credit/issuer.cpp */,
				F0E5A9C21082494A8FC5881A /* /Users/heiner/git/QuantLib/ql/experimental/credit/lossdistribution.cpp */,
				6FAFBD8037154CFEB414993F /* /Users/heiner/git/QuantLib/ql/experimental/credit/midpointcdoengine.cpp */,
				6CB07095D7B144639B773DF8 /* /Users/heiner/git/QuantLib/ql/experimental/credit/nthtodefault.cpp */,
				442DF6B8306E41BE8707A716 /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorcopula.cpp */,
				63A6DEDCF9AB4282A520A44A /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorgaussiancopula.cpp */,
				83B55C014FEB4034A3DD2EFB /* /Users/heiner/git/QuantLib/ql/experimental/credit/onefactorstudentcopula.cpp */,
				605BC866BAF1472DA90C0059 /* /Users/heiner/git/QuantLib/ql/experimental/credit/pool.cpp */,
				49116DE190714D9FA8B354FE /* /Users/heiner/git/QuantLib/ql/experimental/credit/randomdefaultmodel.cpp */,
				FC3B90630F694C2789EB7356 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratemodel.cpp */,
				A406EB93E944459D991E4500 /* /Users/heiner/git/QuantLib/ql/experimental/credit/recoveryratequote.cpp */,
				F8FE1FEFADC440138B81D632 /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswap.cpp */,
				C4AFB79C7402487A9ECC78EF /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskyassetswapoption.cpp */,
				55B5FE0C2DEF4517B539CCEF /* /Users/heiner/git/QuantLib/ql/experimental/credit/riskybond.cpp */,
				6E15628B7A174DA4982B90E0 /* /Users/heiner/git/QuantLib/ql/experimental/credit/syntheticcdo.cpp */,
				73C6270AC17F467288A9FEE0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticamericanmargrabeengine.cpp */,
				BDF31BFB79AF4948A4B15098 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcomplexchooserengine.cpp */,
				68C3FA66BEB34CED8F7438E9 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticcompoundoptionengine.cpp */,
				F74CBE4D75CE4711949D44AA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticeuropeanmargrabeengine.cpp */,
				9C9EE42032AE467F868C0EE9 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticholderextensibleoptionengine.cpp */,
				6783DBE2875B4532B92168D4 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpartialtimebarrieroptionengine.cpp */,
				878D4F793723413488026F20 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticpdfhestonengine.cpp */,
				B1B4DB9839AB4456A67411F0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticsimplechooserengine.cpp */,
				5B14E1AE4EA9432F9ED07A4F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetbarrierengine.cpp */,
				60880864D7884F0798532D0F /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analytictwoassetcorrelationengine.cpp */,
				30DFC5BEED4A4036A12C5576 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/analyticwriterextensibleoptionengine.cpp */,
				3711144A89294B73A4027E1A /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/complexchooseroption.cpp */,
				5B48EAA7E46144ACA3072036 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/compoundoption.cpp */,
				39D4B4F9221A445696950F34 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianlevyengine.cpp */,
				7CD8EE66BC814238931D4104 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp */,
				0AE1B36D379E4B7FAA712A25 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/everestoption.cpp */,
				5B826EF36C3E44448C856CC5 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/himalayaoption.cpp */,
				01146FA4DBEB40B4A07B51A4 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/holderextensibleoption.cpp */,
				04F5AD84D9B9497F940DB171 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/kirkspreadoptionengine.cpp */,
				42C294ABCE914F4FB41D17F2 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/margrabeoption.cpp */,
				0543216E708A4161915BC0BE /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mceverestengine.cpp */,
				AFBB9497E8454A268F825D58 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mchimalayaengine.cpp */,
				E74CB7C5C1094E9F965F3DF0 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/mcpagodaengine.cpp */,
				A85A086709FC408EA059D340 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/pagodaoption.cpp */,
				DB238D68D004407A90376C50 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/partialtimebarrieroption.cpp */,
				3751C31DD3D34B25A6761D48 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/simplechooseroption.cpp */,
				C39760CDED924EE5BAE60FFA /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetbarrieroption.cpp */,
				110E419E3CE64C7497660DDF /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/twoassetcorrelationoption.cpp */,
				42DE69B7A22E415EB1F7A379 /* /Users/heiner/git/QuantLib/ql/experimental/exoticoptions/writerextensibleoption.cpp */,
				CE5FB71BA8DC44DAB97D3DDC /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/bsmrndcalculator.cpp */,
				14FBD80AC313446EBBC27A88 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp */,
				62379AB680C54862A1690444 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp */,
				EB3D59FD81604176AB416FA2 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdhestondoublebarrierengine.cpp */,
				40C4F37828E44972AA13E9B8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp */,
				FF001E68E448479A8272165C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmblackscholesfwdop.cpp */,
				AC93CB9A0BF14DF5BC199BB0 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmdupire1dop.cpp */,
				83E94D3A36444B66B19C68C9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp */,
				3F26C0C4812744CE9B5FE7E8 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpop.cpp */,
				E9483E7370B94E62BDFC130D /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmextoujumpsolver.cpp */,
				53616302C84145DE8B720FD9 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestonfwdop.cpp */,
				DD344A3D24A440BA868F1176 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmhestongreensfct.cpp */,
				35AB7CEBEA29421EAF652EDE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmklugeextouop.cpp */,
				2FC62E9D24D54F7BB0EBE09B /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmlocalvolfwdop.cpp */,
				ACC557FB58044B9F8AEF0D91 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmsquarerootfwdop.cpp */,
				37C886FE33FE48F09D35C951 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp */,
				96438079E10E44AA909E473C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepcondition.cpp */,
				2411D9E5450749A88CE69D5C /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmvppstepconditionfactory.cpp */,
				FA6C246AE4134886ADF4F19F /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdmzabrop.cpp */,
				EF077F3F8C344B4AB535FDB1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp */,
				4783CF634D4B453289807734 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp */,
				532D2D7F09F7492DB827C6DE /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp */,
				DBD1123B15E74420B23854D5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp */,
				578EC16155ED4C709FC339C4 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/gbsmrndcalculator.cpp */,
				8100C71E96674DE49E1F6382 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/glued1dmesher.cpp */,
				B5D25A65AA3B470692C862F5 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/hestonrndcalculator.cpp */,
				22755E3C9A5B4518BA630F02 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/localvolrndcalculator.cpp */,
				D76B3E74C7DB4AB0BFC57691 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/riskneutraldensitycalculator.cpp */,
				3C4803CB97D4493185B518B1 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/squarerootprocessrndcalculator.cpp */,
				F942C0835A95491BA2B8D657 /* /Users/heiner/git/QuantLib/ql/experimental/finitedifferences/vanillavppoption.cpp */,
				0446322581CA4C8DBF5A86E8 /* /Users/heiner/git/QuantLib/ql/experimental/fx/blackdeltacalculator.cpp */,
				DB00641A26A7459D8B0C5EA8 /* /Users/heiner/git/QuantLib/ql/experimental/fx/deltavolquote.cpp */,
				2781696F9DC94625AC42568E /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloorengines.cpp */,
				252D87B1535343D9996CACEA /* /Users/heiner/git/QuantLib/ql/experimental/inflation/cpicapfloortermpricesurface.cpp */,
				D5A2D028309C46E4A99A0137 /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoycapfloortermpricesurface.cpp */,
				BE679DAA1B714552898EFD9D /* /Users/heiner/git/QuantLib/ql/experimental/inflation/yoyoptionlethelpers.cpp */,
				C9F61633B44044C28CC6D3A5 /* /Users/heiner/git/QuantLib/ql/experimental/lattices/extendedbinomialtree.cpp */,
				93EBE2456E7B4104BEA532F7 /* /Users/heiner/git/QuantLib/ql/experimental/math/convolvedstudentt.cpp */,
				BD36D2D976AC44278BB1CC92 /* /Users/heiner/git/QuantLib/ql/experimental/math/expm.cpp */,
				5DBD2F9CDCDA444280C09637 /* /Users/heiner/git/QuantLib/ql/experimental/math/fireflyalgorithm.cpp */,
				91B92618BE954453B353CFBE /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiancopulapolicy.cpp */,
				0425FC58A5AC4154BFF04804 /* /Users/heiner/git/QuantLib/ql/experimental/math/gaussiannoncentralchisquaredpolynomial.cpp */,
				426357C9C7CF43C8B677C4FD /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimintegrator.cpp */,
				3166D5C41ECD42F4A4621646 /* /Users/heiner/git/QuantLib/ql/experimental/math/multidimquadrature.cpp */,
				CD955746454A4674B8D5A3DB /* /Users/heiner/git/QuantLib/ql/experimental/math/numericaldifferentiation.cpp */,
				D5D7944289AD41498F7E5B14 /* /Users/heiner/git/QuantLib/ql/experimental/math/particleswarmoptimization.cpp */,
				3762FDDE5FF740418357BCBA /* /Users/heiner/git/QuantLib/ql/experimental/math/piecewiseintegral.cpp */,
				1B0E1171CA2649128F83AEC0 /* /Users/heiner/git/QuantLib/ql/experimental/math/tcopulapolicy.cpp */,
				98CCB536278749ECBD4DEA69 /* /Users/heiner/git/QuantLib/ql/experimental/math/zigguratrng.cpp */,
				8BD989CB6472421D9C0738B1 /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/adaptedpathpayoff.cpp */,
				7FF754F0FF4B4D899C36CE4B /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/longstaffschwartzmultipathpricer.cpp */,
				8E3B1585B1174B9EA7B2251C /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/mcpathbasketengine.cpp */,
				9D76F028A44D4B469007ACCB /* /Users/heiner/git/QuantLib/ql/experimental/mcbasket/pathmultiassetoption.cpp */,
				9778881BF07F41E1BB6CB9B8 /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvfdmmodel.cpp */,
				9779F9C53C0342B2ACC8854D /* /Users/heiner/git/QuantLib/ql/experimental/models/hestonslvmcmodel.cpp */,
				7C2929CF3A0642D3BECB637C /* /Users/heiner/git/QuantLib/ql/experimental/models/normalclvmodel.cpp */,
				D2E09617DE97442FB8C21183 /* /Users/heiner/git/QuantLib/ql/experimental/models/squarerootclvmodel.cpp */,
				D3C8D066A4C446BA847B3FA8 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedblackscholesprocess.cpp */,
				6B1CF7A5F08848199EFF8486 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp */,
				F6CC314AF96046BB9FE7F680 /* /Users/heiner/git/QuantLib/ql/experimental/processes/extouwithjumpsprocess.cpp */,
				18B544B2B0944492BC476026 /* /Users/heiner/git/QuantLib/ql/experimental/processes/gemanroncoroniprocess.cpp */,
				FE8CDAC3BCF0486D92666D97 /* /Users/heiner/git/QuantLib/ql/experimental/processes/hestonslvprocess.cpp */,
				DBE0E9331BB04E7482F01293 /* /Users/heiner/git/QuantLib/ql/experimental/processes/klugeextouprocess.cpp */,
				2F2CE04B09CD4B5A8E989D79 /* /Users/heiner/git/QuantLib/ql/experimental/processes/vegastressedblackscholesprocess.cpp */,
				72DAD0BC8663484889161F0A /* /Users/heiner/git/QuantLib/ql/experimental/risk/creditriskplus.cpp */,
				0AD9A85FE4084AED89209453 /* /Users/heiner/git/QuantLib/ql/experimental/risk/sensitivityanalysis.cpp */,
				BB66B3371D624735AB49F939 /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedhullwhite.cpp */,
				2224A9B1F60D4A6281EECB0C /* /Users/heiner/git/QuantLib/ql/experimental/shortrate/generalizedornsteinuhlenbeckprocess.cpp */,
				135D94FCB6C741CDB733F2FF /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/haganirregularswaptionengine.cpp */,
				6E6C082FBADE4967916659B9 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswap.cpp */,
				1C2A2BDC76E446B58D1C3C56 /* /Users/heiner/git/QuantLib/ql/experimental/swaptions/irregularswaption.cpp */,
				2E82D896034041DE94F3CC7E /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/analyticvariancegammaengine.cpp */,
				3316467FEA6544C797857C90 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftengine.cpp */,
				2B62E753AC534B0BA13282CC /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvanillaengine.cpp */,
				6388B23499194C5DB4B02E7E /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/fftvariancegammaengine.cpp */,
				E2605F4839C74A6BAD3F4618 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammamodel.cpp */,
				B3036B62A250437E9246A421 /* /Users/heiner/git/QuantLib/ql/experimental/variancegamma/variancegammaprocess.cpp */,
				9940F506147A42818E7FD0B4 /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/integralhestonvarianceoptionengine.cpp */,
				24B52725D89941B4919D649B /* /Users/heiner/git/QuantLib/ql/experimental/varianceoption/varianceoption.cpp */,
				156876CE80AD487D9CA0D86D /* /Users/heiner/git/QuantLib/ql/experimental/volatility/abcdatmvolcurve.cpp */,
				545636D04487455EA43A96C8 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackatmvolcurve.cpp */,
				67A940649AB64EA18C2A952C /* /Users/heiner/git/QuantLib/ql/experimental/volatility/blackvolsurface.cpp */,
				7BB7DE48EDDB486C9B5954C4 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/equityfxvolsurface.cpp */,
				7A06B611D03C4C96AC4557A0 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancecurve.cpp */,
				E07902D7D3CA4D3CA8EEDB84 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/extendedblackvariancesurface.cpp */,
				E75334220D254493BD7981BF /* /Users/heiner/git/QuantLib/ql/experimental/volatility/interestratevolsurface.cpp */,
				13D63968D0854822A751E8A6 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabr.cpp */,
				A290915716CE4B28B16F73B7 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrabsprobs.cpp */,
				187F11C17A0C4A4E9F800D34 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrinterpolatedsmilesection.cpp */,
				814B58EAA01A4FED9427B326 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/noarbsabrsmilesection.cpp */,
				9A574F0B06AD492BA994DF8B /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sabrvolsurface.cpp */,
				F11C4A2294704362A41E2F3A /* /Users/heiner/git/QuantLib/ql/experimental/volatility/sviinterpolatedsmilesection.cpp */,
				AF2BF78F38BA475D90725159 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/svismilesection.cpp */,
				21A5936992774B20ADACD70F /* /Users/heiner/git/QuantLib/ql/experimental/volatility/volcube.cpp */,
				DD1A6B6D25F0404EA403FE81 /* /Users/heiner/git/QuantLib/ql/experimental/volatility/zabr.cpp */,
				5E42FD2DD0C148D988CD0D95 /* /Users/heiner/git/QuantLib/ql/index.cpp */,
				AB4ED68677B544C9B42B938C /* /Users/heiner/git/QuantLib/ql/indexes/bmaindex.cpp */,
				B676D06D515B4BF8BE77AA15 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eonia.cpp */,
				FD7BEF8F94954DCC94B7FD46 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/euribor.cpp */,
				B7EA602411534925A102C909 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/eurlibor.cpp */,
				E63232BFDAB04D88B44E244C /* /Users/heiner/git/QuantLib/ql/indexes/ibor/fedfunds.cpp */,
				8838047100EA434595907EB9 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/libor.cpp */,
				2C5BB26653E04A04BDC7859D /* /Users/heiner/git/QuantLib/ql/indexes/ibor/shibor.cpp */,
				670B4F56DE8346039447D0E7 /* /Users/heiner/git/QuantLib/ql/indexes/ibor/sonia.cpp */,
				D340D0D142344DFDB100015A /* /Users/heiner/git/QuantLib/ql/indexes/iborindex.cpp */,
				98C3C94E34C644568F117A29 /* /Users/heiner/git/QuantLib/ql/indexes/indexmanager.cpp */,
				3C27635D59C0461E95DEB45A /* /Users/heiner/git/QuantLib/ql/indexes/inflationindex.cpp */,
				F9507D2EB960433C92F587B6 /* /Users/heiner/git/QuantLib/ql/indexes/interestrateindex.cpp */,
				E597B83484304483AD821089 /* /Users/heiner/git/QuantLib/ql/indexes/region.cpp */,
				9C5CA3D358D04D548A24BB26 /* /Users/heiner/git/QuantLib/ql/indexes/swap/chfliborswap.cpp */,
				36F759FD9BF544BE823CB696 /* /Users/heiner/git/QuantLib/ql/indexes/swap/euriborswap.cpp */,
				7C972BEDA353494699B69BBC /* /Users/heiner/git/QuantLib/ql/indexes/swap/eurliborswap.cpp */,
				912FC6254940440D8FFEC298 /* /Users/heiner/git/QuantLib/ql/indexes/swap/gbpliborswap.cpp */,
				675D02F3903342E0BDF7003B /* /Users/heiner/git/QuantLib/ql/indexes/swap/jpyliborswap.cpp */,
				334051D173284FCA8C70AA28 /* /Users/heiner/git/QuantLib/ql/indexes/swap/usdliborswap.cpp */,
				C812621E36A348FA9F62E568 /* /Users/heiner/git/QuantLib/ql/indexes/swapindex.cpp */,
				F2F184E1938B4C91AEF17DAB /* /Users/heiner/git/QuantLib/ql/instruments/asianoption.cpp */,
				0072EB15729647FCBCBBC5A1 /* /Users/heiner/git/QuantLib/ql/instruments/assetswap.cpp */,
				C7E853E1BEAF428D911835E2 /* /Users/heiner/git/QuantLib/ql/instruments/averagetype.cpp */,
				AF970132E6C349EFAB2F43EB /* /Users/heiner/git/QuantLib/ql/instruments/barrieroption.cpp */,
				E2429D70265C47EC82D0204F /* /Users/heiner/git/QuantLib/ql/instruments/barriertype.cpp */,
				447C879F51B34BF3B76560BC /* /Users/heiner/git/QuantLib/ql/instruments/basketoption.cpp */,
				4B07437DBC1E425E826C481B /* /Users/heiner/git/QuantLib/ql/instruments/bmaswap.cpp */,
				6D7C5450629E424F89D7E5F6 /* /Users/heiner/git/QuantLib/ql/instruments/bond.cpp */,
				045C251B8DA548339AAC9965 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/btp.cpp */,
				5777B9528C02456582D5A186 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cmsratebond.cpp */,
				0F4813F6B8A64C2A8780C779 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/cpibond.cpp */,
				96EE5E22D33C4CDFA89525B5 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/fixedratebond.cpp */,
				FD8A3E18517B4CA18418DB5D /* /Users/heiner/git/QuantLib/ql/instruments/bonds/floatingratebond.cpp */,
				0BA84BC646184D02AC4C81F3 /* /Users/heiner/git/QuantLib/ql/instruments/bonds/zerocouponbond.cpp */,
				9E187C6589544158887DEF9A /* /Users/heiner/git/QuantLib/ql/instruments/capfloor.cpp */,
				2638E72FFAAC46F2A5EBB675 /* /Users/heiner/git/QuantLib/ql/instruments/claim.cpp */,
				641BFE42E4A949B1B23B0DDD /* /Users/heiner/git/QuantLib/ql/instruments/cliquetoption.cpp */,
				9C1BAA1159B54016B0F7F693 /* /Users/heiner/git/QuantLib/ql/instruments/compositeinstrument.cpp */,
				6E87D2D117EB4266860D8AAE /* /Users/heiner/git/QuantLib/ql/instruments/cpicapfloor.cpp */,
				866D9E3BF2434704B85589B9 /* /Users/heiner/git/QuantLib/ql/instruments/cpiswap.cpp */,
				1792D3D492064EBEB0DDB0BC /* /Users/heiner/git/QuantLib/ql/instruments/creditdefaultswap.cpp */,
				3850E986C1124650B5825849 /* /Users/heiner/git/QuantLib/ql/instruments/dividendbarrieroption.cpp */,
				F789B3097C934FDD9502A08E /* /Users/heiner/git/QuantLib/ql/instruments/dividendvanillaoption.cpp */,
				3879FC77DE394C1F9CABFFEF /* /Users/heiner/git/QuantLib/ql/instruments/europeanoption.cpp */,
				533CBD4D0BAB4C658C18E5D8 /* /Users/heiner/git/QuantLib/ql/instruments/fixedratebondforward.cpp */,
				2AB96E3B2D7B419190AC7AAD /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswap.cpp */,
				19CDF2EFEB6E4A0D8EE7B6F7 /* /Users/heiner/git/QuantLib/ql/instruments/floatfloatswaption.cpp */,
				36EE73475D8644638DE3ADB2 /* /Users/heiner/git/QuantLib/ql/instruments/forward.cpp */,
				00434447CD2D4EA08218EE10 /* /Users/heiner/git/QuantLib/ql/instruments/forwardrateagreement.cpp */,
				30F944227B584667ACF39E0C /* /Users/heiner/git/QuantLib/ql/instruments/forwardvanillaoption.cpp */,
				1BC7B4174E67480BA15F757B /* /Users/heiner/git/QuantLib/ql/instruments/futures.cpp */,
				327EE9C0249F418B98DFE7DE /* /Users/heiner/git/QuantLib/ql/instruments/impliedvolatility.cpp */,
				485419E7E8844DB791857431 /* /Users/heiner/git/QuantLib/ql/instruments/inflationcapfloor.cpp */,
				9D70A1FD89874A66B5A06832 /* /Users/heiner/git/QuantLib/ql/instruments/lookbackoption.cpp */,
				2A94297245FC4CF4B53251F4 /* /Users/heiner/git/QuantLib/ql/instruments/makecapfloor.cpp */,
				9004C943516444BC9DC63725 /* /Users/heiner/git/QuantLib/ql/instruments/makecds.cpp */,
				4FED8F0BF39D4868B358BF65 /* /Users/heiner/git/QuantLib/ql/instruments/makecms.cpp */,
				B0BA4C819D984EFABA99A702 /* /Users/heiner/git/QuantLib/ql/instruments/makeois.cpp */,
				896E8635CE3448D79DF896EE /* /Users/heiner/git/QuantLib/ql/instruments/makeswaption.cpp */,
				8F21B07DFCD04B1DB79201E7 /* /Users/heiner/git/QuantLib/ql/instruments/makevanillaswap.cpp */,
				2D74FDC954D9490EB065CD67 /* /Users/heiner/git/QuantLib/ql/instruments/makeyoyinflationcapfloor.cpp */,
				C1BE78A2C555419DAB288B9D /* /Users/heiner/git/QuantLib/ql/instruments/multiassetoption.cpp */,
				1A5976681B574B2BA6635E22 /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswap.cpp */,
				C50C6271F5F445DBA92AEBED /* /Users/heiner/git/QuantLib/ql/instruments/nonstandardswaption.cpp */,
				81C4517F51094811AAEE2BF5 /* /Users/heiner/git/QuantLib/ql/instruments/oneassetoption.cpp */,
				B2186BD1E2214F90A31E3208 /* /Users/heiner/git/QuantLib/ql/instruments/overnightindexedswap.cpp */,
				4B5F8B7AAA6648EE97766E4E /* /Users/heiner/git/QuantLib/ql/instruments/payoffs.cpp */,
				EA18EA24F3014B9DB6430B99 /* /Users/heiner/git/QuantLib/ql/instruments/quantobarrieroption.cpp */,
				E46D056BD5BD49DF8CE5F322 /* /Users/heiner/git/QuantLib/ql/instruments/quantoforwardvanillaoption.cpp */,
				B89A49793D3149A89A244310 /* /Users/heiner/git/QuantLib/ql/instruments/quantovanillaoption.cpp */,
				AEECD6800C3C4E86AE43E084 /* /Users/heiner/git/QuantLib/ql/instruments/stickyratchet.cpp */,
				DD882928FEBA485DBF155AD4 /* /Users/heiner/git/QuantLib/ql/instruments/stock.cpp */,
				39448A9D82F947488F3A410C /* /Users/heiner/git/QuantLib/ql/instruments/swap.cpp */,
				3A0C1A36DF07482EB301B8F1 /* /Users/heiner/git/QuantLib/ql/instruments/swaption.cpp */,
				0EB4836B919F4ADA8949A159 /* /Users/heiner/git/QuantLib/ql/instruments/vanillaoption.cpp */,
				A3B3399BF1204DE482FAB58B /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswap.cpp */,
				3D7C365F26BF45319355696D /* /Users/heiner/git/QuantLib/ql/instruments/vanillaswingoption.cpp */,
				3BA0A6EAA2BB4D7DA5338161 /* /Users/heiner/git/QuantLib/ql/instruments/varianceswap.cpp */,
				E7829781FC1844F49F8AA681 /* /Users/heiner/git/QuantLib/ql/instruments/yearonyearinflationswap.cpp */,
				C09C1FE975894ED9A20A6B63 /* /Users/heiner/git/QuantLib/ql/instruments/zerocouponinflationswap.cpp */,
				FFF5DBF90EF644FFBF78A303 /* /Users/heiner/git/QuantLib/ql/interestrate.cpp */,
				124CBD65AEF04C7697C355A5 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarparam.cpp */,
				323CFDE4DE33416DAD0AFF69 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmcovarproxy.cpp */,
				F3A1CB5CBA42456AB841ED16 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmhullwhiteparam.cpp */,
				8F5822D32E67461D9B595EE1 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmprocess.cpp */,
				7BFC16AB832C4AAB899E80F6 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lfmswaptionengine.cpp */,
				8E93FA38CD3A437090933063 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/liborforwardmodel.cpp */,
				BB17C3B4AAD942D39DA97C0D /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmcorrmodel.cpp */,
				8E87AF1D68774DDCB7057114 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmexpcorrmodel.cpp */,
				CAEF2FA6CAF44BE3ABF13216 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmextlinexpvolmodel.cpp */,
				CA7CFDE82C674A23A6ABD8BB /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmfixedvolmodel.cpp */,
				AC5C5195957E41D893EDC822 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpcorrmodel.cpp */,
				D5B2D71AE158455EBF647E2C /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmlinexpvolmodel.cpp */,
				C67005EC98C3490AB789D539 /* /Users/heiner/git/QuantLib/ql/legacy/libormarketmodels/lmvolmodel.cpp */,
				D03F6BC252C0412BAEA3DA53 /* /Users/heiner/git/QuantLib/ql/math/abcdmathfunction.cpp */,
				33FE3B963BB44E5FB684BAC8 /* /Users/heiner/git/QuantLib/ql/math/bernsteinpolynomial.cpp */,
				0142436D7F5D40BE9889AA96 /* /Users/heiner/git/QuantLib/ql/math/beta.cpp */,
				2ED274D11E2F455D959EB90E /* /Users/heiner/git/QuantLib/ql/math/bspline.cpp */,
				2139C81952D84BD0B4D18BA7 /* /Users/heiner/git/QuantLib/ql/math/copulas/alimikhailhaqcopula.cpp */,
				69F351570C0C41FAB66546FD /* /Users/heiner/git/QuantLib/ql/math/copulas/claytoncopula.cpp */,
				9F2940D1645D4F9C8BD9236C /* /Users/heiner/git/QuantLib/ql/math/copulas/farliegumbelmorgensterncopula.cpp */,
				A407FAF615E84FBEB3808979 /* /Users/heiner/git/QuantLib/ql/math/copulas/frankcopula.cpp */,
				985EB4A3F499416C9DEEB208 /* /Users/heiner/git/QuantLib/ql/math/copulas/galamboscopula.cpp */,
				D3D79B7AEE674079BC1033FC /* /Users/heiner/git/QuantLib/ql/math/copulas/gaussiancopula.cpp */,
				3935E5A9CBC243C9A8B88DD6 /* /Users/heiner/git/QuantLib/ql/math/copulas/gumbelcopula.cpp */,
				2E01BED47CED4ADCB4A61DDD /* /Users/heiner/git/QuantLib/ql/math/copulas/huslerreisscopula.cpp */,
				53296AB9375743F7B3776360 /* /Users/heiner/git/QuantLib/ql/math/copulas/independentcopula.cpp */,
				557E4E20D8D44313B70A8A4F /* /Users/heiner/git/QuantLib/ql/math/copulas/marshallolkincopula.cpp */,
				9E49A835889A44FA98B19729 /* /Users/heiner/git/QuantLib/ql/math/copulas/maxcopula.cpp */,
				312F3D3B1FF64D7DADF3CB4E /* /Users/heiner/git/QuantLib/ql/math/copulas/mincopula.cpp */,
				12534F3C277B4DE1949832FC /* /Users/heiner/git/QuantLib/ql/math/copulas/plackettcopula.cpp */,
				F06D18A0F20349BA9F4B0FE1 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatenormaldistribution.cpp */,
				032CEA147FE14EA181DFE1D4 /* /Users/heiner/git/QuantLib/ql/math/distributions/bivariatestudenttdistribution.cpp */,
				3F36E67642754E6C99C829C8 /* /Users/heiner/git/QuantLib/ql/math/distributions/chisquaredistribution.cpp */,
				6BE7D2A3E2FC4659AABD4BD6 /* /Users/heiner/git/QuantLib/ql/math/distributions/gammadistribution.cpp */,
				811A7B5F142F48C2ACE65F4A /* /Users/heiner/git/QuantLib/ql/math/distributions/normaldistribution.cpp */,
				BC7BC3637B9F42EEA189819F /* /Users/heiner/git/QuantLib/ql/math/distributions/studenttdistribution.cpp */,
				4BB1ED6129C54A48BF698222 /* /Users/heiner/git/QuantLib/ql/math/errorfunction.cpp */,
				7CB7FD3AFE794B97BFB30D1E /* /Users/heiner/git/QuantLib/ql/math/factorial.cpp */,
				0681699DDAEE4BCCB731AAAB /* /Users/heiner/git/QuantLib/ql/math/incompletegamma.cpp */,
				9B09A33DDB5845E2BA1604D8 /* /Users/heiner/git/QuantLib/ql/math/integrals/discreteintegrals.cpp */,
				9139EABE9C294E948BC172EB /* /Users/heiner/git/QuantLib/ql/math/integrals/filonintegral.cpp */,
				983100CA7F9F42FFBDF6DF17 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianorthogonalpolynomial.cpp */,
				04428F3AE11C44B180711640 /* /Users/heiner/git/QuantLib/ql/math/integrals/gaussianquadratures.cpp */,
				6E42CF6CDE6148FE81226935 /* /Users/heiner/git/QuantLib/ql/math/integrals/gausslobattointegral.cpp */,
				3C314B0C9AEB41EB9BFAE094 /* /Users/heiner/git/QuantLib/ql/math/integrals/integral.cpp */,
				6E2167CD724843479CBC238C /* /Users/heiner/git/QuantLib/ql/math/integrals/kronrodintegral.cpp */,
				B9639D0D5B5349189747D028 /* /Users/heiner/git/QuantLib/ql/math/integrals/segmentintegral.cpp */,
				BF4EA66CFF8D4BFDADA54D53 /* /Users/heiner/git/QuantLib/ql/math/matrix.cpp */,
				579A482D56CC4BA982FEB704 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/basisincompleteordered.cpp */,
				0C7B81CCBE9541B59DBF95DC /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/bicgstab.cpp */,
				96B7F341C9644DB58212882B /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/choleskydecomposition.cpp */,
				DBC633D880884A1683D02AD4 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/factorreduction.cpp */,
				18B5DE6B549E4F77B19B08BA /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/getcovariance.cpp */,
				405C13F65E244CE89C253E9F /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/gmres.cpp */,
				AEC74E993E8744CCBA00E3C8 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/pseudosqrt.cpp */,
				67FEAE63A01C4F3E975119F9 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/qrdecomposition.cpp */,
				EA22F7922372408894B453CD /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/sparseilupreconditioner.cpp */,
				2A67B1AE47D74165B93FA4CE /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/svd.cpp */,
				12651648278F439D9E4F7DAF /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/symmetricschurdecomposition.cpp */,
				8D19F9112B2C42038EDFD519 /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tapcorrelations.cpp */,
				61032A16A3F8408A8CD4CC2D /* /Users/heiner/git/QuantLib/ql/math/matrixutilities/tqreigendecomposition.cpp */,
				CDA776850235414BA57354B4 /* /Users/heiner/git/QuantLib/ql/math/modifiedbessel.cpp */,
				13207117FB04482EA00F3A2D /* /Users/heiner/git/QuantLib/ql/math/optimization/armijo.cpp */,
				41B7AF8ACED74260BC1D1AF0 /* /Users/heiner/git/QuantLib/ql/math/optimization/bfgs.cpp */,
				13AE58F4BC124A52B9094572 /* /Users/heiner/git/QuantLib/ql/math/optimization/conjugategradient.cpp */,
				C2180AD3D44F471BA0062E47 /* /Users/heiner/git/QuantLib/ql/math/optimization/constraint.cpp */,
				CEFC1B4B66A84A01A57F22DF /* /Users/heiner/git/QuantLib/ql/math/optimization/differentialevolution.cpp */,
				AA8C1AD9775F46C0A7DFA32A /* /Users/heiner/git/QuantLib/ql/math/optimization/endcriteria.cpp */,
				508F91ACDB664AB49CE351A2 /* /Users/heiner/git/QuantLib/ql/math/optimization/goldstein.cpp */,
				B74961D728DC4F7E9DEB70AA /* /Users/heiner/git/QuantLib/ql/math/optimization/leastsquare.cpp */,
				0D0A428EB9A240BB81100ECA /* /Users/heiner/git/QuantLib/ql/math/optimization/levenbergmarquardt.cpp */,
				E739F1C52CFD454B85A50A6E /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearch.cpp */,
				AB7A0CB493314011B73EB9E7 /* /Users/heiner/git/QuantLib/ql/math/optimization/linesearchbasedmethod.cpp */,
				4B8100C8B4AC43C7BFEE4634 /* /Users/heiner/git/QuantLib/ql/math/optimization/lmdif.cpp */,
				996727E212F04190B42D68A1 /* /Users/heiner/git/QuantLib/ql/math/optimization/projectedcostfunction.cpp */,
				8672FAC4711844CCA889F0C7 /* /Users/heiner/git/QuantLib/ql/math/optimization/projection.cpp */,
				137836AD17744F22B0836D48 /* /Users/heiner/git/QuantLib/ql/math/optimization/simplex.cpp */,
				6013D09705644657AD9B642E /* /Users/heiner/git/QuantLib/ql/math/optimization/spherecylinder.cpp */,
				7CFC794F91A9463FAB7AA69A /* /Users/heiner/git/QuantLib/ql/math/optimization/steepestdescent.cpp */,
				CE76AAD4FBF44DF99D0630AA /* /Users/heiner/git/QuantLib/ql/math/pascaltriangle.cpp */,
				BA114375293642ABAE8B670E /* /Users/heiner/git/QuantLib/ql/math/polynomialmathfunction.cpp */,
				5467AF2042704651BFA65E98 /* /Users/heiner/git/QuantLib/ql/math/primenumbers.cpp */,
				268A416432E34BCB99177417 /* /Users/heiner/git/QuantLib/ql/math/quadratic.cpp */,
				5B11B4E2BEC247D5930C8E56 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/faurersg.cpp */,
				E9EC4E0123744366A42EFC95 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/haltonrsg.cpp */,
				42659CC39C194F9CAA6A7876 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/knuthuniformrng.cpp */,
				9F0A6D555FA843CE9145A343 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticersg.cpp */,
				2A055A41FE584BE28E7CBE7C /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/latticerules.cpp */,
				B508EC643CFF43E898B36F74 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/lecuyeruniformrng.cpp */,
				216B2001F42346D681A500C0 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/mt19937uniformrng.cpp */,
				139839D23FDA41A6B238609A /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/primitivepolynomials.cpp */,
				F00CE8E320E4449C953D6295 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/seedgenerator.cpp */,
				E8EB2B74F4994AF994BAC748 /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolbrownianbridgersg.cpp */,
				23331C55C87E49EFA3A2807B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/sobolrsg.cpp */,
				C4D74E05A4FD4B76B3BF111B /* /Users/heiner/git/QuantLib/ql/math/randomnumbers/stochasticcollocationinvcdf.cpp */,
				115EC6B3F3204114BF998401 /* /Users/heiner/git/QuantLib/ql/math/richardsonextrapolation.cpp */,
				4A5CC7DD8566422A84D687CD /* /Users/heiner/git/QuantLib/ql/math/rounding.cpp */,
				FE7570AA85AC49D7A76F40FE /* /Users/heiner/git/QuantLib/ql/math/sampledcurve.cpp */,
				BA4F50C4D4EE4B51820E7ED0 /* /Users/heiner/git/QuantLib/ql/math/statistics/discrepancystatistics.cpp */,
				643F34A409E944B78AFD6975 /* /Users/heiner/git/QuantLib/ql/math/statistics/generalstatistics.cpp */,
				FE5BB0F6288B40268CE453CF /* /Users/heiner/git/QuantLib/ql/math/statistics/histogram.cpp */,
				E0E971007110437987DE1AA8 /* /Users/heiner/git/QuantLib/ql/math/statistics/incrementalstatistics.cpp */,
				3291B8CC1A4A43CE977A54EF /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/boundarycondition.cpp */,
				6F8B065A9063403C96870882 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/bsmoperator.cpp */,
				75758A209A4B407F8747D949 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp */,
				C86CDD2EA64345F88649DEEC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/exponentialjump1dmesher.cpp */,
				CB86F9BC7FCC4502B0ACA4E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp */,
				62719BA840004B45BBD02CA0 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmblackscholesmultistrikemesher.cpp */,
				A8E7AAE2B7524EFD82BC119C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmhestonvariancemesher.cpp */,
				03D310AF15B74468852DB445 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp */,
				8111130B1FE2469C8B21D164 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/fdmsimpleprocess1dmesher.cpp */,
				3B3DCF7A137542A4A1FADBD1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/meshers/uniformgridmesher.cpp */,
				3304D2D3ABC640FCB2391234 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp */,
				58214B79AB834539BC5A446E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmbatesop.cpp */,
				3D8FD6F097C941829B5486B6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmblackscholesop.cpp */,
				C24A97D1D7984E48941D5E86 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmg2op.cpp */,
				7C4D1DD903C54AB18A290557 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp */,
				B24654F337AB477CA2D4F357 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhestonop.cpp */,
				DAFBE6D6785B4CCDAE13EBA6 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp */,
				9BE57092234040228579E0B3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp */,
				12E3B876BD5344C1A8ABE39F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp */,
				037B27FF51AB4026BA4D18A9 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/firstderivativeop.cpp */,
				AC14A3842BCD466D8B8114F4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/ninepointlinearop.cpp */,
				9F5A652869CE4B5989A49D03 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondderivativeop.cpp */,
				00CA4FECACB44554B3635361 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp */,
				3899783306C24FEBA3697F4E /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/operators/triplebandlinearop.cpp */,
				957704F964034920A8CCC83F /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/craigsneydscheme.cpp */,
				12945FB3B6D848D18AA326FC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/douglasscheme.cpp */,
				D281AF6070A74E3EAE679C71 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp */,
				CA0D24294FCB4C39BD3AB150 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp */,
				2BCEF92944B34A8EAA358C08 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp */,
				82F0948DE128445198A178EB /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp */,
				7EDF9B92BDCF4FA6A5F345E3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp */,
				179D46B1273243409BE8B7D5 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dblackscholessolver.cpp */,
				F7EA9512FA154D3C97414F40 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp */,
				2A7B993E8A8A4945914EFD49 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp */,
				C422467F0BC34B5A8DA6BB81 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp */,
				57C48BBEE451449F8A6FD5C8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmbatessolver.cpp */,
				774E6EBF192F4FE5BA6EB3A8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp */,
				BC0956B7DCB94764874919FE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmg2solver.cpp */,
				861F651A623749C7A4AA068D /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonhullwhitesolver.cpp */,
				7CD60C01B2D148BFA1EFB6AA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhestonsolver.cpp */,
				3C0D71C798024057B45156AC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp */,
				0B0EE985008F480DBB322BC7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/solvers/fdmsimple2dbssolver.cpp */,
				966484E61CE24E0881DC70E3 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp */,
				A8491CEC80D64D6FA169664B /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp */,
				A3E273258954448D997C8217 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp */,
				EA7C21C444514C77983C14BE /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp */,
				FE17DCD753B24EEFBFBC4BDC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp */,
				E70A9F3234404B46AE848153 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmsnapshotcondition.cpp */,
				0B3AC86426654B94BD444E1C /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/stepconditions/fdmstepconditioncomposite.cpp */,
				9DAFF8BC209748BA9EB2A6B1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/tridiagonaloperator.cpp */,
				0CDC3154D636439EBDDC84E1 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodelswapinnervalue.cpp */,
				1707D69259574C029E2882C4 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmaffinemodeltermstructure.cpp */,
				8A6174BEAC5C4CF2844CECC7 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp */,
				E0FA415D5829416FA19C63EA /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp */,
				34A94DE192D24F9A85F838C8 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp */,
				7231C29BB2E7482E955C9CFC /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp */,
				C3710E9E353346C7AB8AFA07 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp */,
				75923E07EAD5491688654905 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmquantohelper.cpp */,
				66B453F60971417B9A045B10 /* /Users/heiner/git/QuantLib/ql/methods/finitedifferences/utilities/fdmtimedepdirichletboundary.cpp */,
				21519808D2C84F6B94CB05E2 /* /Users/heiner/git/QuantLib/ql/methods/lattices/binomialtree.cpp */,
				85EF341B52D64D49AC95E0C3 /* /Users/heiner/git/QuantLib/ql/methods/lattices/trinomialtree.cpp */,
				8160A25800DA4D58A8C960F3 /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/brownianbridge.cpp */,
				77C61885C9B14CB4B3DAB76A /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/genericlsregression.cpp */,
				F872A9BE76034462A6C3312E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/lsmbasissystem.cpp */,
				31770AE409DE443F8809415E /* /Users/heiner/git/QuantLib/ql/methods/montecarlo/parametricexercise.cpp */,
				3FDDCEEC2A71438B82CE5F57 /* /Users/heiner/git/QuantLib/ql/models/calibrationhelper.cpp */,
				1229FB7A2B0A43B48B738577 /* /Users/heiner/git/QuantLib/ql/models/equity/batesmodel.cpp */,
				37955EE98EE34DC6879E5BF0 /* /Users/heiner/git/QuantLib/ql/models/equity/gjrgarchmodel.cpp */,
				9557369A5E3B4E1EA12E3082 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodel.cpp */,
				873264F1FB4E4AB9991D8455 /* /Users/heiner/git/QuantLib/ql/models/equity/hestonmodelhelper.cpp */,
				1D1C3C31C86C4DC2A403AA88 /* /Users/heiner/git/QuantLib/ql/models/equity/piecewisetimedependenthestonmodel.cpp */,
				A59C71A6F5494EB49280E064 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/accountingengine.cpp */,
				4D5AE50C746E4BC1A6DAE9FD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/mtbrowniangenerator.cpp */,
				96707ECA4AED4D3CBC152598 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/browniangenerators/sobolbrowniangenerator.cpp */,
				B8C8472DF9DC4761AC78AA7F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/bermudanswaptionexercisevalue.cpp */,
				A023E8D57FE441E08629BBC6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/collectnodedata.cpp */,
				C6F29706BDC74728AB23869C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/lsstrategy.cpp */,
				3F5F5F8968F04A849927FB6A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/nothingexercisevalue.cpp */,
				380D089664EA45EABA96337A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/parametricexerciseadapter.cpp */,
				6500177AD67148A49CA23E75 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapbasissystem.cpp */,
				879A3C2D9D90426EA712109E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapforwardbasissystem.cpp */,
				B1F6F1DA0BCD4ABEA3B3D90A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/swapratetrigger.cpp */,
				92AAC455AF0145ED8B7C4F33 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/triggeredswapexercise.cpp */,
				0ABA3355E5EC40F28448D5B7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/callability/upperboundengine.cpp */,
				1CC727D20B704629A79C9EB7 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/cotswapfromfwdcorrelation.cpp */,
				0C83508389E34D45AA5B0FCA /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/expcorrelations.cpp */,
				53C406EE45BB4C969F2D4F9D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/correlations/timehomogeneousforwardcorrelation.cpp */,
				81E5448DFFC9462F8BF2D9F1 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestate.cpp */,
				A29E3715B1274E4CA6D62492 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/cmswapcurvestate.cpp */,
				F95FFE124B734EB7BA8E6A7C /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp */,
				C6E04D4FE12D4E7FAF39670A /* /Users/heiner/git/QuantLib/ql/models/marketmodels/curvestates/lmmcurvestate.cpp */,
				4A65BFB6AC144F97A5485B98 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/discounter.cpp */,
				02AA0B724F994276945CCD72 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/cmsmmdriftcalculator.cpp */,
				5667520384D248968301B663 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmdriftcalculator.cpp */,
				73092BF585AF4577B729EF8F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp */,
				4CFA84929B05401B988BC323 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/driftcomputation/smmdriftcalculator.cpp */,
				4E77D556386340A59AD475AB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolutiondescription.cpp */,
				F6FE54B2EC0A41CD939DE9FC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcmswapratepc.cpp */,
				6FB445561A834243990478BB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalcotswapratepc.cpp */,
				6F0B509C35FF41E18415D95E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateballand.cpp */,
				2E8267546B18413798844309 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeuler.cpp */,
				FB0DC76A722F44609DB9CC86 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateeulerconstrained.cpp */,
				715B0F395C954C6AAECA6358 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateiballand.cpp */,
				A621577A88094F709B638BA8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdrateipc.cpp */,
				2183B548811C4CBEBFD1C3D6 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp */,
				D22EC938D3B84AF4A0CB2934 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/marketmodelvolprocess.cpp */,
				6B316803C57345099B484517 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/normalfwdratepc.cpp */,
				3C04AFAE8D4E45169F920FA4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/svddfwdratepc.cpp */,
				96EF3ECEC8F447418649F855 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/evolvers/volprocesses/squarerootandersen.cpp */,
				D1A524B08C8A4F50A2848F58 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/forwardforwardmappings.cpp */,
				7B37DBE5710C45998E3FDABE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/historicalratesanalysis.cpp */,
				73BC1D1DAB2B4D9B9F6A3DDF /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodel.cpp */,
				9617DE58CF87432CA19F92C3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/marketmodeldifferences.cpp */,
				728F612CB3394D26A1FF9B37 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/abcdvol.cpp */,
				8BAC337B40604BDEAE8149FE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphafinder.cpp */,
				23243B65FD4B4D528116DC85 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/alphaformconcrete.cpp */,
				0B74BB328EC84899AF76167F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalalphacalibration.cpp */,
				C9A852B543A2497D81747959 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalmaxhomogeneity.cpp */,
				6D3BED6B449D4AAB823D4362 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalperiodic.cpp */,
				A6C2DC7C85DF4B51B3C43D41 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/capletcoterminalswaptioncalibration.cpp */,
				35AC0F91CEDF49EAAEDE5CD0 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/cotswaptofwdadapter.cpp */,
				3776D41959164EAAADEAC7BB /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/ctsmmcapletcalibration.cpp */,
				130D37ABA2EE493B8873600E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/flatvol.cpp */,
				DDB68F8876AB4294B6A6E272 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdperiodadapter.cpp */,
				6D4D8626F0324AFD9127B493 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/fwdtocotswapadapter.cpp */,
				351B29A4B59645FCBF39BDED /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantabcdvariance.cpp */,
				40F25976F1844594AA8B643D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/piecewiseconstantvariance.cpp */,
				1FC400F6B0FB4466899D4261 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/pseudorootfacade.cpp */,
				A83B2D6D06F6407C80C8A910 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifier.cpp */,
				A0B272ECA96A4C499260C268 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/models/volatilityinterpolationspecifierabcd.cpp */,
				3A5F5068B42247B79A1E76E8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwiseaccountingengine.cpp */,
				2FD3856735C8498E9D51F985 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisediscounter.cpp */,
				C8C020F9B4824672B7E9347E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/bumpinstrumentjacobian.cpp */,
				8A947767A92F4A1AA6DA0A43 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/ratepseudorootjacobian.cpp */,
				5602FD067C1F498C936515B4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/swaptionpseudojacobian.cpp */,
				7D3D34A0ABDA4BD2AC98943D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/pathwisegreeks/vegabumpcluster.cpp */,
				6E0319BDE3674762BF9AB467 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/compositeproduct.cpp */,
				00439D3CDD9E4E2799C146B4 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductcomposite.cpp */,
				8CD599C31C984F7BAC1A0786 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductmultistep.cpp */,
				66576E05E436401E98122992 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multiproductonestep.cpp */,
				2716F93948E74B32A5394AA3 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/callspecifiedmultiproduct.cpp */,
				20A9AD8E336D461D9F687847 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/cashrebate.cpp */,
				47A1AF49F8934CEEBC6ACF5E /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/exerciseadapter.cpp */,
				724107661E3D4DD098C1757B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoinitialswaps.cpp */,
				98E1E53548AF4984A540F792 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaps.cpp */,
				B1D992F1ECEB4C9798A80E6F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepcoterminalswaptions.cpp */,
				3ADF96D2B77944EE921F8C84 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepforwards.cpp */,
				1E9ED8292CC341A79C319284 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepinversefloater.cpp */,
				79120C8122994C84B366DBDC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepnothing.cpp */,
				F2B817C0367942138C670EC2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepoptionlets.cpp */,
				A955EF37A94F443D8EC4C3FE /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteppathwisewrapper.cpp */,
				A1F5BC824FE24A2FBB090FE2 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepperiodcapletswaptions.cpp */,
				6EEE70EFCB694BA3AE138145 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepratchet.cpp */,
				F910C00EA51C462990DEFB5D /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswap.cpp */,
				58CEEF1A05C0420F8D348142 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multistepswaption.cpp */,
				96399C4D6D0644E89C619737 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/multistep/multisteptarn.cpp */,
				BB5F21496376461390B93B74 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoinitialswaps.cpp */,
				5F24868676DE41D0A414DBFC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepcoterminalswaps.cpp */,
				FD3054F8F61940069BA20374 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepforwards.cpp */,
				53CAF87907284963B7C6A910 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/onestep/onestepoptionlets.cpp */,
				B5F8F5865D964C28A2ECB7AC /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcallspecified.cpp */,
				8FC10974EF534FA99D7A9C13 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcaplet.cpp */,
				92E92C3A51E7438785ACB01F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductcashrebate.cpp */,
				68D360CE717D41DE80C873FD /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductinversefloater.cpp */,
				2797A6FD833F459FA04A0740 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswap.cpp */,
				70F4FB9411E045AEB1EC979B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/pathwise/pathwiseproductswaption.cpp */,
				3E6CC8D394424925AA81AD29 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/products/singleproductcomposite.cpp */,
				FF2EA670501947A1BFD16C1B /* /Users/heiner/git/QuantLib/ql/models/marketmodels/proxygreekengine.cpp */,
				0A3E067F853B44C5843FA41F /* /Users/heiner/git/QuantLib/ql/models/marketmodels/swapforwardmappings.cpp */,
				66B9AD6A980A4D849FC0FBF8 /* /Users/heiner/git/QuantLib/ql/models/marketmodels/utilities.cpp */,
				CB49B649A38B4DA6BE49054F /* /Users/heiner/git/QuantLib/ql/models/model.cpp */,
				92259E92A68D47BDB2455EC5 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/caphelper.cpp */,
				D81417AFD0884F5B9EEB4D60 /* /Users/heiner/git/QuantLib/ql/models/shortrate/calibrationhelpers/swaptionhelper.cpp */,
				6427F6741C014D33AC738F70 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodel.cpp */,
				47A96DC1C5BE4E60A4568D94 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/blackkarasinski.cpp */,
				55D38E153DC44C48B7CB3282 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/coxingersollross.cpp */,
				392351C3E2D3483D8E10C71E /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp */,
				4F76B5772AF248A79BDDE054 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp */,
				C8B85C0D7D2C4C188862EA46 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/gsr.cpp */,
				5EC132948A534A0C83C2E33A /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/hullwhite.cpp */,
				5444E74B9B984553A7AF7C58 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/markovfunctional.cpp */,
				9B7715DB89274557805DCCA4 /* /Users/heiner/git/QuantLib/ql/models/shortrate/onefactormodels/vasicek.cpp */,
				4C0EBB201EA14930A0011A35 /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodel.cpp */,
				9B69C6119AC741CA981603EE /* /Users/heiner/git/QuantLib/ql/models/shortrate/twofactormodels/g2.cpp */,
				778F48592899430FB10CA8EA /* /Users/heiner/git/QuantLib/ql/models/volatility/constantestimator.cpp */,
				C2FB2E3001CD4B718FC8ADB7 /* /Users/heiner/git/QuantLib/ql/models/volatility/garch.cpp */,
				FB2C19FDC74B465D9BBD1C3C /* /Users/heiner/git/QuantLib/ql/money.cpp */,
				B3FD8F267135498AB16F371F /* /Users/heiner/git/QuantLib/ql/patterns/observable.cpp */,
				C41DB7AC27A14F3D834C98E4 /* /Users/heiner/git/QuantLib/ql/position.cpp */,
				95DA0B1638A946E99BA43A5D /* /Users/heiner/git/QuantLib/ql/prices.cpp */,
				AAD0E3F3A6B34675A55D4E81 /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffatexpiry.cpp */,
				1FF83D221E094DB495C6089F /* /Users/heiner/git/QuantLib/ql/pricingengines/americanpayoffathit.cpp */,
				311B64C4F1BB439E997B4CB7 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_cont_geom_av_price.cpp */,
				B4E1FED417484F34B90E7AFF /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_price.cpp */,
				1AA5035F1F034254B28F47D3 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/analytic_discr_geom_av_strike.cpp */,
				FCCACAEE962E4CE99B1AD71B /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/fdblackscholesasianengine.cpp */,
				A93BAB4370164EBE870A2E13 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_price.cpp */,
				EC36A4BB2F694C4791450AD7 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_arith_av_strike.cpp */,
				5676D903B09649F2AA9AA1B7 /* /Users/heiner/git/QuantLib/ql/pricingengines/asian/mc_discr_geom_av_price.cpp */,
				E3EF42261AB6431BA7785E9A /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbarrierengine.cpp */,
				9160A03DA01146569866E8F3 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/analyticbinarybarrierengine.cpp */,
				444B456ABB5249FFB9392EC1 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/discretizedbarrieroption.cpp */,
				3E7A6F2963BF4E0089730660 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp */,
				EF53C30871314B6AA219DD02 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdblackscholesrebateengine.cpp */,
				439711E5A77547FF867A0974 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonbarrierengine.cpp */,
				958D5164C31A49F0A5DD5537 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/fdhestonrebateengine.cpp */,
				FB898030AFAC45C2B52CF5A6 /* /Users/heiner/git/QuantLib/ql/pricingengines/barrier/mcbarrierengine.cpp */,
				6E9D9088ED73430C86724FAA /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp */,
				42882AB96EF4466EB18147A5 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/kirkengine.cpp */,
				BBB872DBF0BF4549843BFA0C /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mcamericanbasketengine.cpp */,
				51246CF64EB042638476D253 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/mceuropeanbasketengine.cpp */,
				07E59CEED2AD452FADEA1E23 /* /Users/heiner/git/QuantLib/ql/pricingengines/basket/stulzengine.cpp */,
				2C1C0215C2184E499DF28857 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackcalculator.cpp */,
				FF24DB1E4DCB4FEBA44D1D33 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackformula.cpp */,
				0D3EF4C5FCFD4F5B9EA06A11 /* /Users/heiner/git/QuantLib/ql/pricingengines/blackscholescalculator.cpp */,
				37E015572A854601916EA335 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/bondfunctions.cpp */,
				E1CE186DE1904233A6126613 /* /Users/heiner/git/QuantLib/ql/pricingengines/bond/discountingbondengine.cpp */,
				FF9631A5A4404BF186C15BF0 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/analyticcapfloorengine.cpp */,
				21C647BF4A7143F59125D9E4 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/bacheliercapfloorengine.cpp */,
				50C8EE94D1DD4FAD9694EBF6 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/blackcapfloorengine.cpp */,
				D15E84AB1F304DE19D68213F /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/discretizedcapfloor.cpp */,
				11B990EB369444A29AB52F0D /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/gaussian1dcapfloorengine.cpp */,
				4437A244541D4B5A861C3ED0 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/mchullwhiteengine.cpp */,
				2EF3201C6C5049C889DF4E24 /* /Users/heiner/git/QuantLib/ql/pricingengines/capfloor/treecapfloorengine.cpp */,
				9E8011B0C7CA4D688EDAC251 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticcliquetengine.cpp */,
				BF2ADA17A0BD405E83E3D331 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/analyticperformanceengine.cpp */,
				EBE7840D9B3348AD828E9DD5 /* /Users/heiner/git/QuantLib/ql/pricingengines/cliquet/mcperformanceengine.cpp */,
				E564E274FA5245ED928E178F /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/integralcdsengine.cpp */,
				99250BEB821D42FA88918D7C /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/isdacdsengine.cpp */,
				01398A694E914F7B8B29ED9E /* /Users/heiner/git/QuantLib/ql/pricingengines/credit/midpointcdsengine.cpp */,
				EE981AB3DC974D928D37CF1D /* /Users/heiner/git/QuantLib/ql/pricingengines/greeks.cpp */,
				8DDB60CF472C489D81ECF931 /* /Users/heiner/git/QuantLib/ql/pricingengines/inflation/inflationcapfloorengines.cpp */,
				7AA4AAAC257B4E138F412375 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfixedlookback.cpp */,
				ED5DDB3062234C6FBB7CED86 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuousfloatinglookback.cpp */,
				DB1269225F5C4C798C6F0066 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfixedlookback.cpp */,
				0265BFDB8F664958B24048A7 /* /Users/heiner/git/QuantLib/ql/pricingengines/lookback/analyticcontinuouspartialfloatinglookback.cpp */,
				DA2B833DC353447D8C1B7EF5 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/cvaswapengine.cpp */,
				F5A916E90CDE45AABEB19650 /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discountingswapengine.cpp */,
				F356C17F12534407A2F91DFD /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/discretizedswap.cpp */,
				2CC1D7034D114596868B4F9B /* /Users/heiner/git/QuantLib/ql/pricingengines/swap/treeswapengine.cpp */,
				C09AD645E2854B03A0F35BE2 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/basketgeneratingengine.cpp */,
				5632299BBE4E4197A037040C /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/blackswaptionengine.cpp */,
				7A379183A96C4C17969B3CD9 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/discretizedswaption.cpp */,
				1EA879540E40486AA040F199 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdg2swaptionengine.cpp */,
				C7B091CB38344D68BB2B84EA /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp */,
				A6180600647942A39D5FF4BC /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dfloatfloatswaptionengine.cpp */,
				B0564919A6BF40DE804B48A9 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1djamshidianswaptionengine.cpp */,
				DD2D031908994994BCBF1646 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dnonstandardswaptionengine.cpp */,
				EB5F784D1D9C4535900585DF /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/gaussian1dswaptionengine.cpp */,
				212C66F6AB97441798EF18B1 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/jamshidianswaptionengine.cpp */,
				828543932F924CA3B3E1F275 /* /Users/heiner/git/QuantLib/ql/pricingengines/swaption/treeswaptionengine.cpp */,
				AB1149C3F14B4EF094F32509 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticbsmhullwhiteengine.cpp */,
				4D2CCEF61ED1434BA557E728 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp */,
				4372EC1ED3AF4C2287668375 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp */,
				F703D89332FB44339391C027 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticeuropeanengine.cpp */,
				D9FF36EF848E4C408001311B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticgjrgarchengine.cpp */,
				A71D91A759AB43F688E4E717 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytich1hwengine.cpp */,
				98E0C0BD73EF42FEA95ABAFE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonengine.cpp */,
				C99519C4A52B40378F850CC4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analytichestonhullwhiteengine.cpp */,
				AAEAA3C86CE943238C630327 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/analyticptdhestonengine.cpp */,
				5816E63EA38B48C7B55A5B11 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/baroneadesiwhaleyengine.cpp */,
				57B5E927F3C842A8A5233954 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/batesengine.cpp */,
				531B9CE8A9F24A779B85AF59 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/bjerksundstenslandengine.cpp */,
				42311FA3772A4EEEA77B5368 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/coshestonengine.cpp */,
				F8F147543F7D4451913C0A31 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/discretizedvanillaoption.cpp */,
				FC5342CD287349ACA26D798B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdbatesvanillaengine.cpp */,
				5089DE860C5045A4B6DBAC00 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp */,
				A314F89363704C2CBDD267D6 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp */,
				E8DCEBBFE3D0470099C4BBBE /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdhestonvanillaengine.cpp */,
				35561032F5DF42D4BC1008C1 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdsimplebsswingengine.cpp */,
				39B0D24296B543A586D51D5B /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/fdvanillaengine.cpp */,
				DF22EB5125C042F2AAEF7FED /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/hestonexpansionengine.cpp */,
				8E99922162AD441E907CA0A4 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/integralengine.cpp */,
				FC2774A9E3B543D4851195CB /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/jumpdiffusionengine.cpp */,
				AF79AF46F45F44829488E6F2 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/juquadraticengine.cpp */,
				27E6CFF7986043D890EB5C19 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcamericanengine.cpp */,
				728A8DA4E38A4097A813CE96 /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mcdigitalengine.cpp */,
				072B47402642420EAEAC32FD /* /Users/heiner/git/QuantLib/ql/pricingengines/vanilla/mchestonhullwhiteengine.cpp */,
				3FBDDA75EC724F63BB16B890 /* /Users/heiner/git/QuantLib/ql/processes/batesprocess.cpp */,
				68DEB08A02B64D0DA4039F8E /* /Users/heiner/git/QuantLib/ql/processes/blackscholesprocess.cpp */,
				3C13DC03E9E0406D9E98BE09 /* /Users/heiner/git/QuantLib/ql/processes/endeulerdiscretization.cpp */,
				E1901CB7A9434423802C41C9 /* /Users/heiner/git/QuantLib/ql/processes/eulerdiscretization.cpp */,
				49936DA96B624FB89CA77F2E /* /Users/heiner/git/QuantLib/ql/processes/forwardmeasureprocess.cpp */,
				B86A194D58B440B393550072 /* /Users/heiner/git/QuantLib/ql/processes/g2process.cpp */,
				C77F30F83DB643B0A48D6F07 /* /Users/heiner/git/QuantLib/ql/processes/geometricbrownianprocess.cpp */,
				D3273EDA0F5A490CAAB55CA6 /* /Users/heiner/git/QuantLib/ql/processes/gjrgarchprocess.cpp */,
				F82351C01C8346CC864ECA26 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocess.cpp */,
				E8FCFB673AF549B682718FF0 /* /Users/heiner/git/QuantLib/ql/processes/gsrprocesscore.cpp */,
				B93C041C3368418C861CC414 /* /Users/heiner/git/QuantLib/ql/processes/hestonprocess.cpp */,
				7B218ACBB95A4728BE178450 /* /Users/heiner/git/QuantLib/ql/processes/hullwhiteprocess.cpp */,
				C6B462CE31C04E21BF04BDEE /* /Users/heiner/git/QuantLib/ql/processes/hybridhestonhullwhiteprocess.cpp */,
				1A094EF9F3C446F9B410AA9A /* /Users/heiner/git/QuantLib/ql/processes/jointstochasticprocess.cpp */,
				6CF7750BD55E4D96B96CBBA5 /* /Users/heiner/git/QuantLib/ql/processes/merton76process.cpp */,
				7179BFC74B9B452EBFAF79CE /* /Users/heiner/git/QuantLib/ql/processes/mfstateprocess.cpp */,
				9064B9410CB5423885C57300 /* /Users/heiner/git/QuantLib/ql/processes/ornsteinuhlenbeckprocess.cpp */,
				CC1B7E7812C244568B663AEE /* /Users/heiner/git/QuantLib/ql/processes/squarerootprocess.cpp */,
				9FA643B765634BED8432C83C /* /Users/heiner/git/QuantLib/ql/processes/stochasticprocessarray.cpp */,
				E438A637DBFF4CB98C0969B1 /* /Users/heiner/git/QuantLib/ql/quotes/eurodollarfuturesquote.cpp */,
				7D7D9C2FAA444C5498F2E020 /* /Users/heiner/git/QuantLib/ql/quotes/forwardswapquote.cpp */,
				C2BBB9052E5740EB9A56E64E /* /Users/heiner/git/QuantLib/ql/quotes/forwardvaluequote.cpp */,
				E9174E81E86F4A7ABB3F2C41 /* /Users/heiner/git/QuantLib/ql/quotes/futuresconvadjustmentquote.cpp */,
				1890A4CFFD2649669CBA7873 /* /Users/heiner/git/QuantLib/ql/quotes/impliedstddevquote.cpp */,
				98072549AE5E41369F6B7974 /* /Users/heiner/git/QuantLib/ql/quotes/lastfixingquote.cpp */,
				6D420C0C80F1463B822067C4 /* /Users/heiner/git/QuantLib/ql/rebatedexercise.cpp */,
				A36871BEADB949ACA30F5162 /* /Users/heiner/git/QuantLib/ql/settings.cpp */,
				F861A14729CC468CA8726742 /* /Users/heiner/git/QuantLib/ql/stochasticprocess.cpp */,
				B61B82FE0B9B4719B6C63CF1 /* /Users/heiner/git/QuantLib/ql/termstructure.cpp */,
				756EEBDC917D4682A736E8E2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultdensitystructure.cpp */,
				F8C5AB85F06D46A1AE2E3A08 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/defaultprobabilityhelpers.cpp */,
				48FF5D265F184E95AFEAECC2 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/flathazardrate.cpp */,
				A0EFA2A0394A4590BBCC807C /* /Users/heiner/git/QuantLib/ql/termstructures/credit/hazardratestructure.cpp */,
				1BB2707DD66D4A7194A90899 /* /Users/heiner/git/QuantLib/ql/termstructures/credit/survivalprobabilitystructure.cpp */,
				337C9E6809CA44D694544330 /* /Users/heiner/git/QuantLib/ql/termstructures/defaulttermstructure.cpp */,
				53B065F4DA3D4ABEB6203D7D /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/inflationhelpers.cpp */,
				2EE03801F63E49DE8486BF6D /* /Users/heiner/git/QuantLib/ql/termstructures/inflation/seasonality.cpp */,
				C354694E4DDB44ADAACA89DC /* /Users/heiner/git/QuantLib/ql/termstructures/inflationtermstructure.cpp */,
				F35ABD399A0E4F7F9FFFF228 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcd.cpp */,
				4EABCCAA18404B3990021598 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/abcdcalibration.cpp */,
				98C486AF8F6E4A96BD447949 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmadjustedsmilesection.cpp */,
				0F6156E4D13A433C8CE8450F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/atmsmilesection.cpp */,
				C40A93AA26174DD682FC8343 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolatilitystructure.cpp */,
				7F6F0BCF1A8B4091990E617E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolcurve.cpp */,
				7342AF87B9654503A0E15CDF /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/capfloortermvolsurface.cpp */,
				4F7DFEDB19E4482FB92F109E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp */,
				270FFD9109264C48BE7EBA2B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancecurve.cpp */,
				93D195C13AC849B09B8494C4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvariancesurface.cpp */,
				4EC8F9638BCE431783BDBC9E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/blackvoltermstructure.cpp */,
				4BCBA85635AA40B4B5C66800 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/fixedlocalvolsurface.cpp */,
				21E4A89E5A304AB0B037FDAE /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/gridmodellocalvolsurface.cpp */,
				996919AD452B4D07BFA41A20 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/hestonblackvolsurface.cpp */,
				F7C0807C45914AB784927538 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvolsurface.cpp */,
				3050977B6A314832B332094D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/equityfx/localvoltermstructure.cpp */,
				B68E7E621C0F4C8E860393C9 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/flatsmilesection.cpp */,
				B6D2323EBCC94AE59097A90F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/gaussian1dsmilesection.cpp */,
				10162C9F5C98499885724273 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/constantcpivolatility.cpp */,
				C9837E2C3F5B4AB0B7C175A6 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp */,
				27A25452CD2641368CB6228F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/inflation/yoyinflationoptionletvolatilitystructure.cpp */,
				F0086493B6D54C0C94E94E2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/kahalesmilesection.cpp */,
				FBEB06FC1C6345CE8BD205D5 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/constantoptionletvol.cpp */,
				7706EF0E4F784879AFCB7945 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper.cpp */,
				078ABC226174499284F8BF23 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper1.cpp */,
				935DBCC078924B78A8B32786 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletstripper2.cpp */,
				D39598D17F2A4B00A0F986CA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/optionletvolatilitystructure.cpp */,
				4D5A77D55619467CBE262088 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/spreadedoptionletvol.cpp */,
				36E26E06AE394D55AAD12AC4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionlet.cpp */,
				7EAF1C627B4145E6B6FDA45F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/optionlet/strippedoptionletadapter.cpp */,
				66E04AE51864490CA770881B /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabr.cpp */,
				56190BE323BE4AE1885ACE2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrinterpolatedsmilesection.cpp */,
				25796C8AD7B54F3FB1F781F4 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/sabrsmilesection.cpp */,
				ABD2E55CA67449B9B747990F /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesection.cpp */,
				713CD8B97E9A4EDE9DDC59AA /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/smilesectionutils.cpp */,
				0D0448ECD57F4A1F9C34475E /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/spreadedsmilesection.cpp */,
				8765D7D89F7248F287991E2D /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarket.cpp */,
				A22C7C4B648F4B1DA0A3BFCB /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp */,
				ADD59CBCA8A1402F8EC242C3 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/gaussian1dswaptionvolatility.cpp */,
				1D2FCE1EADED4C19855A3CED /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/spreadedswaptionvol.cpp */,
				D7557C823B5D401C874785F1 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionconstantvol.cpp */,
				E3DA502233B54BFC87E61819 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube.cpp */,
				0E18591DACBC4FB68FF16905 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolcube2.cpp */,
				D80B438A56084EBDA2FC9BAD /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvoldiscrete.cpp */,
				8DCDFCD40FF24841BA0C1A77 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolmatrix.cpp */,
				136ADCAF6B614D84B84C0F06 /* /Users/heiner/git/QuantLib/ql/termstructures/volatility/swaption/swaptionvolstructure.cpp */,
				9C16A5A13B2844A79FA2AE74 /* /Users/heiner/git/QuantLib/ql/termstructures/voltermstructure.cpp */,
				61FB0B637BBE4B6ABFBAF38B /* /Users/heiner/git/QuantLib/ql/termstructures/yield/bondhelpers.cpp */,
				A31AAC5781E04D5E90C5B21C /* /Users/heiner/git/QuantLib/ql/termstructures/yield/fittedbonddiscountcurve.cpp */,
				D7F7AD914EBC464B976556AB /* /Users/heiner/git/QuantLib/ql/termstructures/yield/flatforward.cpp */,
				85B2462CEA0D44F59209EFB7 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/forwardstructure.cpp */,
				86479F895330469484C2A938 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/nonlinearfittingmethods.cpp */,
				7C49CAAD3A1B4A8C8D09C851 /* /Users/heiner/git/QuantLib/ql/termstructures/yield/oisratehelper.cpp */,
				1129BFE8FE2E4422B6ED522D /* /Users/heiner/git/QuantLib/ql/termstructures/yield/ratehelpers.cpp */,
				174B425963294E959BBE3ADF /* /Users/heiner/git/QuantLib/ql/termstructures/yield/zeroyieldstructure.cpp */,
				1C241ABA5E2D4B2FA338F5D3 /* /Users/heiner/git/QuantLib/ql/termstructures/yieldtermstructure.cpp */,
				39D812FAC67B41CDB8174B82 /* /Users/heiner/git/QuantLib/ql/time/asx.cpp */,
				C698BA04A5E84565B9DC9079 /* /Users/heiner/git/QuantLib/ql/time/businessdayconvention.cpp */,
				FF4F5A4465F642ECA95C40D4 /* /Users/heiner/git/QuantLib/ql/time/calendar.cpp */,
				6C1593D7E386475794B55024 /* /Users/heiner/git/QuantLib/ql/time/calendars/argentina.cpp */,
				131DE8631D784FE997F9B0FB /* /Users/heiner/git/QuantLib/ql/time/calendars/australia.cpp */,
				899094FB7BE449049404E75B /* /Users/heiner/git/QuantLib/ql/time/calendars/bespokecalendar.cpp */,
				24976FAADA21469FAAB5DE18 /* /Users/heiner/git/QuantLib/ql/time/calendars/brazil.cpp */,
				C1DCA4F8469E4EF0941C2A5A /* /Users/heiner/git/QuantLib/ql/time/calendars/canada.cpp */,
				5428328DCC624436B8F30810 /* /Users/heiner/git/QuantLib/ql/time/calendars/china.cpp */,
				300725902BE6472D8657A5DD /* /Users/heiner/git/QuantLib/ql/time/calendars/czechrepublic.cpp */,
				D86178B9E08E42D8B30586E6 /* /Users/heiner/git/QuantLib/ql/time/calendars/denmark.cpp */,
				9EAF4A322378487582178185 /* /Users/heiner/git/QuantLib/ql/time/calendars/finland.cpp */,
				ACF11BDD6798417CBCC6099A /* /Users/heiner/git/QuantLib/ql/time/calendars/germany.cpp */,
				D124EB4BFC33429EABD79B0F /* /Users/heiner/git/QuantLib/ql/time/calendars/hongkong.cpp */,
				699D2FE6EA08438BA7ED68D8 /* /Users/heiner/git/QuantLib/ql/time/calendars/hungary.cpp */,
				D24423C3D6EB49978649DA7D /* /Users/heiner/git/QuantLib/ql/time/calendars/iceland.cpp */,
				776B5E4BBA6C4346B4226316 /* /Users/heiner/git/QuantLib/ql/time/calendars/india.cpp */,
				ED05C089FCE14019907EFDF3 /* /Users/heiner/git/QuantLib/ql/time/calendars/indonesia.cpp */,
				9A2592A228084373BE303346 /* /Users/heiner/git/QuantLib/ql/time/calendars/israel.cpp */,
				37EBFB5A77B047F39CFE2FC3 /* /Users/heiner/git/QuantLib/ql/time/calendars/italy.cpp */,
				E4FBE4043DC44885B35DE1D8 /* /Users/heiner/git/QuantLib/ql/time/calendars/japan.cpp */,
				1C949ED4FBCB4417AAA858D2 /* /Users/heiner/git/QuantLib/ql/time/calendars/jointcalendar.cpp */,
				6265532B49494E8484F6D097 /* /Users/heiner/git/QuantLib/ql/time/calendars/mexico.cpp */,
				84DAC7043EDE47F18F1A360A /* /Users/heiner/git/QuantLib/ql/time/calendars/newzealand.cpp */,
				F1708A4DA08C4EC28E0FBF9F /* /Users/heiner/git/QuantLib/ql/time/calendars/norway.cpp */,
				1DBC745075EF4043B1B10BF0 /* /Users/heiner/git/QuantLib/ql/time/calendars/poland.cpp */,
				1874CC463E2142A58B684453 /* /Users/heiner/git/QuantLib/ql/time/calendars/romania.cpp */,
				66571C901E354E9B87220020 /* /Users/heiner/git/QuantLib/ql/time/calendars/russia.cpp */,
				34BCF3D4F3204C6AA0348E35 /* /Users/heiner/git/QuantLib/ql/time/calendars/saudiarabia.cpp */,
				8084C231FA7A41779C671DE4 /* /Users/heiner/git/QuantLib/ql/time/calendars/singapore.cpp */,
				900DBABE33994CAB933417C1 /* /Users/heiner/git/QuantLib/ql/time/calendars/slovakia.cpp */,
				F5702A89FBF64775A250209C /* /Users/heiner/git/QuantLib/ql/time/calendars/southafrica.cpp */,
				3CC91CEC8B884C46806D707F /* /Users/heiner/git/QuantLib/ql/time/calendars/southkorea.cpp */,
				D4AFBCD34D634A79AAC9B287 /* /Users/heiner/git/QuantLib/ql/time/calendars/sweden.cpp */,
				46BC5F85624A4D1DA0F81D92 /* /Users/heiner/git/QuantLib/ql/time/calendars/switzerland.cpp */,
				1B1C152A6D97428DBE63A9EC /* /Users/heiner/git/QuantLib/ql/time/calendars/taiwan.cpp */,
				D3591DA150AC480ABFE18C47 /* /Users/heiner/git/QuantLib/ql/time/calendars/target.cpp */,
				358B75A22C8E4559B270EF94 /* /Users/heiner/git/QuantLib/ql/time/calendars/turkey.cpp */,
				2C9B08F68D9746468A5D6819 /* /Users/heiner/git/QuantLib/ql/time/calendars/ukraine.cpp */,
				9192FBC7602E4E849DB4C31F /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedkingdom.cpp */,
				CFAB75A534974F2DA38A2309 /* /Users/heiner/git/QuantLib/ql/time/calendars/unitedstates.cpp */,
				8832B74813DB4EEE8A96DFF8 /* /Users/heiner/git/QuantLib/ql/time/calendars/weekendsonly.cpp */,
				7F467224A00F47718E4C0541 /* /Users/heiner/git/QuantLib/ql/time/date.cpp */,
				7B0993188F704E93AFDD32B3 /* /Users/heiner/git/QuantLib/ql/time/dategenerationrule.cpp */,
				4D8CD6899B5F4E4CA5DCA5CF /* /Users/heiner/git/QuantLib/ql/time/daycounters/actual365fixed.cpp */,
				46454F161D764F669FD4D1C4 /* /Users/heiner/git/QuantLib/ql/time/daycounters/actualactual.cpp */,
				5B964537E1C84BB59C72996D /* /Users/heiner/git/QuantLib/ql/time/daycounters/business252.cpp */,
				E6929DA4B0A3411CB80F3108 /* /Users/heiner/git/QuantLib/ql/time/daycounters/simpledaycounter.cpp */,
				02057E1227F24A1E92146FB1 /* /Users/heiner/git/QuantLib/ql/time/daycounters/thirty360.cpp */,
				12CFDA14F3124F2B9F463B42 /* /Users/heiner/git/QuantLib/ql/time/ecb.cpp */,
				FAE838A6EA5B4527B27067ED /* /Users/heiner/git/QuantLib/ql/time/frequency.cpp */,
				F8A99AFDA00149C09117D42D /* /Users/heiner/git/QuantLib/ql/time/imm.cpp */,
				381E81D2F9314CC793755181 /* /Users/heiner/git/QuantLib/ql/time/period.cpp */,
				8382C80BFD66413E8FBB3BCB /* /Users/heiner/git/QuantLib/ql/time/schedule.cpp */,
				58E9EC9F6018444485A65A7E /* /Users/heiner/git/QuantLib/ql/time/timeunit.cpp */,
				031744F4646E4AE6BAB3B953 /* /Users/heiner/git/QuantLib/ql/time/weekday.cpp */,
				DB7B5628F265424489870B8F /* /Users/heiner/git/QuantLib/ql/timegrid.cpp */,
				087DFEE27AEF4B869B3A4228 /* /Users/heiner/git/QuantLib/ql/utilities/dataformatters.cpp */,
				100CAC6212DD4CFA8B6BEA4B /* /Users/heiner/git/QuantLib/ql/utilities/dataparsers.cpp */,
				74F7791BABDA45C796166AF3 /* /Users/heiner/git/QuantLib/ql/utilities/tracing.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		ADC3A50B7B8F4E758712B53B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DD6758153D54A44B47590B2 /* /Users/heiner/git/QuantLib/Examples/Replication/Replication.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B4F277DDC1804B0187A26C23 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3DBF1FDD87684087B652CD8F /* /Users/heiner/git/QuantLib/Examples/CallableBonds/CallableBonds.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DA14C6847AA345E98760EE79 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AA4906D5E82141328C6BA59A /* /Users/heiner/git/QuantLib/Examples/Repo/Repo.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DB98E0A6818E4161940A0CE2 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E79B44C28B304F15951A6552 /* /Users/heiner/git/QuantLib/Examples/EquityOption/EquityOption.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EC39D7E9F79646AFA0AFEFDA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				33198516B15B486C9FF06F19 /* /Users/heiner/git/QuantLib/Examples/DiscreteHedging/DiscreteHedging.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FA33BB9B7D9E40C3AEAB104E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BD360BF1637A43DEAAB7AAED /* /Users/heiner/git/QuantLib/Examples/Bonds/Bonds.cpp */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		03B02E7D383744CFADB9E719 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F0CC5B757E141178E1EB77E /* Bonds */;
			targetProxy = 664AE4FC6CC1411D8F042AF2 /* PBXContainerItemProxy */;
		};
		09421C8FDCDE431099AC875C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 638C310F39134A5883B2CCB4 /* SwapValuation */;
			targetProxy = 92CEFB15729F4CA69BB736B9 /* PBXContainerItemProxy */;
		};
		0EC5648625B94A82A6F6BDC8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C15AE522686846B3A2B07B0F /* ALL_BUILD */;
			targetProxy = 99497013AC5540CB9393265A /* PBXContainerItemProxy */;
		};
		10C4F2E53768434681F6835D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1B00CC0138174C29ABB38652 /* EquityOption */;
			targetProxy = F9FD0A52E9094DA28FDE6B26 /* PBXContainerItemProxy */;
		};
		1160AD2711094D20BC717206 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 5652571E3C4B4BE189C4EB8C /* PBXContainerItemProxy */;
		};
		11911E1152A048CEBFB8C06C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 6121A44F1A1D4DF9A6C834AB /* PBXContainerItemProxy */;
		};
		14D85799A90C48F5AEA352C0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 15AE9A6AF4394E4EB5C5E1FB /* Replication */;
			targetProxy = CDA137021D0847ADB9874032 /* PBXContainerItemProxy */;
		};
		17A36BFFB9AE452DAFEEA50C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 831FCB09EAAE4BDFBB7B73EB /* BermudanSwaption */;
			targetProxy = D3E9A5CBC6A94DC38F860616 /* PBXContainerItemProxy */;
		};
		21398D339360411EBE20DE54 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = CF21B206BF444B289739E762 /* PBXContainerItemProxy */;
		};
		27A305469A814DFBBF59F7C8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 332392007BC14D99A850FCB2 /* PBXContainerItemProxy */;
		};
		2CFC9AEFADC747CEB1875BA3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 4888015459454E4384BDC423 /* quantlib-benchmark */;
			targetProxy = 5298A457C4B349FF9349B453 /* PBXContainerItemProxy */;
		};
		31C46658E2114FCD8CBF19EA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A5B62B5515AF418DB5F53002 /* DiscreteHedging */;
			targetProxy = CB85B26B5E3F4A5F97D8F956 /* PBXContainerItemProxy */;
		};
		36222705D5CD43368FCA54BB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 492E4F0C2ED44228B132FA15 /* PBXContainerItemProxy */;
		};
		391A5AC51C534E938821B28D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = BEB8DA348EE64188AA86A997 /* PBXContainerItemProxy */;
		};
		3921F28D36ED418ABC64D073 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = D23752D5FBFE48D1A8BA526B /* PBXContainerItemProxy */;
		};
		3DC432EBFFE347CD8019302D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = B1BCC0F6320C4F62B35F1089 /* PBXContainerItemProxy */;
		};
		43E9382D69CA4AA4A201586C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 8FD715A2D9FA423892389FCE /* PBXContainerItemProxy */;
		};
		474381324C1147029281A5C3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 31CA74D128534CEB9CB7D7D4 /* GlobalOptimizer */;
			targetProxy = BCBE8006822A44DA8E12AABA /* PBXContainerItemProxy */;
		};
		490CCEC637A44DB78B53F05A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 29DDA7C6A79C4473930838ED /* PBXContainerItemProxy */;
		};
		4BFD9D4D4A554BF2AFCF99FC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A45914E1FCD646168C0B781A /* MultidimIntegral */;
			targetProxy = 5B4D7FC86A524F77A93AB797 /* PBXContainerItemProxy */;
		};
		4D4F9C3DD0904630A3ECC956 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 36185D43C3724F7AB4B7B1CC /* PBXContainerItemProxy */;
		};
		5711C7468772440F8CC48A65 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = F1BF3616BEA5417B92D705F2 /* PBXContainerItemProxy */;
		};
		5A9284053EC640DA8093A361 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 379DCD556F034357A29B1A60 /* PBXContainerItemProxy */;
		};
		5C8391D4160C42D890AAF7A3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = AC2DABD5C87649D6ACEB58DE /* PBXContainerItemProxy */;
		};
		5D55C6C4372747C495138FAE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 1DCCFC551DD6479398B9A47C /* PBXContainerItemProxy */;
		};
		610E7ABE59324F5A886CAB14 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 4FCC7A6B24E84E059FC374C3 /* PBXContainerItemProxy */;
		};
		6C49C56AE6F445898072A0C7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = ECBC4597D8A44D17AF650A88 /* PBXContainerItemProxy */;
		};
		6FB1CC39EF5D43F596074F81 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 50E26E59E1E6414484121D3C /* PBXContainerItemProxy */;
		};
		7042C58AB278431FAA3DB435 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 6A51BB87401846C89559B8A9 /* PBXContainerItemProxy */;
		};
		739FA8AF8FA04810ACCAA1A9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F804B67AD84A4FFBB583CD51 /* LatentModel */;
			targetProxy = 50A545CFBE074654BBE375AC /* PBXContainerItemProxy */;
		};
		73A4B108B99341A994967618 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = DA37D5DC563D4789A9B8AE36 /* PBXContainerItemProxy */;
		};
		73BD407C079E45C39E8CF6A5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 42C8C6D5EA634D248F9C6972 /* PBXContainerItemProxy */;
		};
		759035DA17234A5BB892AC22 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = EF50C9BFEFCD45ACAB2A28F6 /* PBXContainerItemProxy */;
		};
		7836A32149E84B358B8C4367 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = FD80ED5F63434CC9890F0EC0 /* PBXContainerItemProxy */;
		};
		8034D3F386EA4E84B0EC9B67 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 5490566FDE38448BB2638102 /* PBXContainerItemProxy */;
		};
		83ACA1F35C8041AE9B0B6AF2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 8B34F82F4EA8407FB55BE49E /* PBXContainerItemProxy */;
		};
		8753A1EF37034498874AB0D2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7875808B72264DD598812031 /* FittedBondCurve */;
			targetProxy = 56CBF669477947D285BA9B7D /* PBXContainerItemProxy */;
		};
		8865281BD37D4ACBBEF8AAB6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 039D30E15E9646F2AB9EEAB0 /* MarketModels */;
			targetProxy = 86FD7EEA99CF4448A1819018 /* PBXContainerItemProxy */;
		};
		8C706704B70A41E7AF66D8C8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 5A1BF78833EC431794C519D7 /* PBXContainerItemProxy */;
		};
		8D0323BE10824ECE92441313 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 0B3E7790E19C4CFA8682A112 /* PBXContainerItemProxy */;
		};
		92B8196093F847378C93DC24 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F600A56CE9F14452BDDC4E50 /* CVAIRS */;
			targetProxy = C0B95D38831F40D199FDB0F6 /* PBXContainerItemProxy */;
		};
		9610AC9C90664C5B808122AB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F2DA3F8A9C344C15AA5D1483 /* FRA */;
			targetProxy = DF8F6D3960554198BAA5704F /* PBXContainerItemProxy */;
		};
		97DA4E4F4CBA4AD5B10B9BD1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 685FD22086A5465E842F2256 /* PBXContainerItemProxy */;
		};
		98788364EAB8437AABDA93F5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 686DDCCB5C6E440A8AA85EA3 /* BasketLosses */;
			targetProxy = 5B37D817482D403899AB0515 /* PBXContainerItemProxy */;
		};
		9ADA54DEEDA0407AABE4857A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = BA1CF65B056848C5983E5004 /* PBXContainerItemProxy */;
		};
		A1FAED598D124502BC210679 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 1DD181B6A1624DE2BAA83C50 /* PBXContainerItemProxy */;
		};
		A498DF21FC874D0683351B95 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = C42F280D433C47F6A0FB1AA7 /* PBXContainerItemProxy */;
		};
		A5CA4E15715F41AC942D481E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = D8579BBBEF9B4EA19A17D4E8 /* PBXContainerItemProxy */;
		};
		B4745B1477B74DF681494C04 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = E1144B6E502045968544DB65 /* PBXContainerItemProxy */;
		};
		B697D5A3BAD54A528F6E71EF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0CB5DE52297446918CF640B5 /* QuantLib_Static */;
			targetProxy = F62AA58CFD1848649DA620F4 /* PBXContainerItemProxy */;
		};
		BB93872DF1864631B7B0C23F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 8219E49CE8D54E2D91E16888 /* PBXContainerItemProxy */;
		};
		C614CCF7A47B48388666EE42 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8A697A06B12241778436BE3C /* CDS */;
			targetProxy = 55B88B4382C643C68D14A6D3 /* PBXContainerItemProxy */;
		};
		CC15F5D271D14135B884CC6A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 196370ECCAA44BCB8E769243 /* PBXContainerItemProxy */;
		};
		CEBA2FE19133445092AE0954 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 0B11A9D7CE144C229DAFCD16 /* PBXContainerItemProxy */;
		};
		D12211A9693A4A3A9590947B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = BA288AD9565F44339BA35008 /* PBXContainerItemProxy */;
		};
		D271D74CA8C4417A929AF7D8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 5C362454637340B0B6683D72 /* PBXContainerItemProxy */;
		};
		D4ECF5F084F449318386D5E2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = EC96C97B456548F389E9E7E2 /* CallableBonds */;
			targetProxy = B85F4C55027C434EBB04DA84 /* PBXContainerItemProxy */;
		};
		DE11AF0514E149009580B731 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 1F6F269F9FFB4F3797B41748 /* PBXContainerItemProxy */;
		};
		DF0F63926BBA4FB8A3A87D05 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A23D49611A124D1CA5228C1B /* Gaussian1dModels */;
			targetProxy = 45F2E356465B4F1AAA6392D9 /* PBXContainerItemProxy */;
		};
		DF76C55B57974C75986B2A32 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 4F077E614DCB497CA89FA85D /* PBXContainerItemProxy */;
		};
		E12BB6CBCAB44741824B3351 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = A0F93C5075814843B864D6DE /* PBXContainerItemProxy */;
		};
		E15898CC7005416F8A7DF952 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = 9EAB37B07E394F4F9553D1D4 /* PBXContainerItemProxy */;
		};
		E4A09505998542F08A7F20BC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28A7761A25745E1917416EC /* ZERO_CHECK */;
			targetProxy = F3700E116DF340618B15B086 /* PBXContainerItemProxy */;
		};
		E64AEF06A9E94C26B2D9A194 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = DA4A7035143243EEB7B71A08 /* PBXContainerItemProxy */;
		};
		F30C0395D26E467CBC07FA42 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7ECF9A7703E146DDB6F0C05B /* ConvertibleBonds */;
			targetProxy = 799763442CF240CB914E9749 /* PBXContainerItemProxy */;
		};
		F490A0253AE4490295CFD2BA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F1C5267109FA46D5BBEF98A6 /* quantlib-test-suite */;
			targetProxy = CE9ABE5F90E745A0973DDA9A /* PBXContainerItemProxy */;
		};
		F4914B2398324200B0F98175 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = 5255F00F06FC49B2A9CB05C6 /* PBXContainerItemProxy */;
		};
		FA2919F9E5FA4CC09158DEA2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5DFE28F7D23A4238A26BC4CF /* Repo */;
			targetProxy = 8F6586B5B6E24BD9B5523C2F /* PBXContainerItemProxy */;
		};
		FCC42F684145407EB58EA8AB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291EB2A9319B41068117829A /* QuantLib */;
			targetProxy = A185ED83310B4C4F968069B7 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		0791FA134815412686337FDA /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = EquityOption;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/EquityOption;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		09760FABC9FD4D84B1546F15 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = QuantLib;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/ql;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		097F305D98284EE4846520AB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		09B6FEBC0F924978A4E29123 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		0CDDE3F76725471493493F25 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CDS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CDS;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		0E44425AF3F14E3FBF2B311C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		10E04328F12D4B6386DC0AB6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = MultidimIntegral;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/MultidimIntegral;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		120083DF587F449DB4A41C4B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Bonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Bonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		1549A99ACCCC4A46A10FC3E7 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = MultidimIntegral;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/MultidimIntegral;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		158F2EA7727C47D890D77796 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CallableBonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CallableBonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		15F1358D3C1B41419078B1F1 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		17D16705CFA447C684CB3A31 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CallableBonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CallableBonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		1BD81AF77CF8405EA9A6B30A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DiscreteHedging;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/DiscreteHedging;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		1EE3C050EA3B4557AEFA5C8C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = FRA;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/FRA;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		230ABDC9D83A44C8BD5D073D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CDS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CDS;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		247FE42531A64AA4AD37C53A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CVAIRS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CVAIRS;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		2689518B241243B1A50EB46E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = FRA;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/FRA;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		29F3E3711C3F4933A3B6BF9F /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ConvertibleBonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/ConvertibleBonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		2A6DB615449A466B8B205542 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = SwapValuation;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Swap;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		2E094BED72944F989EEAD660 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = FRA;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/FRA;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		2EDDC8014CD14C8CB29187A8 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = FRA;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/FRA;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		2F760AF73A0D41C5BBC5E361 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = BermudanSwaption;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/BermudanSwaption;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		313A2E5A6E614A8292EF19B9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CDS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CDS;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		3470E45FD98E44FAB8705545 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Repo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Repo;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		3643BAF40F1249DAB5DC7823 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		377C1ECF532A466B9C9FBAE4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = SwapValuation;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Swap;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		379D3EC6E04347D88A148FC8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Replication;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Replication;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		39D1295BF9B94D319E228FA7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LatentModel;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/LatentModel;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		3B86825DEEAB4E629587EE05 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ConvertibleBonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/ConvertibleBonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		40A6E2CBE4B940B3A44C7F70 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = SwapValuation;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Swap;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		44B7206B2E264B06AEDB4567 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = SwapValuation;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Swap;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		48264742717446BBAF62C284 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		49DAEA030D9D4A25935223F0 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = MultidimIntegral;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/MultidimIntegral;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		4AA50D8419F644A28797C216 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Gaussian1dModels;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Gaussian1dModels;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		4D6E5B4198024D6D8372B30D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",BOOST_TEST_DYN_LINK);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib /usr/local/lib/libboost_unit_test_framework-mt.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "quantlib-test-suite";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/heiner/git/QuantLib/test-suite";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		4E959742FF074AA282948DBC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = "";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",QuantLib_EXPORTS);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "@rpath";
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -fPIC -Wno-conversion  ";
				OTHER_LDFLAGS = " -dynamiclib -Wl,-headerpad_max_install_names  ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = QuantLib;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/ql;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		53878090064C4138B769E562 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",BOOST_TEST_DYN_LINK);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib /usr/local/lib/libboost_unit_test_framework-mt.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "quantlib-test-suite";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/heiner/git/QuantLib/test-suite";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		543BD6DE4B524FE7B5538228 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = QuantLib;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/ql;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		55EFEE937DAE4BC6B7791413 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CVAIRS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CVAIRS;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		5C6E5A3360F5417E8CD190DD /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DiscreteHedging;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/DiscreteHedging;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		5D9F36645D6949B8A462A950 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		6044B49CB3D144D98B64FE81 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",BOOST_TEST_DYN_LINK);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib /usr/local/lib/libboost_unit_test_framework-mt.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "quantlib-test-suite";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/heiner/git/QuantLib/test-suite";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		617B98B03CDF42E9B16FBB5A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = FittedBondCurve;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/FittedBondCurve;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		629D426ABACD48C28B4D93CE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		64013535EC334E958D5BEFB6 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GlobalOptimizer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/GlobalOptimizer;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		6960A376E478490B81D58885 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = MultidimIntegral;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/MultidimIntegral;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		6EA297E2D373450CA264DA42 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Bonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Bonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		6ECC241AE0BD4C30AB89F9D7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = MarketModels;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/MarketModels;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		6ED82D9086024627A294BF37 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = "";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",QuantLib_EXPORTS);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "@rpath";
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -fPIC -Wno-conversion  ";
				OTHER_LDFLAGS = " -dynamiclib -Wl,-headerpad_max_install_names  ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = QuantLib;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/ql;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		6EF5EF08C7A14D3E9A2A2D39 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = "";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",QuantLib_EXPORTS);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "@rpath";
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -fPIC -Wno-conversion  ";
				OTHER_LDFLAGS = " -dynamiclib -Wl,-headerpad_max_install_names  ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = QuantLib;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/ql;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		6F1C43F2D14A41139D9ABECF /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GlobalOptimizer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/GlobalOptimizer;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		6F3E72605BA34BEF9B829130 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = BasketLosses;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/BasketLosses;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		6F702B903876488690B464EA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DiscreteHedging;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/DiscreteHedging;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		76715885D18F484BA188774C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = QuantLib;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/ql;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		77426837124A4BE18047AE59 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",BOOST_TEST_DYN_LINK);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib /usr/local/lib/libboost_unit_test_framework-mt.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "quantlib-benchmark";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/heiner/git/QuantLib/test-suite";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		77EF14501E27461A85F846C2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Repo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Repo;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		7D38B02FC49C4DB38040C3DD /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",BOOST_TEST_DYN_LINK);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib /usr/local/lib/libboost_unit_test_framework-mt.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "quantlib-test-suite";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/heiner/git/QuantLib/test-suite";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		7F37185AD5944EF59A583C26 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CVAIRS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CVAIRS;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		82D868E5876F49F38082EFF4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Bonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Bonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		84ABDDAE57364E3381AAB464 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Gaussian1dModels;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Gaussian1dModels;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		86AAA7F1292E437FA40704DA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ConvertibleBonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/ConvertibleBonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		871CD5BCA8D74BC69E2BCA67 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = BermudanSwaption;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/BermudanSwaption;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		87925F47E01D4A97B0A78C9C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Repo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Repo;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		87B29657A32C47948F30F575 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Replication;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Replication;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		87B2E3501FFC447E991E0334 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Bonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Bonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		8B12A75C9B42442489ED6D4C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = BasketLosses;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/BasketLosses;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		8C9E2B0305C8413BB533D64E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",BOOST_TEST_DYN_LINK);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib /usr/local/lib/libboost_unit_test_framework-mt.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "quantlib-benchmark";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/heiner/git/QuantLib/test-suite";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		8E7E358BE980483EBF102B8C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		90D984FEAA424679BECF72E6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = EquityOption;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/EquityOption;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		9A4B2764CBE54A17862E8AD5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = FittedBondCurve;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/FittedBondCurve;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		9F13FB83AB1540DF9DB1465A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = EquityOption;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/EquityOption;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		A456B0671BD54E2692D0F60C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CallableBonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CallableBonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		A4CCB449277849A7984065D2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		A7F2E4BB2860469B84550993 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = BermudanSwaption;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/BermudanSwaption;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		B3CC7F005E6340D1BD72A72F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CVAIRS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CVAIRS;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		B5ADC0C26BC44A8CA1F9D306 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = BermudanSwaption;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/BermudanSwaption;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		B7901F63720D40C79B1A32FD /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ConvertibleBonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/ConvertibleBonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		BAFE37000E044EB7BF3A9AB3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",BOOST_TEST_DYN_LINK);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib /usr/local/lib/libboost_unit_test_framework-mt.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "quantlib-benchmark";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/heiner/git/QuantLib/test-suite";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		BB94BB513E3844DE9F814F59 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LIBTOOLFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = QuantLib;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/ql;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		BD829953EFAE47E798AA6761 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = MarketModels;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/MarketModels;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		BDB551F9DA6F4F21A4450319 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LatentModel;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/LatentModel;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		C0BAD3B059384806899B2EE9 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",BOOST_TEST_DYN_LINK);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib /usr/local/lib/libboost_unit_test_framework-mt.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = "quantlib-benchmark";
				SECTORDER_FLAGS = "";
				SYMROOT = "/Users/heiner/git/QuantLib/test-suite";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		C650D0DAE54E4C5580CA7FB1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = MarketModels;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/MarketModels;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		C71301E24CDB4A06A6A72F9B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				MACOSX_DEPLOYMENT_TARGET = 10.12;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk;
				SYMROOT = /Users/heiner/git/QuantLib/build;
			};
			name = Release;
		};
		C7960698A9BC438BB81A44F9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LatentModel;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/LatentModel;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		C80B4A8DD7CD4F3A945C2B23 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = BasketLosses;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/BasketLosses;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		CA7DCD4F8530405C8E3F7520 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Repo;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Repo;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		CAC8426C22B74BA59F76D51F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = MarketModels;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/MarketModels;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		D5E0DCDC9D104109A921BCE3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Gaussian1dModels;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Gaussian1dModels;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		D616645AEE3F409A918139E4 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Replication;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Replication;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		D760D87226734612A7CC5D7E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = FittedBondCurve;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/FittedBondCurve;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		D79CCBC5B7B14A59B4D02D53 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				MACOSX_DEPLOYMENT_TARGET = 10.12;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk;
				SYMROOT = /Users/heiner/git/QuantLib/build;
			};
			name = RelWithDebInfo;
		};
		D865E5180BD24BDA9DDA9EDF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Replication;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Replication;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		D8D32AA71D3040BEAE1F1B10 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GlobalOptimizer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/GlobalOptimizer;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		DB08F3B014E84082B9DB2F35 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = FittedBondCurve;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/FittedBondCurve;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		DC643BDF25C14C8C8C175D47 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				MACOSX_DEPLOYMENT_TARGET = 10.12;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk;
				SYMROOT = /Users/heiner/git/QuantLib/build;
			};
			name = Debug;
		};
		E08F5A6523AD46459CDF6456 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Debug;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Debug/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CallableBonds;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CallableBonds;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		E2EF27B64F1B43C189C57906 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Debug;
		};
		E352A80321074130A40F25B1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = BasketLosses;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/BasketLosses;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		E76BAFD1832143A285AB280A /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		E83E5BF449BD4D378D94BECB /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/MinSizeRel;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/MinSizeRel/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = Gaussian1dModels;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/Gaussian1dModels;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = MinSizeRel;
		};
		EA0FC6F34B144AE19A7D6EF3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = DiscreteHedging;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/DiscreteHedging;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		EB67736D9A8940D3B275A6DC /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				DYLIB_COMPATIBILITY_VERSION = "";
				DYLIB_CURRENT_VERSION = "";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .dylib;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",QuantLib_EXPORTS);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "@rpath";
				LIBRARY_SEARCH_PATHS = "";
				LIBRARY_STYLE = DYNAMIC;
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -fPIC -Wno-conversion  ";
				OTHER_LDFLAGS = " -dynamiclib -Wl,-headerpad_max_install_names  ";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = QuantLib;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/ql;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		F0497DCC6F014446A344FB51 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = GlobalOptimizer;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/GlobalOptimizer;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		F0A58FA5A6A843EDAAB53BA6 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = EquityOption;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/EquityOption;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		F1441CA4E19C486EBF1D2A6D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/Release;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/Release/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = LatentModel;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/LatentModel;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = Release;
		};
		F26185F045AA44799F3B9BAE /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/Users/heiner/git/QuantLib,/usr/local/include);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = /Users/heiner/git/QuantLib/ql/RelWithDebInfo;
				LIBRARY_SEARCH_PATHS = "";
				OTHER_CPLUSPLUSFLAGS = "-Wno-conversion -Wno-conversion  ";
				OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  /Users/heiner/git/QuantLib/ql/RelWithDebInfo/libQuantLib.dylib";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = CDS;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/heiner/git/QuantLib/Examples/CDS;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("-Wmost","-Wno-four-char-constants","-Wno-unknown-pragmas","$(inherited)");
			};
			name = RelWithDebInfo;
		};
		F26D627C66064124A61793DB /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				MACOSX_DEPLOYMENT_TARGET = 10.12;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Library/Developer/CommandLineTools/SDKs/MacOSX10.13.sdk;
				SYMROOT = /Users/heiner/git/QuantLib/build;
			};
			name = MinSizeRel;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		08C741CD95E64BB7AD53E97B /* Build configuration list for PBXNativeTarget "quantlib-benchmark" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8C9E2B0305C8413BB533D64E /* Debug */,
				BAFE37000E044EB7BF3A9AB3 /* Release */,
				C0BAD3B059384806899B2EE9 /* MinSizeRel */,
				77426837124A4BE18047AE59 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0F0B28939B3C4777B896D7B2 /* Build configuration list for PBXNativeTarget "BasketLosses" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C80B4A8DD7CD4F3A945C2B23 /* Debug */,
				E352A80321074130A40F25B1 /* Release */,
				6F3E72605BA34BEF9B829130 /* MinSizeRel */,
				8B12A75C9B42442489ED6D4C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		122631238C7246BC88ED0770 /* Build configuration list for PBXNativeTarget "QuantLib_Static" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				76715885D18F484BA188774C /* Debug */,
				09760FABC9FD4D84B1546F15 /* Release */,
				543BD6DE4B524FE7B5538228 /* MinSizeRel */,
				BB94BB513E3844DE9F814F59 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		17E2D0B197904D4A88E6798E /* Build configuration list for PBXNativeTarget "FittedBondCurve" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DB08F3B014E84082B9DB2F35 /* Debug */,
				9A4B2764CBE54A17862E8AD5 /* Release */,
				617B98B03CDF42E9B16FBB5A /* MinSizeRel */,
				D760D87226734612A7CC5D7E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1EEA25DFCFB64262946DB3AA /* Build configuration list for PBXNativeTarget "GlobalOptimizer" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D8D32AA71D3040BEAE1F1B10 /* Debug */,
				64013535EC334E958D5BEFB6 /* Release */,
				6F1C43F2D14A41139D9ABECF /* MinSizeRel */,
				F0497DCC6F014446A344FB51 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2735F09715C14339A0622D35 /* Build configuration list for PBXNativeTarget "DiscreteHedging" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1BD81AF77CF8405EA9A6B30A /* Debug */,
				EA0FC6F34B144AE19A7D6EF3 /* Release */,
				5C6E5A3360F5417E8CD190DD /* MinSizeRel */,
				6F702B903876488690B464EA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2BB3A4B5D77F4A4AB6C0B698 /* Build configuration list for PBXNativeTarget "CallableBonds" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E08F5A6523AD46459CDF6456 /* Debug */,
				A456B0671BD54E2692D0F60C /* Release */,
				158F2EA7727C47D890D77796 /* MinSizeRel */,
				17D16705CFA447C684CB3A31 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4C59EA84D2D54F7EBEFC8561 /* Build configuration list for PBXNativeTarget "quantlib-test-suite" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4D6E5B4198024D6D8372B30D /* Debug */,
				7D38B02FC49C4DB38040C3DD /* Release */,
				53878090064C4138B769E562 /* MinSizeRel */,
				6044B49CB3D144D98B64FE81 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		742758C84D044802929F5AFB /* Build configuration list for PBXNativeTarget "Replication" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				379D3EC6E04347D88A148FC8 /* Debug */,
				87B29657A32C47948F30F575 /* Release */,
				D616645AEE3F409A918139E4 /* MinSizeRel */,
				D865E5180BD24BDA9DDA9EDF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		77171DB144D04A2C929F052C /* Build configuration list for PBXNativeTarget "QuantLib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4E959742FF074AA282948DBC /* Debug */,
				EB67736D9A8940D3B275A6DC /* Release */,
				6EF5EF08C7A14D3E9A2A2D39 /* MinSizeRel */,
				6ED82D9086024627A294BF37 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7D02B879617D4DFAA69E510E /* Build configuration list for PBXNativeTarget "EquityOption" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				90D984FEAA424679BECF72E6 /* Debug */,
				9F13FB83AB1540DF9DB1465A /* Release */,
				0791FA134815412686337FDA /* MinSizeRel */,
				F0A58FA5A6A843EDAAB53BA6 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8C489085094A40258B37E012 /* Build configuration list for PBXNativeTarget "CVAIRS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B3CC7F005E6340D1BD72A72F /* Debug */,
				55EFEE937DAE4BC6B7791413 /* Release */,
				247FE42531A64AA4AD37C53A /* MinSizeRel */,
				7F37185AD5944EF59A583C26 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A1AA9FF55F5E4DBCA31D1C91 /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E2EF27B64F1B43C189C57906 /* Debug */,
				A4CCB449277849A7984065D2 /* Release */,
				15F1358D3C1B41419078B1F1 /* MinSizeRel */,
				48264742717446BBAF62C284 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A20887759FA741AEB3F64386 /* Build configuration list for PBXProject "QuantLib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DC643BDF25C14C8C8C175D47 /* Debug */,
				C71301E24CDB4A06A6A72F9B /* Release */,
				F26D627C66064124A61793DB /* MinSizeRel */,
				D79CCBC5B7B14A59B4D02D53 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A2D52148FA1E4A34952435AA /* Build configuration list for PBXNativeTarget "MarketModels" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BD829953EFAE47E798AA6761 /* Debug */,
				CAC8426C22B74BA59F76D51F /* Release */,
				6ECC241AE0BD4C30AB89F9D7 /* MinSizeRel */,
				C650D0DAE54E4C5580CA7FB1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A3B6481C02944701955576E4 /* Build configuration list for PBXNativeTarget "CDS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0CDDE3F76725471493493F25 /* Debug */,
				313A2E5A6E614A8292EF19B9 /* Release */,
				230ABDC9D83A44C8BD5D073D /* MinSizeRel */,
				F26185F045AA44799F3B9BAE /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A3F882B462DB48C58B2618A8 /* Build configuration list for PBXNativeTarget "Gaussian1dModels" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4AA50D8419F644A28797C216 /* Debug */,
				84ABDDAE57364E3381AAB464 /* Release */,
				E83E5BF449BD4D378D94BECB /* MinSizeRel */,
				D5E0DCDC9D104109A921BCE3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B5C12E9172AF449991BDDC94 /* Build configuration list for PBXNativeTarget "MultidimIntegral" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				10E04328F12D4B6386DC0AB6 /* Debug */,
				6960A376E478490B81D58885 /* Release */,
				49DAEA030D9D4A25935223F0 /* MinSizeRel */,
				1549A99ACCCC4A46A10FC3E7 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B80E1A43789E47068805B4B4 /* Build configuration list for PBXNativeTarget "Repo" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CA7DCD4F8530405C8E3F7520 /* Debug */,
				3470E45FD98E44FAB8705545 /* Release */,
				87925F47E01D4A97B0A78C9C /* MinSizeRel */,
				77EF14501E27461A85F846C2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BD23B3D4808D49349D7F7B60 /* Build configuration list for PBXNativeTarget "BermudanSwaption" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2F760AF73A0D41C5BBC5E361 /* Debug */,
				A7F2E4BB2860469B84550993 /* Release */,
				871CD5BCA8D74BC69E2BCA67 /* MinSizeRel */,
				B5ADC0C26BC44A8CA1F9D306 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BDB5633CBC6D453098837416 /* Build configuration list for PBXNativeTarget "Bonds" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				87B2E3501FFC447E991E0334 /* Debug */,
				82D868E5876F49F38082EFF4 /* Release */,
				120083DF587F449DB4A41C4B /* MinSizeRel */,
				6EA297E2D373450CA264DA42 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C589A3C7BFF748BFAEA05388 /* Build configuration list for PBXNativeTarget "FRA" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2E094BED72944F989EEAD660 /* Debug */,
				2689518B241243B1A50EB46E /* Release */,
				1EE3C050EA3B4557AEFA5C8C /* MinSizeRel */,
				2EDDC8014CD14C8CB29187A8 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C9FC18CD204C4E98B3282BA8 /* Build configuration list for PBXNativeTarget "SwapValuation" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2A6DB615449A466B8B205542 /* Debug */,
				44B7206B2E264B06AEDB4567 /* Release */,
				40A6E2CBE4B940B3A44C7F70 /* MinSizeRel */,
				377C1ECF532A466B9C9FBAE4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D5CD6D66F25B4FC4A6749B8C /* Build configuration list for PBXNativeTarget "LatentModel" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BDB551F9DA6F4F21A4450319 /* Debug */,
				F1441CA4E19C486EBF1D2A6D /* Release */,
				39D1295BF9B94D319E228FA7 /* MinSizeRel */,
				C7960698A9BC438BB81A44F9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E1ACBDD069A84F44BC3F1FFE /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5D9F36645D6949B8A462A950 /* Debug */,
				3643BAF40F1249DAB5DC7823 /* Release */,
				8E7E358BE980483EBF102B8C /* MinSizeRel */,
				0E44425AF3F14E3FBF2B311C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E23D83033F1446F4AA7E2F97 /* Build configuration list for PBXNativeTarget "ConvertibleBonds" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				86AAA7F1292E437FA40704DA /* Debug */,
				3B86825DEEAB4E629587EE05 /* Release */,
				B7901F63720D40C79B1A32FD /* MinSizeRel */,
				29F3E3711C3F4933A3B6BF9F /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F328B83B51B7434E8572C047 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				629D426ABACD48C28B4D93CE /* Debug */,
				097F305D98284EE4846520AB /* Release */,
				09B6FEBC0F924978A4E29123 /* MinSizeRel */,
				E76BAFD1832143A285AB280A /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = C5D054430CDD44FA8526CE32 /* Project object */;
}
